[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dannylty":1,"-":45}},{"path":"duke/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"T###X###thing1","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"T###O###thing","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"E###O###thing###2010-10-20","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"dannylty":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":" * Represents an interactive to-do list bot that can be run","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":" * to simulate making a to-do list.","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":" * It interacts with a \u003ccode\u003eStorage\u003c/code\u003e object to save","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":" * the state of the list across runtimes.","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":" * It interacts with a \u003ccode\u003eUi\u003c/code\u003e object by using it as","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":" * I/O.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"    private static final String LOGO \u003d \"Hello from\\n____        _        \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"        + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"    private ItemList itemList;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"     * Constructor.","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"    public Duke() {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"        this.storage \u003d null;","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"            this.storage \u003d new Storage(\"duke/data/duke.txt\");","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"            this.itemList \u003d this.storage.loadState();","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"        this.run();","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"        new Duke();","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"     * Initializes the application to run the to-do list simulation.","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"    public void run() {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"        String currLine;","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"        ","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"        while (!isExit \u0026\u0026 sc.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"                currLine \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"                Command currCommand \u003d Parser.parse(currLine);","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"                currCommand.execute(this.itemList, this.ui);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"                this.storage.saveState(this.itemList);","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"                isExit \u003d currCommand.isExit();","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"                this.ui.println(e.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"        sc.close();","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"dannylty":62,"-":6}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":" * A representation of exceptions that belong to a \u003ccode\u003eDuke\u003c/code\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":" * object.","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"    private String message;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"     * Constructor.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"     * @param message","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"        super(\"Oops, \" + message);","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"        this.message \u003d \"Oops, \" + message;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"        return this.message;","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"dannylty":24}},{"path":"src/main/java/duke/ItemList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import java.util.LinkedList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"import duke.items.Item;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":" * Represents the to-do list that contains entries.","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"public class ItemList extends LinkedList\u003cItem\u003e {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"dannylty":11}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import duke.commands.AddDeadlineCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"import duke.commands.AddEventCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"import duke.commands.AddTodoCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"import duke.commands.ClearCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"import duke.commands.DoneCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":" * Represents a decoder for user inputs to initialize","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":" * and execute respective \u003ccode\u003eCommand\u003c/code\u003e objects.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"    /** ","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"     * Reads a line taken from the user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"     * @param line The input line.","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"     * @returns The corresponding command.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"     * @throws DukeException If the input is not able to be decoded or parsed.","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"    public static Command parse(String line) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"        Command c;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"        String[] lineSegments \u003d line.split(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"        switch (lineSegments[0].toLowerCase()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"            c \u003d new AddTodoCommand();","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"        case \"event\":","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"            c \u003d new AddEventCommand();","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"            c \u003d new AddDeadlineCommand();","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"        case \"list\":","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"            c \u003d new ListCommand();","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"        case \"done\":","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"            c \u003d new DoneCommand();","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"            c \u003d new DeleteCommand();","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"            c \u003d new ByeCommand();","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"        case \"clear\":","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"            c \u003d new ClearCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"        case \"find\":","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"            c \u003d new FindCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"        default:","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"            throw new DukeException(\"Command not understood\");","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"        c.parseLine(line);","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"        return c;","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"dannylty":64}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import duke.items.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"import duke.items.Event;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"import duke.items.Item;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"import duke.items.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"import java.lang.StringBuilder;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"import java.util.ListIterator;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":" * Handles loading and saving to-do lists to and from the system.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"public class Storage {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"    static final String SEPARATOR \u003d \"###\";","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"    private File file;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"    public Storage(String filePath) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"        (new File(\"duke/data\")).mkdirs();","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"            if (this.file.createNewFile()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"                System.out.println(\"new file created\");","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"            throw new DukeException(\"IOException\");","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"     * Saves a to-do list to system storage.","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"     * @param itemList List to save.","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"     * @throws DukeException If an \u003ccode\u003eIOException\u003c/code\u003e occurs.","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"    public void saveState(ItemList itemList) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"            ListIterator\u003cItem\u003e iterator \u003d itemList.listIterator();","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"            if (!iterator.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"                s.append(\"\");","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"                while (iterator.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"                    Item currItem \u003d iterator.next();","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"                    if (currItem instanceof ToDo) {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"                        s.append(\"T\" + SEPARATOR);","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"                    } else if (currItem instanceof Event) {","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"                        s.append(\"E\" + SEPARATOR);","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"                    } else if (currItem instanceof Deadline) {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"                        s.append(\"D\" + SEPARATOR);","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"dannylty"},"content":"                    } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"dannylty"},"content":"                        throw new DukeException(\"storage error\");","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"dannylty"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"dannylty"},"content":"                    ","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"dannylty"},"content":"                    s.append(currItem.getDone() + SEPARATOR);","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"dannylty"},"content":"                    s.append(currItem.getPickle() + \"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"dannylty"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"dannylty"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"dannylty"},"content":"            FileWriter out \u003d new FileWriter(this.file);","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"dannylty"},"content":"            out.write(s.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"dannylty"},"content":"            out.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"dannylty"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"dannylty"},"content":"            throw new DukeException(\"Storage IOException\");","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"dannylty"},"content":"     * Loads a saved to-do list from file.","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"dannylty"},"content":"     * @return \u003ccode\u003eItemList\u003c/code\u003e object containing the saved data.","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"dannylty"},"content":"    public ItemList loadState() {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"dannylty"},"content":"        ItemList itemList \u003d new ItemList();","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"dannylty"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"dannylty"},"content":"            Scanner fileReader \u003d new Scanner(this.file);","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"dannylty"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"dannylty"},"content":"                String currLine \u003d fileReader.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"dannylty"},"content":"                String[] currArgs \u003d currLine.split(SEPARATOR);","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"dannylty"},"content":"                Item toAdd \u003d null;","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"dannylty"},"content":"                switch (currArgs[0]) {","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"dannylty"},"content":"                case \"T\":","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"dannylty"},"content":"                    toAdd \u003d new ToDo(currArgs[2]);","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"dannylty"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"dannylty"},"content":"                case \"D\":","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"dannylty"},"content":"                    toAdd \u003d new Deadline(currArgs[2], currArgs[3]);","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"dannylty"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"dannylty"},"content":"                case \"E\":","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"dannylty"},"content":"                    toAdd \u003d new Event(currArgs[2], currArgs[3]);","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"dannylty"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"dannylty"},"content":"                default:","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"dannylty"},"content":"                    throw new DukeException(\"Storage error\");","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"dannylty"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"dannylty"},"content":"                if (currArgs[1].equals(\"X\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"dannylty"},"content":"                    toAdd.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"dannylty"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"dannylty"},"content":"                itemList.add(toAdd);","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"dannylty"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"dannylty"},"content":"            fileReader.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"dannylty"},"content":"        } catch (FileNotFoundException | DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"dannylty"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"dannylty"},"content":"        return itemList;","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"dannylty":114}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":" * Represents the interface that a user uses to interact with","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":" * a \u003ccode\u003eDuke\u003c/code\u003e object.","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"    static final String STYLE_LINE \u003d \"--------------------\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"    static final String STYLE_INDENT \u003d \"     \";","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"     * Prints to output. Styles the input before printing.","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"     * @param inputString Input String to be printed.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"    public void println(String inputString) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"        System.out.print(STYLE_INDENT + STYLE_LINE +","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"                inputString + \"\\n\" + STYLE_INDENT + STYLE_LINE);","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"     * Uses a line-wise input array of Strings and styles it for output.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"     * @param inputStrings ArrayList of Strings to be printed.","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"    public void println(ArrayList\u003cString\u003e inputStrings) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"        String returnBuffer \u003d STYLE_INDENT + STYLE_LINE;","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"        for (String line : inputStrings) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"            returnBuffer \u003d returnBuffer.concat(\"     \" + line + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"        System.out.print(returnBuffer + STYLE_INDENT + STYLE_LINE);","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"dannylty":35}},{"path":"src/main/java/duke/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke.commands;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"import duke.ItemList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"import duke.items.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":" * Represents a command to add a \u003ccode\u003eDeadline\u003c/code\u003e object to an","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":" * \u003ccode\u003eItemList\u003c/code\u003e. Buffered parameters are stored in","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":" * \u003ccode\u003econtent\u003c/code\u003e and \u003ccode\u003etime\u003c/code\u003e.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    private String content;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"    private String time;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"     * Parses arguments for the object by reading user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"     * @param line Input from the user which contains arguments.","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"     * @throws DukeException If arguments contain errors.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"    public void parseLine(String line) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"        int idx \u003d line.indexOf(\"/by\");","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"        if (idx \u003d\u003d -1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"            throw new DukeException(\"Please specify /by\");","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"        } else if (idx \u003d\u003d line.length() - 3 || idx \u003d\u003d line.length() - 4) {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"            throw new DukeException(\"/by cannot be empty\");","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"        } else if (idx \u003d\u003d 9 || idx \u003d\u003d 10) {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"            throw new DukeException(\"Message cannot be empty\");","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"        this.content \u003d line.substring(9, idx - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"        this.time \u003d line.substring(idx + 4);","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"     * Adds the \u003ccode\u003eDeadline\u003c/code\u003e item to the list.","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"     * Adds in-place, and updates the \u003ccode\u003eUi\u003c/code\u003e object. The arguments","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"     * are taken from the class members.","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"     * @param itemList List to add the item to.","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"     * @param ui Ui to update.","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"    public void execute(ItemList itemList, Ui ui) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"        ArrayList\u003cString\u003e printBuffer \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"        printBuffer.add(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"        Deadline toAdd \u003d new Deadline(this.content, this.time);","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"        itemList.add(toAdd);","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"        printBuffer.add(\"  \" + toAdd.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"        printBuffer.add(String.format(\"Now you have %d tasks in the list.\", itemList.size()));","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"        ui.println(printBuffer);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"dannylty":57}},{"path":"src/main/java/duke/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke.commands;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"import duke.ItemList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"import duke.items.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":" * Represents a command to add a \u003ccode\u003eEvent\u003c/code\u003e object to an","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":" * \u003ccode\u003eItemList\u003c/code\u003e. Buffered parameters are stored in","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":" * \u003ccode\u003econtent\u003c/code\u003e and \u003ccode\u003etime\u003c/code\u003e.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    private String content;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"    private String time;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"     * Parses arguments for the object by reading user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"     * @param line Input from the user which contains arguments.","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"     * @throws DukeException If arguments contain errors.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"    public void parseLine(String line) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"        int idx \u003d line.indexOf(\"/at\");","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"        if (idx \u003d\u003d -1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"            throw new DukeException(\"Please specify /at\");","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"        } else if (idx \u003d\u003d line.length() - 3 || idx \u003d\u003d line.length() - 4) {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"            throw new DukeException(\"/at cannot be empty\");","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"        } else if (idx \u003d\u003d 6 || idx \u003d\u003d 7) {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"            throw new DukeException(\"Message cannot be empty\");","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"        this.content \u003d line.substring(6, idx - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"        this.time \u003d line.substring(idx + 4);","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"     * Adds the \u003ccode\u003eEvent\u003c/code\u003e item to the list.","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"     * Adds in-place, and updates the \u003ccode\u003eUi\u003c/code\u003e object. The arguments","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"     * are taken from the class members.","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"     * @param itemList List to add the item to.","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"     * @param ui Ui to update.","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"    public void execute(ItemList itemList, Ui ui) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"        ArrayList\u003cString\u003e printBuffer \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"        printBuffer.add(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"        Event toAdd \u003d new Event(this.content, this.time);","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"        itemList.add(toAdd);","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"        printBuffer.add(\"  \" + toAdd.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"        printBuffer.add(String.format(\"Now you have %d tasks in the list.\", itemList.size()));","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"dannylty"},"content":"        ui.println(printBuffer);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"dannylty":57}},{"path":"src/main/java/duke/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke.commands;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"import duke.ItemList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"import duke.items.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":" * Represents a command to add a \u003ccode\u003eToDo\u003c/code\u003e object to an","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":" * \u003ccode\u003eItemList\u003c/code\u003e. Buffered parameters are stored in","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":" * \u003ccode\u003econtent\u003c/code\u003e.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    private String content;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"     * Parses arguments for the object by reading user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"     * @param line Input from the user which contains arguments.","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"     * @throws DukeException If arguments are empty.","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"    public void parseLine(String line) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"        if (line.length() \u003c\u003d 5) {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"            throw new DukeException(\"Argument cannot be empty.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"            this.content \u003d line.substring(5);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"     * Adds the \u003ccode\u003eToDo\u003c/code\u003e item to the list.","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"     * Adds in-place, and updates the \u003ccode\u003eUi\u003c/code\u003e object. The arguments","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"     * are taken from the class members.","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"     * @param itemList List to add the item to.","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"     * @param ui Ui to update.","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"    public void execute(ItemList itemList, Ui ui) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"        ArrayList\u003cString\u003e printBuffer \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"        printBuffer.add(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"        ToDo toAdd \u003d new ToDo(this.content);","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"        itemList.add(toAdd);","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"        printBuffer.add(\"  \" + toAdd.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"        printBuffer.add(String.format(\"Now you have %d tasks in the list.\", itemList.size()));","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"        ui.println(printBuffer);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"dannylty":50}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke.commands;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import duke.ItemList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":" * Represents a command to terminate a \u003ccode\u003eDuke\u003c/code\u003e instance.","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"    static final String GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"    public void parseLine(String line) {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"    public void execute(ItemList itemList, Ui ui) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"        ui.println(GOODBYE);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"        return true;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"dannylty":25}},{"path":"src/main/java/duke/commands/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import duke.ItemList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":" * Represents a clear contents of a \u003ccode\u003eDuke\u003c/code\u003e instance.","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"    public void parseLine(String line) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"     * Clears the contents of the \u003ccode\u003eItemList\u003c/code\u003e object.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"     * Optionally updates the UI.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"     * @param itemList The list itself.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"     * @param Ui Ui object to update if necessary.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"    public void execute(ItemList itemList, Ui ui) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"        itemList.clear();","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"dannylty":25}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke.commands;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import duke.ItemList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":" * Represents functionalities of commands that a \u003ccode\u003eDuke\u003c/code\u003e object can","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":" * interpret and execute.","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"     * Executes the command by altering the inputs.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"     * @param itemList List to update.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"     * @param ui UI to update.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"     * @throws DukeException If errors occur.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"    public abstract void execute(ItemList itemList, Ui ui) throws DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"     * Reads the command arguments which spawned the object itself.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"     * Class members are updated and buffered with arguments that will","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"     * apply when \u003ccode\u003eCommand.execute\u003c/code\u003e is later called.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"     * @param line Line which contains user input arguments.","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"     * @throws DukeException If input is invalid at runtime.","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"    public abstract void parseLine(String line) throws DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"     * Returns a flag to notify the \u003ccode\u003eDuke\u003c/code\u003e object to terminate","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"     * its runtime.","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"     * @return Whether the command represents a termination.","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"        return false;","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"dannylty":39}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke.commands;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import duke.ItemList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":" * Represents a command to delete a specified \u003ccode\u003eItem\u003c/code\u003e from an","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":" * \u003ccode\u003eItemList\u003c/code\u003e.","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"    private int index;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"     * Reads the index from the user input line.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"     * Buffers this index into the class member.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"     * @param line User input line.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"    public void parseLine(String line) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"        this.index \u003d Integer.valueOf(line.substring(7)) - 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"     * Deletes the item specified by \u003ccode\u003eindex\u003c/code\u003e in the","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"     * \u003ccode\u003eItemList\u003c/code\u003e and updates the UI.","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"     * @param itemList List to edit.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"     * @param ui UI to update.","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"    public void execute(ItemList itemList, Ui ui) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"        ArrayList\u003cString\u003e printBuffer \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"        printBuffer.add(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"        printBuffer.add(\"  \" + itemList.remove(this.index).toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"        ui.println(printBuffer);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"dannylty":39}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke.commands;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import duke.items.Item;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"import duke.ItemList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":" * Represents a command to mark a specified \u003ccode\u003eItem\u003c/code\u003e from an","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":" * \u003ccode\u003eItemList\u003c/code\u003e as done.","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"    private int index;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"     * Reads the index from the user input line.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"     * Buffers this index into the class member.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"     * @param line User input line.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"    public void parseLine(String line) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"        this.index \u003d Integer.valueOf(line.substring(5)) - 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"     * Marks the item specified by \u003ccode\u003eindex\u003c/code\u003e in the","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"     * \u003ccode\u003eItemList\u003c/code\u003e as done and updates the UI.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"     * @param itemList List to edit.","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"     * @param ui UI to update.","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"    public void execute(ItemList itemList, Ui ui) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"        Item x \u003d itemList.get(this.index);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"        ArrayList\u003cString\u003e printBuffer \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"        printBuffer.add(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"        x.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"        printBuffer.add(\"  \" + x.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"        ui.println(printBuffer);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"dannylty":42}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke.commands;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import duke.items.Item;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"import duke.ItemList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"import java.util.ListIterator;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":" * Represents a command to find an \u003ccode\u003eItem\u003c/code\u003e object","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":" * matching a String query.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    private String query;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"    public void parseLine(String line) throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"        if (line.length() \u003c\u003d 5) {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"            throw new DukeException(\"Argument cannot be empty.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"            this.query \u003d line.substring(5);","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"    * Displays all \u003ccode\u003eItem\u003c/code\u003e objects","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"    * matching the query though the UI.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"    * ","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"    * @param itemList Source of items.","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"    * @param ui UI to update.","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"    */","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"    public void execute(ItemList itemList, Ui ui) {","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"        Item currItem;","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"        ListIterator\u003cItem\u003e iterator \u003d itemList.listIterator();","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"        if (!iterator.hasNext()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"            ui.println(\"Empty!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"            ArrayList\u003cString\u003e printBuffer \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"            printBuffer.add(\"Here are the matching in your list:\");","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"            Integer currIdx \u003d 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"            while (iterator.hasNext()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"                currItem \u003d iterator.next();","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"                if (currItem.queryString(this.query)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"                    printBuffer.add(currIdx.toString() + \". \" + currItem.toString());","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"                currIdx++;","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"            ui.println(printBuffer);","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"dannylty":53}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke.commands;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import duke.items.Item;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"import duke.ItemList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"import java.util.ListIterator;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":" * Represents a command to display all \u003ccode\u003eItem\u003c/code\u003e objects","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":" * in a \u003ccode\u003eitemList\u003c/code\u003e though an UI.","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    public void parseLine(String line) {}","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"    * Displays all \u003ccode\u003eItem\u003c/code\u003e objects","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"    * in the \u003ccode\u003eitemList\u003c/code\u003e though the UI.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"    * ","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"    * @param itemList List to print.","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"    * @param ui UI to update.","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"    */","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"    public void execute(ItemList itemList, Ui ui) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"        ListIterator\u003cItem\u003e iterator \u003d itemList.listIterator();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"        if (!iterator.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"            ui.println(\"Empty!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"            ArrayList\u003cString\u003e printBuffer \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"            printBuffer.add(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"            Integer currIdx \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"            while (iterator.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"                printBuffer.add(currIdx.toString() + \". \" + iterator.next().toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"                currIdx++;","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"            ui.println(printBuffer);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"dannylty":40}},{"path":"src/main/java/duke/items/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke.items;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"import java.lang.NumberFormatException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"public class Deadline extends Item {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"    private LocalDate time;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"    private static DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"    public Deadline(String name, String date) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"        super(name);","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"        String[] dateArgs \u003d date.split(\"-\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"            this.time \u003d LocalDate.of(Integer.valueOf(dateArgs[0]),","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"                Integer.valueOf(dateArgs[1]), Integer.valueOf(dateArgs[2]));","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"        } catch (NumberFormatException | DateTimeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"            throw new DukeException(\"please use format yyyy-mm-dd\");","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"    public String getPickle() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"        return super.getPickle() + \"###\" + this.time;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.time.format(dateFormat) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"dannylty":33}},{"path":"src/main/java/duke/items/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke.items;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"import java.lang.NumberFormatException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":" * Represents a event entry in a to-do list. It has a occurance time and","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":" * a name.","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"public class Event extends Item {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"    private LocalDate time;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    private static DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"    public Event(String name, String date) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"        super(name);","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"        String[] dateArgs \u003d date.split(\"-\");","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"            this.time \u003d LocalDate.of(Integer.valueOf(dateArgs[0]),","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"                Integer.valueOf(dateArgs[1]), Integer.valueOf(dateArgs[2]));","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"        } catch (NumberFormatException | DateTimeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"            throw new DukeException(\"please use format yyyy-mm-dd\");","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"     * Creates a encoding for the object to store in a database.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"     * @returns A string encoding the object.","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"    public String getPickle() {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"        return super.getPickle() + \"###\" + this.time;","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.time.format(dateFormat) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"dannylty":42}},{"path":"src/main/java/duke/items/Item.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke.items;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":" * Represents an abstract representation of entries in a to-do list.","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":" * Each entry has a name and a flag for whether it is done.","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"public abstract class Item {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"    private String name;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"    public Item(String name) {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"     * Marks this object as done.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"     * Returns a String representation of whether this item is done.","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"     * @return String encoding whether this item is done.","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"    public String getDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"        return (isDone ? \"X\" : \"O\");","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"dannylty"},"content":"     * Returns a String encoding of the object for storage in database.","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"dannylty"},"content":"     * @return The encoding.","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"dannylty"},"content":"    public String getPickle() {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"dannylty"},"content":"        return this.name;","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"dannylty"},"content":"    ","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"dannylty"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"dannylty"},"content":"     * Returns whether the name contains a substring pattern.","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"dannylty"},"content":"     * ","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"dannylty"},"content":"     * @param string Substring.","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"dannylty"},"content":"     * @return The result.","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"dannylty"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"dannylty"},"content":"    public boolean queryString(String string) {","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"dannylty"},"content":"        return this.name.contains(string);","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"dannylty"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"dannylty"},"content":"        return (isDone ? \"[X] \" : \"[] \") + this.name;","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"dannylty":54}},{"path":"src/main/java/duke/items/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke.items;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":" * Represents a normal entry in a to-do list. It has","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":" * a name.","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"public class ToDo extends Item {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"        super(name);","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"dannylty":16}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"import duke.items.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"public class EventTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"    void EventPrintTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"            Event t1 \u003d new Event(\"thing\", \"1998-03-10\");","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"            assertEquals(t1.toString(), \"[E][] thing (at: Mar 10 1998)\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"    void EventDonePrintTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"            Event t2 \u003d new Event(\"thing\", \"1998-03-10\");","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"dannylty"},"content":"            t2.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"dannylty"},"content":"            assertEquals(t2.toString(), \"[E][X] thing (at: Mar 10 1998)\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"dannylty"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"dannylty"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"dannylty"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"dannylty":30}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"import duke.items.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"dannylty"},"content":"    void ToDoPrintTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"dannylty"},"content":"        ToDo t1 \u003d new ToDo(\"thing\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"dannylty"},"content":"        assertEquals(t1.toString(), \"[T][] thing\");","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"dannylty"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"dannylty"},"content":"    void ToDoDonePrintTest() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"        ToDo t2 \u003d new ToDo(\"thing\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"dannylty"},"content":"        t2.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"dannylty"},"content":"        assertEquals(t2.toString(), \"[T][X] thing\");","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"dannylty"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"dannylty"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"dannylty":22}},{"path":"text-ui-test/duke/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"T###O###thing1","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"T###O###thing2","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"E###X###event1###2021-10-02","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"D###O###deadline1###2021-12-11","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"dannylty":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dannylty"},"content":"clear","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"dannylty"},"content":"todo thing1","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"dannylty"},"content":"todo thing2","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"dannylty"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"dannylty"},"content":"event event1 /at 2021-10-02","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"dannylty"},"content":"deadline deadline1 /by 2021-12-11","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"dannylty"},"content":"list","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"dannylty"},"content":"done 3","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"dannylty"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"dannylty":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"dannylty"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\commands\\*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"dannylty"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dannylty":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"dannylty"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/commands/*.java ../src/main/java/duke/items/*.java ../src/main/java/duke/Duke.java","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"dannylty"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"dannylty":2,"-":35}}]
