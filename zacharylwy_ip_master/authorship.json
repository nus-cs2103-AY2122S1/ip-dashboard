[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacharylwy"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"zacharylwy"},"content":"    protected String by;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"zacharylwy"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"zacharylwy"},"content":"     * Constructor to create a Deadline.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"zacharylwy"},"content":"     * @param description Description of the Deadline task.","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"zacharylwy"},"content":"     * @param by Date of when Deadline is due.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"zacharylwy"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"zacharylwy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"zacharylwy"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"zacharylwy":20}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacharylwy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"zacharylwy"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"zacharylwy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zacharylwy"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"zacharylwy"},"content":" *  This is my attempt at Duke.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"zacharylwy"},"content":" * @author Zachary Lau --\u003e I have sought feedback and suggestions from Charlton Tan, Wilbur Fong and Jia Yuan.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"zacharylwy"},"content":" *","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"    public Duke() {}","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"zacharylwy"},"content":"    private static int listCount \u003d 0;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"zacharylwy"},"content":"    private static ArrayList\u003cTask\u003e dukeList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"zacharylwy"},"content":"    private static String addedText \u003d \"Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"zacharylwy"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"zacharylwy"},"content":"     * Handles the greeting or opening message that is shown to the user before inputs are read.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"zacharylwy"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"zacharylwy"},"content":"    public void greet() {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zacharylwy"},"content":"        String greetText \u003d \"Hello I\u0027m Duke\\nWhat can I do for you?\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"zacharylwy"},"content":"        System.out.print(greetText);","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"zacharylwy"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"zacharylwy"},"content":"     * Handles the exiting or halting of Duke when the user has given the appropriate input.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"zacharylwy"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"zacharylwy"},"content":"    public void exit() {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"zacharylwy"},"content":"        String exitText \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"zacharylwy"},"content":"        System.out.println(exitText);","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"zacharylwy"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"zacharylwy"},"content":"     * Shows all Tasks in the list that the user has given to Duke to store.","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"zacharylwy"},"content":"     * Tasks are ordered from least recent to most recent. If no tasks have been given to Duke,","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"zacharylwy"},"content":"     * the appropriate message is shown.","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"zacharylwy"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"zacharylwy"},"content":"    public void showList() {","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"zacharylwy"},"content":"        String showListText \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"zacharylwy"},"content":"        String emptyListText \u003d \"â˜¹ Oops! Looks like you have no tasks in your list!\";","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"zacharylwy"},"content":"        for (int i \u003d 0; i \u003c dukeList.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"zacharylwy"},"content":"            showListText +\u003d \"\\n\" + (i + 1) + \".\" + dukeList.get(i).toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"zacharylwy"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"zacharylwy"},"content":"        if (dukeList.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"zacharylwy"},"content":"            System.out.println(emptyListText);","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"zacharylwy"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"zacharylwy"},"content":"            System.out.println(showListText);","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"zacharylwy"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"zacharylwy"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"zacharylwy"},"content":"     * Updates the marking of a certain Task as \u0027done\u0027.","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"zacharylwy"},"content":"     * @param input The entire String that the user has input i.e. \"done 2\".","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"zacharylwy"},"content":"     * @throws DukeException If an incorrect input is entered.","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"zacharylwy"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"zacharylwy"},"content":"    public void markDone(String input) throws DukeException{","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"zacharylwy"},"content":"        int itemNumber;","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"zacharylwy"},"content":"        if (input.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"zacharylwy"},"content":"            throw new DukeException(\"â˜¹ Oops! Looks like you are missing the task number you wish to mark as done! Try again :-)\");","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"zacharylwy"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"zacharylwy"},"content":"        String numberInput \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"zacharylwy"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"zacharylwy"},"content":"            itemNumber \u003d Integer.parseInt(numberInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"zacharylwy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"zacharylwy"},"content":"            throw new DukeException(\"â˜¹ You may have entered something incorrectly. Try adding a number behind \u0027done\u0027!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"zacharylwy"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"zacharylwy"},"content":"        String message \u003d \"â˜¹ Oops! I cannot seem to find that task number. Try again!\";","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"zacharylwy"},"content":"        if (dukeList.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"zacharylwy"},"content":"            message \u003d \"â˜¹ Oops! Your list is empty! Try adding a Task first!\";","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"zacharylwy"},"content":"        } else if (itemNumber \u003c\u003d dukeList.size()){","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"zacharylwy"},"content":"            Task targetItem \u003d dukeList.get(itemNumber - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"zacharylwy"},"content":"            message \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + \" \" + targetItem.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"zacharylwy"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"zacharylwy"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"zacharylwy"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"zacharylwy"},"content":"     * Adds a Deadline to all Tasks that Duke has stored.","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"zacharylwy"},"content":"     * @param input The entire String that the user has input i.e. \"deadline Whatever /by Whenever\".","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"zacharylwy"},"content":"     * @throws DukeException If an incorrect input is entered.","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"zacharylwy"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"zacharylwy"},"content":"    public void addDeadline(String input) throws DukeException{","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"zacharylwy"},"content":"        // First check if the user has only input the one word \"deadline\".","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"zacharylwy"},"content":"        if (input.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"zacharylwy"},"content":"            throw new DukeException(\"â˜¹ Oops! Looks like you are missing the description and the deadline date! Try again :-)\");","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"zacharylwy"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"zacharylwy"},"content":"        // If \"deadline\" is entered with more words, check information.","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"zacharylwy"},"content":"        String[] information \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"zacharylwy"},"content":"        String [] description \u003d information[1].split(\"/by \", 2);","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"zacharylwy"},"content":"        //In the case where date is not entered.","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"zacharylwy"},"content":"        if (description.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"zacharylwy"},"content":"            throw new DukeException(\"â˜¹ Oops! Looks like you are missing the deadline date! Try again :-)\");","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"zacharylwy"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"zacharylwy"},"content":"        Deadline newDL \u003d new Deadline(description[0], description[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"zacharylwy"},"content":"        dukeList.add(newDL);","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"zacharylwy"},"content":"        listCount++;","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"zacharylwy"},"content":"        System.out.println(addedText + newDL.toString() + \"\\nNow you have \" + listCount + \" tasks in the list\");","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"zacharylwy"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"zacharylwy"},"content":"     * Adds an Event to all Tasks that Duke has stored.","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"zacharylwy"},"content":"     * @param input The entire String that the user has input i.e. \"event Here /at There\".","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"zacharylwy"},"content":"     * @throws DukeException If an incorrect input is entered.","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"zacharylwy"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"zacharylwy"},"content":"    public void addEvent(String input) throws DukeException{","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"zacharylwy"},"content":"        // First check if the user has only input the one word \"event\".","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"zacharylwy"},"content":"        if (input.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"zacharylwy"},"content":"            throw new DukeException(\"â˜¹ Oops! Looks like you are missing the description and the event location! Try again :-)\");","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"zacharylwy"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"zacharylwy"},"content":"        // If \"event\" is entered with more words, check information.","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"zacharylwy"},"content":"        String[] information \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"zacharylwy"},"content":"        String [] description \u003d information[1].split(\"/at \", 2);","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"zacharylwy"},"content":"        //In the case where location is not entered.","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"zacharylwy"},"content":"        if (description.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"zacharylwy"},"content":"            throw new DukeException(\"â˜¹ Oops! Looks like you are missing the event location! Try again :-)\");","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"zacharylwy"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"zacharylwy"},"content":"        Event newEV \u003d new Event(description[0], description[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"zacharylwy"},"content":"        dukeList.add(newEV);","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"zacharylwy"},"content":"        listCount++;","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"zacharylwy"},"content":"        System.out.println(addedText + newEV.toString() + \"\\nNow you have \" + listCount + \" tasks in the list\");","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"zacharylwy"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"zacharylwy"},"content":"     * Adds a Todo to all Tasks that Duke has stored.","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"zacharylwy"},"content":"     * @param input The entire String that the user has input i.e. \"todo This task\".","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"zacharylwy"},"content":"     * @throws DukeException If an incorrect input is entered.","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"zacharylwy"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"zacharylwy"},"content":"    public void addTodo(String input) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"zacharylwy"},"content":"        // First check if the user has only input the one word \"todo\".","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"zacharylwy"},"content":"        if (input.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"zacharylwy"},"content":"            throw new DukeException(\"â˜¹ Oops! Looks like you are missing the description! Try again :-)\");","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"zacharylwy"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"zacharylwy"},"content":"        //If \"todo\" is entered with more words, use the information.","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"zacharylwy"},"content":"        String[] information \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"zacharylwy"},"content":"        Todo newTD \u003d new Todo(information[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"zacharylwy"},"content":"        dukeList.add(newTD);","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"zacharylwy"},"content":"        listCount++;","lastModifiedDate":"2021-08-17"},{"lineNumber":141,"author":{"gitId":"zacharylwy"},"content":"        System.out.println(addedText + newTD.toString() + \"\\nNow you have \" + listCount + \" tasks in the list\");","lastModifiedDate":"2021-08-17"},{"lineNumber":142,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":143,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":144,"author":{"gitId":"zacharylwy"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"zacharylwy"},"content":"     * Deletes a specific task that Duke has stored.","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"zacharylwy"},"content":"     * @param input The entire String that the user has input i.e. \"delete 2\".","lastModifiedDate":"2021-08-18"},{"lineNumber":147,"author":{"gitId":"zacharylwy"},"content":"     * @throws DukeException If an incorrect input is entered.","lastModifiedDate":"2021-08-18"},{"lineNumber":148,"author":{"gitId":"zacharylwy"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":149,"author":{"gitId":"zacharylwy"},"content":"    public void delete(String input) throws DukeException{","lastModifiedDate":"2021-08-18"},{"lineNumber":150,"author":{"gitId":"zacharylwy"},"content":"        int itemNumber;","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"zacharylwy"},"content":"        if (input.split(\" \", 2).length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"zacharylwy"},"content":"            throw new DukeException(\"â˜¹ Oops! Looks like you are missing the number of the task you wish to delete! Try again :-)\");","lastModifiedDate":"2021-08-18"},{"lineNumber":153,"author":{"gitId":"zacharylwy"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"zacharylwy"},"content":"        String numberInput \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":155,"author":{"gitId":"zacharylwy"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"zacharylwy"},"content":"            itemNumber \u003d Integer.parseInt(numberInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"zacharylwy"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"zacharylwy"},"content":"            throw new DukeException(\"You may have entered something incorrectly. Try adding a number behind \u0027delete\u0027!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"zacharylwy"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"zacharylwy"},"content":"        String message \u003d \"â˜¹ Oops! You may have incorrectly entered a number. Try again!\";","lastModifiedDate":"2021-08-18"},{"lineNumber":161,"author":{"gitId":"zacharylwy"},"content":"        if (itemNumber \u003e dukeList.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"zacharylwy"},"content":"            throw new DukeException(\"â˜¹ Oops! Looks like you are trying to delete something that is not in your list! Try again!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"zacharylwy"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"zacharylwy"},"content":"        Task removed \u003d dukeList.remove(itemNumber - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":165,"author":{"gitId":"zacharylwy"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + removed.toString() + \"\\nNow you have \" + dukeList.size()","lastModifiedDate":"2021-08-18"},{"lineNumber":166,"author":{"gitId":"zacharylwy"},"content":"                                + \" tasks in the list\");","lastModifiedDate":"2021-08-18"},{"lineNumber":167,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":168,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":169,"author":{"gitId":"zacharylwy"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"zacharylwy"},"content":"     * Calls the appropriate methods depending on what the user has input.","lastModifiedDate":"2021-08-18"},{"lineNumber":171,"author":{"gitId":"zacharylwy"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":172,"author":{"gitId":"zacharylwy"},"content":"    public void start() {","lastModifiedDate":"2021-08-16"},{"lineNumber":173,"author":{"gitId":"zacharylwy"},"content":"        boolean loopStatus \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":174,"author":{"gitId":"zacharylwy"},"content":"        greet();","lastModifiedDate":"2021-08-16"},{"lineNumber":175,"author":{"gitId":"zacharylwy"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":176,"author":{"gitId":"zacharylwy"},"content":"        while (loopStatus) {","lastModifiedDate":"2021-08-17"},{"lineNumber":177,"author":{"gitId":"zacharylwy"},"content":"            String input \u003d scanner.nextLine().toLowerCase();","lastModifiedDate":"2021-08-16"},{"lineNumber":178,"author":{"gitId":"zacharylwy"},"content":"            String firstWord \u003d input.split(\" \", 2)[0];","lastModifiedDate":"2021-08-17"},{"lineNumber":179,"author":{"gitId":"zacharylwy"},"content":"            switch (firstWord) {","lastModifiedDate":"2021-08-17"},{"lineNumber":180,"author":{"gitId":"zacharylwy"},"content":"                case \"bye\":","lastModifiedDate":"2021-08-17"},{"lineNumber":181,"author":{"gitId":"zacharylwy"},"content":"                    loopStatus \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":182,"author":{"gitId":"zacharylwy"},"content":"                    exit();","lastModifiedDate":"2021-08-16"},{"lineNumber":183,"author":{"gitId":"zacharylwy"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":184,"author":{"gitId":"zacharylwy"},"content":"                case \"list\":","lastModifiedDate":"2021-08-17"},{"lineNumber":185,"author":{"gitId":"zacharylwy"},"content":"                    showList();","lastModifiedDate":"2021-08-16"},{"lineNumber":186,"author":{"gitId":"zacharylwy"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":187,"author":{"gitId":"zacharylwy"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-17"},{"lineNumber":188,"author":{"gitId":"zacharylwy"},"content":"                    try {","lastModifiedDate":"2021-08-17"},{"lineNumber":189,"author":{"gitId":"zacharylwy"},"content":"                        addDeadline(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":190,"author":{"gitId":"zacharylwy"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":191,"author":{"gitId":"zacharylwy"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-17"},{"lineNumber":192,"author":{"gitId":"zacharylwy"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":193,"author":{"gitId":"zacharylwy"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":194,"author":{"gitId":"zacharylwy"},"content":"                case \"delete\":","lastModifiedDate":"2021-08-18"},{"lineNumber":195,"author":{"gitId":"zacharylwy"},"content":"                    try {","lastModifiedDate":"2021-08-18"},{"lineNumber":196,"author":{"gitId":"zacharylwy"},"content":"                        delete(input);","lastModifiedDate":"2021-08-18"},{"lineNumber":197,"author":{"gitId":"zacharylwy"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":198,"author":{"gitId":"zacharylwy"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":199,"author":{"gitId":"zacharylwy"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":200,"author":{"gitId":"zacharylwy"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":201,"author":{"gitId":"zacharylwy"},"content":"                case \"event\":","lastModifiedDate":"2021-08-17"},{"lineNumber":202,"author":{"gitId":"zacharylwy"},"content":"                    try {","lastModifiedDate":"2021-08-17"},{"lineNumber":203,"author":{"gitId":"zacharylwy"},"content":"                        addEvent(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":204,"author":{"gitId":"zacharylwy"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":205,"author":{"gitId":"zacharylwy"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-17"},{"lineNumber":206,"author":{"gitId":"zacharylwy"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":207,"author":{"gitId":"zacharylwy"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":208,"author":{"gitId":"zacharylwy"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-17"},{"lineNumber":209,"author":{"gitId":"zacharylwy"},"content":"                    try {","lastModifiedDate":"2021-08-17"},{"lineNumber":210,"author":{"gitId":"zacharylwy"},"content":"                        addTodo(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":211,"author":{"gitId":"zacharylwy"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":212,"author":{"gitId":"zacharylwy"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-17"},{"lineNumber":213,"author":{"gitId":"zacharylwy"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":214,"author":{"gitId":"zacharylwy"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":215,"author":{"gitId":"zacharylwy"},"content":"                case \"done\":","lastModifiedDate":"2021-08-17"},{"lineNumber":216,"author":{"gitId":"zacharylwy"},"content":"                    try {","lastModifiedDate":"2021-08-18"},{"lineNumber":217,"author":{"gitId":"zacharylwy"},"content":"                        markDone(input);","lastModifiedDate":"2021-08-18"},{"lineNumber":218,"author":{"gitId":"zacharylwy"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":219,"author":{"gitId":"zacharylwy"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":220,"author":{"gitId":"zacharylwy"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":221,"author":{"gitId":"zacharylwy"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":222,"author":{"gitId":"zacharylwy"},"content":"                default:","lastModifiedDate":"2021-08-17"},{"lineNumber":223,"author":{"gitId":"zacharylwy"},"content":"                    //If no cases above are entered, Duke will not understand the command and prompt the user.","lastModifiedDate":"2021-08-17"},{"lineNumber":224,"author":{"gitId":"zacharylwy"},"content":"                    System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-17"},{"lineNumber":225,"author":{"gitId":"zacharylwy"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":226,"author":{"gitId":"zacharylwy"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":228,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-16"},{"lineNumber":230,"author":{"gitId":"zacharylwy"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-16"},{"lineNumber":231,"author":{"gitId":"zacharylwy"},"content":"        duke.start();","lastModifiedDate":"2021-08-16"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"zacharylwy":228,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacharylwy"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"zacharylwy"},"content":"    public DukeException(String dukeErrorMessage) {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"zacharylwy"},"content":"        super(dukeErrorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"zacharylwy"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"zacharylwy":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacharylwy"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"zacharylwy"},"content":"    protected String at;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"zacharylwy"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"zacharylwy"},"content":"     * Constructor for an Event.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"zacharylwy"},"content":"     * @param description The description of th event.","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"zacharylwy"},"content":"     * @param at The location of the event.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"zacharylwy"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"zacharylwy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"        return \"[E]\"+ super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"zacharylwy"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"zacharylwy":20}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacharylwy"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"zacharylwy"},"content":"    private String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"zacharylwy"},"content":"    private boolean status;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"zacharylwy"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"zacharylwy"},"content":"     * Constructor","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"zacharylwy"},"content":"     * @param description The string that describes the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"zacharylwy"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"        this.status \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"zacharylwy"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"zacharylwy"},"content":"     * Correctly assigns the task a string that indicates if it has been marked as done or not.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"zacharylwy"},"content":"     * @return String that hows the correct icon.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"zacharylwy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"zacharylwy"},"content":"        if (!status) {","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"zacharylwy"},"content":"            return \"[ ] \";","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"zacharylwy"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"zacharylwy"},"content":"            return \"[X] \";","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"zacharylwy"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"zacharylwy"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"zacharylwy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"zacharylwy"},"content":"        return this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"zacharylwy"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"zacharylwy":32}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zacharylwy"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"zacharylwy"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"zacharylwy"},"content":"     * Constructor to create a Todo","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"zacharylwy"},"content":"     * @param description Description of the Todo task.","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"zacharylwy"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"zacharylwy"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"zacharylwy"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"zacharylwy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"zacharylwy"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"zacharylwy"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"zacharylwy":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zacharylwy"},"content":"blah","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"zacharylwy"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"zacharylwy"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"zacharylwy"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"zacharylwy"},"content":"deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"zacharylwy"},"content":"deadline task","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"zacharylwy"},"content":"deadline  task","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"zacharylwy"},"content":"deadline task /by date","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"zacharylwy"},"content":"event","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"zacharylwy"},"content":"event activity","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"zacharylwy"},"content":"event  activity","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"zacharylwy"},"content":"event activity /at place","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"zacharylwy"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"zacharylwy"},"content":"todo this","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"zacharylwy"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"zacharylwy"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"zacharylwy"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"zacharylwy"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"zacharylwy"},"content":"delete this","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"zacharylwy"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"zacharylwy"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"zacharylwy"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"zacharylwy":22}}]
