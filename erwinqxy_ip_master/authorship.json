[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"erwinqxy":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"erwinqxy":18,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"T|1|read book","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"D|0|return book|2021-08-19T12:30","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"E|0|project meeting|2021-08-20T18:00","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"D|0|return book|2021-08-24T23:59","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"E|1|sleep|2015-02-20T06:30","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"T|0|eat","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"erwinqxy":6}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"import duke.tools.Ui;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"    public static Node getDukeGreeting(Image dukeImage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"        String greeting \u003d Ui.getWelcomeMessage();","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"        DialogBox db \u003d new DialogBox(greeting, dukeImage);","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"        db.flip();","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"        return db;","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"erwinqxy"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"erwinqxy"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"erwinqxy"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"erwinqxy":68}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"import duke.dukeException.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"import duke.tools.Parser;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"import duke.tools.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"import duke.tools.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":" * A to-do bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":" * @author Erwin Quek","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"    protected static Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"    protected static TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"    protected static Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"     * Constructor to create Duke.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"     * @param filePath Takes in a filepath","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"     * @throws FileNotFoundException Throws an error when file not found","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"        } catch (FileNotFoundException | DukeException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"    String getResponse(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"        String response;","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"            response \u003d Parser.parse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"            return \"Duke heard: \" + response;","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"     * Method to run the bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"    public void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"        while (true) {","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"                ui.readCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"                Scanner s \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"                String command \u003d s.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"                String response \u003d Parser.parse(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"erwinqxy"},"content":"                ui.printMessage(response);","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"erwinqxy"},"content":"                if (response.contains(\"Bye\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"erwinqxy"},"content":"                    break;","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"erwinqxy"},"content":"                }","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"erwinqxy"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"erwinqxy"},"content":"                Ui.printMessage(e.getMessage());","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"erwinqxy"},"content":"            } finally {","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"erwinqxy"},"content":"                ui.showDivider();","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"erwinqxy"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"erwinqxy"},"content":"     * Method to mark a task done by index.","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"erwinqxy"},"content":"     * @param i the index for task to remove","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"erwinqxy"},"content":"     * @throws DukeException throw error","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"erwinqxy"},"content":"     * @return result","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"erwinqxy"},"content":"    public static String markDone(int i) throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"erwinqxy"},"content":"        if (i \u003e tasks.getSize()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"erwinqxy"},"content":"            throw new DukeException(\"\\nOOPS!!! Invalid index.\\nPlease choose between 1 to \" + tasks.getSize());","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"erwinqxy"},"content":"        String start \u003d \"\\n Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"erwinqxy"},"content":"        tasks.getTask(i - 1).markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"erwinqxy"},"content":"        TaskList.updateMemory(storage.getPath(), tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"erwinqxy"},"content":"        String res \u003d tasks.getTask(i-1).toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"erwinqxy"},"content":"        String end \u003d \"\\n\" + \"  \" + res;","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"erwinqxy"},"content":"        return start + end;","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"erwinqxy"},"content":"     * Method to get the Duke TaskList","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"erwinqxy"},"content":"    public static String getTaskList() {","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"erwinqxy"},"content":"        String start \u003d \"\\n Here are the \" + tasks.getSize() + \" tasks in your list: \\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":100,"author":{"gitId":"erwinqxy"},"content":"        String res \u003d \"\";","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"erwinqxy"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"erwinqxy"},"content":"            res +\u003d \"\\n\" + (i + 1) + \". \" + tasks.getTask(i);","lastModifiedDate":"2021-09-06"},{"lineNumber":103,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"erwinqxy"},"content":"        return start + res;","lastModifiedDate":"2021-09-02"},{"lineNumber":105,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"erwinqxy"},"content":"     * Method to handle toDo tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"erwinqxy"},"content":"     * @param input takes in a command by the user","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"erwinqxy"},"content":"     * @throws DukeException throws an error","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"erwinqxy"},"content":"    public static String toDo(String input) throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":113,"author":{"gitId":"erwinqxy"},"content":"        if (input.equals(\"todo\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"erwinqxy"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"erwinqxy"},"content":"        String t \u003d input.split(\"todo \")[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"erwinqxy"},"content":"        ToDo td \u003d new ToDo(t);","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"erwinqxy"},"content":"        tasks.addNewTask(td);","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"erwinqxy"},"content":"        TaskList.updateMemory(storage.getPath(), tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"erwinqxy"},"content":"        return \"\\nGot it. I\u0027ve added this task: \\n \" + \"  \" + td +","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"erwinqxy"},"content":"                \"\\n\" + \"Now you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":122,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"erwinqxy"},"content":"     * Method to handle Deadline tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"erwinqxy"},"content":"     * @param input takes in a command by the user","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"erwinqxy"},"content":"     * @throws DukeException throws an error","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"erwinqxy"},"content":"    public static String  deadline(String input) throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"erwinqxy"},"content":"        if (!input.contains(\"/by\")){","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"erwinqxy"},"content":"            String message \u003d \"\\nOOPS!!! Please follow this format: \\n deadline {task} /by {YYYY-MM-DDTHH:MM}\";","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"erwinqxy"},"content":"            throw new DukeException(message);","lastModifiedDate":"2021-09-06"},{"lineNumber":133,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":134,"author":{"gitId":"erwinqxy"},"content":"        String t \u003d input.split(\"deadline \")[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"erwinqxy"},"content":"        Deadline dl \u003d new Deadline(t);","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"erwinqxy"},"content":"        tasks.addNewTask(dl);","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"erwinqxy"},"content":"        TaskList.updateMemory(storage.getPath(), tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"erwinqxy"},"content":"        return \"\\nGot it. I\u0027ve added this task: \\n \" + \"  \" + dl","lastModifiedDate":"2021-09-06"},{"lineNumber":139,"author":{"gitId":"erwinqxy"},"content":"                + \"\\n\" + \"Now you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":140,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":141,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"erwinqxy"},"content":"     * Method to handle Event tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"erwinqxy"},"content":"     * @param input takes in a command by the user","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"erwinqxy"},"content":"     * @throws DukeException throws an error","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"erwinqxy"},"content":"    public static String event(String input) throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":148,"author":{"gitId":"erwinqxy"},"content":"        if (!input.contains(\"/at \")){","lastModifiedDate":"2021-09-06"},{"lineNumber":149,"author":{"gitId":"erwinqxy"},"content":"            String message \u003d \"\\nOOPS!!! Please follow this format: \\n event {task} /at {YYYY-MM-DDTHH:MM}\";","lastModifiedDate":"2021-09-06"},{"lineNumber":150,"author":{"gitId":"erwinqxy"},"content":"            throw new DukeException(message);","lastModifiedDate":"2021-09-06"},{"lineNumber":151,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":152,"author":{"gitId":"erwinqxy"},"content":"        String t \u003d input.split(\"event \")[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":153,"author":{"gitId":"erwinqxy"},"content":"        Event e \u003d new Event(t);","lastModifiedDate":"2021-08-19"},{"lineNumber":154,"author":{"gitId":"erwinqxy"},"content":"        tasks.addNewTask(e);","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"erwinqxy"},"content":"        TaskList.updateMemory(storage.getPath(), tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"erwinqxy"},"content":"        return \"\\n Got it. I\u0027ve added this task: \\n \" + \"  \" + e","lastModifiedDate":"2021-09-06"},{"lineNumber":157,"author":{"gitId":"erwinqxy"},"content":"                + \"\\n\"  + \"Now you have \" + tasks.getSize()  + \" tasks in the list.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":158,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":160,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"erwinqxy"},"content":"     * Method to handle delete tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"erwinqxy"},"content":"     * @param i takes in a command by the user","lastModifiedDate":"2021-09-02"},{"lineNumber":163,"author":{"gitId":"erwinqxy"},"content":"     * @throws DukeException throws an error","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"erwinqxy"},"content":"    public static String deleteTask(int i) throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":166,"author":{"gitId":"erwinqxy"},"content":"        if (i \u003e tasks.getSize()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":167,"author":{"gitId":"erwinqxy"},"content":"            throw new DukeException(\"\\nOOPS!!! Invalid index.\\nPlease choose between 1 to \" + tasks.getSize());","lastModifiedDate":"2021-09-06"},{"lineNumber":168,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":169,"author":{"gitId":"erwinqxy"},"content":"        String start \u003d \"\\n Noted. I\u0027ve removed this task: \\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":170,"author":{"gitId":"erwinqxy"},"content":"        String deleted \u003d tasks.getTask(i-1).toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":171,"author":{"gitId":"erwinqxy"},"content":"        tasks.deleteGivenTask(i - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":172,"author":{"gitId":"erwinqxy"},"content":"        TaskList.updateMemory(storage.getPath(), tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":173,"author":{"gitId":"erwinqxy"},"content":"        String mid \u003d \"  \" + deleted;","lastModifiedDate":"2021-09-02"},{"lineNumber":174,"author":{"gitId":"erwinqxy"},"content":"        String end \u003d \"\\n Now you have \" + tasks.getSize() + \" tasks in the list.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":175,"author":{"gitId":"erwinqxy"},"content":"        return start + mid + end;","lastModifiedDate":"2021-09-02"},{"lineNumber":176,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":177,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":178,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":179,"author":{"gitId":"erwinqxy"},"content":"     * Method to find task using a search key.","lastModifiedDate":"2021-08-27"},{"lineNumber":180,"author":{"gitId":"erwinqxy"},"content":"     * @param input search key","lastModifiedDate":"2021-08-27"},{"lineNumber":181,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":182,"author":{"gitId":"erwinqxy"},"content":"    public static String findTask(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":183,"author":{"gitId":"erwinqxy"},"content":"        String searchKey \u003d input.split(\"find \")[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":184,"author":{"gitId":"erwinqxy"},"content":"        String start \u003d \"\\nHere are the matching tasks in your list: \";","lastModifiedDate":"2021-09-06"},{"lineNumber":185,"author":{"gitId":"erwinqxy"},"content":"        String res \u003d \"\";","lastModifiedDate":"2021-09-02"},{"lineNumber":186,"author":{"gitId":"erwinqxy"},"content":"        int currIndex \u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":187,"author":{"gitId":"erwinqxy"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":188,"author":{"gitId":"erwinqxy"},"content":"            String currTask \u003d tasks.getTask(i).getTaskInfo();","lastModifiedDate":"2021-08-26"},{"lineNumber":189,"author":{"gitId":"erwinqxy"},"content":"            if (currTask.contains(searchKey)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":190,"author":{"gitId":"erwinqxy"},"content":"                String foundTask \u003d \"\\n\" + currIndex + \". \" + tasks.getTask(i);","lastModifiedDate":"2021-09-06"},{"lineNumber":191,"author":{"gitId":"erwinqxy"},"content":"                res +\u003d foundTask;","lastModifiedDate":"2021-09-02"},{"lineNumber":192,"author":{"gitId":"erwinqxy"},"content":"                currIndex++;","lastModifiedDate":"2021-08-26"},{"lineNumber":193,"author":{"gitId":"erwinqxy"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":194,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":195,"author":{"gitId":"erwinqxy"},"content":"        return start + res;","lastModifiedDate":"2021-09-02"},{"lineNumber":196,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":197,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":198,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":199,"author":{"gitId":"erwinqxy"},"content":"     * Main method to run the bot.","lastModifiedDate":"2021-08-27"},{"lineNumber":200,"author":{"gitId":"erwinqxy"},"content":"     * @param args Takes in user input","lastModifiedDate":"2021-08-27"},{"lineNumber":201,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":202,"author":{"gitId":"erwinqxy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":203,"author":{"gitId":"erwinqxy"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2021-08-26"},{"lineNumber":204,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"erwinqxy":203,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"erwinqxy":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"    private Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"erwinqxy":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"import duke.tools.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Allardo.jpg\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Elon_Musk.jpg\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeGreeting(dukeImage));","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"erwinqxy":53}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"import duke.dukeException.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"import java.io.File;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":" * Contains the task list e.g., it has operations to add/delete tasks in the list","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":" * @author Erwin Quek","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"    private final ArrayList\u003cTask\u003e TASKLIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"     * TaskList constructor","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"     * @param path takes in the path of the file","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"     * @throws FileNotFoundException throws an error if file not found","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"    public TaskList(Path path) throws FileNotFoundException, DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"        File f \u003d new File(String.valueOf(path));","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"            // Read and add the task into the list","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"            String input \u003d s.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"            String[] arrOfInputs \u003d input.split(\"\\\\|\");","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"            updateList(arrOfInputs);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"//    public TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"//","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"//    }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"     * Method to update task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"     * @param arrOfInputs taking in an array of inputs","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"    private void updateList(String[] arrOfInputs) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"        //Check for T, D, E and update in the list","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"        if (arrOfInputs[0].equals(\"T\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"            String t \u003d arrOfInputs[2];","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"            ToDo td \u003d new ToDo(t);","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"            this.TASKLIST.add(td);","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"        } else if (arrOfInputs[0].equals(\"D\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"            String t \u003d arrOfInputs[2] + \" /by \" + arrOfInputs[3];","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"            Deadline d \u003d new Deadline(t);","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"            this.TASKLIST.add(d);","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"        } else if (arrOfInputs[0].equals(\"E\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"            String t \u003d arrOfInputs[2] + \" /at \" + arrOfInputs[3];","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"erwinqxy"},"content":"            Event e \u003d new Event(t);","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"erwinqxy"},"content":"            this.TASKLIST.add(e);","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"erwinqxy"},"content":"        int currListLength \u003d this.TASKLIST.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"erwinqxy"},"content":"        //Check if its completed or not (0,1) and mark accordingly","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"erwinqxy"},"content":"        if (arrOfInputs[1].equals(\"1\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"erwinqxy"},"content":"            this.TASKLIST.get(currListLength - 1).markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"erwinqxy"},"content":"     * Method to add a new task to the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"erwinqxy"},"content":"     * @param t takes in a task object","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"erwinqxy"},"content":"    public void addNewTask(Task t) {","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"erwinqxy"},"content":"        this.TASKLIST.add(t);","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"erwinqxy"},"content":"     * Method to get the size of the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"erwinqxy"},"content":"     * @return size of task list","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"erwinqxy"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"erwinqxy"},"content":"        return TASKLIST.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"erwinqxy"},"content":"     * Method to get the ArrayList which contains all the tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"erwinqxy"},"content":"     * @return an ArrayList containing all the task","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"erwinqxy"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"erwinqxy"},"content":"        return TASKLIST;","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"erwinqxy"},"content":"     * Method to get a task at a specified index.","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"erwinqxy"},"content":"     * @param i index of task to get","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"erwinqxy"},"content":"     * @return task object","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"erwinqxy"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"erwinqxy"},"content":"        return TASKLIST.get(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"erwinqxy"},"content":"     * Method to delete task at given index.","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"erwinqxy"},"content":"     * @param i index of task to delete","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"erwinqxy"},"content":"    public void deleteGivenTask(int i) {","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"erwinqxy"},"content":"        TASKLIST.remove(i-1);","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"erwinqxy"},"content":"     * Method to update the storage file.","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"erwinqxy"},"content":"     * @param filePath filepath to storage file","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"erwinqxy"},"content":"     * @param taskList the tasklist object","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"erwinqxy"},"content":"     * @throws DukeException throws an error","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"erwinqxy"},"content":"    public static void updateMemory(String filePath, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"erwinqxy"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"erwinqxy"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"erwinqxy"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"erwinqxy"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"erwinqxy"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"erwinqxy"},"content":"            FileWriter fileWriter \u003d new FileWriter(file.getAbsolutePath());","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"erwinqxy"},"content":"            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"erwinqxy"},"content":"            for (Task t: taskList.getTaskList()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"erwinqxy"},"content":"                bufferedWriter.write(t.getTaskInfo() + System.lineSeparator());","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"erwinqxy"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"erwinqxy"},"content":"            bufferedWriter.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"erwinqxy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"erwinqxy"},"content":"            throw new DukeException(\"Could not write to file!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"erwinqxy"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"erwinqxy":139}},{"path":"src/main/java/duke/dukeException/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"package duke.dukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":" * To handle Duke Exception.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":" * @author Erwin Quek","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"erwinqxy":13}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"import duke.dukeException.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":" * A deadline task that extends from Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":" * @author Erwin Quek","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"    private String dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"    private final LocalDateTime dt;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"     * @param description Takes in a description of Deadline task","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"    public Deadline(String description) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"        super(description.substring(0, description.indexOf(\"/by \")).trim());","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"        this.dateTime \u003d description.substring(description.indexOf(\"/by \") + 4).trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"        if (dateTime.length() \u003c 16) {","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"            String message \u003d \"\\nOOPS!!! Please follow this format: \" +","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"                    \"\\n deadline {task} /by {YYYY-MM-DDTHH:MM}\";","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"            throw new DukeException(message);","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"        this.dt \u003d LocalDateTime.parse(this.dateTime);  //eg LocalDateTime.parse(\"2015-02-20T06:30\");","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"     * A method to get deadline task info.","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"     * @return a string of the deadline task details to be saved in data","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"        return \"D\" + \"|\" + super.getZeroOrOne() + \"|\" + description + \"|\" + dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"     * A method to get a String representation of Deadline task.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"     * @return a string of the Deadline task.","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"        String formatDate \u003d dt.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"        String formatTime \u003d dt.format(DateTimeFormatter.ofPattern(\"hh:mm\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatDate +  \", \" + formatTime + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"erwinqxy":52}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"import duke.dukeException.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":" * An Event task that extends from Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":" * @author Erwin Quek","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"    private String dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"    private final LocalDateTime dt;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"     * A constructor for Event","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"     * @param description Takes in a user input","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"    public Event(String description) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"        super(description.substring(0, description.indexOf(\"/at \")).trim());","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"        this.dateTime \u003d description.substring(description.indexOf(\"/at \") + 4).trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"        if (dateTime.length() \u003c 16) {","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"            String message \u003d \"\\nOOPS!!! Please follow this format: \\n event {task} /at {YYYY-MM-DDTHH:MM}\";","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"            throw new DukeException(message);","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"        this.dt \u003d LocalDateTime.parse(this.dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"     * A method to get Event task info.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"     * @return a string of the Event task details to be saved in data","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"        return \"E\" + \"|\" + super.getZeroOrOne() + \"|\" + description + \"|\" + dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"     * A method to get a String representation of Event task.","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"     * @return a string of the Event task.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"        String formatDate \u003d dt.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"        String formatTime \u003d dt.format(DateTimeFormatter.ofPattern(\"hh:mm\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formatDate +  \", \" + formatTime + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"erwinqxy":51}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":" * A Task object.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":" * @author Erwin Quek","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"     * Task constructor.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"     * @param description Takes in a description of the task","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"     * Method to get the status of the task if it is done or not.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"     * @return \"X\" if its done and \" \" if not done","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"     * Method to mark task as done.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"     * Method to check task has been marked","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"     * @return \"1\" or \"0\" value to represent marked and unmarked respectively","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"    public String getZeroOrOne() {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"     * Method to get info of the task to be written in a file","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"     * @return A string representation to the task description","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"        return getZeroOrOne() + \"|\" + description;","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"     * A method to have a String representation of task object","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"     * @return A string of the task\u0027s details","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"        return \"[\" + getStatusIcon() + \"] \" +  this.description;","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"erwinqxy":61}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":" * A ToDo task that extends from Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":" * @author Erwin Quek","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"     * A constructor for ToDo","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"     * @param description Takes in a user input","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"     * A method to get todo task info.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"     * @return a string of the todo task details to be saved in data","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"        return \"T\" + \"|\" + super.getZeroOrOne() + \"|\" + description;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"     * A method to get a String representation of todo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"     * @return a string of the todo task.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"erwinqxy":35}},{"path":"src/main/java/duke/tools/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"package duke.tools;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"import duke.dukeException.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":" * Parser is used to handle user inputs.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":" * @author Erwin Quek","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"     * Method to handle the user inputs.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"     * @param command Takes in a command from the user","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"     * @return A boolean value  to check if user terminated the bot","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"     * @throws DukeException Handles Duke Exception","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"     * @throws IOException Handles file errors","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"    public static String parse(String command) throws DukeException, IOException {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"        if (command.contains(\"bye\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"            assert command.contains(\"bye\");","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"            return \"\\n Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"        if (command.startsWith(\"list\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"            assert command.contains(\"list\");","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"            return Duke.getTaskList();","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"        } else if (command.startsWith(\"done\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"            assert command.contains(\"done\");","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"            if (command.trim().equals(\"done\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"                throw new DukeException(\"\\n☹ OOPS!!! The description of done cannot be empty.\\n \" +","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"                        \"Please follow this format: \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"                        \"    done {task index}\");","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"            int i \u003d Integer.valueOf(command.substring(5));","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"            return Duke.markDone(i);","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"        } else if (command.contains(\"delete\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"            assert command.contains(\"delete\");","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"            if (command.trim().equals(\"delete\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"                throw new DukeException(\"\\n☹ OOPS!!! The description of delete cannot be empty.\\n \" +","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"                        \"Please follow this format: \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"                        \"    delete {task index}\");","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"            int i \u003d Integer.valueOf(command.substring(7));","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"            return Duke.deleteTask(i);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"            assert command.contains(\"todo\");","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"            return Duke.toDo(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"            assert command.contains(\"deadline\");","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"            return Duke.deadline(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"            assert command.contains(\"event\");","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"            return Duke.event(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"            assert command.contains(\"find\");","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"            if (command.trim().equals(\"find\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"                throw new DukeException(\"\\n☹ OOPS!!! The description of find cannot be empty.\\n \" +","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"                        \"Please follow this format: \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"                        \"    find {key}\");","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"            return Duke.findTask(command);","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"erwinqxy"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"erwinqxy"},"content":"            throw new DukeException(\"\\n OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"erwinqxy"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"erwinqxy":69}},{"path":"src/main/java/duke/tools/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"package duke.tools;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":" * Deals with loading duke.tasks from the file and saving duke.tasks in the file.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":" * @author Erwin Quek","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"    private final Path path;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"    private final String stringPath;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"     * @param filePath Takes in a file path","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"     * @throws InvalidPathException Throws an invalid path error","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"    public Storage(String filePath) throws InvalidPathException {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"        this.path \u003d Path.of(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"        this.stringPath \u003d filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"     * Method to check if filepath is valid.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"     * @param path path to duke.txt","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"     * @return boolean value if path is a txt file","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"    private boolean isValidPath(Path path) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"        return path.toString().endsWith(\".txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"     * Method to create new file if file does not exist.","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"     * @param directory directory path","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"     * @param filepath expected file path","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"    public static void createNewFile(Path directory, Path filepath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"        if (Files.notExists(directory)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"                Files.createDirectories(directory);","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"        if (Files.notExists(filepath)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"                Files.createFile(filepath);","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"     * Method to return the path.","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"erwinqxy"},"content":"     * @return path","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"erwinqxy"},"content":"    public Path load() {","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"erwinqxy"},"content":"        return this.path;","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"erwinqxy"},"content":"     * Method to getPath in String.","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"erwinqxy"},"content":"     * @return return String representation of path","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"erwinqxy"},"content":"    public String getPath()  {","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"erwinqxy"},"content":"        return this.stringPath;","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"erwinqxy"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"erwinqxy":75}},{"path":"src/main/java/duke/tools/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"package duke.tools;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":" *","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":" * @author Erwin Quek","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":" * @version CS2103 AY21/22 Sem 1","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"     * Method to get a message divider.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"    public void showDivider() {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"     * Method to print the bot\u0027s welcome message.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"        String welcome \u003d \"Hello! I\u0027m Duke. A friendly chatbot!! :)\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"                + \"What can I do for you?\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"        System.out.println(DIVIDER + \"\\n\" + LOGO + \"\\n\" + welcome + DIVIDER);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"    public static String getWelcomeMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"        String welcome \u003d \"Hello! I\u0027m Duke. A friendly chatbot!! :)\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"                + \"What can I do for you?\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"        return (\"\\n\" + welcome);","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"        String end_message \u003d \"\\n Bye. I hope to talk to you again soon! :)\";","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"        System.out.println(end_message + \"\\n\" + DIVIDER);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"erwinqxy"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"erwinqxy"},"content":"     * Method to read user input.","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"erwinqxy"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"erwinqxy"},"content":"    public void readCommand() {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"erwinqxy"},"content":"        //String prompt_message \u003d \"Add to-do list ({input})/ View list (list) / Complete task (done {input}) / End (bye) :\";","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"erwinqxy"},"content":"        String prompt_message \u003d \"Please input your command: \";","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"erwinqxy"},"content":"        System.out.println(prompt_message);","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"erwinqxy"},"content":"    public String testReadCommand() {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"erwinqxy"},"content":"        return \"Please input your command: \";","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"erwinqxy"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"erwinqxy"},"content":"        System.out.println(DIVIDER + \"\\t\" + message);","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"erwinqxy"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"erwinqxy":61}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"        \u003cInsets bottom\u003d\"20.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"erwinqxy":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Enter\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"erwinqxy":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"import duke.dukeException.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"import duke.tools.Ui;","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"import duke.tools.Parser;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"    public void testWelcomeMessage(){ ;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"        Ui userInterface \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"        String actualWelcomeMessage \u003d userInterface.getWelcomeMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"        String expectedWelcomeMessage \u003d \"____________________________________________________________\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"                \" ____        _        \\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"                \"|  _ \\\\ _   _| | _____ \\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"erwinqxy"},"content":"                \"| | | | | | | |/ / _ \\\\\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"erwinqxy"},"content":"                \"| |_| | |_| |   \u003c  __/\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"erwinqxy"},"content":"                \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"erwinqxy"},"content":"                \"\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"erwinqxy"},"content":"                \"Hello! I\u0027m duke.Duke. A friendly chatbot!! :)\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"erwinqxy"},"content":"                \"What can I do for you?\\n\" +","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"erwinqxy"},"content":"                \"____________________________________________________________\";","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"erwinqxy"},"content":"        assertEquals(expectedWelcomeMessage, actualWelcomeMessage);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"erwinqxy"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"erwinqxy"},"content":"    public void testPraserBye() throws DukeException, IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"erwinqxy"},"content":"        boolean expectedResult \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"erwinqxy"},"content":"        boolean actualResult \u003d Parser.parse(\"bye\");","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"erwinqxy"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"erwinqxy"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"erwinqxy"},"content":"    public void testGetInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"erwinqxy"},"content":"        String expectedResult \u003d \"Please input your command: \";","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"erwinqxy"},"content":"        Ui userInterface \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"erwinqxy"},"content":"        String actualResult \u003d userInterface.testReadCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"erwinqxy"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"erwinqxy"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"erwinqxy"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"erwinqxy"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"erwinqxy":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"erwinqxy"},"content":"todo cs2103 ip","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"erwinqxy"},"content":"deadline complete 2103 ip /by Thursday","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"erwinqxy"},"content":"event  2103 ip 1 /at Thursday 2359","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"erwinqxy"},"content":"todo cs2105 project","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"erwinqxy"},"content":"deadline complete 2105 ip /by Friday","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"erwinqxy"},"content":"event  2105 project 1 /at Friday 2359","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"erwinqxy"},"content":"todo cs2100 tut","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"erwinqxy"},"content":"deadline complete 2100 tut /by Monday","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"erwinqxy"},"content":"event  cs2100 tut /at Monday 12pm","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"erwinqxy"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"erwinqxy"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"erwinqxy"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"erwinqxy"},"content":"done 8","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"erwinqxy"},"content":"done 9","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"erwinqxy"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"erwinqxy"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"erwinqxy"},"content":"blah","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"erwinqxy":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"erwinqxy"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"erwinqxy":1,"-":20}}]
