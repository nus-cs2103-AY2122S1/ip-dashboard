[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"fullfatwasabi"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"fullfatwasabi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"fullfatwasabi"},"content":"    static String bar \u003d \" -------------------------------------------------------------\";","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"fullfatwasabi"},"content":"    int listLen \u003d 0;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"fullfatwasabi"},"content":"    Task[] list \u003d new Task[100];","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"fullfatwasabi"},"content":"    public void updateList (String input) throws IncorrectFormatException {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"fullfatwasabi"},"content":"        if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"fullfatwasabi"},"content":"            System.out.println(bar);","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"fullfatwasabi"},"content":"            for (int i \u003d 1; i \u003c\u003d listLen; i++) {","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"fullfatwasabi"},"content":"                System.out.println(\"    \" + i + \".\" + list[i - 1].toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"fullfatwasabi"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"fullfatwasabi"},"content":"            System.out.println(bar);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"fullfatwasabi"},"content":"        } else{","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"fullfatwasabi"},"content":"            if (input.indexOf(\u0027 \u0027) \u003e 0) { // checking if command given was \u003e\u003d two words","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"fullfatwasabi"},"content":"                String[] splitted \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"fullfatwasabi"},"content":"                input \u003d splitted[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"fullfatwasabi"},"content":"                if (splitted[0].equalsIgnoreCase(\"/done\")) { // done-ing item","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"fullfatwasabi"},"content":"                    if (!checkNum(splitted[1])) {","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"fullfatwasabi"},"content":"                        throw new IncorrectFormatException(\"Item number not detected. Try again?\");","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"fullfatwasabi"},"content":"                    } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"fullfatwasabi"},"content":"                        int num \u003d Integer.parseInt(splitted[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"fullfatwasabi"},"content":"                        if (0 \u003c num \u0026\u0026 num \u003c\u003d listLen) {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"fullfatwasabi"},"content":"                            list[num - 1].markDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"fullfatwasabi"},"content":"                            System.out.println(bar + \"\\n    Nice! I\u0027ve marked this task as done:\\n    \" + list[num - 1].toString() + \"\\n\" + bar);","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"fullfatwasabi"},"content":"                        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"fullfatwasabi"},"content":"                            throw new IncorrectFormatException(\"Item number not present. Try again?\");","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"fullfatwasabi"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"fullfatwasabi"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"fullfatwasabi"},"content":"                } else if (splitted[0].equalsIgnoreCase(\"/delete\")) { // removing item","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"fullfatwasabi"},"content":"                    if (!checkNum(splitted[1])) {","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"fullfatwasabi"},"content":"                        throw new IncorrectFormatException(\"List does not contain this item number. Try again?\");","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"fullfatwasabi"},"content":"                    } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"fullfatwasabi"},"content":"                        int num \u003d Integer.parseInt(splitted[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"fullfatwasabi"},"content":"                        if (0 \u003c num \u0026\u0026 num \u003c\u003d listLen) {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"fullfatwasabi"},"content":"                            list[num - 1].markDone(); //todo","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"fullfatwasabi"},"content":"                            listLen--;","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"fullfatwasabi"},"content":"                            System.out.println(bar + \"\\n    Nice! I\u0027ve removed this task off the face of the Earth:\\n    \" + list[num - 1].toString() +","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"fullfatwasabi"},"content":"                                    \"\\n    Now you have \" + listLen + \" tasks in the list.\\n\" + bar);","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"fullfatwasabi"},"content":"                        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"fullfatwasabi"},"content":"                            throw new IncorrectFormatException(\"Item number not present. Try again?\");","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"fullfatwasabi"},"content":"                        }","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"fullfatwasabi"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"fullfatwasabi"},"content":"                } else if (splitted[0].equalsIgnoreCase(\"todo\")) { // adding todo","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"fullfatwasabi"},"content":"                    if (input.isEmpty()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"fullfatwasabi"},"content":"                        throw new IncorrectFormatException(\"Task name not provided.\\n\" + \"    FORMAT: \\\" TODO TASKNAME\\\"\");","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"fullfatwasabi"},"content":"                    } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"fullfatwasabi"},"content":"                        list[listLen] \u003d new Todo(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"fullfatwasabi"},"content":"                        listLen++;","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"fullfatwasabi"},"content":"                        System.out.println(bar + \"\\n    added: \" + input + \"\\n    Now you have \" + listLen + \" tasks in your list\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"fullfatwasabi"},"content":"                                bar);","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"fullfatwasabi"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"fullfatwasabi"},"content":"                } else if (splitted[0].equalsIgnoreCase(\"deadline\")) { // adding deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"fullfatwasabi"},"content":"                    String[] deadlineSplit \u003d input.split(\"(?i) /by \");","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"fullfatwasabi"},"content":"                    if (deadlineSplit.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"fullfatwasabi"},"content":"                        throw new IncorrectFormatException(\"Task name or deadline not provided.\\n\" + \"   FORMAT: \\\" DEADLINE TASKNAME /by DEADLINE\\\"\");","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"fullfatwasabi"},"content":"                    } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"fullfatwasabi"},"content":"                        list[listLen] \u003d new Deadline(deadlineSplit[0], deadlineSplit[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"fullfatwasabi"},"content":"                        listLen++;","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"fullfatwasabi"},"content":"                        System.out.println(bar + \"\\n    Deadline added: \" + deadlineSplit[0] + \"\\n    Now you have \" + listLen + \" tasks in your list\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"fullfatwasabi"},"content":"                                bar);","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"fullfatwasabi"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"fullfatwasabi"},"content":"                } else if (splitted[0].equalsIgnoreCase(\"event\")) { // adding event","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"fullfatwasabi"},"content":"                    String[] eventSplit \u003d input.split(\"(?i) /at \");","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"fullfatwasabi"},"content":"                    if (eventSplit.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"fullfatwasabi"},"content":"                        throw new IncorrectFormatException(\"Event name or date not provided.\\n\" + \"   FORMAT: \\\" EVENT TASKNAME /at DATE\\\"\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"fullfatwasabi"},"content":"                    } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"fullfatwasabi"},"content":"                        list[listLen] \u003d new Event(eventSplit[0], eventSplit[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"fullfatwasabi"},"content":"                        listLen++;","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"fullfatwasabi"},"content":"                        System.out.println(bar + \"\\n    added: \" + eventSplit[0] + \"\\n    Now you have \" + listLen + \" tasks in your list\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"fullfatwasabi"},"content":"                                bar);","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"fullfatwasabi"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"fullfatwasabi"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"fullfatwasabi"},"content":"                else { // no task type provided","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"fullfatwasabi"},"content":"                    throw new IncorrectFormatException(\"Task type or task name not provided!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"fullfatwasabi"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"fullfatwasabi"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"fullfatwasabi"},"content":"            else { // only one word","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"fullfatwasabi"},"content":"                if (input.equalsIgnoreCase(\"help\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"fullfatwasabi"},"content":"                    System.out.println(bar + \"\\n    ToDos: tasks without any date/time attached to it e.g., visit new theme park\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"fullfatwasabi"},"content":"                            \"      FORMAT: todo TASKNAME\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"fullfatwasabi"},"content":"                            \"    Deadlines: tasks that need to be done before a specific date/time e.g., submit report by 11/10/2019 5pm\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"fullfatwasabi"},"content":"                            \"      FORMAT: deadline TASKNAME /by DEADLINE\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"fullfatwasabi"},"content":"                            \"    Events: tasks that start at a specific time and ends at a specific time e.g., team project meeting on 2/10/2019 2-4pm\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"fullfatwasabi"},"content":"                            \"      FORMAT: todo TASKNAME /by DATE\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"fullfatwasabi"},"content":"                            \"    \\\"/done x\\\" where x is the task number to mark task as done.\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"fullfatwasabi"},"content":"                            \"    \\\"/delete x\\\" where x is the task number to be deleted. \\n\"+ bar);","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"fullfatwasabi"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"fullfatwasabi"},"content":"                    throw new IncorrectFormatException(\"Task type or task name not provided!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"fullfatwasabi"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"fullfatwasabi"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"fullfatwasabi"},"content":"    public boolean checkNum (String wool) {","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"fullfatwasabi"},"content":"        return (wool !\u003d null \u0026\u0026 wool.matches(\"^[0-9]*$\"));","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"fullfatwasabi"},"content":"        Duke currentList \u003d new Duke();","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"fullfatwasabi"},"content":"        boolean away \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"fullfatwasabi"},"content":"        System.out.println(bar + \"\\n    Hello! I\u0027m SaDOS\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"fullfatwasabi"},"content":"                \"    What can I do for you?\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"fullfatwasabi"},"content":"                \"    Send \\\"bye\\\" to exit,\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"fullfatwasabi"},"content":"                \"    I won\u0027t hold it against you\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"fullfatwasabi"},"content":"                \"    Send \\\"help\\\" for help!\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"fullfatwasabi"},"content":"                bar);","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"fullfatwasabi"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"fullfatwasabi"},"content":"        do {","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"fullfatwasabi"},"content":"            String str \u003d sc.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"fullfatwasabi"},"content":"            if (str.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"fullfatwasabi"},"content":"                System.out.println(bar + \"\\n    Oh you\u0027ve got to go?\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"fullfatwasabi"},"content":"                        \"    Alright, I\u0027ll just be here...\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"fullfatwasabi"},"content":"                        \"    Waiting....\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"fullfatwasabi"},"content":"                        \"    You\u0027ll be back right?\\n\" +","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"fullfatwasabi"},"content":"                        bar);","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"fullfatwasabi"},"content":"                away \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"fullfatwasabi"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"fullfatwasabi"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"fullfatwasabi"},"content":"                    currentList.updateList(str);","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"fullfatwasabi"},"content":"                } catch (IncorrectFormatException e){","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"fullfatwasabi"},"content":"                    System.out.println(e);","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"fullfatwasabi"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2019-07-29"},{"lineNumber":126,"author":{"gitId":"fullfatwasabi"},"content":"        } while (!away);","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"fullfatwasabi"},"content":"    public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"fullfatwasabi"},"content":"        protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"fullfatwasabi"},"content":"        protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":132,"author":{"gitId":"fullfatwasabi"},"content":"        public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":133,"author":{"gitId":"fullfatwasabi"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"fullfatwasabi"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"fullfatwasabi"},"content":"        public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"fullfatwasabi"},"content":"            return ((isDone ? \"[X] \" : \"[ ] \") + this.description);","lastModifiedDate":"2021-08-19"},{"lineNumber":139,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":140,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":141,"author":{"gitId":"fullfatwasabi"},"content":"        public void markDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"fullfatwasabi"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":143,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":144,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":145,"author":{"gitId":"fullfatwasabi"},"content":"    public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":146,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":147,"author":{"gitId":"fullfatwasabi"},"content":"        protected String by;","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"fullfatwasabi"},"content":"        public Deadline(String description, String by) {","lastModifiedDate":"2021-08-19"},{"lineNumber":150,"author":{"gitId":"fullfatwasabi"},"content":"            super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"fullfatwasabi"},"content":"            this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":152,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":153,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":154,"author":{"gitId":"fullfatwasabi"},"content":"        @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":155,"author":{"gitId":"fullfatwasabi"},"content":"        public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":156,"author":{"gitId":"fullfatwasabi"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"fullfatwasabi"},"content":"    public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":160,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":161,"author":{"gitId":"fullfatwasabi"},"content":"        public Todo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":162,"author":{"gitId":"fullfatwasabi"},"content":"            super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":163,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":164,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":165,"author":{"gitId":"fullfatwasabi"},"content":"        @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":166,"author":{"gitId":"fullfatwasabi"},"content":"        public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":167,"author":{"gitId":"fullfatwasabi"},"content":"            return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":168,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":169,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":170,"author":{"gitId":"fullfatwasabi"},"content":"    public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":171,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":172,"author":{"gitId":"fullfatwasabi"},"content":"        protected String at;","lastModifiedDate":"2021-08-19"},{"lineNumber":173,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":174,"author":{"gitId":"fullfatwasabi"},"content":"        public Event(String description, String at) {","lastModifiedDate":"2021-08-19"},{"lineNumber":175,"author":{"gitId":"fullfatwasabi"},"content":"            super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":176,"author":{"gitId":"fullfatwasabi"},"content":"            this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":177,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":178,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":179,"author":{"gitId":"fullfatwasabi"},"content":"        @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":180,"author":{"gitId":"fullfatwasabi"},"content":"        public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":181,"author":{"gitId":"fullfatwasabi"},"content":"            return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":182,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":183,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":184,"author":{"gitId":"fullfatwasabi"},"content":"    public class IncorrectFormatException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":185,"author":{"gitId":"fullfatwasabi"},"content":"        public IncorrectFormatException(String errorMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":186,"author":{"gitId":"fullfatwasabi"},"content":"            super(\"\\n\" + bar + \"\\n    \" + errorMessage + \"\\n    Type \\\"help\\\" for help\\n\" + bar);","lastModifiedDate":"2021-08-19"},{"lineNumber":187,"author":{"gitId":"fullfatwasabi"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":188,"author":{"gitId":"fullfatwasabi"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"fullfatwasabi":185,"-":4}},{"path":"src/main/text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"fullfatwasabi"},"content":"@ECHO OFF","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"fullfatwasabi"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"fullfatwasabi"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"fullfatwasabi"},"content":"REM delete output from previous run","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"fullfatwasabi"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"fullfatwasabi"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"fullfatwasabi"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"fullfatwasabi"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"fullfatwasabi"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"fullfatwasabi"},"content":"    exit /b 1","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"fullfatwasabi"},"content":")","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"fullfatwasabi"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"fullfatwasabi"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"fullfatwasabi"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"fullfatwasabi"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"fullfatwasabi"},"content":"REM compare the output to the expected output","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"fullfatwasabi"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"fullfatwasabi":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"fullfatwasabi"},"content":"add read book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"fullfatwasabi"},"content":"TODO read book","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"fullfatwasabi"},"content":"/done 0","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"fullfatwasabi"},"content":"/done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"fullfatwasabi"},"content":"deadline arsnheiar /by","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"fullfatwasabi"},"content":"event arihtars /At tmr","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"fullfatwasabi"},"content":"/delete a","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"fullfatwasabi"},"content":"/delete 1","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"fullfatwasabi":8}}]
