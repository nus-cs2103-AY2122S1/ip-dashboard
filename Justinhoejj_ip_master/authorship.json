[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":" * A personal assistance bot that tracks Events, Dealines, and todos","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":" * which can be completed or deleted. A user sends instructions to Duke","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":" * by typing command sentences.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"     * Constructor initialise storage, task list and ui instances to be used","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"     * when duke is running.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"    public Duke() {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"     * Greets user once and attempt to load data from local storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"     * Subsequently, an infinite loop is formed to prompt user for input","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"     * and response printed according to user inputs. Function terminates when","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"     * \"bye\" command detected.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"    protected void run() {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"            taskList.readFile(storage.loadDataFile());","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"            ui.respond(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"        ui.greet();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"        while (!exit) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"Justinhoejj"},"content":"                Command c \u003d Parser.parseInputs(ui.nextCommand());","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Justinhoejj"},"content":"                c.execute(storage, taskList, ui);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Justinhoejj"},"content":"                exit \u003d c.isExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Justinhoejj"},"content":"                ui.promptNext();","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Justinhoejj"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Justinhoejj"},"content":"                ui.respond(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Justinhoejj"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"Justinhoejj"},"content":"        ui.respond(\"Ooooh yeah! Can do!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Justinhoejj":55,"-":2}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"public class Main {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":7}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":" * Add task to task list. A Task can be of type Event, Deadline or Todo.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"    Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"     * Constructs an command that adds a task to the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskType type of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"     * @param name task name.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"     * @param dateTime date time information of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"    public AddCommand(TaskType taskType, String name, LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"            this.task \u003d new Deadline(false, name, dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"        case EVENT:","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"            this.task \u003d new Event(false, name, dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"        case TODO:","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"            this.task \u003d new Todo(false, name);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"     * Add the appropriate task to the task list and display confirmation response to","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"     * the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"     * @param storage storage instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskList task list instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Justinhoejj"},"content":"     * @param ui ui instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Justinhoejj"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Justinhoejj"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Justinhoejj"},"content":"        storage.writeToDisk(taskList.compileTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Justinhoejj"},"content":"        ui.respond(","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Justinhoejj"},"content":"            String.format(\"Caan Do!\\n  added: %s\\nLook at me! %d tasks in the list now!\",","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Justinhoejj"},"content":"                this.task,","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Justinhoejj"},"content":"                taskList.getSize())","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Justinhoejj"},"content":"        );","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":60}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":" * Abstract class comprising information required to change the state of duke when executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"     * Abstract method that performs a series of action to change the state of Duke","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"     * according to the command type.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"     * @param storage storage instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskList task list instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"     * @param ui ui instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"     * @throws DukeException command cannot be executed successfully.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"    public abstract void execute(Storage storage, TaskList taskList, Ui ui) throws DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"     * Verify if the user has instructed the duke to exit.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"     * @return is the command an exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":31}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":" * Remove a task from the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"    private final int taskNumber;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"     * Constructs a command that deletes a task from the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskNumber task number to be deleted","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"     * Delete tasks associated to task number. Task number is equivalent to the index","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"     * of the task in task list + 1.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"     * @param storage storage instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskList task list instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"     * @param ui ui instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"     * @throws DukeException task number is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"            Task task \u003d taskList.deleteTask(taskNumber);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"            storage.writeToDisk(taskList.compileTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"            String response \u003d String","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"                    .format(\"Ooh yeah! Task %d deleted:\\n  %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"                            taskNumber,","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"                            task,","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"                            taskList.getSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"            ui.respond(response);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(String.format(\"Task number %d invalid.\", taskNumber));","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":49}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":" * Mark a task in the task list as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"    private final int taskNumber;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"     * Construct a command that marks a task as complete.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskNumber task to be marked as complete.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"    public DoneCommand(int taskNumber) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"     * Marks tasks associated to task number. Task number is equivalent to the index","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"     * of the task in task list + 1.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"     * @param storage storage instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskList task list instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"     * @param ui ui instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"     * @throws DukeException task number is invalid","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"            Task task \u003d taskList.markAsDone(this.taskNumber);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"            storage.writeToDisk(taskList.compileTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"            String response \u003d String.format(\"Ooh yeah! Task %d marked as done:\\n  %s\",","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"                    taskNumber,","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"                    task);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"            ui.respond(response);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(String.format(\"Task number %d invalid.\", taskNumber));","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":46}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":" * Set program state to exit.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"     * Indicates if the command is an exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"     * @return true","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"     * Save task list data to local storage","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"     * @param storage storage instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskList task list instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"     * @param ui ui instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"            storage.writeToDisk(taskList.compileTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":34}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"    private final String searchTerm;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"    public FindCommand(String searchTerm) {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"        Task[] tasks \u003d taskList.findTasksWithName(this.searchTerm);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"        if (tasks.length \u003c 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"            ui.respond(String.format(\"No task found with search term %s\", this.searchTerm));","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"            ui.findResponse(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":24}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":" * Lists all the task in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"     * Retrieves all task in task list, attach task numbers and print to screen.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"     * @param storage storage instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskList task list instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"     * @param ui ui instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"    public void execute(Storage storage, TaskList taskList, Ui ui) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"        ui.respond(","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"                String.format(\"Ooh yeah! Here are your %d tasks\\n%s\",","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"                    taskList.getSize(),","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"                    taskList.list())","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"        );","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":26}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":" * Deadline is a task that should be completed by a specific time.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"     * Constructs task with a deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"     * @param done task is completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"     * @param name task name.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"     * @param dateTime deadline due date.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"    public Deadline(boolean done, String name, LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"        super(done, name);","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"     * Turn Deadline into a string for saving to memory.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"     * @return concise string representation of Deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"    public String encode() {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"        return String.format(\"D|%s|%s\", super.encode(), dateTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"     * Turn task into a human readable string form.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"     * @return string representation of Deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.dateTime.format(dateTimeFormatter));","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Justinhoejj":44}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":" * Event is a task that represents that should be done at a specific time.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"     * Construct event with date time.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"     * @param done task is completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskName name of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"     * @param dateTime at what time the event is happening.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"    public Event(boolean done, String taskName, LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"        super(done, taskName);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"     * Turn Event into a string for saving to memory.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"     * @return concise string representation of Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"    public String encode() {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"        return String.format(\"E|%s|%s\", super.encode(), dateTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"     * Turn task into a human readable string form.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"     * @return string representation of Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.dateTime.format(dateTimeFormatter));","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Justinhoejj":44}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":" * Abstract class task contains fundamental attributes such as task name","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":" * and whether task is completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"    private final String taskName;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"    private boolean done;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"     * Task constructor initialises Task with completed status and","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"     * task name.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"     * @param done task is completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskName name of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"    public Task(boolean done, String taskName) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"        this.done \u003d done;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"        return taskName;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"     * Sets done to true.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"    protected void markAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"        this.done \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"     * Transform a task into a concise string that contains information about the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"     * @return concise string representation of task to be saved into memory","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"    protected String encode() {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"        return done","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"            ? String.format(\"1|%s\", this.taskName)","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"            : String.format(\"0|%s\", this.taskName);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"     * Turn task into a human readable string form.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Justinhoejj"},"content":"     * @return human readable string representation of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"Justinhoejj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"Justinhoejj"},"content":"        return done","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"Justinhoejj"},"content":"            ? String.format(\"[X] %s\", this.taskName)","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"Justinhoejj"},"content":"            : String.format(\"[ ] %s\", this.taskName);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Justinhoejj":57}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"import java.util.LinkedList;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":" * Manipulates and stores tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"    private final LinkedList\u003cTask\u003e tasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"     * Retrieve value from a file on local storage to initialise a copy","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"     * of all the tasks saved in the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"     * @param file file which stores data about task from previous run session.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"     * @throws DukeException file cannot be found or read.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"    public void readFile(File file) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"                String taskCode \u003d s.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"                tasks.add(decodeTask(taskCode));","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"Unable initialise task list from file memory\");","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"     * Instantiates a task list to store tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"     * Determines the total number of tasks in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Justinhoejj"},"content":"     * @return number of task in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Justinhoejj"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Justinhoejj"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Justinhoejj"},"content":"     * Interprets string form of task saved in memory and convert them to","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Justinhoejj"},"content":"     * Task objects.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskCode string representation of a task and its attributes in memory.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Justinhoejj"},"content":"     * @return Task as an object with its respective attributes.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Justinhoejj"},"content":"    protected Task decodeTask(String taskCode) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"Justinhoejj"},"content":"        String[] taskDetails \u003d taskCode.split(\"\\\\|\");","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"Justinhoejj"},"content":"        String taskType \u003d taskDetails[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"Justinhoejj"},"content":"        boolean done \u003d taskDetails[1].equals(\"1\");","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"Justinhoejj"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"Justinhoejj"},"content":"        case \"T\":","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"Justinhoejj"},"content":"            return new Todo(done, taskDetails[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"Justinhoejj"},"content":"        case \"E\": {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"Justinhoejj"},"content":"            String info \u003d taskDetails[3];","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"Justinhoejj"},"content":"            return new Event(done, taskDetails[2], LocalDateTime.parse(info));","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"Justinhoejj"},"content":"        case \"D\": {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"Justinhoejj"},"content":"            String info \u003d taskDetails[3];","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"Justinhoejj"},"content":"            return new Deadline(done, taskDetails[2], LocalDateTime.parse(info));","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"Justinhoejj"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"Justinhoejj"},"content":"            return null;","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"Justinhoejj"},"content":"     * Lists all task in the task list and number them from top to bottom.","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"Justinhoejj"},"content":"     * @return string of all tasks in the task list with a task number","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"Justinhoejj"},"content":"    public String list() {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"Justinhoejj"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"Justinhoejj"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"Justinhoejj"},"content":"            result.append(String.format(\"%d. %s\\n\", i + 1, tasks.get(i).toString()));","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"Justinhoejj"},"content":"        return result.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"Justinhoejj"},"content":"     * Marks task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskNumber first task has task number of 1.","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"Justinhoejj"},"content":"     * @return task that was marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"Justinhoejj"},"content":"    public Task markAsDone(int taskNumber) {","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"Justinhoejj"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"Justinhoejj"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"Justinhoejj"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"Justinhoejj"},"content":"     * Adds task to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"Justinhoejj"},"content":"     * @param task task to be added to the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"Justinhoejj"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"Justinhoejj"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"Justinhoejj"},"content":"     * Removes task from the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskNumber first task has task number of 1.","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"Justinhoejj"},"content":"     * @return task that was removed.","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"Justinhoejj"},"content":"    public Task deleteTask(int taskNumber) {","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"Justinhoejj"},"content":"        return tasks.remove(taskNumber - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"Justinhoejj"},"content":"     * Encodes all tasks in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"Justinhoejj"},"content":"     * @return string comprising of all tasks in its encoded form.","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"Justinhoejj"},"content":"    public String compileTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"Justinhoejj"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"Justinhoejj"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"Justinhoejj"},"content":"            result.append(String.format(\"%s\\n\", task.encode()));","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"Justinhoejj"},"content":"        return result.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"Justinhoejj"},"content":"    public Task[] findTasksWithName(String searchTerm) {","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"Justinhoejj"},"content":"        return tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"Justinhoejj"},"content":"                .stream()","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"Justinhoejj"},"content":"                .parallel()","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"Justinhoejj"},"content":"                .filter(task -\u003e task.getTaskName().contains(searchTerm))","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"Justinhoejj"},"content":"                .toArray(Task[]::new);","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":144}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"    DEADLINE,","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"    EVENT,","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"    TODO,","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":7}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":" * Todo is a  task that can be completed without any time constraint.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"    public Todo(boolean done, String taskName) {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"        super(done, taskName);","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"     * Turn todo into a string for saving to memory.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"     * @return concise string representation of todo.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"    public String encode() {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"        return String.format(\"T|%s\", super.encode());","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"     * Turn task into a human readable string form.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"     * @return string representation of todo.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Justinhoejj":31}},{"path":"src/main/java/duke/util/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":" * Exception class for exceptions specific to duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Justinhoejj":10}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import duke.command.*;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":" * Makes sense of user inputs.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"     * Transform user input into Command that can be executed by duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"     * @param userInput command sentence.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"     * @return A Command that matches the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"     * @throws DukeException user input does not match any known format.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"    public static Command parseInputs(String userInput) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"            int indexOfSpace \u003d userInput.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"            String firstWord \u003d indexOfSpace \u003d\u003d -1","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"                    ? userInput","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"                    : userInput.substring(0, indexOfSpace);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"            switch (firstWord) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"                return new ExitCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"            case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"                return new ListCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"            case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"                return getFindCommand(userInput, indexOfSpace);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"            case \"done\":","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"                return getDoneCommand(userInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"                return getDeleteCommand(userInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"                return getAddDeadlineCommand(userInput, indexOfSpace);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"            case \"event\":","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"                return getAddEventCommand(userInput, indexOfSpace);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"                return getAddTodoCommand(userInput, indexOfSpace);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"            default:","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"                throw new DukeException(\"Say something I can understand!! \u003e:(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Justinhoejj"},"content":"    private static FindCommand getFindCommand(String userInput, int indexOfSpace) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"Justinhoejj"},"content":"        if (userInput.matches(\"^find .+\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"Justinhoejj"},"content":"            String searchTerm \u003d userInput.substring(indexOfSpace + 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"Justinhoejj"},"content":"            return new FindCommand(searchTerm);","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"Justinhoejj"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"\u003e:( include search term after find:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Justinhoejj"},"content":"                    + \"find \u003csome search term\u003e\");","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"Justinhoejj"},"content":"    private static AddCommand getAddTodoCommand(String userInput, int indexOfSpace) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"Justinhoejj"},"content":"        if (userInput.matches(\"^todo .+\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"Justinhoejj"},"content":"            String name \u003d userInput.substring(indexOfSpace + 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"Justinhoejj"},"content":"            return new AddCommand(TaskType.TODO, name, null);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"Justinhoejj"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"\u003e:( include task name after todo:\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"Justinhoejj"},"content":"                    \"todo \u003csome task name\u003e\");","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"Justinhoejj"},"content":"    private static Command getAddEventCommand(String userInput, int indexOfSpace) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"Justinhoejj"},"content":"        if (userInput.matches(\"^event .+ /at .+\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"Justinhoejj"},"content":"            String[] deadlineDetails \u003d userInput.substring(indexOfSpace + 1).split(\" /at \");","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"Justinhoejj"},"content":"            String name \u003d deadlineDetails[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"Justinhoejj"},"content":"            String dateTime \u003d deadlineDetails[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"Justinhoejj"},"content":"            return new AddCommand(TaskType.EVENT, name, parseDate(dateTime));","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"Justinhoejj"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"\u003e:( Follow format below:\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"Justinhoejj"},"content":"                    \"deadline \u003ctaskname...\u003e /at \u003cdd-mm-yyyy HHmm\u003e\");","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"Justinhoejj"},"content":"    private static Command getAddDeadlineCommand(String userInput, int indexOfSpace) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"Justinhoejj"},"content":"        if (userInput.matches(\"^deadline .+ /by .+\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"Justinhoejj"},"content":"            String[] deadlineDetails \u003d userInput.substring(indexOfSpace + 1).split(\" /by \");","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"Justinhoejj"},"content":"            String name \u003d deadlineDetails[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"Justinhoejj"},"content":"            String dateTime \u003d deadlineDetails[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"Justinhoejj"},"content":"            return new AddCommand(TaskType.DEADLINE, name, parseDate(dateTime));","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"Justinhoejj"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"\u003e:( Follow format below:\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"Justinhoejj"},"content":"                    \"deadline \u003ctaskname...\u003e /by \u003cdd-mm-yyyy HHmm\u003e\");","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"Justinhoejj"},"content":"    private static DeleteCommand getDeleteCommand(String userInput) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"Justinhoejj"},"content":"        if (userInput.matches(\"^delete [0-9]+\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"Justinhoejj"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"Justinhoejj"},"content":"            return new DeleteCommand(taskNumber);","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"Justinhoejj"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"\u003e:( follow format below:\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"Justinhoejj"},"content":"                    \"done \u003cnumber between 1 and 100\u003e\");","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"Justinhoejj"},"content":"    private static DoneCommand getDoneCommand(String userInput) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"Justinhoejj"},"content":"        if (userInput.matches(\"^done [0-9]+\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"Justinhoejj"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"Justinhoejj"},"content":"            return new DoneCommand(taskNumber);","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"Justinhoejj"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"\u003e:( follow format below:\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"Justinhoejj"},"content":"                    \"done \u003cnumber between 1 and 100\u003e\");","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"Justinhoejj"},"content":"    private static LocalDateTime parseDate(String string) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"Justinhoejj"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"Justinhoejj"},"content":"            return LocalDateTime.parse(string, dateTimeFormatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"Justinhoejj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"\u003e:( follow datetime format of dd-mm-yyyy HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":123}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":" * Reads and write memory to local storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"    String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"     * Initiates a storage instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"    public Storage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"     * Retrieves file from local storage. If file does not exist create file in local storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"     * @return a File from local storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"     * @throws DukeException if error encountered when opening or creating file on local storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"    public File loadDataFile() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"            if (!f.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"                File dir \u003d new File(\"./data\");","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"                if (dir.mkdir() \u0026\u0026 f.createNewFile()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"                    return f;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"            return f;","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"Unable to load data file\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"     * Writes duke data to local storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"     * @throws DukeException if error encountered when writing to data file on local storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Justinhoejj"},"content":"    public void writeToDisk(String data) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Justinhoejj"},"content":"            FileWriter fw \u003d new FileWriter(\"./data/duke.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Justinhoejj"},"content":"            fw.write(data);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Justinhoejj"},"content":"            fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Justinhoejj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Justinhoejj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"Unable to write to disk :(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":57}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":" * A medium between the user and Duke to communicate.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":" * Scans for user inputs and format Duke\u0027s response before printing to screen.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"    private final Scanner scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"     * Instantiates a ui instance to be used for receiving user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"    public Ui() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"     * Format message and print to screen.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"     * @param message message to be displayed.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"    public void respond(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"        System.out.println(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dDuke says\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"     * Format response for find command.","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"     * @param tasks array of task to be printed.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"    public void findResponse(Task[] tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"        System.out.println(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dDuke says\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"        System.out.println(\"Found \" + tasks.length + \" tasks\");","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"            System.out.println(task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"     * Retrieves next line of String.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Justinhoejj"},"content":"     * @return User\u0027s command sentence as a String.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Justinhoejj"},"content":"    public String nextCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Justinhoejj"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Justinhoejj"},"content":"     * Prints greetings.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Justinhoejj"},"content":"    public void greet() {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Justinhoejj"},"content":"        System.out.println(\"Look at me! I\u0027m DUKE\\n\"  + \"How can I help?\");","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"Justinhoejj"},"content":"     * Prints a prompt for user to send next command.","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"Justinhoejj"},"content":"    public void promptNext() {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"Justinhoejj"},"content":"        System.out.print(\"Whats next?\");","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":66}},{"path":"src/test/java/duke/command/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"public class DoneCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"    public void executeDoneCommand_invalidTaskNumber_throwDukeException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"        int taskNumber \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"            TaskList tl \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"            tl.addTask(new Todo(false,\"test\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"            Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"            new DoneCommand(taskNumber).execute(storage, tl, ui);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"            assertEquals(String.format(\"Task number %d invalid.\", taskNumber), e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":27}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"    public void getSizeTest_requestSize_returnsSizeOfTaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"        tl.addTask(new Todo(false, \"Test todo\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"        assertEquals(1, tl.getSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":13}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"    public void testParser_invalidCommand_dukeExceptionThrown(){","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"            Parser.parseInputs(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"            assertEquals(\"Say something I can understand!! \u003e:(\", e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"done","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"done 0","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"deadline return book /by 12 Aug","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"event visit library /at 4pm tuesday","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"delete 2","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"delete a","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"delete 0","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Justinhoejj":13}}]
