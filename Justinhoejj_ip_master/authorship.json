[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Justinhoejj"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Justinhoejj":16,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":" * A personal assistance bot that tracks Events, Dealines, and todos","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":" * which can be completed or deleted. A user sends instructions to Duke","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":" * by typing command sentences.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"    protected Storage storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"    protected TaskList taskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"     * Constructor initialise storage, task list and ui instances to be used","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"     * when duke is running.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"    public Duke() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"     * Gets a duke command based on user input message.","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"     * @param input user instructions for duke in form of string.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"     * @return a command depending on user input","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"    Command getCommand(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"        return Parser.parseInputs(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"     * Greets user once and attempt to load data from local storage.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"     * and response printed according to user inputs.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"     * @return A string to indicate if duke has been initialised.","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"    protected String initDuke() {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"            taskList.readFile(storage.loadDataFile());","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"            return \"How can I help?\";","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"Justinhoejj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Justinhoejj"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Justinhoejj":49,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"     * Launch javafx application.","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"     * @param args command line arguments passed into application.","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Justinhoejj":14}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"     * Starts application and initialise GUI display.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"     * @param stage the primary stage that will be embedded in the GUI display.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":36}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import java.util.concurrent.CompletableFuture;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DialogBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"                DialogBox.getDukeDialog(d.initDuke(), dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"Justinhoejj"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"Justinhoejj"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"Justinhoejj"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"Justinhoejj"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"Justinhoejj"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"Justinhoejj"},"content":"        String response;","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"Justinhoejj"},"content":"            Command command \u003d duke.getCommand(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"Justinhoejj"},"content":"            assert command !\u003d null : \"Why is command null?!\";","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"Justinhoejj"},"content":"            if (command.isExit()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"Justinhoejj"},"content":"                CompletableFuture.delayedExecutor(3, TimeUnit.SECONDS).execute(Platform::exit);","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"Justinhoejj"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"Justinhoejj"},"content":"            response \u003d command.execute(this.duke.storage, this.duke.taskList);","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"Justinhoejj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"Justinhoejj"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"Justinhoejj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"Justinhoejj"},"content":"                DialogBox.getUserDialog(\"You said: \\n\" + input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"Justinhoejj"},"content":"                DialogBox.getDukeDialog(\"Duke says: \\n\" + response + \"\\n\" , dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"Justinhoejj"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"Justinhoejj"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Justinhoejj":72}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":" * Add task to task list. A Task can be of type Event, Deadline or Todo.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"    private Task task;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"     * Constructs an command that adds a task to the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskType type of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"     * @param name task name.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"     * @param dateTime date time information of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"    public AddCommand(TaskType taskType, String name, LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"            this.task \u003d new Deadline(false, name, dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"        case EVENT:","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"            this.task \u003d new Event(false, name, dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"        default:","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"            this.task \u003d new Todo(false, name);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"     * Add the appropriate task to the task list and return a string","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"     *  confirmation response.","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"     * @param storage storage instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskList task list instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Justinhoejj"},"content":"     * @return String of confirmation message to indicate task added.","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Justinhoejj"},"content":"    public String execute(Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"Justinhoejj"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Justinhoejj"},"content":"        storage.writeToDisk(taskList.compileTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Justinhoejj"},"content":"        return String.format(\"Caan Do!\\n  added: %s\\nLook at me! %d tasks in the list now!\",","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"Justinhoejj"},"content":"                this.task,","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Justinhoejj"},"content":"                taskList.getSize());","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":57}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":" * Abstract class comprising information required to change the state of duke when executed.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"     * Abstract method that performs a series of action to change the state of Duke","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"     * and returns a message depending on the command type.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"     * @param storage storage instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskList task list instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"     * @return String to provide details on the execution process.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"     * @throws DukeException command cannot be executed successfully.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"    public abstract String execute(Storage storage, TaskList taskList) throws DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"     * Verify if the user has instructed the duke to exit.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"     * @return is the command an exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":30}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":" *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":" * Remove a task from the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"    private final int taskNumber;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"     * Constructs a command that deletes a task from the task list.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskNumber task number to be deleted","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"        assert taskNumber \u003e 0 : \"Task number should be greater than 0\";","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"     * Delete tasks associated to task number. Task number is equivalent to the index","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"     * of the task in task list + 1.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"     * @param storage storage instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskList task list instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"     * @return String on whether task is deleted, or wrong format entered.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"     * @throws DukeException task number is invalid.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"    public String execute(Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"            Task task \u003d taskList.deleteTask(taskNumber);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"            storage.writeToDisk(taskList.compileTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"            return String","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"                    .format(\"Ooh yeah! Task %d deleted:\\n  %s\\nNow you have %d tasks in the list.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"                            taskNumber,","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"                            task,","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"                            taskList.getSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(String.format(\"Task number %d invalid.\", taskNumber));","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":48}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":" * Mark a task in the task list as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"    private final int taskNumber;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"     * Construct a command that marks a task as complete.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskNumber task to be marked as complete.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"    public DoneCommand(int taskNumber) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"        assert taskNumber \u003e 0 : \"Task number should be greater than 0\";","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"     * Marks tasks associated to task number. Task number is equivalent to the index","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"     * of the task in task list + 1.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"     * @param storage storage instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskList task list instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"     * @return String to indicate whether task is mark completed,or wrong format entered.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"     * @throws DukeException task number is invalid.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"    public String execute(Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"            Task task \u003d taskList.markAsDone(this.taskNumber);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"            storage.writeToDisk(taskList.compileTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"            return String.format(\"Ooh yeah! Task %d marked as done:\\n  %s\",","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"                    taskNumber,","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"                    task);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(String.format(\"Task number %d invalid.\", taskNumber));","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":45}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":" * Set program state to exit.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"     * Indicates if the command is an exit command.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"     * @return true","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"     * Save task list data to local storage","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"     * @param storage storage instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskList task list instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"     * @return message to confirm command execution.","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"     * @throws DukeException on error writing to disk.","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"    public String execute(Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"        storage.writeToDisk(taskList.compileTasks());","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"        return \"Ooooh yeah! Can do!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":35}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"    private final String searchTerm;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"    public FindCommand(String searchTerm) {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"     * Finds all task names that contains of search term.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"     * @param storage storage instance initialised when duke is created.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskList task list instance initialised when duke is created.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"     * @return String to indicate if tasks has been searched successfully.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"        Task[] tasks \u003d taskList.findTasksWithName(this.searchTerm);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"        if (tasks.length \u003c 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"            return String.format(\"No task found with search term %s\", this.searchTerm);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"            StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"            res.append(\"Found \").append(tasks.length).append(\" tasks\");","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"                res.append(\"\\n\").append(task.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"            return res.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":35}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":" * Lists all the task in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"     * Retrieves all task in task list, attach task numbers and print to screen.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"     * @param storage storage instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskList task list instance initialised when duke is created.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"     * @return String message to indicate if task listed out successfully.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"    public String execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"        return String.format(\"Ooh yeah! Here are your %d tasks\\n%s\",","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"                    taskList.getSize(),","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"                    taskList.list());","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":23}},{"path":"src/main/java/duke/command/UpdateDateTimeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":" * Updates the date time attribute of a task.","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"public class UpdateDateTimeCommand extends Command {","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"    private int taskNumber;","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"     * Constructs a command to update date time of a task.","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskNumber task number to be updated.","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"     * @param dateTime new date time value for the task.","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"    public UpdateDateTimeCommand(int taskNumber, LocalDateTime dateTime) {","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"     * Changes the dateTime of a task in the task list.","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"     * @param storage storage instance initialised when duke is created.","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskList task list instance initialised when duke is created.","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"     * @return String to indicate if command executed successfully.","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"     * @throws DukeException if datetime attribute does not exist.","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"    public String execute(Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"            Task task \u003d taskList.updateTaskDateTime(this.taskNumber, this.dateTime);","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"            storage.writeToDisk(taskList.compileTasks());","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"            return String.format(\"OOooo YEAH! task updated\\n  %s\", task);","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(String.format(\"Task number %d invalid.\", taskNumber));","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"Justinhoejj":46}},{"path":"src/main/java/duke/command/UpdateNameCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"/** Edit task name of the task. */","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"public class UpdateNameCommand extends Command {","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"    private int taskNumber;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"    private String newName;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"     * Constructs an command to update task name.","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskNumber task to be updated.","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"     * @param newName name for task to be updated to.","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"    public UpdateNameCommand(int taskNumber, String newName) {","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"        this.newName \u003d newName;","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"     * Changes the name of a task in the task list.","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"     * @param storage storage instance initialised when duke is created.","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskList task list instance initialised when duke is created.","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"     * @return String to indicated if command executed successfully.","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"     * @throws DukeException if task number is invalid.","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"    public String execute(Storage storage, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"            Task task \u003d taskList.updateTaskName(this.taskNumber, this.newName);","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"            storage.writeToDisk(taskList.compileTasks());","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"            return String.format(\"OOooo YEAH! task updated\\n  %s\", task);","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(String.format(\"Task number %d invalid.\", taskNumber));","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"Justinhoejj":41}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":" * Deadline is a task that should be completed by a specific time.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"    /** Datetime deadline of task. */","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"     * Constructs task with a deadline.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"     * @param done task is completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"     * @param name task name.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"     * @param dateTime deadline due date.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"    public Deadline(boolean done, String name, LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"        super(done, name);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"     * Turns Deadline into a string for saving to memory.","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"     * @return concise string representation of Deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"    public String encode() {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"        return String.format(\"D|%s|%s\", super.encode(), dateTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"     * Turns task into a human readable string form.","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"     * @return string representation of Deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), this.dateTime.format(dateTimeFormatter));","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"Justinhoejj"},"content":"     * Sets new Deadline.","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"Justinhoejj"},"content":"     * @param dateTime date time value to be changed to.","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"Justinhoejj"},"content":"    public void setDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"Justinhoejj"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Justinhoejj":55}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":" * Event is a task that represents that should be done at a specific time.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"    /** Datetime of event taking place. */","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"     * Construct event with date time.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"     * @param done task is completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskName name of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"     * @param dateTime at what time the event is happening.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"    public Event(boolean done, String taskName, LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"        super(done, taskName);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"     * Turn Event into a string for saving to memory.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"     * @return concise string representation of Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"    public String encode() {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"        return String.format(\"E|%s|%s\", super.encode(), dateTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"     * Turn task into a human readable string form.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"     * @return string representation of Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), this.dateTime.format(dateTimeFormatter));","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"Justinhoejj"},"content":"     * Change datetime value of Event.","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"Justinhoejj"},"content":"     * @param dateTime date time value to be changed to.","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"Justinhoejj"},"content":"    public void setDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"Justinhoejj"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Justinhoejj":55}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":" * Abstract class task contains fundamental attributes such as task name","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":" * and whether task is completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"    /** Task name */","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"    private String taskName;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"    /** Indicates if task is complete*/","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"    private boolean done;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"     * Task constructor initialises Task with completed status and","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"     * task name.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"     * @param done task is completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskName name of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"    public Task(boolean done, String taskName) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"        this.done \u003d done;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"        return taskName;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"     * Sets done to true.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"    protected void markAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"        this.done \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"     * Transform a task into a concise string that contains information about the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"     * @return concise string representation of task to be saved into memory","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"    protected String encode() {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"        return done","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"Justinhoejj"},"content":"            ? String.format(\"1|%s\", this.taskName)","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"Justinhoejj"},"content":"            : String.format(\"0|%s\", this.taskName);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Justinhoejj"},"content":"     * Turn task into a human readable string form.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Justinhoejj"},"content":"     * @return human readable string representation of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"Justinhoejj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"Justinhoejj"},"content":"        return done","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"Justinhoejj"},"content":"            ? String.format(\"[X] %s\", this.taskName)","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"Justinhoejj"},"content":"            : String.format(\"[ ] %s\", this.taskName);","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"Justinhoejj"},"content":"     * Changes the task name.","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"Justinhoejj"},"content":"     * @param newName name to be changed to.","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"Justinhoejj"},"content":"    public void setName(String newName) {","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"Justinhoejj"},"content":"        this.taskName \u003d newName;","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"Justinhoejj"},"content":"     * Changes the datetime information of the task if possible.","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"Justinhoejj"},"content":"     * @param dateTime name to be changed to.","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"Justinhoejj"},"content":"     * @throws DukeException if task is a has no date time attribute.","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"Justinhoejj"},"content":"    public abstract void setDateTime(LocalDateTime dateTime) throws DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Justinhoejj":79}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import java.util.LinkedList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":" * Manipulates and stores tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"    private static final int TASK_TYPE \u003d 0;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"    private static final int TASK_DONE \u003d 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"    private static final int TASK_NAME \u003d 2;","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"    private static final int TASK_DateTime \u003d 3;","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"    private final LinkedList\u003cTask\u003e tasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"     * Instantiates a task list to store tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"     * Retrieve value from a file on local storage to initialise a copy","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"     * of all the tasks saved in the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"     * @param file file which stores data about task from previous run session.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"     * @throws DukeException file cannot be found or read.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"    public void readFile(File file) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"                String taskCode \u003d s.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"                tasks.add(decodeTask(taskCode));","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"Unable initialise task list from file memory\");","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Justinhoejj"},"content":"     * Determines the total number of tasks in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Justinhoejj"},"content":"     * @return number of task in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Justinhoejj"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Justinhoejj"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"Justinhoejj"},"content":"     * Interprets string form of task saved in memory and convert them to","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Justinhoejj"},"content":"     * Task objects.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskCode string representation of a task and its attributes in memory.","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"Justinhoejj"},"content":"     * @return Task as an object with its respective attributes.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"Justinhoejj"},"content":"    protected Task decodeTask(String taskCode) {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"Justinhoejj"},"content":"        String[] taskDetails \u003d taskCode.split(\"\\\\|\");","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"Justinhoejj"},"content":"        String taskType \u003d taskDetails[TASK_TYPE];","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"Justinhoejj"},"content":"        String dateTimeInfo;","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"Justinhoejj"},"content":"        boolean done \u003d taskDetails[TASK_DONE].equals(\"1\");","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"Justinhoejj"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"Justinhoejj"},"content":"        case \"T\":","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"Justinhoejj"},"content":"            return new Todo(done, taskDetails[TASK_NAME]);","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"Justinhoejj"},"content":"        case \"E\":","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"Justinhoejj"},"content":"            dateTimeInfo \u003d taskDetails[TASK_DateTime];","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"Justinhoejj"},"content":"            return new Event(done, taskDetails[TASK_NAME], LocalDateTime.parse(dateTimeInfo));","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"Justinhoejj"},"content":"        case \"D\":","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"Justinhoejj"},"content":"            dateTimeInfo \u003d taskDetails[TASK_DateTime];","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"Justinhoejj"},"content":"            return new Deadline(done, taskDetails[TASK_NAME], LocalDateTime.parse(dateTimeInfo));","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"Justinhoejj"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"Justinhoejj"},"content":"            return null;","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"Justinhoejj"},"content":"     * Lists all task in the task list and number them from top to bottom.","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"Justinhoejj"},"content":"     * @return string of all tasks in the task list with a task number","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"Justinhoejj"},"content":"    public String list() {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"Justinhoejj"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"Justinhoejj"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"Justinhoejj"},"content":"            result.append(String.format(\"%d. %s\\n\", i + 1, tasks.get(i).toString()));","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"Justinhoejj"},"content":"        return result.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"Justinhoejj"},"content":"     * Marks task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskNumber first task has task number of 1.","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"Justinhoejj"},"content":"     * @return task that was marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"Justinhoejj"},"content":"    public Task markAsDone(int taskNumber) {","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"Justinhoejj"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"Justinhoejj"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"Justinhoejj"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"Justinhoejj"},"content":"     * Adds task to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"Justinhoejj"},"content":"     * @param task task to be added to the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"Justinhoejj"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"Justinhoejj"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"Justinhoejj"},"content":"     * Removes task from the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskNumber first task has task number of 1.","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"Justinhoejj"},"content":"     * @return task that was removed.","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"Justinhoejj"},"content":"    public Task deleteTask(int taskNumber) {","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"Justinhoejj"},"content":"        return tasks.remove(taskNumber - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"Justinhoejj"},"content":"     * Encodes all tasks in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"Justinhoejj"},"content":"     * @return string comprising of all tasks in its encoded form.","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"Justinhoejj"},"content":"    public String compileTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"Justinhoejj"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"Justinhoejj"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"Justinhoejj"},"content":"            result.append(String.format(\"%s\\n\", task.encode()));","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"Justinhoejj"},"content":"        return result.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":142,"author":{"gitId":"Justinhoejj"},"content":"     * Filter tasks in the task list with name that includes the search term.","lastModifiedDate":"2021-08-30"},{"lineNumber":143,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":144,"author":{"gitId":"Justinhoejj"},"content":"     * @param searchTerm search term that user wants to extract.","lastModifiedDate":"2021-09-01"},{"lineNumber":145,"author":{"gitId":"Justinhoejj"},"content":"     * @return Task array comprising of all tasks with search term in task name.","lastModifiedDate":"2021-08-30"},{"lineNumber":146,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":147,"author":{"gitId":"Justinhoejj"},"content":"    public Task[] findTasksWithName(String searchTerm) {","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"Justinhoejj"},"content":"        return tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"Justinhoejj"},"content":"                .stream()","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"Justinhoejj"},"content":"                .parallel()","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"Justinhoejj"},"content":"                .filter(task -\u003e task.getTaskName().contains(searchTerm))","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"Justinhoejj"},"content":"                .toArray(Task[]::new);","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":155,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":156,"author":{"gitId":"Justinhoejj"},"content":"     * Updates the task name of a task.","lastModifiedDate":"2021-09-06"},{"lineNumber":157,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":158,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskNumber identifies the task to be updated.","lastModifiedDate":"2021-09-06"},{"lineNumber":159,"author":{"gitId":"Justinhoejj"},"content":"     * @param newName new task name for identified task.","lastModifiedDate":"2021-09-06"},{"lineNumber":160,"author":{"gitId":"Justinhoejj"},"content":"     * @return task with name updated.","lastModifiedDate":"2021-09-06"},{"lineNumber":161,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":162,"author":{"gitId":"Justinhoejj"},"content":"    public Task updateTaskName(int taskNumber, String newName) {","lastModifiedDate":"2021-09-06"},{"lineNumber":163,"author":{"gitId":"Justinhoejj"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":164,"author":{"gitId":"Justinhoejj"},"content":"        task.setName(newName);","lastModifiedDate":"2021-09-06"},{"lineNumber":165,"author":{"gitId":"Justinhoejj"},"content":"        return task;","lastModifiedDate":"2021-09-06"},{"lineNumber":166,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":167,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":168,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":169,"author":{"gitId":"Justinhoejj"},"content":"     * Updates datetime of task if applicable","lastModifiedDate":"2021-09-06"},{"lineNumber":170,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":171,"author":{"gitId":"Justinhoejj"},"content":"     * @param taskNumber identifies task to be updated.","lastModifiedDate":"2021-09-06"},{"lineNumber":172,"author":{"gitId":"Justinhoejj"},"content":"     * @param dateTime new datetime for identified task.","lastModifiedDate":"2021-09-06"},{"lineNumber":173,"author":{"gitId":"Justinhoejj"},"content":"     * @return task with datetime updated.","lastModifiedDate":"2021-09-06"},{"lineNumber":174,"author":{"gitId":"Justinhoejj"},"content":"     * @throws DukeException if task does not have a datetime attribute.","lastModifiedDate":"2021-09-06"},{"lineNumber":175,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":176,"author":{"gitId":"Justinhoejj"},"content":"    public Task updateTaskDateTime(int taskNumber, LocalDateTime dateTime) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":177,"author":{"gitId":"Justinhoejj"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":178,"author":{"gitId":"Justinhoejj"},"content":"        task.setDateTime(dateTime);","lastModifiedDate":"2021-09-06"},{"lineNumber":179,"author":{"gitId":"Justinhoejj"},"content":"        return task;","lastModifiedDate":"2021-09-06"},{"lineNumber":180,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":181,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":181}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"    DEADLINE,","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"    EVENT,","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"    TODO,","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":7}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":" * Todo is a  task that can be completed without any time constraint.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"    public Todo(boolean done, String taskName) {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"        super(done, taskName);","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"     * Turn todo into a string for saving to memory.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"     * @return concise string representation of todo.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"    public String encode() {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"        return String.format(\"T|%s\", super.encode());","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"     * Turn task into a human readable string form.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"     * @return string representation of todo.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"     * Throws an exception as there is no date time attribute.","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"     * @param dateTime name to be changed to.","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"     * @throws DukeException as there is no date time attribute to be set.","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"    public void setDateTime(LocalDateTime dateTime) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"        throw new DukeException(\"Todos have no date time value\");","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Justinhoejj":45}},{"path":"src/main/java/duke/util/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.util;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import duke.MainWindow;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"Justinhoejj"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"Justinhoejj"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"Justinhoejj"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"Justinhoejj"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"Justinhoejj"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"Justinhoejj"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"Justinhoejj"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"Justinhoejj"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"Justinhoejj"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"Justinhoejj"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Justinhoejj":62}},{"path":"src/main/java/duke/util/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":" * Exception class for exceptions specific to duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"        super(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Justinhoejj":10}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"import duke.command.UpdateDateTimeCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"import duke.command.UpdateNameCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":" * Makes sense of user inputs.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"     * Transform user input into Command that can be executed by duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"     * @param userInput command sentence.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"     * @return A Command that matches the user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"     * @throws DukeException user input does not match any known format.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"    public static Command parseInputs(String userInput) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"        int indexOfSpace \u003d userInput.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"        String firstWord \u003d indexOfSpace \u003d\u003d -1","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"                ? userInput","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"                : userInput.substring(0, indexOfSpace);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"        switch (firstWord) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"        case \"list\":","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"        case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"            return getFindCommand(userInput, indexOfSpace);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"        case \"done\":","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"            return getDoneCommand(userInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"            return getDeleteCommand(userInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Justinhoejj"},"content":"            return getAddDeadlineCommand(userInput, indexOfSpace);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Justinhoejj"},"content":"        case \"event\":","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Justinhoejj"},"content":"            return getAddEventCommand(userInput, indexOfSpace);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Justinhoejj"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Justinhoejj"},"content":"            return getAddTodoCommand(userInput, indexOfSpace);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Justinhoejj"},"content":"        case \"update\":","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"Justinhoejj"},"content":"            return getUpdateCommand(userInput, indexOfSpace);","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"Justinhoejj"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"Say something I can understand!! \u003e:(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"Justinhoejj"},"content":"    private static Command getUpdateCommand(String userInput, int indexOfSpace) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"Justinhoejj"},"content":"        if (userInput.matches(\"^update name [0-9]+ .+\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"Justinhoejj"},"content":"            String[] inputDetails \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"Justinhoejj"},"content":"            int taskNumber \u003d Integer.parseInt(inputDetails[2]);","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"Justinhoejj"},"content":"            String newName \u003d inputDetails[3];","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"Justinhoejj"},"content":"            return new UpdateNameCommand(taskNumber, newName);","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"Justinhoejj"},"content":"        } else if (userInput.matches(\"^update datetime [0-9]+ .+ .+\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"Justinhoejj"},"content":"            String[] inputDetails \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"Justinhoejj"},"content":"            int taskNumber \u003d Integer.parseInt(inputDetails[2]);","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"Justinhoejj"},"content":"            String dateTimeAsString \u003d inputDetails[3] + \" \" + inputDetails[4];","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"Justinhoejj"},"content":"            return new UpdateDateTimeCommand(taskNumber, parseDate(dateTimeAsString));","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"Justinhoejj"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"\u003e:( follow format below:\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"Justinhoejj"},"content":"                    + \"update \u003cname/datetime\u003e \u003ctask number 1 - 100\u003e \u003ctext/dd-mm-yyyy HHmm\u003e\");","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"Justinhoejj"},"content":"    private static FindCommand getFindCommand(String userInput, int indexOfSpace) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"Justinhoejj"},"content":"        if (userInput.matches(\"^find .+\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Justinhoejj"},"content":"            String searchTerm \u003d userInput.substring(indexOfSpace + 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"Justinhoejj"},"content":"            return new FindCommand(searchTerm);","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Justinhoejj"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"\u003e:( include search term after find:\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"Justinhoejj"},"content":"                    + \"find \u003csome search term\u003e\");","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"Justinhoejj"},"content":"    private static AddCommand getAddTodoCommand(String userInput, int indexOfSpace) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"Justinhoejj"},"content":"        if (userInput.matches(\"^todo .+\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"Justinhoejj"},"content":"            String name \u003d userInput.substring(indexOfSpace + 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"Justinhoejj"},"content":"            return new AddCommand(TaskType.TODO, name, null);","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"Justinhoejj"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"\u003e:( include task name after todo:\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"Justinhoejj"},"content":"                    + \"todo \u003csome task name\u003e\");","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"Justinhoejj"},"content":"    private static Command getAddEventCommand(String userInput, int indexOfSpace) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"Justinhoejj"},"content":"        if (userInput.matches(\"^event .+ /at .+\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"Justinhoejj"},"content":"            String[] deadlineDetails \u003d userInput.substring(indexOfSpace + 1).split(\" /at \");","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"Justinhoejj"},"content":"            String name \u003d deadlineDetails[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"Justinhoejj"},"content":"            String dateTime \u003d deadlineDetails[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"Justinhoejj"},"content":"            return new AddCommand(TaskType.EVENT, name, parseDate(dateTime));","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"Justinhoejj"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"\u003e:( Follow format below:\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"Justinhoejj"},"content":"                    + \"deadline \u003ctaskname...\u003e /at \u003cdd-mm-yyyy HHmm\u003e\");","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"Justinhoejj"},"content":"    private static Command getAddDeadlineCommand(String userInput, int indexOfSpace) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"Justinhoejj"},"content":"        if (userInput.matches(\"^deadline .+ /by .+\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"Justinhoejj"},"content":"            String[] deadlineDetails \u003d userInput.substring(indexOfSpace + 1).split(\" /by \");","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"Justinhoejj"},"content":"            String name \u003d deadlineDetails[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"Justinhoejj"},"content":"            String dateTime \u003d deadlineDetails[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"Justinhoejj"},"content":"            return new AddCommand(TaskType.DEADLINE, name, parseDate(dateTime));","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"Justinhoejj"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"\u003e:( Follow format below:\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":116,"author":{"gitId":"Justinhoejj"},"content":"                    + \"deadline \u003ctaskname...\u003e /by \u003cdd-mm-yyyy HHmm\u003e\");","lastModifiedDate":"2021-08-30"},{"lineNumber":117,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"Justinhoejj"},"content":"    private static DeleteCommand getDeleteCommand(String userInput) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"Justinhoejj"},"content":"        if (userInput.matches(\"^delete [0-9]+\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"Justinhoejj"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"Justinhoejj"},"content":"            return new DeleteCommand(taskNumber);","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"Justinhoejj"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"\u003e:( follow format below:\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":126,"author":{"gitId":"Justinhoejj"},"content":"                    + \"done \u003cnumber between 1 and 100\u003e\");","lastModifiedDate":"2021-08-30"},{"lineNumber":127,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"Justinhoejj"},"content":"    private static DoneCommand getDoneCommand(String userInput) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"Justinhoejj"},"content":"        if (userInput.matches(\"^done [0-9]+\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"Justinhoejj"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"Justinhoejj"},"content":"            return new DoneCommand(taskNumber);","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"Justinhoejj"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"\u003e:( follow format below:\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":136,"author":{"gitId":"Justinhoejj"},"content":"                    + \"done \u003cnumber between 1 and 100\u003e\");","lastModifiedDate":"2021-08-30"},{"lineNumber":137,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"Justinhoejj"},"content":"    private static LocalDateTime parseDate(String string) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":142,"author":{"gitId":"Justinhoejj"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":143,"author":{"gitId":"Justinhoejj"},"content":"            return LocalDateTime.parse(string, dateTimeFormatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":144,"author":{"gitId":"Justinhoejj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":145,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"\u003e:( follow datetime format of dd-mm-yyyy HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":149}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":" * Reads and write memory to local storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"    private String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"     * Initiates a storage instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"    public Storage() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"     * Retrieves file from local storage. If file does not exist create file in local storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"     * @return a File from local storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"     * @throws DukeException if error encountered when opening or creating file on local storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"    public File loadDataFile() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Justinhoejj"},"content":"            if (!f.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Justinhoejj"},"content":"                File dir \u003d new File(\"./data\");","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Justinhoejj"},"content":"                if (dir.mkdir() \u0026\u0026 f.createNewFile()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Justinhoejj"},"content":"                    return f;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Justinhoejj"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Justinhoejj"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Justinhoejj"},"content":"            return f;","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Justinhoejj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Justinhoejj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"Unable to load data file\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Justinhoejj"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Justinhoejj"},"content":"     * Writes duke data to local storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Justinhoejj"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Justinhoejj"},"content":"     * @param data Duke data in string form to be stored on local device.","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"Justinhoejj"},"content":"     * @throws DukeException if error encountered when writing to data file on local storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Justinhoejj"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Justinhoejj"},"content":"    public void writeToDisk(String data) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Justinhoejj"},"content":"            FileWriter fw \u003d new FileWriter(\"./data/duke.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Justinhoejj"},"content":"            fw.write(data);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Justinhoejj"},"content":"            fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Justinhoejj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Justinhoejj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Justinhoejj"},"content":"            throw new DukeException(\"Unable to write to disk :( \\n pls give me another chance !\");","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":58}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" minWidth\u003d\"270.0\" style\u003d\"-fx-background-color: white ; -fx-background-radius : 7px ;\" translateX\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Justinhoejj":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"Justinhoejj":19}},{"path":"src/test/java/duke/command/DoneCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"public class DoneCommandTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"    public void executeDoneCommand_validTaskNumber_stringResponse() {","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"        tl.addTask(new Todo(false, \"test\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Justinhoejj"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Justinhoejj"},"content":"        String response \u003d null;","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"Justinhoejj"},"content":"            response \u003d new DoneCommand(taskNumber).execute(storage, tl);","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"Justinhoejj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Justinhoejj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Justinhoejj"},"content":"        assertEquals(\"Ooh yeah! Task 1 marked as done:\\n  [T][X] test\", response);","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":28}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"    public void getSizeTest_requestSize_returnsSizeOfTaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"        tl.addTask(new Todo(false, \"Test todo\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"        assertEquals(1, tl.getSize());","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":14}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"    public void testParser_invalidCommand_dukeExceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"            Parser.parseInputs(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Justinhoejj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Justinhoejj"},"content":"            assertEquals(\"Say something I can understand!! \u003e:(\", e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Justinhoejj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Justinhoejj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Justinhoejj"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Justinhoejj":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Justinhoejj"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Justinhoejj"},"content":"done","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Justinhoejj"},"content":"done 0","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Justinhoejj"},"content":"todo borrow book","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Justinhoejj"},"content":"deadline return book /by 12 Aug","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Justinhoejj"},"content":"event visit library /at 4pm tuesday","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Justinhoejj"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Justinhoejj"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Justinhoejj"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Justinhoejj"},"content":"delete 2","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Justinhoejj"},"content":"delete a","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"Justinhoejj"},"content":"delete 0","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"Justinhoejj"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Justinhoejj":13}}]
