[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"[T][ ] work","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"[D][X] ip (by: 2021-03-23)","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"[D][X] drink (by: 2012-02-12)","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"[E][X] diveen (at: today 9pm)","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"AllardQuek":4}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":" * Represents a Personal Assistant Chatbot that helps a person to keep track of various things.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"    public static Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"    public static TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"AllardQuek"},"content":"     * Starts the Personal Assistant Chatbot.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"AllardQuek"},"content":"    public void run() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"AllardQuek"},"content":"        ui.greetUser();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"AllardQuek"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"AllardQuek"},"content":"        String command;","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"AllardQuek"},"content":"        boolean isExit \u003d false; ","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"AllardQuek"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"AllardQuek"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"AllardQuek"},"content":"                System.out.println(\"What\u0027s your next command?\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"AllardQuek"},"content":"                command \u003d sc.nextLine();  ","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"AllardQuek"},"content":"                isExit \u003d Parser.parse(command);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"AllardQuek"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"AllardQuek"},"content":"                Ui.printFormattedMessage(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"AllardQuek"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"AllardQuek"},"content":"        sc.close();","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"AllardQuek"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"AllardQuek"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"AllardQuek":50,"-":2}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":" * Represents the list of tasks a user has.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":" * Tasks can be added, deleted, completed or simply printed out.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"\tprotected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"     * Constructor for empty TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"AllardQuek"},"content":"     * Constructor for TaskList with initial tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"AllardQuek"},"content":"     * ","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"AllardQuek"},"content":"     * @param tasks Initial tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"AllardQuek"},"content":"\tpublic TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"AllardQuek"},"content":"\t\tthis.tasks \u003d tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"AllardQuek"},"content":"\tpublic ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"AllardQuek"},"content":"\t\treturn tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"AllardQuek"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"AllardQuek"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"AllardQuek"},"content":"     * @param taskNum the task number to mark as done","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeException if file not found","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"AllardQuek"},"content":"    protected void completeTask(int taskNum) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"AllardQuek"},"content":"        Task task \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"AllardQuek"},"content":"        task.setDone(true);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"AllardQuek"},"content":"        Ui.printFormattedMessage(\"Good job! I\u0027ve marked this task as done:\\n\\n\\t\" + task + \"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"AllardQuek"},"content":"        Duke.storage.saveTasks(this.getTasks());","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"AllardQuek"},"content":"     * Deletes a task from the ArrayList of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"AllardQuek"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"AllardQuek"},"content":"     * @param num the task number to delete","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"AllardQuek"},"content":"    protected void deleteTask(int num) throws DukeException{","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"AllardQuek"},"content":"        int taskIdx \u003d num - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"AllardQuek"},"content":"        Task taskToDelete \u003d tasks.get(taskIdx);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"AllardQuek"},"content":"        tasks.remove(taskIdx);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"AllardQuek"},"content":"        Ui.printFormattedMessage(\"Noted. I\u0027ve removed this task:\\n\\t\" ","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"AllardQuek"},"content":"                                + taskToDelete","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"AllardQuek"},"content":"                                + \"\\n\\tNow you have \" + tasks.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"AllardQuek"},"content":"        Duke.storage.saveTasks(this.getTasks());","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"AllardQuek"},"content":"    } ","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"AllardQuek"},"content":"     * Gets the task number in the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"AllardQuek"},"content":"     * ","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"AllardQuek"},"content":"     * @param command Command to extract task number from.","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"AllardQuek"},"content":"     * @return Task number.","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeException Task number not valid","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"AllardQuek"},"content":"    public int getTaskNum(String command) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"AllardQuek"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"AllardQuek"},"content":"            return Integer.parseInt(command.split(\" \")[1]);","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"AllardQuek"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeException(\"Please use the task number instead of task name!\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"AllardQuek"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeException(\"I\u0027m sorry, but that task number is out of range.\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"AllardQuek"},"content":"     * Handles task deletion.","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"AllardQuek"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"AllardQuek"},"content":"     * @param command user input to parse","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeException task not specified","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"AllardQuek"},"content":"    public void handleDelete(String command) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"AllardQuek"},"content":"        if (command.equals(\"delete\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeException(\"You need to specify the task!\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"AllardQuek"},"content":"        int taskNum \u003d getTaskNum(command);","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"AllardQuek"},"content":"        deleteTask(taskNum);","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"AllardQuek"},"content":"     * Handles task completion.","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"AllardQuek"},"content":"     * ","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"AllardQuek"},"content":"     * @param command user input to parse","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeException task not specified","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"AllardQuek"},"content":"    public void handleDone(String command) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"AllardQuek"},"content":"        if (command.equals(\"done\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeException(\"You need to specify the task!\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"AllardQuek"},"content":"        int taskNum \u003d getTaskNum(command);","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"AllardQuek"},"content":"        completeTask(taskNum);","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"AllardQuek"},"content":"     * Adds a task to the ArrayList of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"AllardQuek"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"AllardQuek"},"content":"     * @param t the task to add","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"AllardQuek"},"content":"    private void addTask(Task t) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":122,"author":{"gitId":"AllardQuek"},"content":"\t\tthis.tasks.add(t);","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"AllardQuek"},"content":"        Ui.printFormattedMessage(\"Got it. I\u0027ve added this task:\\n\\t\" ","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"AllardQuek"},"content":"                                + t ","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"AllardQuek"},"content":"                                + \"\\n\\tNow you have \" + tasks.size() + \" tasks in the list.\\n\"); ","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"AllardQuek"},"content":"        Duke.storage.saveTasks(this.getTasks());","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"AllardQuek"},"content":"    } ","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"AllardQuek"},"content":"     * Adds ToDo task to the ArrayList of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"AllardQuek"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"AllardQuek"},"content":"     * @param command user input to extract task","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeException Task not specified","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"AllardQuek"},"content":"    public void addToDo(String command) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"AllardQuek"},"content":"        if (command.equals(\"todo\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeException(\"You need to specify which task you want to add!\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"AllardQuek"},"content":"        String todo \u003d command.split(\"todo\")[1].trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"AllardQuek"},"content":"        addTask(new ToDo(todo));","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"AllardQuek"},"content":"     * Adds event task with datetime.","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"AllardQuek"},"content":"     * ","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"AllardQuek"},"content":"     * @param command User input to extract task and datetime","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeException Task not specified","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"AllardQuek"},"content":"    public void addEvent(String command) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"AllardQuek"},"content":"        if (command.equals(\"event\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeException(\"You need to specify which event you want to add!\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"AllardQuek"},"content":"        String eventDetails \u003d command.substring(6);","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"AllardQuek"},"content":"        String[] commandSplit \u003d splitCommand(eventDetails, \"/at\");  // \"taskName /at datetime\"","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"AllardQuek"},"content":"        String task \u003d getTask(commandSplit);              ","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"AllardQuek"},"content":"        String dateTime \u003d getDateTime(commandSplit);    // dateTime is the 2nd part of the command","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"AllardQuek"},"content":"        addTask(new Event(task, dateTime));","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"AllardQuek"},"content":"     * Adds deadline task with date/time.","lastModifiedDate":"2021-08-27"},{"lineNumber":164,"author":{"gitId":"AllardQuek"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"AllardQuek"},"content":"     * @param command User input to extract task and datetime","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeException Task not specified","lastModifiedDate":"2021-08-26"},{"lineNumber":167,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"AllardQuek"},"content":"    public void addDeadline(String command) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":169,"author":{"gitId":"AllardQuek"},"content":"        if (command.equals(\"deadline\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeException(\"You need to specify which deadline you want to add!\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":171,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":172,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":173,"author":{"gitId":"AllardQuek"},"content":"        String taskDetails \u003d command.substring(9);","lastModifiedDate":"2021-08-26"},{"lineNumber":174,"author":{"gitId":"AllardQuek"},"content":"        String[] commandSplit \u003d splitCommand(taskDetails, \"/by\");   ","lastModifiedDate":"2021-08-26"},{"lineNumber":175,"author":{"gitId":"AllardQuek"},"content":"        String task \u003d getTask(commandSplit);                         ","lastModifiedDate":"2021-08-26"},{"lineNumber":176,"author":{"gitId":"AllardQuek"},"content":"        String dateTime \u003d getDateTime(commandSplit);     ","lastModifiedDate":"2021-08-26"},{"lineNumber":177,"author":{"gitId":"AllardQuek"},"content":"       ","lastModifiedDate":"2021-08-26"},{"lineNumber":178,"author":{"gitId":"AllardQuek"},"content":"        // Check if the time is in the yyyy-mm-dd datetime format ","lastModifiedDate":"2021-08-26"},{"lineNumber":179,"author":{"gitId":"AllardQuek"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":180,"author":{"gitId":"AllardQuek"},"content":"            LocalDate date \u003d LocalDate.parse(dateTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":181,"author":{"gitId":"AllardQuek"},"content":"            addTask(new Deadline(task, date));","lastModifiedDate":"2021-08-26"},{"lineNumber":182,"author":{"gitId":"AllardQuek"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2021-08-26"},{"lineNumber":183,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeException(\"Please use the yyyy-mm-dd format for deadline!\\n\");    ","lastModifiedDate":"2021-08-26"},{"lineNumber":184,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":185,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":186,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":187,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":188,"author":{"gitId":"AllardQuek"},"content":"     * Splits the command into task and datetime.","lastModifiedDate":"2021-08-27"},{"lineNumber":189,"author":{"gitId":"AllardQuek"},"content":"     * ","lastModifiedDate":"2021-08-27"},{"lineNumber":190,"author":{"gitId":"AllardQuek"},"content":"     * @param command User input to extract task and dateTime","lastModifiedDate":"2021-08-27"},{"lineNumber":191,"author":{"gitId":"AllardQuek"},"content":"     * @param by The string to split the command by","lastModifiedDate":"2021-08-27"},{"lineNumber":192,"author":{"gitId":"AllardQuek"},"content":"     * @return The task and dateTime in a String array","lastModifiedDate":"2021-08-27"},{"lineNumber":193,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":194,"author":{"gitId":"AllardQuek"},"content":"    public String[] splitCommand(String command, String by) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":195,"author":{"gitId":"AllardQuek"},"content":"        String[] commandSplit \u003d command.split(by);","lastModifiedDate":"2021-08-26"},{"lineNumber":196,"author":{"gitId":"AllardQuek"},"content":"        ","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"AllardQuek"},"content":"        // If cannot split the command, throw an exception","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"AllardQuek"},"content":"        if (commandSplit.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeException(\"You need to provide a date/time!\" + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"AllardQuek"},"content":"        return commandSplit;","lastModifiedDate":"2021-08-26"},{"lineNumber":202,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":203,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":204,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":205,"author":{"gitId":"AllardQuek"},"content":"     * Gets the task from the split original command.","lastModifiedDate":"2021-08-27"},{"lineNumber":206,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":207,"author":{"gitId":"AllardQuek"},"content":"    public String getTask(String[] commandSplit) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":208,"author":{"gitId":"AllardQuek"},"content":"        String task \u003d commandSplit[0].trim();   // Trim the first part of the original command","lastModifiedDate":"2021-08-27"},{"lineNumber":209,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"AllardQuek"},"content":"        if (task.isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":211,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeException(\"You need to provide a task!\" + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":212,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":213,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":214,"author":{"gitId":"AllardQuek"},"content":"        return task;","lastModifiedDate":"2021-08-26"},{"lineNumber":215,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":216,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":217,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":218,"author":{"gitId":"AllardQuek"},"content":"     * Gets the datetime from the split original command.","lastModifiedDate":"2021-08-27"},{"lineNumber":219,"author":{"gitId":"AllardQuek"},"content":"     * ","lastModifiedDate":"2021-08-27"},{"lineNumber":220,"author":{"gitId":"AllardQuek"},"content":"     * @param commandSplit the original command split into 2 parts","lastModifiedDate":"2021-08-27"},{"lineNumber":221,"author":{"gitId":"AllardQuek"},"content":"     * @return the datetime in String format","lastModifiedDate":"2021-08-27"},{"lineNumber":222,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":223,"author":{"gitId":"AllardQuek"},"content":"    public String getDateTime(String[] commandSplit) {","lastModifiedDate":"2021-08-26"},{"lineNumber":224,"author":{"gitId":"AllardQuek"},"content":"        return commandSplit[1].trim();  // Get the 2nd part of the command","lastModifiedDate":"2021-08-27"},{"lineNumber":225,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":226,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":227,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-24"},{"lineNumber":228,"author":{"gitId":"AllardQuek"},"content":"     * Prints all the tasks in the ArrayList of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":229,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":230,"author":{"gitId":"AllardQuek"},"content":"    public void printTasks(String keyword) {","lastModifiedDate":"2021-08-27"},{"lineNumber":231,"author":{"gitId":"AllardQuek"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":232,"author":{"gitId":"AllardQuek"},"content":"            Ui.printFormattedMessage(\"You have no tasks!\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":233,"author":{"gitId":"AllardQuek"},"content":"            return;","lastModifiedDate":"2021-08-25"},{"lineNumber":234,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":235,"author":{"gitId":"AllardQuek"},"content":"        ","lastModifiedDate":"2021-08-25"},{"lineNumber":236,"author":{"gitId":"AllardQuek"},"content":"\t\tStringBuilder taskListMessage \u003d new StringBuilder(\"I present to you, your collection of tasks!\\n\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":237,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":238,"author":{"gitId":"AllardQuek"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":239,"author":{"gitId":"AllardQuek"},"content":"            int taskNum \u003d i + 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":240,"author":{"gitId":"AllardQuek"},"content":"            String task \u003d \"\\t\" + taskNum + \". \" + tasks.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":241,"author":{"gitId":"AllardQuek"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":242,"author":{"gitId":"AllardQuek"},"content":"                taskListMessage.append(task).append(\"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":243,"author":{"gitId":"AllardQuek"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":244,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":245,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":246,"author":{"gitId":"AllardQuek"},"content":"\t\tUi.printFormattedMessage(taskListMessage.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":247,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":248,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":249,"author":{"gitId":"AllardQuek"},"content":"    public void findTasks(String command) throws DukeException{","lastModifiedDate":"2021-08-27"},{"lineNumber":250,"author":{"gitId":"AllardQuek"},"content":"        if (command.trim().equals(\"find\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":251,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeException(\"You need to specify a keyword!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":252,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":253,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":254,"author":{"gitId":"AllardQuek"},"content":"        String keyword \u003d command.split(\" \")[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":255,"author":{"gitId":"AllardQuek"},"content":"        printTasks(keyword);","lastModifiedDate":"2021-08-27"},{"lineNumber":256,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":257,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"AllardQuek":257}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke.exception;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":" * Represents an exception related to Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"     * Constructs a new DukeException with the specified detail message.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"AllardQuek":13}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":" * Represents a task with a deadline to be completed by.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"\tprivate final LocalDate deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"\t * Constructs a new deadline task.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"\tpublic Deadline(String name, LocalDate deadline) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"\t\tsuper(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"\t\tthis.deadline \u003d deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"\tpublic LocalDate getDeadline() {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"\t\treturn deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"\tpublic String getFormattedDeadline() {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"\t\treturn this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")); // -\u003e Oct 15 2019","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"AllardQuek"},"content":"\t * Formats string when saving to file.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"AllardQuek"},"content":"\t * ","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"AllardQuek"},"content":"\t * @return String representation of task when saving to a file","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"AllardQuek"},"content":"\tpublic String toSaveString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"AllardQuek"},"content":"\t\treturn \"[D]\" + super.toString() + \" (by: \" + this.getDeadline() + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"AllardQuek"},"content":"\t@Override","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"AllardQuek"},"content":"\tpublic String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"AllardQuek"},"content":"\t\treturn \"[D]\" + super.toString() + \" (by: \" + this.getFormattedDeadline() + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"AllardQuek":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":" * Represents an event task with a time and a name.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"\tprivate String dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"\t * Constructs an event task with a name and datetime.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"\tpublic Event (String name, String dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"\t\tsuper(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"\t\tthis.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"\tpublic String getDateTime() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"\t\treturn dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"\t@Override","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"\tpublic String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"\t\treturn \"[E]\" + super.toString() + \" (at: \" + this.getDateTime() + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"\t","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"AllardQuek":26}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":" * Represents a Task the user wants to complete. ","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":" * A task object has a name, and can be done or not.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"\tprivate String name;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"\tprivate boolean done \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"\t * Constructs a new Task with the given name.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"\tpublic Task(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"\t\tthis.name \u003d name;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"\tpublic String getName() {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"\t\treturn name;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"\t","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"\t * Returns whether the task is marked as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"\tpublic boolean isDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"AllardQuek"},"content":"\t\treturn done;","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"AllardQuek"},"content":"\tpublic void setName(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"AllardQuek"},"content":"\t\tthis.name \u003d name;","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"AllardQuek"},"content":"\tpublic void setDone(boolean done) {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"AllardQuek"},"content":"\t\tthis.done \u003d done;","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"AllardQuek"},"content":"\t * Returns the string representation of the completeness of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"AllardQuek"},"content":"\tpublic String getCheckBox() {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"AllardQuek"},"content":"        return (done ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"AllardQuek"},"content":"\t@Override","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"AllardQuek"},"content":"\tpublic String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"AllardQuek"},"content":"\t\treturn getCheckBox() + this.name;","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"AllardQuek":48}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":" * Represents a ToDo task to be completed with no time restriction.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"\t * Creates a new ToDo task with the given name.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"\tpublic ToDo(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"\t\tsuper(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"\t@Override","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"\tpublic String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"\t\treturn \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"AllardQuek":18}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke.util;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":" * Represents a parser for making sense of the user input.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"\t * Determines whether Parser should continue parsing based on the user input.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"\t * ","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"\t * @param command the user input","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"\t * @return true if Parser should continue parsing, false otherwise","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"\t * @throws DukeException if the user input is invalid","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"\tpublic static boolean parse(String command) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"\t\tif (command.startsWith(\"bye\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"\t\t\tUi.printFormattedMessage(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"\t\t\treturn true;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"\t\t} else if (command.startsWith(\"list\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"\t\t\tDuke.tasks.printTasks(\"\");","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"\t\t} else if (command.startsWith(\"find\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"\t\t\tDuke.tasks.findTasks(command);","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"\t\t} else if (command.startsWith(\"done\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"AllardQuek"},"content":"\t\t\tDuke.tasks.handleDone(command);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"AllardQuek"},"content":"\t\t} else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"AllardQuek"},"content":"\t\t\tDuke.tasks.handleDelete(command);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"AllardQuek"},"content":"\t\t} else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"AllardQuek"},"content":"\t\t\tDuke.tasks.addToDo(command);","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"AllardQuek"},"content":"\t\t} else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"AllardQuek"},"content":"\t\t\tDuke.tasks.addDeadline(command);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"AllardQuek"},"content":"\t\t} else if (command.startsWith(\"event\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"AllardQuek"},"content":"\t\t\tDuke.tasks.addEvent(command);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"AllardQuek"},"content":"\t\t} else {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"AllardQuek"},"content":"\t\t\tthrow new DukeException(\"I don\u0027t understand that command!\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"AllardQuek"},"content":"\t\t}","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"AllardQuek"},"content":"\t\treturn false;","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"AllardQuek":41}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke.util;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":" * Represents the storage of tasks. Storage is able to load and save tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"\tprivate final String filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"\t * Constructs a new Storage object with the specified file path.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"\tpublic Storage(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"AllardQuek"},"content":"\t\tthis.filePath \u003d filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"AllardQuek"},"content":"\t * Loads the data from the hard disk.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"AllardQuek"},"content":"\t * ","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"AllardQuek"},"content":"\t * @return ArrayList of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"AllardQuek"},"content":"\t * @throws DukeException File cannot be found","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"AllardQuek"},"content":"\tpublic ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"AllardQuek"},"content":"\t\tArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();\t\t// We will populate an ArrayList of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"AllardQuek"},"content":"\t\ttry {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"AllardQuek"},"content":"\t\t\tBufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"AllardQuek"},"content":"\t\t\tString line;","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"AllardQuek"},"content":"\t\t\tTask task;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"AllardQuek"},"content":"\t\t\t// Read lines from file","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"AllardQuek"},"content":"\t\t\twhile ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\tString lineWithoutBoxes \u003d line.substring(7);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\t","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t// If the line contains by -\u003e add a new Deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\tif (line.contains(\"[D]\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\tString[] details \u003d lineWithoutBoxes.split(\"by:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\tString deadlineTask \u003d getTask(details[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\tLocalDate deadline \u003d LocalDate.parse(getDateTime(details[1]));","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\ttask \u003d new Deadline(deadlineTask, deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t} else if (line.contains(\"[E]\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\tString[] details \u003d lineWithoutBoxes.split(\"at:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\tString eventTask \u003d getTask(details[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\tString dateTime \u003d getDateTime(details[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\ttask \u003d new Event(eventTask, dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t} else {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\ttask \u003d new ToDo(lineWithoutBoxes);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t// If the line contains \"[X]\" mark the task as done","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\tif (line.contains(\"[X]\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\ttask.setDone(true);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\ttasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"AllardQuek"},"content":"\t\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"AllardQuek"},"content":"\t\t\treader.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"AllardQuek"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"AllardQuek"},"content":"\t\t\tthrow new DukeException(\"where\u0027s my file\");","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"AllardQuek"},"content":"\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"AllardQuek"},"content":"\t\treturn tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"AllardQuek"},"content":"\t * Extract the task name from  the task part of the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"AllardQuek"},"content":"\t * ","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"AllardQuek"},"content":"\t * @param taskDetails the task part of the command","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"AllardQuek"},"content":"\t * @return the task name","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"AllardQuek"},"content":"\tpublic String getTask(String taskDetails) {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"AllardQuek"},"content":"\t\treturn taskDetails.substring(0, taskDetails.length() - 1).trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"AllardQuek"},"content":"\t * Extract the String datetime from the datetime part of the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"AllardQuek"},"content":"\t * ","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"AllardQuek"},"content":"\t * @param dateTimeDetails the datetime part of the command","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"AllardQuek"},"content":"\t * @return the datetime","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"AllardQuek"},"content":"\tpublic String getDateTime(String dateTimeDetails) {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"AllardQuek"},"content":"\t\treturn dateTimeDetails.substring(1, dateTimeDetails.length() - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"AllardQuek"},"content":"\t","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"AllardQuek"},"content":"\t * Saves the tasks to the data file.","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"AllardQuek"},"content":"\t * ","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"AllardQuek"},"content":"\t * @param tasks ArrayList of tasks to be saved","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"AllardQuek"},"content":"\tpublic void saveTasks(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"AllardQuek"},"content":"\t\ttry {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"AllardQuek"},"content":"\t\t\tFileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"AllardQuek"},"content":"\t\t\t// Write lines to file","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"AllardQuek"},"content":"\t\t\tfor (Task task : tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\tif (task instanceof Deadline) {","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\tDeadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\tfw.write(deadline.toSaveString() + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t} else {","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\tfw.write(task + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"AllardQuek"},"content":"\t\t\t}","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"AllardQuek"},"content":"\t\t\tfw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"AllardQuek"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"AllardQuek"},"content":"\t\t\tthrow new DukeException(\"Note: results are not saved to disk)!\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"AllardQuek"},"content":"\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"AllardQuek":118}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke.util;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":" * Represents a user interface which deals with interactions with the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"\tprivate final static String LINE \u003d \"\\t----------------------------------------------------\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"\t","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"     * Prints a welcome message to the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"    public void greetUser() {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"        String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"        String GREETING \u003d \"Greetings friend! I am your personal assistant,\\n\" ","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"                            + LOGO ","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"                            + \"\\nWhat can I do for you?\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"     * Prints a message with a line of dashes before and after it.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"AllardQuek"},"content":"     * ","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"AllardQuek"},"content":"     * @param message The message to print within 2 lines.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"AllardQuek"},"content":"    public static void printFormattedMessage(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"AllardQuek"},"content":"        System.out.println(LINE + \"\\t\" + message + LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"AllardQuek":32}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"\t@Test","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"    public void testDeadlineDisplayedCorrectly() {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"\t    String datetime \u003d \"2021-08-27\";","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"\t    LocalDate deadline \u003d LocalDate.parse(datetime);","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"\t    String taskName \u003d \"finish ip project\";","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"        Deadline deadlineTask \u003d new Deadline(taskName, deadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"\t    String expectedResult \u003d String.format(\"[D][ ] %s (by: Aug 27 2021)\", taskName);","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"        assertEquals(expectedResult, deadlineTask.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"AllardQuek":18}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"class ToDoTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"    public void testCreateTodoTaskDisplaysCorrectly(){","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"        ToDo todoTask \u003d new ToDo(\"work\");","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"        assertEquals(todoTask.toString(), \"[T][ ] work\");","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"\t@Test","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"\tpublic void testTodoTaskIsCompleted(){","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"\t\tToDo todoTask \u003d new ToDo(\"work\");","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"\t\ttodoTask.setDone(true);","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"\t\tassertTrue(todoTask.isDone());","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"AllardQuek":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"blah","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"todo good example item","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"list all my items","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"list items","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"AllardQuek":15}}]
