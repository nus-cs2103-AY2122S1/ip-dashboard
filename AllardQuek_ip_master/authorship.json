[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"# Duke: Task Manager for Dudes","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"   \u003cimg src\u003d\"/docs/Duke.png\" width\u003d400/\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"This is a project based on a greenfield Java project named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"3. After that, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"AllardQuek"},"content":"4. Alternatively, if you prefer a GUI version, locate the `src/main/java/duke/Launcher.java`and choose `Run Launcher.main()`. You should see the GUI pop up.","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"AllardQuek":8,"-":21}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"run {","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"AllardQuek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"AllardQuek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"AllardQuek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"AllardQuek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"AllardQuek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"AllardQuek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"AllardQuek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"AllardQuek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"AllardQuek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"AllardQuek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"AllardQuek"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"AllardQuek"},"content":"   toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"AllardQuek":23,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"[E][X] diveen (at: today 9pm)","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"[D][X] sleep (by: 2011-09-02)","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"[E][ ] meeting (at: sunday 10pm)","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"[D][X] ip (by: 2021-02-02)","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"[D][ ] es2660 (by: 2021-02-12)","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"AllardQuek":5}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":" * This control represents a dialog box consisting of an ImageView to represent","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":" * the speaker\u0027s face and a label containing text from the speaker.","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"AllardQuek"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"AllardQuek"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"AllardQuek"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"AllardQuek"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"AllardQuek"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"AllardQuek"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"AllardQuek"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"AllardQuek"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"AllardQuek"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"AllardQuek"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"AllardQuek"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"AllardQuek"},"content":"     * right.","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"AllardQuek"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"AllardQuek"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"AllardQuek"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"AllardQuek"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"AllardQuek"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"AllardQuek"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"AllardQuek"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"AllardQuek"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"AllardQuek"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"AllardQuek"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"AllardQuek"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"AllardQuek":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":" * Represents a Personal Assistant Chatbot that helps a person to keep track of","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":" * various things.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"    private static Storage storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"    private static TaskList tasks;","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"     * Constructor for Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"    public Duke() {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"        storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"            tasks \u003d new TaskList(getStorage().loadTasks());","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"AllardQuek"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"AllardQuek"},"content":"            assert (tasks.getNumTasks() \u003d\u003d 0);","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"AllardQuek"},"content":"    public static Storage getStorage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"AllardQuek"},"content":"        return Duke.storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"AllardQuek"},"content":"    public static TaskList getTasks() {","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"AllardQuek"},"content":"        return Duke.tasks;","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"AllardQuek"},"content":"     * Returns the response from Duke given the user input to be shown on the GUI.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"AllardQuek"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"AllardQuek"},"content":"     * @param input the command the user typed","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"AllardQuek"},"content":"    protected String getResponse(String input) {","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"AllardQuek"},"content":"        String response;","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"AllardQuek"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"AllardQuek"},"content":"            response \u003d Parser.parse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"AllardQuek"},"content":"            return response;","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"AllardQuek"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"AllardQuek"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"AllardQuek"},"content":"     * Starts the Personal Assistant Chatbot for text-based UI.","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"AllardQuek"},"content":"    public void run() {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"AllardQuek"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"AllardQuek"},"content":"        ui.printUserGreeting();","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"AllardQuek"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"AllardQuek"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"AllardQuek"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"AllardQuek"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"AllardQuek"},"content":"                System.out.println(\"What\u0027s your next command?\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"AllardQuek"},"content":"                String command \u003d sc.nextLine();","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"AllardQuek"},"content":"                String response \u003d Parser.parse(command);","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"AllardQuek"},"content":"                ui.printFormattedMessage(response);","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"AllardQuek"},"content":"                if (response.contains(\"Bye\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"AllardQuek"},"content":"                    isExit \u003d true;","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"AllardQuek"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"AllardQuek"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"AllardQuek"},"content":"                ui.printFormattedMessage(e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"AllardQuek"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"AllardQuek"},"content":"        assert (isExit);","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"AllardQuek"},"content":"        sc.close();","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"AllardQuek"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"AllardQuek"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"AllardQuek":81,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"AllardQuek":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"AllardQuek"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"AllardQuek"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"AllardQuek":30}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"    // Marks a private or protected member to make it accessible to FXML","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"AllardQuek"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/da_user.png\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"AllardQuek"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/da_duke.png\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"AllardQuek"},"content":"    ","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"AllardQuek"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"AllardQuek"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"AllardQuek"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"AllardQuek"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"AllardQuek"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"AllardQuek"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"AllardQuek"},"content":"     * Duke\u0027s reply and then appends them to the dialog container. Clears the user","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"AllardQuek"},"content":"     * input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"AllardQuek"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"AllardQuek"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"AllardQuek"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"AllardQuek"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"AllardQuek"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"AllardQuek"},"content":"                DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"AllardQuek"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"AllardQuek":51}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"import duke.exception.DukeFileNotFoundException;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"import duke.exception.DukeInvalidTaskNumberFormatException;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"import duke.exception.DukeTaskNotFoundException;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"import duke.exception.DukeTaskNumberOutOfBoundsException;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":" * Represents the list of tasks a user has. Tasks can be added, deleted,","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":" * completed or simply printed out.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"AllardQuek"},"content":"     * Constructor for empty TaskList.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"AllardQuek"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"AllardQuek"},"content":"        TaskList.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"AllardQuek"},"content":"     * Constructor for TaskList with initial tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"AllardQuek"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"AllardQuek"},"content":"     * @param tasks Initial tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"AllardQuek"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"AllardQuek"},"content":"        TaskList.tasks \u003d tasks;","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"AllardQuek"},"content":"    public static ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"AllardQuek"},"content":"        return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"AllardQuek"},"content":"    public int getNumTasks() {","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"AllardQuek"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"AllardQuek"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"AllardQuek"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"AllardQuek"},"content":"     * @param taskNum the task number to mark as done","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeFileNotFoundException if file not found","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"AllardQuek"},"content":"    private static String completeTask(int taskNum) throws DukeFileNotFoundException {","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"AllardQuek"},"content":"        int taskIdx \u003d taskNum - 1;","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"AllardQuek"},"content":"        assert taskIdx \u003e\u003d 0;","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"AllardQuek"},"content":"        Task task \u003d tasks.get(taskIdx);","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"AllardQuek"},"content":"        task.setDone(true);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"AllardQuek"},"content":"        return (\"Good job! I\u0027ve marked this task as done:\\n\\n\\t\" + task + \"\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"AllardQuek"},"content":"     * Deletes a task from the ArrayList of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"AllardQuek"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"AllardQuek"},"content":"     * @param num the task number to delete","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeFileNotFoundException if file not found","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"AllardQuek"},"content":"    private static String deleteSingleTask(int num) throws DukeFileNotFoundException {","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"AllardQuek"},"content":"        int taskIdx \u003d num - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"AllardQuek"},"content":"        assert taskIdx \u003e\u003d 0;","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"AllardQuek"},"content":"        Task taskToDelete \u003d getTasks().get(taskIdx);","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"AllardQuek"},"content":"        getTasks().remove(taskIdx);","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"AllardQuek"},"content":"        return (\"Noted. I\u0027ve removed this task:\\n\\t\" + taskToDelete + \"\\n\\tNow you have \" + tasks.size()","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"AllardQuek"},"content":"                + \" tasks in the list.\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"AllardQuek"},"content":"     * Deletes multiple tasks from the ArrayList of tasks. User inputs the task","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"AllardQuek"},"content":"     * numbers separated by spaces.","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"AllardQuek"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"AllardQuek"},"content":"     * @param taskNums the task numbers to delete","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeFileNotFoundException if file not found","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"AllardQuek"},"content":"    private static String deleteTasks(int[] taskNums) throws DukeFileNotFoundException {","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"AllardQuek"},"content":"        if (taskNums.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"AllardQuek"},"content":"            return deleteSingleTask(taskNums[0]);","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"AllardQuek"},"content":"        Arrays.sort(taskNums);","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"AllardQuek"},"content":"        // Delete from the end of the list so we don\u0027t run into indexing errors","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"AllardQuek"},"content":"        for (int i \u003d taskNums.length - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"AllardQuek"},"content":"            System.out.println(i);","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"AllardQuek"},"content":"            deleteSingleTask(taskNums[i]);","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"AllardQuek"},"content":"        return (\"Noted. I\u0027ve removed task numbers: \" + Arrays.toString(taskNums) + \"\\n\\tNow you have \" + tasks.size()","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"AllardQuek"},"content":"                + \" tasks in the list.\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"AllardQuek"},"content":"     * Gets the task number in the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"AllardQuek"},"content":"     * ","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"AllardQuek"},"content":"     * @param command Command to extract task number from.","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"AllardQuek"},"content":"     * @return Task number.","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeInvalidTaskNumberFormatException if task number not an integer","lastModifiedDate":"2021-09-07"},{"lineNumber":108,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeTaskNumberOutOfBoundsException   if task number not valid","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"AllardQuek"},"content":"    private static int[] getTaskNums(String command)","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"AllardQuek"},"content":"            throws DukeInvalidTaskNumberFormatException, DukeTaskNumberOutOfBoundsException {","lastModifiedDate":"2021-09-06"},{"lineNumber":112,"author":{"gitId":"AllardQuek"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"AllardQuek"},"content":"            String[] splitCommand \u003d command.split(\" \");","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"AllardQuek"},"content":"            String[] taskNums \u003d Arrays.copyOfRange(splitCommand, 1, splitCommand.length);","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"AllardQuek"},"content":"            return Arrays.stream(taskNums).mapToInt(Integer::parseInt).toArray();","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"AllardQuek"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"AllardQuek"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeInvalidTaskNumberFormatException();","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"AllardQuek"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeTaskNumberOutOfBoundsException();","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"AllardQuek"},"content":"     * Handles task deletion.","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"AllardQuek"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"AllardQuek"},"content":"     * @param command user input to parse","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeTaskNotFoundException if task not specified","lastModifiedDate":"2021-09-07"},{"lineNumber":129,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"AllardQuek"},"content":"    public static String handleDelete(String command) throws DukeTaskNotFoundException,","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"AllardQuek"},"content":"            DukeInvalidTaskNumberFormatException, DukeTaskNumberOutOfBoundsException, DukeFileNotFoundException {","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"AllardQuek"},"content":"        if (command.equals(\"delete\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeTaskNotFoundException();","lastModifiedDate":"2021-09-06"},{"lineNumber":134,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"AllardQuek"},"content":"        int[] taskNum \u003d getTaskNums(command);","lastModifiedDate":"2021-09-08"},{"lineNumber":137,"author":{"gitId":"AllardQuek"},"content":"        return deleteTasks(taskNum);","lastModifiedDate":"2021-09-08"},{"lineNumber":138,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"AllardQuek"},"content":"     * Handles task completion.","lastModifiedDate":"2021-08-27"},{"lineNumber":142,"author":{"gitId":"AllardQuek"},"content":"     * ","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"AllardQuek"},"content":"     * @param command user input to parse","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeTaskNotFoundException            if task not specified","lastModifiedDate":"2021-09-07"},{"lineNumber":145,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeInvalidTaskNumberFormatException if task is not an integer","lastModifiedDate":"2021-09-07"},{"lineNumber":146,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeTaskNumberOutOfBoundsException   if task number not valid","lastModifiedDate":"2021-09-07"},{"lineNumber":147,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeFileNotFoundException            if file not found","lastModifiedDate":"2021-09-07"},{"lineNumber":148,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"AllardQuek"},"content":"    public static String handleDone(String command) throws DukeTaskNotFoundException,","lastModifiedDate":"2021-09-06"},{"lineNumber":150,"author":{"gitId":"AllardQuek"},"content":"            DukeInvalidTaskNumberFormatException, DukeTaskNumberOutOfBoundsException, DukeFileNotFoundException {","lastModifiedDate":"2021-09-06"},{"lineNumber":151,"author":{"gitId":"AllardQuek"},"content":"        if (command.equals(\"done\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeTaskNotFoundException();","lastModifiedDate":"2021-09-06"},{"lineNumber":153,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"AllardQuek"},"content":"        int[] taskNum \u003d getTaskNums(command);","lastModifiedDate":"2021-09-08"},{"lineNumber":156,"author":{"gitId":"AllardQuek"},"content":"        return completeTask(taskNum[0]);","lastModifiedDate":"2021-09-08"},{"lineNumber":157,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"AllardQuek"},"content":"     * Adds a task to the ArrayList of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":161,"author":{"gitId":"AllardQuek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"AllardQuek"},"content":"     * @param t the task to add","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeFileNotFoundException if file not found","lastModifiedDate":"2021-09-07"},{"lineNumber":164,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"AllardQuek"},"content":"    private static String addTask(Task t) throws DukeFileNotFoundException {","lastModifiedDate":"2021-09-06"},{"lineNumber":166,"author":{"gitId":"AllardQuek"},"content":"        TaskList.getTasks().add(t);","lastModifiedDate":"2021-09-06"},{"lineNumber":167,"author":{"gitId":"AllardQuek"},"content":"        return (\"Got it. I\u0027ve added this task:\\n\\t\" + t + \"\\n\\tNow you have \" + tasks.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":168,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"AllardQuek"},"content":"     * Adds ToDo task to the ArrayList of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":172,"author":{"gitId":"AllardQuek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"AllardQuek"},"content":"     * @param command user input to extract task","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeTaskNotFoundException if task not specified","lastModifiedDate":"2021-09-07"},{"lineNumber":175,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeFileNotFoundException if file not found","lastModifiedDate":"2021-09-07"},{"lineNumber":176,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"AllardQuek"},"content":"    public static String addToDo(String command) throws DukeTaskNotFoundException, DukeFileNotFoundException {","lastModifiedDate":"2021-09-06"},{"lineNumber":178,"author":{"gitId":"AllardQuek"},"content":"        if (command.equals(\"todo\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeTaskNotFoundException();","lastModifiedDate":"2021-09-06"},{"lineNumber":180,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"AllardQuek"},"content":"        String todo \u003d command.split(\"todo\")[1].trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"AllardQuek"},"content":"        return addTask(new ToDo(todo));","lastModifiedDate":"2021-08-31"},{"lineNumber":184,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":187,"author":{"gitId":"AllardQuek"},"content":"     * Adds event task with datetime.","lastModifiedDate":"2021-08-27"},{"lineNumber":188,"author":{"gitId":"AllardQuek"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":189,"author":{"gitId":"AllardQuek"},"content":"     * @param command User input to extract task and datetime","lastModifiedDate":"2021-08-26"},{"lineNumber":190,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeException Task not specified","lastModifiedDate":"2021-08-26"},{"lineNumber":191,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":192,"author":{"gitId":"AllardQuek"},"content":"    public static String addEvent(String command) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":193,"author":{"gitId":"AllardQuek"},"content":"        if (command.equals(\"event\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":194,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeException(\"You need to specify which event you want to add!\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":195,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":196,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":197,"author":{"gitId":"AllardQuek"},"content":"        String eventDetails \u003d command.substring(6);","lastModifiedDate":"2021-08-26"},{"lineNumber":198,"author":{"gitId":"AllardQuek"},"content":"        String[] commandSplit \u003d splitCommand(eventDetails, \"/at\"); // \"taskName /at datetime\"","lastModifiedDate":"2021-08-26"},{"lineNumber":199,"author":{"gitId":"AllardQuek"},"content":"        String task \u003d getTask(commandSplit);","lastModifiedDate":"2021-08-26"},{"lineNumber":200,"author":{"gitId":"AllardQuek"},"content":"        String dateTime \u003d getDateTime(commandSplit); // dateTime is the 2nd part of the command","lastModifiedDate":"2021-08-26"},{"lineNumber":201,"author":{"gitId":"AllardQuek"},"content":"        return addTask(new Event(task, dateTime));","lastModifiedDate":"2021-08-31"},{"lineNumber":202,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":203,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":204,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"AllardQuek"},"content":"     * Adds deadline task with date/time.","lastModifiedDate":"2021-08-27"},{"lineNumber":206,"author":{"gitId":"AllardQuek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"AllardQuek"},"content":"     * @param command User input to extract task and datetime","lastModifiedDate":"2021-08-26"},{"lineNumber":208,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeException Task not specified","lastModifiedDate":"2021-08-26"},{"lineNumber":209,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"AllardQuek"},"content":"    public static String addDeadline(String command) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":211,"author":{"gitId":"AllardQuek"},"content":"        if (command.equals(\"deadline\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":212,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeException(\"You need to specify which deadline you want to add!\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":213,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":214,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":215,"author":{"gitId":"AllardQuek"},"content":"        String taskDetails \u003d command.substring(9);","lastModifiedDate":"2021-08-26"},{"lineNumber":216,"author":{"gitId":"AllardQuek"},"content":"        String[] commandSplit \u003d splitCommand(taskDetails, \"/by\");","lastModifiedDate":"2021-08-26"},{"lineNumber":217,"author":{"gitId":"AllardQuek"},"content":"        String task \u003d getTask(commandSplit);","lastModifiedDate":"2021-08-26"},{"lineNumber":218,"author":{"gitId":"AllardQuek"},"content":"        String dateTime \u003d getDateTime(commandSplit);","lastModifiedDate":"2021-08-26"},{"lineNumber":219,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":220,"author":{"gitId":"AllardQuek"},"content":"        // Check if the time is in the yyyy-mm-dd datetime format","lastModifiedDate":"2021-08-26"},{"lineNumber":221,"author":{"gitId":"AllardQuek"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":222,"author":{"gitId":"AllardQuek"},"content":"            LocalDate date \u003d LocalDate.parse(dateTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":223,"author":{"gitId":"AllardQuek"},"content":"            return addTask(new Deadline(task, date));","lastModifiedDate":"2021-08-31"},{"lineNumber":224,"author":{"gitId":"AllardQuek"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2021-08-26"},{"lineNumber":225,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeException(\"Please use the yyyy-mm-dd format for deadline!\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":226,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":227,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":228,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":229,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":230,"author":{"gitId":"AllardQuek"},"content":"     * Splits the command into task and datetime.","lastModifiedDate":"2021-08-27"},{"lineNumber":231,"author":{"gitId":"AllardQuek"},"content":"     * ","lastModifiedDate":"2021-08-27"},{"lineNumber":232,"author":{"gitId":"AllardQuek"},"content":"     * @param command User input to extract task and dateTime","lastModifiedDate":"2021-08-27"},{"lineNumber":233,"author":{"gitId":"AllardQuek"},"content":"     * @param by      The string to split the command by","lastModifiedDate":"2021-08-27"},{"lineNumber":234,"author":{"gitId":"AllardQuek"},"content":"     * @return The task and dateTime in a String array","lastModifiedDate":"2021-08-27"},{"lineNumber":235,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":236,"author":{"gitId":"AllardQuek"},"content":"    private static String[] splitCommand(String command, String by) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":237,"author":{"gitId":"AllardQuek"},"content":"        String[] commandSplit \u003d command.split(by);","lastModifiedDate":"2021-08-26"},{"lineNumber":238,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":239,"author":{"gitId":"AllardQuek"},"content":"        // If cannot split the command, throw an exception","lastModifiedDate":"2021-08-24"},{"lineNumber":240,"author":{"gitId":"AllardQuek"},"content":"        if (commandSplit.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":241,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeException(\"You need to provide a date/time!\" + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":242,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":243,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":244,"author":{"gitId":"AllardQuek"},"content":"        return commandSplit;","lastModifiedDate":"2021-08-26"},{"lineNumber":245,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":246,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":247,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":248,"author":{"gitId":"AllardQuek"},"content":"     * Gets the task from the split original command.","lastModifiedDate":"2021-08-27"},{"lineNumber":249,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":250,"author":{"gitId":"AllardQuek"},"content":"    private static String getTask(String[] commandSplit) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":251,"author":{"gitId":"AllardQuek"},"content":"        String task \u003d commandSplit[0].trim(); // Trim the first part of the original command","lastModifiedDate":"2021-08-27"},{"lineNumber":252,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":253,"author":{"gitId":"AllardQuek"},"content":"        if (task.isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":254,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeException(\"You need to provide a task!\" + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":255,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":256,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":257,"author":{"gitId":"AllardQuek"},"content":"        return task;","lastModifiedDate":"2021-08-26"},{"lineNumber":258,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":259,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":260,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":261,"author":{"gitId":"AllardQuek"},"content":"     * Gets the datetime from the split original command.","lastModifiedDate":"2021-08-27"},{"lineNumber":262,"author":{"gitId":"AllardQuek"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":263,"author":{"gitId":"AllardQuek"},"content":"     * @param commandSplit the original command split into 2 parts","lastModifiedDate":"2021-08-27"},{"lineNumber":264,"author":{"gitId":"AllardQuek"},"content":"     * @return the datetime in String format","lastModifiedDate":"2021-08-27"},{"lineNumber":265,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":266,"author":{"gitId":"AllardQuek"},"content":"    private static String getDateTime(String[] commandSplit) {","lastModifiedDate":"2021-09-06"},{"lineNumber":267,"author":{"gitId":"AllardQuek"},"content":"        return commandSplit[1].trim(); // Get the 2nd part of the command","lastModifiedDate":"2021-08-27"},{"lineNumber":268,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":269,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":270,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":271,"author":{"gitId":"AllardQuek"},"content":"     * Prints all the tasks in the ArrayList of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":272,"author":{"gitId":"AllardQuek"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":273,"author":{"gitId":"AllardQuek"},"content":"     * @param keyword string to find in tasks","lastModifiedDate":"2021-09-06"},{"lineNumber":274,"author":{"gitId":"AllardQuek"},"content":"     * @return all tasks containing keyword","lastModifiedDate":"2021-09-06"},{"lineNumber":275,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":276,"author":{"gitId":"AllardQuek"},"content":"    public static String printTasks(String keyword) {","lastModifiedDate":"2021-09-06"},{"lineNumber":277,"author":{"gitId":"AllardQuek"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":278,"author":{"gitId":"AllardQuek"},"content":"            return \"You have no tasks!\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":279,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":280,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":281,"author":{"gitId":"AllardQuek"},"content":"        StringBuilder taskListMessage \u003d new StringBuilder(\"I present to you, your collection of tasks!\\n\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":282,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":283,"author":{"gitId":"AllardQuek"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":284,"author":{"gitId":"AllardQuek"},"content":"            int taskNum \u003d i + 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":285,"author":{"gitId":"AllardQuek"},"content":"            String task \u003d \"\\t\" + taskNum + \". \" + tasks.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":286,"author":{"gitId":"AllardQuek"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":287,"author":{"gitId":"AllardQuek"},"content":"                taskListMessage.append(task).append(\"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":288,"author":{"gitId":"AllardQuek"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":289,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":290,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":291,"author":{"gitId":"AllardQuek"},"content":"        return taskListMessage.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":292,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":293,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":294,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":295,"author":{"gitId":"AllardQuek"},"content":"     * Searches for tasks.","lastModifiedDate":"2021-09-06"},{"lineNumber":296,"author":{"gitId":"AllardQuek"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":297,"author":{"gitId":"AllardQuek"},"content":"     * @param command find command typed by the user","lastModifiedDate":"2021-09-06"},{"lineNumber":298,"author":{"gitId":"AllardQuek"},"content":"     * @return the tasks matching the keywords provided by the user","lastModifiedDate":"2021-09-06"},{"lineNumber":299,"author":{"gitId":"AllardQuek"},"content":"     * @throws DukeException no keyword specified","lastModifiedDate":"2021-09-06"},{"lineNumber":300,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":301,"author":{"gitId":"AllardQuek"},"content":"    public static String findTasks(String command) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":302,"author":{"gitId":"AllardQuek"},"content":"        if (command.trim().equals(\"find\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":303,"author":{"gitId":"AllardQuek"},"content":"            throw new DukeException(\"You need to specify a keyword!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":304,"author":{"gitId":"AllardQuek"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":305,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":306,"author":{"gitId":"AllardQuek"},"content":"        String keyword \u003d command.split(\" \")[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":307,"author":{"gitId":"AllardQuek"},"content":"        return printTasks(keyword);","lastModifiedDate":"2021-08-31"},{"lineNumber":308,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":309,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"AllardQuek":309}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke.exception;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":" * Represents an exception related to Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"     * Constructs a new DukeException with the specified detail message.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"AllardQuek":13}},{"path":"src/main/java/duke/exception/DukeFileNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke.exception;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":" * Represents an exception related to Duke.","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"public class DukeFileNotFoundException extends DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"     * Constructs a new DukeException with the specified detail message.","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"    public DukeFileNotFoundException() {","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"        super(\"Note: results are not saved to disk!\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"AllardQuek":13}},{"path":"src/main/java/duke/exception/DukeInvalidTaskNumberFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke.exception;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":" * Represents an exception related to Duke.","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"public class DukeInvalidTaskNumberFormatException extends DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"     * Constructs a new DukeException with the specified detail message.","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"    public DukeInvalidTaskNumberFormatException() {","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"        super(\"Please use the task number instead of task name!\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"AllardQuek":13}},{"path":"src/main/java/duke/exception/DukeTaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke.exception;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":" * Represents an exception related to Duke.","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"public class DukeTaskNotFoundException extends DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"     * Constructs a new DukeException with the specified detail message.","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"    public DukeTaskNotFoundException() {","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"        super(\"You need to specify the task!\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"AllardQuek":13}},{"path":"src/main/java/duke/exception/DukeTaskNumberOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke.exception;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":" * Represents an exception related to Duke.","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"public class DukeTaskNumberOutOfBoundsException extends DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"     * Constructs a new DukeException with the specified detail message.","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"    public DukeTaskNumberOutOfBoundsException() {","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"        super(\"I\u0027m sorry, but that task number is out of range.\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"AllardQuek":13}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":" * Represents a task with a deadline to be completed by.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"\tprivate final LocalDate deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"\t * Constructs a new deadline task.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"\tpublic Deadline(String name, LocalDate deadline) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"\t\tsuper(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"\t\tthis.deadline \u003d deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"\tpublic LocalDate getDeadline() {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"\t\treturn deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"\tpublic String getFormattedDeadline() {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"\t\treturn this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")); // -\u003e Oct 15 2019","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"AllardQuek"},"content":"\t * Formats string when saving to file.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"AllardQuek"},"content":"\t *","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"AllardQuek"},"content":"\t * @return String representation of task when saving to a file","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"AllardQuek"},"content":"\tpublic String toSaveString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"AllardQuek"},"content":"\t\treturn \"[D]\" + super.toString() + \" (by: \" + this.getDeadline() + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"AllardQuek"},"content":"\t@Override","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"AllardQuek"},"content":"\tpublic String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"AllardQuek"},"content":"\t\treturn \"[D]\" + super.toString() + \" (by: \" + this.getFormattedDeadline() + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"AllardQuek":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":" * Represents an event task with a time and a name.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"\tprivate String dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"\t * Constructs an event task with a name and datetime.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"\tpublic Event (String name, String dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"\t\tsuper(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"\t\tthis.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"\tpublic String getDateTime() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"\t\treturn dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"\t@Override","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"\tpublic String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"\t\treturn \"[E]\" + super.toString() + \" (at: \" + this.getDateTime() + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"AllardQuek":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":" * Represents a Task the user wants to complete.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":" * A task object has a name, and can be done or not.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"\tprivate String name;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"\tprivate boolean done \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"\t * Constructs a new Task with the given name.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"\tpublic Task(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"\t\tthis.name \u003d name;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"\tpublic String getName() {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"\t\treturn name;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"\t","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"\t * Returns whether the task is marked as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"\tpublic boolean isDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"AllardQuek"},"content":"\t\treturn done;","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"AllardQuek"},"content":"\tpublic void setName(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"AllardQuek"},"content":"\t\tthis.name \u003d name;","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"AllardQuek"},"content":"\tpublic void setDone(boolean done) {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"AllardQuek"},"content":"\t\tthis.done \u003d done;","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"AllardQuek"},"content":"\t * Returns the string representation of the completeness of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"AllardQuek"},"content":"\tpublic String getCheckBox() {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"AllardQuek"},"content":"        return (done ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"AllardQuek"},"content":"\t@Override","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"AllardQuek"},"content":"\tpublic String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"AllardQuek"},"content":"\t\treturn getCheckBox() + this.name;","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"AllardQuek":48}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":" * Represents a ToDo task to be completed with no time restriction.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"\t * Creates a new ToDo task with the given name.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"\tpublic ToDo(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"\t\tsuper(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"\t@Override","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"\tpublic String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"\t\treturn \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"AllardQuek":18}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke.util;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":" * Represents a parser for making sense of the user input.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"\t * Determines whether Parser should continue parsing based on the user input.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"\t *","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"\t * @param command the user input","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"\t * @return true if Parser should continue parsing, false otherwise","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"\t * @throws DukeException if the user input is not a valid command","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"\tpublic static String parse(String command) throws DukeException {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"\t\tString response;","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"\t\tif (command.startsWith(\"bye\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"\t\t\tresponse \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"\t\t\treturn response;","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"\t\t} else if (command.startsWith(\"list\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"\t\t\tresponse \u003d TaskList.printTasks(\"\");","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"\t\t\treturn response;","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"AllardQuek"},"content":"\t\t} else if (command.startsWith(\"find\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"AllardQuek"},"content":"\t\t\tresponse \u003d TaskList.findTasks(command);","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"AllardQuek"},"content":"\t\t} else if (command.startsWith(\"done\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"AllardQuek"},"content":"\t\t\tresponse \u003d TaskList.handleDone(command);","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"AllardQuek"},"content":"\t\t} else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"AllardQuek"},"content":"\t\t\tresponse \u003d TaskList.handleDelete(command);","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"AllardQuek"},"content":"\t\t} else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"AllardQuek"},"content":"\t\t\tresponse \u003d TaskList.addToDo(command);","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"AllardQuek"},"content":"\t\t} else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"AllardQuek"},"content":"\t\t\tresponse \u003d TaskList.addDeadline(command);","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"AllardQuek"},"content":"\t\t} else if (command.startsWith(\"event\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"AllardQuek"},"content":"\t\t\tresponse \u003d TaskList.addEvent(command);","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"AllardQuek"},"content":"\t\t} else {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"AllardQuek"},"content":"\t\t\tthrow new DukeException(\"I don\u0027t understand that command!\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"AllardQuek"},"content":"\t\t}","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"AllardQuek"},"content":"\t\tDuke.getStorage().saveTasks(TaskList.getTasks());","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"AllardQuek"},"content":"\t\treturn response;","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"AllardQuek":45}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke.util;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"import duke.exception.DukeFileNotFoundException;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":" * Represents the storage of tasks. Storage is able to load and save tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"\tprivate final String filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"\t * Constructs a new Storage object with the specified file path.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"AllardQuek"},"content":"\tpublic Storage(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"AllardQuek"},"content":"\t\tthis.filePath \u003d filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"AllardQuek"},"content":"\t * Loads the data from the hard disk.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"AllardQuek"},"content":"\t *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"AllardQuek"},"content":"\t * @return ArrayList of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"AllardQuek"},"content":"\t * @throws DukeException if file cannot be found","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"AllardQuek"},"content":"\tpublic ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"AllardQuek"},"content":"\t\tArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(); // We will populate an ArrayList of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"AllardQuek"},"content":"\t\tString line;","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"AllardQuek"},"content":"\t\tTask task;","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"AllardQuek"},"content":"\t\tfinal int BOXES_LENGTH \u003d 7;","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"AllardQuek"},"content":"\t\ttry {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"AllardQuek"},"content":"\t\t\tBufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"AllardQuek"},"content":"\t\t\t// Read lines from file","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"AllardQuek"},"content":"\t\t\twhile ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\tString lineWithoutBoxes \u003d line.substring(BOXES_LENGTH);","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t// If the line contains by -\u003e add a new Deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\tif (line.contains(\"[D]\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\tString[] details \u003d lineWithoutBoxes.split(\"by:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\tString deadlineTask \u003d getTask(details[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\tLocalDate deadline \u003d LocalDate.parse(getDateTime(details[1]));","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\ttask \u003d new Deadline(deadlineTask, deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t} else if (line.contains(\"[E]\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\tString[] details \u003d lineWithoutBoxes.split(\"at:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\tString eventTask \u003d getTask(details[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\tString dateTime \u003d getDateTime(details[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\ttask \u003d new Event(eventTask, dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t} else {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\ttask \u003d new ToDo(lineWithoutBoxes);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t// If the line contains \"[X]\" mark the task as done","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\tif (line.contains(\"[X]\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\ttask.setDone(true);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\tassert task.isDone();","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\ttasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"AllardQuek"},"content":"\t\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"AllardQuek"},"content":"\t\t\treader.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"AllardQuek"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"AllardQuek"},"content":"\t\t\tthrow new DukeException(\"Where\u0027s my file\");","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"AllardQuek"},"content":"\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"AllardQuek"},"content":"\t\treturn tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"AllardQuek"},"content":"\t * Extract the task name from the task part of the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"AllardQuek"},"content":"\t *","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"AllardQuek"},"content":"\t * @param taskDetails the task part of the command","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"AllardQuek"},"content":"\t * @return the task name","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"AllardQuek"},"content":"\tpublic String getTask(String taskDetails) {","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"AllardQuek"},"content":"\t\treturn taskDetails.substring(0, taskDetails.length() - 1).trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"AllardQuek"},"content":"\t * Extract the String datetime from the datetime part of the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"AllardQuek"},"content":"\t *","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"AllardQuek"},"content":"\t * @param dateTimeDetails the datetime part of the command","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"AllardQuek"},"content":"\t * @return the datetime","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"AllardQuek"},"content":"\tpublic String getDateTime(String dateTimeDetails) {","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"AllardQuek"},"content":"\t\treturn dateTimeDetails.substring(1, dateTimeDetails.length() - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"AllardQuek"},"content":"\t/**","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"AllardQuek"},"content":"\t * Saves the tasks to the data file.","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"AllardQuek"},"content":"\t *","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"AllardQuek"},"content":"\t * @param tasks ArrayList of tasks to be saved","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"AllardQuek"},"content":"\t * @throws DukeFileNotFoundException if file not found","lastModifiedDate":"2021-09-07"},{"lineNumber":103,"author":{"gitId":"AllardQuek"},"content":"\t */","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"AllardQuek"},"content":"\tpublic void saveTasks(ArrayList\u003cTask\u003e tasks) throws DukeFileNotFoundException {","lastModifiedDate":"2021-09-06"},{"lineNumber":105,"author":{"gitId":"AllardQuek"},"content":"\t\ttry {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"AllardQuek"},"content":"\t\t\tFileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"AllardQuek"},"content":"\t\t\t// Write lines to file","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"AllardQuek"},"content":"\t\t\tfor (Task task : tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\tif (task instanceof Deadline) {","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\tDeadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\tfw.write(deadline.toSaveString() + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t} else {","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t\tfw.write(task + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"AllardQuek"},"content":"\t\t\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"AllardQuek"},"content":"\t\t\t}","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"AllardQuek"},"content":"\t\t\tfw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"AllardQuek"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"AllardQuek"},"content":"\t\t\t throw new DukeFileNotFoundException();","lastModifiedDate":"2021-09-06"},{"lineNumber":120,"author":{"gitId":"AllardQuek"},"content":"\t\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"AllardQuek":122}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"package duke.util;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":" * Represents a user interface which deals with interactions with the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"     * Prints a welcome message to the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"    public void printUserGreeting() {","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"        final String LOGO \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\" + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"        final String GREETING \u003d \"Greetings friend! I am your personal assistant,\\n\" + LOGO","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"                                + \"\\nWhat can I do for you?\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"     * Prints a message with a line of dashes before and after it.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"     * ","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"     * @param message The message to print within 2 lines.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"    public void printFormattedMessage(String message) {","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"        String LINE \u003d \"\\t----------------------------------------------------\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"AllardQuek"},"content":"        System.out.println(LINE + \"\\t\" + message + LINE);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"AllardQuek"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"AllardQuek":28}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"530.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"    \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-padding: 10;\" text\u003d\"Label\" textFill\u003d\"#3988e2\" textOverrun\u003d\"WORD_ELLIPSIS\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"            \u003cFont name\u003d\"System Font\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"AllardQuek":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"AllardQuek":19}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"\t@Test","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"\tpublic void testDeadlineDisplayedCorrectly() {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"\t\tString datetime \u003d \"2021-08-27\";","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"\t\tLocalDate deadline \u003d LocalDate.parse(datetime);","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"\t\tString taskName \u003d \"finish ip project\";","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"\t\tDeadline deadlineTask \u003d new Deadline(taskName, deadline);","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"\t\tString expectedResult \u003d String.format(\"[D][ ] %s (by: Aug 27 2021)\", taskName);","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"\t\tassertEquals(expectedResult, deadlineTask.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"\t@Test","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"AllardQuek"},"content":"\tpublic void testDeadlineTaskIsCompleted() {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"AllardQuek"},"content":"\t\tString datetime \u003d \"2021-08-27\";","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"AllardQuek"},"content":"\t\tLocalDate deadline \u003d LocalDate.parse(datetime);","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"AllardQuek"},"content":"\t\tString taskName \u003d \"finish ip project\";","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"AllardQuek"},"content":"\t\tDeadline deadlineTask \u003d new Deadline(taskName, deadline);","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"AllardQuek"},"content":"\t\tdeadlineTask.setDone(true);","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"AllardQuek"},"content":"\t\tassertTrue(deadlineTask.isDone());","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"AllardQuek":30}},{"path":"src/test/java/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"class ToDoTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"\t@Test","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"\tpublic void testCreateTodoTaskDisplaysCorrectly() {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"\t\tToDo todoTask \u003d new ToDo(\"work\");","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"\t\tassertEquals(todoTask.toString(), \"[T][ ] work\");","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"\t@Test","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"AllardQuek"},"content":"\tpublic void testTodoTaskIsCompleted() {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"AllardQuek"},"content":"\t\tToDo todoTask \u003d new ToDo(\"work\");","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"AllardQuek"},"content":"\t\ttodoTask.setDone(true);","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"AllardQuek"},"content":"\t\tassertTrue(todoTask.isDone());","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"AllardQuek"},"content":"\t}","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"AllardQuek"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"AllardQuek":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AllardQuek"},"content":"blah","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"AllardQuek"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"AllardQuek"},"content":"todo good example item","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"AllardQuek"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"AllardQuek"},"content":"list all my items","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"AllardQuek"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"AllardQuek"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"AllardQuek"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"AllardQuek"},"content":"list items","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"AllardQuek"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"AllardQuek"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"AllardQuek"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"AllardQuek"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"AllardQuek"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"AllardQuek"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"AllardQuek":15}}]
