[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"    // These dependencies are used for JavaFX.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"javafx {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"    version \u003d \"15.0.1\"","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"    archiveVersion \u003d \"2.0\"","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"checkstyle {","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"    toolVersion \u003d \u00278.32\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"Joel-Sung":28,"-":41}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"import duke.exception.InvalidInstructionException;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"import duke.exception.StorageMissingException;","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"import duke.gui.Main;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":" * Represents a chat-bot named Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"    private final Parser parser;","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"     * Constructor.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"     * @param filePath File path of storage file.","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"            ArrayList\u003cString\u003e savedTasks \u003d storage.getStorageContents();","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"            taskList \u003d new TaskList(savedTasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"        } catch (StorageMissingException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"            ui.printException(e, \"\");","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"        } catch (InvalidInputException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"            ui.printException(e, \"Please check data in \" + filePath);","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"     * Saves the tasks in the task list into the storage file.","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"     * @throws IOException If unable to write to storage file.","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"    private void saveTasks() throws InvalidInputException, IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"        String contents \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"            Class\u003c? extends Task\u003e taskClass \u003d task.getClass();","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"            assert taskClass \u003d\u003d ToDo.class","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"                    || taskClass \u003d\u003d Deadline.class","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"                    || taskClass \u003d\u003d Event.class : taskClass.toString() + \"  is not a recognized task.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"            String type \u003d \"\" + task.getLabel();","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"            String details \u003d task.getDetails();","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"            String done \u003d task.isCompleted()","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Joel-Sung"},"content":"                    ? \"done\"","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"                    : \"not-done\";","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Joel-Sung"},"content":"            if (taskClass \u003d\u003d ToDo.class) {","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"Joel-Sung"},"content":"                contents +\u003d type + \u0027 \u0027 + done","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"Joel-Sung"},"content":"                        + \u0027\\n\u0027 + details;","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"Joel-Sung"},"content":"            } else if (taskClass \u003d\u003d Deadline.class) {","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"Joel-Sung"},"content":"                contents +\u003d type + \u0027 \u0027 + done","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"Joel-Sung"},"content":"                        + \u0027\\n\u0027 + details","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"Joel-Sung"},"content":"                        + \u0027\\n\u0027 + ((Deadline) task).getDeadline().format(DATE_TIME_FORMATTER);","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"Joel-Sung"},"content":"            } else if (taskClass \u003d\u003d Event.class) {","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"Joel-Sung"},"content":"                contents +\u003d type + \u0027 \u0027 + done","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"                        + \u0027\\n\u0027 + details","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"Joel-Sung"},"content":"                        + \u0027\\n\u0027 + ((Event) task).getTiming().format(DATE_TIME_FORMATTER) + \u0027-\u0027","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"Joel-Sung"},"content":"                        + ((Event) task).getEndTime().format(TIME_FORMATTER);","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"Joel-Sung"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"Joel-Sung"},"content":"            contents +\u003d System.lineSeparator();","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"Joel-Sung"},"content":"        storage.writeToStorage(contents, false);","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"Joel-Sung"},"content":"     * Gets Duke\u0027s response to the given input string.","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"Joel-Sung"},"content":"     * @param inputStr The user\u0027s input.","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"Joel-Sung"},"content":"     * @return 3 values: Duke\u0027s response,","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"Joel-Sung"},"content":"     * the appropriate task list to display and","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"Joel-Sung"},"content":"     * whether Duke\u0027s response is an error message.","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"Joel-Sung"},"content":"    public DukeResponse getResponse(String inputStr) {","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":106,"author":{"gitId":"Joel-Sung"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":107,"author":{"gitId":"Joel-Sung"},"content":"            HashMap\u003cString, Object\u003e input \u003d parser.parse(inputStr);","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"Joel-Sung"},"content":"            switch ((String) input.get(\"cmd\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"Joel-Sung"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-15"},{"lineNumber":111,"author":{"gitId":"Joel-Sung"},"content":"                saveTasks();","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"Joel-Sung"},"content":"                return new DukeResponse(ui.farewell(),","lastModifiedDate":"2021-09-11"},{"lineNumber":113,"author":{"gitId":"Joel-Sung"},"content":"                        null, false);","lastModifiedDate":"2021-09-11"},{"lineNumber":114,"author":{"gitId":"Joel-Sung"},"content":"            case \"list\":","lastModifiedDate":"2021-08-15"},{"lineNumber":115,"author":{"gitId":"Joel-Sung"},"content":"                return new DukeResponse(ui.listMsg(),","lastModifiedDate":"2021-09-11"},{"lineNumber":116,"author":{"gitId":"Joel-Sung"},"content":"                        getTasks(), false);","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"Joel-Sung"},"content":"            case \"done\":","lastModifiedDate":"2021-08-15"},{"lineNumber":118,"author":{"gitId":"Joel-Sung"},"content":"                taskList.completeTask((Integer) input.get(\"index\") - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"Joel-Sung"},"content":"                return new DukeResponse(ui.doneMsg(taskList.getTask((Integer) input.get(\"index\") - 1)),","lastModifiedDate":"2021-09-11"},{"lineNumber":120,"author":{"gitId":"Joel-Sung"},"content":"                        getTasks(), false);","lastModifiedDate":"2021-09-11"},{"lineNumber":121,"author":{"gitId":"Joel-Sung"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-15"},{"lineNumber":122,"author":{"gitId":"Joel-Sung"},"content":"                String reply \u003d ui.deleteMsg(taskList.getTask((Integer) input.get(\"index\") - 1));","lastModifiedDate":"2021-08-30"},{"lineNumber":123,"author":{"gitId":"Joel-Sung"},"content":"                taskList.deleteTask((Integer) input.get(\"index\") - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"Joel-Sung"},"content":"                return new DukeResponse(reply,","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"Joel-Sung"},"content":"                        getTasks(), false);","lastModifiedDate":"2021-09-11"},{"lineNumber":126,"author":{"gitId":"Joel-Sung"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"Joel-Sung"},"content":"                ToDo todo \u003d new ToDo((String) input.get(\"details\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"Joel-Sung"},"content":"                taskList.addTask(todo);","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"Joel-Sung"},"content":"                return new DukeResponse(ui.addTaskMsg(todo),","lastModifiedDate":"2021-09-11"},{"lineNumber":130,"author":{"gitId":"Joel-Sung"},"content":"                        getTasks(), false);","lastModifiedDate":"2021-09-11"},{"lineNumber":131,"author":{"gitId":"Joel-Sung"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"Joel-Sung"},"content":"                Deadline deadline;","lastModifiedDate":"2021-09-04"},{"lineNumber":133,"author":{"gitId":"Joel-Sung"},"content":"                deadline \u003d new Deadline((String) input.get(\"details\"), (String) input.get(\"deadline\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":134,"author":{"gitId":"Joel-Sung"},"content":"                taskList.addTask(deadline);","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"Joel-Sung"},"content":"                return new DukeResponse(ui.addTaskMsg(deadline),","lastModifiedDate":"2021-09-11"},{"lineNumber":136,"author":{"gitId":"Joel-Sung"},"content":"                        getTasks(), false);","lastModifiedDate":"2021-09-11"},{"lineNumber":137,"author":{"gitId":"Joel-Sung"},"content":"            case \"event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"Joel-Sung"},"content":"                Event event;","lastModifiedDate":"2021-09-04"},{"lineNumber":139,"author":{"gitId":"Joel-Sung"},"content":"                event \u003d new Event((String) input.get(\"details\"), (String) input.get(\"timing\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":140,"author":{"gitId":"Joel-Sung"},"content":"                taskList.addTask(event);","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"Joel-Sung"},"content":"                return new DukeResponse(ui.addTaskMsg(event),","lastModifiedDate":"2021-09-11"},{"lineNumber":142,"author":{"gitId":"Joel-Sung"},"content":"                        getTasks(), false);","lastModifiedDate":"2021-09-11"},{"lineNumber":143,"author":{"gitId":"Joel-Sung"},"content":"            case \"date\":","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"Joel-Sung"},"content":"                LocalDate date \u003d (LocalDate) input.get(\"date\");","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"Joel-Sung"},"content":"                return new DukeResponse(ui.matchingDate(date),","lastModifiedDate":"2021-09-11"},{"lineNumber":146,"author":{"gitId":"Joel-Sung"},"content":"                        getTasks(date), false);","lastModifiedDate":"2021-09-11"},{"lineNumber":147,"author":{"gitId":"Joel-Sung"},"content":"            case \"find\":","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"Joel-Sung"},"content":"                String keyword \u003d (String) input.get(\"keyword\");","lastModifiedDate":"2021-08-30"},{"lineNumber":149,"author":{"gitId":"Joel-Sung"},"content":"                return new DukeResponse(this.ui.matchingKeyword(keyword),","lastModifiedDate":"2021-09-11"},{"lineNumber":150,"author":{"gitId":"Joel-Sung"},"content":"                        getTasks(keyword), false);","lastModifiedDate":"2021-09-11"},{"lineNumber":151,"author":{"gitId":"Joel-Sung"},"content":"            case \"sort\":","lastModifiedDate":"2021-09-04"},{"lineNumber":152,"author":{"gitId":"Joel-Sung"},"content":"                boolean reverse \u003d (Boolean) input.get(\"reverse\");","lastModifiedDate":"2021-09-04"},{"lineNumber":153,"author":{"gitId":"Joel-Sung"},"content":"                taskList.sort(reverse);","lastModifiedDate":"2021-09-04"},{"lineNumber":154,"author":{"gitId":"Joel-Sung"},"content":"                return new DukeResponse(this.ui.sortMessage(reverse),","lastModifiedDate":"2021-09-11"},{"lineNumber":155,"author":{"gitId":"Joel-Sung"},"content":"                        getTasks(), false);","lastModifiedDate":"2021-09-11"},{"lineNumber":156,"author":{"gitId":"Joel-Sung"},"content":"            default:","lastModifiedDate":"2021-09-02"},{"lineNumber":157,"author":{"gitId":"Joel-Sung"},"content":"                throw new InvalidInstructionException((String) input.get(\"cmd\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":158,"author":{"gitId":"Joel-Sung"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":159,"author":{"gitId":"Joel-Sung"},"content":"        } catch (InvalidInputException | IOException | InvalidInstructionException","lastModifiedDate":"2021-09-11"},{"lineNumber":160,"author":{"gitId":"Joel-Sung"},"content":"                | IllegalStateException | NoSuchElementException | DateTimeParseException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":161,"author":{"gitId":"Joel-Sung"},"content":"            return new DukeResponse(ui.printException(e, \"\"),","lastModifiedDate":"2021-09-11"},{"lineNumber":162,"author":{"gitId":"Joel-Sung"},"content":"                    getTasks(), true);","lastModifiedDate":"2021-09-11"},{"lineNumber":163,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":164,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":165,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":166,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":167,"author":{"gitId":"Joel-Sung"},"content":"     * Returns a String representation of tasks in the task list.","lastModifiedDate":"2021-08-30"},{"lineNumber":168,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":169,"author":{"gitId":"Joel-Sung"},"content":"     * @return A String representing tasks in the task list.","lastModifiedDate":"2021-08-30"},{"lineNumber":170,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":171,"author":{"gitId":"Joel-Sung"},"content":"    public String getTasks() {","lastModifiedDate":"2021-08-30"},{"lineNumber":172,"author":{"gitId":"Joel-Sung"},"content":"        return taskList.getList();","lastModifiedDate":"2021-08-30"},{"lineNumber":173,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":174,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":175,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":176,"author":{"gitId":"Joel-Sung"},"content":"     * Returns a String representation of tasks that occur on the given date.","lastModifiedDate":"2021-08-30"},{"lineNumber":177,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":178,"author":{"gitId":"Joel-Sung"},"content":"     * @param date The date to filter the tasks by.","lastModifiedDate":"2021-08-30"},{"lineNumber":179,"author":{"gitId":"Joel-Sung"},"content":"     * @return A String representing tasks that occur on the given date.","lastModifiedDate":"2021-08-30"},{"lineNumber":180,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":181,"author":{"gitId":"Joel-Sung"},"content":"    public String getTasks(LocalDate date) {","lastModifiedDate":"2021-08-30"},{"lineNumber":182,"author":{"gitId":"Joel-Sung"},"content":"        return taskList.filterByDate(date);","lastModifiedDate":"2021-08-30"},{"lineNumber":183,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":184,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":185,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":186,"author":{"gitId":"Joel-Sung"},"content":"     * Returns a String representation of tasks that match the given keyword.","lastModifiedDate":"2021-08-30"},{"lineNumber":187,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":188,"author":{"gitId":"Joel-Sung"},"content":"     * @param keyword The keyword to filter the tasks by.","lastModifiedDate":"2021-08-30"},{"lineNumber":189,"author":{"gitId":"Joel-Sung"},"content":"     * @return A String representing tasks that match the given keyword.","lastModifiedDate":"2021-08-30"},{"lineNumber":190,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":191,"author":{"gitId":"Joel-Sung"},"content":"    public String getTasks(String keyword) {","lastModifiedDate":"2021-08-30"},{"lineNumber":192,"author":{"gitId":"Joel-Sung"},"content":"        return taskList.filterByKeyword(keyword);","lastModifiedDate":"2021-08-30"},{"lineNumber":193,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":194,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":195,"author":{"gitId":"Joel-Sung"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-23"},{"lineNumber":196,"author":{"gitId":"Joel-Sung"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Joel-Sung":195,"-":3}},{"path":"src/main/java/Duke/DukeResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package duke;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":" * This class represents Duke\u0027s response to the user input.","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":" * The class contains the relevant fields for the GUI to output.","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"public class DukeResponse {","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"    private final String response;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"    private final String listToPrint;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"    private final Boolean isErrorMessage;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"     * Constructor.","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"     * @param response Duke\u0027s response to the user input.","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"     * @param listToPrint The appropriate list of tasks to print.","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"     * @param isErrorMessage Whether Duke\u0027s response is an error message","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"    public DukeResponse(String response, String listToPrint, boolean isErrorMessage) {","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"        this.response \u003d response;","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"        this.listToPrint \u003d listToPrint;","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"        this.isErrorMessage \u003d isErrorMessage;","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"     * Gets Duke\u0027s response.","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"     * @return Duke\u0027s response.","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"    public String getResponse() {","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"        return response;","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"     * Gets the appropriate list of tasks to print.","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"     * @return The list of tasks to print.","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"    public String getListToPrint() {","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"        return listToPrint;","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"     * Checks if Duke\u0027s response is an error message.","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"     * @return True if Duke\u0027s response is an error message; false otherwise.","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"    public Boolean isErrorMessage() {","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"        return isErrorMessage;","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"Joel-Sung":51}},{"path":"src/main/java/Duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":" * Represents exceptions unique to Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"    public DukeException(String str) {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"        super(str);","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Joel-Sung":10}},{"path":"src/main/java/Duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":" * Represents an invalid input. Thrown when user input is invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"    private String err;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"     * Constructor.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"     * @param str The invalid input.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"    public InvalidInputException(String str) {","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"        super(str);","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"        this.err \u003d str;","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"     * Returns a String representation of the exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"     * @return String representation of the exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"        return \"Invalid input: \" + err;","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Joel-Sung":29}},{"path":"src/main/java/Duke/exception/InvalidInstructionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":" * Represents an invalid instruction. Thrown when user input is an invalid instruction.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"public class InvalidInstructionException extends DukeException {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"    private String instruction;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"     * Constructor.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"     * @param str The invalid instruction.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"    public InvalidInstructionException(String str) {","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"        super(str);","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"        instruction \u003d str;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"     * Returns a String representation of the exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"     * @return String representation of the exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"        return \"Invalid instruction: \" + instruction + \" is not a valid instruction.\";","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Joel-Sung":29}},{"path":"src/main/java/Duke/exception/StorageMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package duke.exception;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":" * Exception is thrown if storage is missing and cannot be created.","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"public class StorageMissingException extends DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"    private String message;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"     * Constructor.","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"     * @param str Exception message to be printed.","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"    public StorageMissingException(String str) {","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"        super(str);","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"        message \u003d str;","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"     * Returns a String representation of the exception.","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"     * @return String representation of the exception.","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"    public String toString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"        return \"Invalid instruction: \" + message + \" is not a valid instruction.\";","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"Joel-Sung":29}},{"path":"src/main/java/Duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package duke.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":" * Adapted from JavaFX tutorial 4: https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"    private DialogBox(String text, Image img, String textBackgroundColor) {","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"        dialog.setStyle(","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"                \"-fx-background-radius: 30px; \"","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"                + \"-fx-background-color: \" + textBackgroundColor + \";\"","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"                + \" -fx-padding: 20;\");","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"        Circle circlePicture \u003d new Circle(60, 50, 50);","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"        displayPicture.setClip(circlePicture);","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"    private void flip() {","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"     * Creates a dialog box from the user.","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"     * @param text Text for label.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"     * @param img User\u0027s image.","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"     * @return A dialog box with the given text and image.","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"        return new DialogBox(text, img, \"rgba(0, 200, 255, 0.3)\");","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"     * Creates a dialog box from Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"     * Dialog box is flipped.","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"Joel-Sung"},"content":"     * @param text Text for label.","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"     * @param img Duke\u0027s image.","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"Joel-Sung"},"content":"     * @return A dialog box with the given text and image.","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"Joel-Sung"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"Joel-Sung"},"content":"        var db \u003d new DialogBox(text, img, \"rgba(0, 255, 0, 0.3)\");","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"Joel-Sung"},"content":"        db.flip();","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"Joel-Sung"},"content":"        return db;","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"     * Creates a dialog box from Duke that informs the user of an error.","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"Joel-Sung"},"content":"     * Dialog box is flipped.","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"Joel-Sung"},"content":"     * @param text Text for label.","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"Joel-Sung"},"content":"     * @param img Duke\u0027s image.","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"Joel-Sung"},"content":"     * @return A dialog box with the given text and image.","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"Joel-Sung"},"content":"    public static DialogBox getErrorDialog(String text, Image img) {","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"Joel-Sung"},"content":"        var db \u003d new DialogBox(text, img, \"rgba(255, 0, 0, 0.3)\");","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"Joel-Sung"},"content":"        db.flip();","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"Joel-Sung"},"content":"        return db;","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Joel-Sung":99}},{"path":"src/main/java/Duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package duke.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":" * Main skeleton adapted from JavaFX tutorial 4: https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"    private Duke duke \u003d new Duke(\"taskList.txt\");","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"     * Launches the GUI.","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"     * @param stage Stage to hold the GUI scene.","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"            ScrollPane dialogPane \u003d (ScrollPane) ap.getChildren().get(2);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"            VBox dialogContainer \u003d (VBox) dialogPane.getContent().lookup(\"#dialogContainer\");","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"                    DialogBox.getDukeDialog(\"Hello! I\u0027m Duke!\\nWhat can I do for you?\",","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"                            new Image(Objects","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"                                    .requireNonNull(this.getClass().getResourceAsStream(\"/images/dog.jpg\"))))","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"            );","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"            ScrollPane feedbackPane \u003d (ScrollPane) ap.getChildren().get(3);","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"            Label feedback \u003d (Label) feedbackPane.getContent().lookup(\"#feedback\");","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"            feedback.setText(duke.getTasks());","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"            stage.setResizable(false);","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"            stage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"     * Exits the GUI.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"    public static void exit() {","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"            Thread.sleep(1000);","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"        Platform.exit();","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Joel-Sung":75}},{"path":"src/main/java/Duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package duke.gui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import duke.DukeResponse;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":" * Adapted from JavaFX tutorial 4: https://se-education.org/guides/tutorials/javaFxPart4.html","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"    private Label feedback;","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cat.jpg\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dog.jpg\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"     * Updates the feedback node with the appropriate list of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"        DukeResponse response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"        DialogBox dukeDialog \u003d response.isErrorMessage()","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"                ? DialogBox.getErrorDialog(response.getResponse(), dukeImage)","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"                : DialogBox.getDukeDialog(response.getResponse(), dukeImage);","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"                dukeDialog","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"        if (response.getListToPrint() \u003d\u003d null) {","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"            new Thread(Main::exit).start();","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"        } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"            feedback.setText(response.getListToPrint());","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Joel-Sung":75}},{"path":"src/main/java/Duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package duke.parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"import duke.exception.InvalidInstructionException;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":" * Represents the parser of user inputs for Duke. Parses user input for Duke to respond to.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"    public Parser() {}","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"     * Gets the index of the center token in the input string.","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"     * @param center The center token.","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"     * @param input The input string.","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"     * @return The index of the center token.","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"     * @throws InvalidInputException Thrown when the center token does not exist","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"     * or when the input string is empty.","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"    private int getCenterIndex(String center, String input) throws InvalidInputException {","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"        if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"            throw new InvalidInputException(\"Task description is missing in input.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"        int centerIndex \u003d input.indexOf(center);","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"        if (centerIndex \u003d\u003d -1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"            throw new InvalidInputException(center + \" is missing in input.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"        return centerIndex;","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"     * Gets the input before the center token in the input string.","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"     * @param input The input string.","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"     * @param centerIndex The index of the center token.","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"     * @return The input before the center token.","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"     * @throws InvalidInputException Thrown when there is no input before the center token.","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"    private String inputBeforeCenter(String input, int centerIndex) throws InvalidInputException {","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"        String strBeforeCenter \u003d input.substring(0, centerIndex).trim();","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"        if (strBeforeCenter.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"            throw new InvalidInputException(\"There must be details before the center.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"        return strBeforeCenter;","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"     * Gets the input after the center token in the input string.","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"     * @param input The input string.","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"     * @param centerIndex The index of the center token.","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"     * @param centerLength The length of the center token.","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"     * @return The input after the center token.","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"     * @throws InvalidInputException Thrown when there is no input after the center token.","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"    private String inputAfterCenter(String input, int centerIndex, int centerLength) throws InvalidInputException {","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"        String strAfterCenter \u003d input.substring(centerIndex).trim();","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"        if (strAfterCenter.length() \u003c\u003d centerLength) {","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"            throw new InvalidInputException(\"There must be details after the center.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"        return strAfterCenter.substring(centerLength).trim();","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"     * Parse user input and divides it into the necessary components needed for Duke to respond accordingly.","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"Joel-Sung"},"content":"     * @param input User input.","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"     * @return HashMap containing the necessary information for Duke to respond to the input.","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"Joel-Sung"},"content":"     * @throws InvalidInputException If user input is invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"Joel-Sung"},"content":"     * @throws InvalidInstructionException If user input is an invalid instruction.","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"Joel-Sung"},"content":"     * @throws IllegalStateException Exception thrown by the scanner.","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"Joel-Sung"},"content":"     * @throws NoSuchElementException Exception thrown by the scanner.","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"Joel-Sung"},"content":"    public HashMap\u003cString, Object\u003e parse(String input)","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"Joel-Sung"},"content":"            throws InvalidInputException, InvalidInstructionException, IllegalStateException, NoSuchElementException {","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"Joel-Sung"},"content":"        HashMap\u003cString, Object\u003e data \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"        Scanner scanner \u003d new Scanner(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"Joel-Sung"},"content":"        String cmd \u003d scanner.next();","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"Joel-Sung"},"content":"        data.put(\"cmd\", cmd);","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"Joel-Sung"},"content":"        if (Objects.equals(cmd, \"bye\")","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"Joel-Sung"},"content":"                || Objects.equals(cmd, \"list\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"Joel-Sung"},"content":"            return data;","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"Joel-Sung"},"content":"        assert !Objects.equals(cmd, \"bye\")","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"Joel-Sung"},"content":"                \u0026\u0026 !Objects.equals(cmd, \"list\") : cmd + \" should have been returned.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"Joel-Sung"},"content":"        input \u003d input.substring(input.indexOf(cmd) + cmd.length()).trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"Joel-Sung"},"content":"        switch (cmd) {","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"Joel-Sung"},"content":"        case \"done\":","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"Joel-Sung"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"Joel-Sung"},"content":"                int doneIndex \u003d Integer.parseInt(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"Joel-Sung"},"content":"                data.put(\"index\", doneIndex);","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"Joel-Sung"},"content":"                return data;","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"Joel-Sung"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"Joel-Sung"},"content":"                throw new InvalidInputException(\"To complete a task: enter \\\"done (task number)\\\"\");","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"Joel-Sung"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"Joel-Sung"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"Joel-Sung"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"Joel-Sung"},"content":"                int deleteIndex \u003d Integer.parseInt(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"Joel-Sung"},"content":"                data.put(\"index\", deleteIndex);","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"Joel-Sung"},"content":"                return data;","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"Joel-Sung"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"Joel-Sung"},"content":"                throw new InvalidInputException(\"To delete a task: enter \\\"delete (task number)\\\"\");","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"Joel-Sung"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"Joel-Sung"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"Joel-Sung"},"content":"            getCenterIndex(\"\", input);","lastModifiedDate":"2021-09-04"},{"lineNumber":118,"author":{"gitId":"Joel-Sung"},"content":"            data.put(\"details\", input);","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"Joel-Sung"},"content":"            return data;","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"Joel-Sung"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"Joel-Sung"},"content":"            int byIndex \u003d getCenterIndex(\"/by\", input);","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"Joel-Sung"},"content":"            String deadlineDetails \u003d inputBeforeCenter(input, byIndex);","lastModifiedDate":"2021-09-04"},{"lineNumber":123,"author":{"gitId":"Joel-Sung"},"content":"            String deadline \u003d inputAfterCenter(input, byIndex, 3);","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"Joel-Sung"},"content":"            data.put(\"details\", deadlineDetails);","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"Joel-Sung"},"content":"            data.put(\"deadline\", deadline);","lastModifiedDate":"2021-09-04"},{"lineNumber":126,"author":{"gitId":"Joel-Sung"},"content":"            return data;","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"Joel-Sung"},"content":"        case \"event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"Joel-Sung"},"content":"            int atIndex \u003d getCenterIndex(\"/at\", input);","lastModifiedDate":"2021-09-04"},{"lineNumber":129,"author":{"gitId":"Joel-Sung"},"content":"            String eventDetails \u003d inputBeforeCenter(input, atIndex);","lastModifiedDate":"2021-09-04"},{"lineNumber":130,"author":{"gitId":"Joel-Sung"},"content":"            String timing \u003d inputAfterCenter(input, atIndex, 3);","lastModifiedDate":"2021-09-04"},{"lineNumber":131,"author":{"gitId":"Joel-Sung"},"content":"            data.put(\"details\", eventDetails);","lastModifiedDate":"2021-09-04"},{"lineNumber":132,"author":{"gitId":"Joel-Sung"},"content":"            data.put(\"timing\", timing);","lastModifiedDate":"2021-09-04"},{"lineNumber":133,"author":{"gitId":"Joel-Sung"},"content":"            return data;","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"Joel-Sung"},"content":"        case \"date\":","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"Joel-Sung"},"content":"            try {","lastModifiedDate":"2021-08-30"},{"lineNumber":136,"author":{"gitId":"Joel-Sung"},"content":"                LocalDate date \u003d LocalDate.parse(input, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":137,"author":{"gitId":"Joel-Sung"},"content":"                data.put(\"date\", date);","lastModifiedDate":"2021-08-30"},{"lineNumber":138,"author":{"gitId":"Joel-Sung"},"content":"                return data;","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"Joel-Sung"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":140,"author":{"gitId":"Joel-Sung"},"content":"                throw new InvalidInputException(","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"Joel-Sung"},"content":"                        \"Enter the date after \\\"date\\\" in this format: YYYY-MM-DD.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":142,"author":{"gitId":"Joel-Sung"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"Joel-Sung"},"content":"        case \"find\":","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"Joel-Sung"},"content":"            data.put(\"keyword\", input);","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"Joel-Sung"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"Joel-Sung"},"content":"        case \"sort\":","lastModifiedDate":"2021-09-04"},{"lineNumber":147,"author":{"gitId":"Joel-Sung"},"content":"            if (input.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-04"},{"lineNumber":148,"author":{"gitId":"Joel-Sung"},"content":"                data.put(\"reverse\", false);","lastModifiedDate":"2021-09-04"},{"lineNumber":149,"author":{"gitId":"Joel-Sung"},"content":"            } else if (input.equals(\"reverse\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":150,"author":{"gitId":"Joel-Sung"},"content":"                data.put(\"reverse\", true);","lastModifiedDate":"2021-09-04"},{"lineNumber":151,"author":{"gitId":"Joel-Sung"},"content":"            } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":152,"author":{"gitId":"Joel-Sung"},"content":"                throw new InvalidInputException(\"Enter \\\"sort\\\" to sort the task list.\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":153,"author":{"gitId":"Joel-Sung"},"content":"                        + \"Enter \\\"sort reverse\\\" to sort the task list in reverse order.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":154,"author":{"gitId":"Joel-Sung"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":155,"author":{"gitId":"Joel-Sung"},"content":"            break;","lastModifiedDate":"2021-09-04"},{"lineNumber":156,"author":{"gitId":"Joel-Sung"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"Joel-Sung"},"content":"            throw new InvalidInstructionException(cmd);","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"Joel-Sung"},"content":"        return data;","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Joel-Sung":162}},{"path":"src/main/java/Duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package duke.storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import duke.exception.StorageMissingException;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":" * Represents the storage for Duke. Deals with Duke operations with stored data.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"    private final String filePath;","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"     * Gets the contents of the storage file.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"     * Returns an empty ArrayList if there is no stored content or file does not exist.","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"     * @return ArrayList of Strings representing Tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"     * @throws StorageMissingException If file does not exist and cannot be created.","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"    public ArrayList\u003cString\u003e getStorageContents() throws StorageMissingException {","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"        Scanner scanner;","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"            scanner \u003d new Scanner(file);","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"            try {","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"                file.createNewFile();","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"                return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"                throw new StorageMissingException(filePath + \" cannot be found and cannot be created. \"","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"                        + \"Entered tasks will not be saved.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"        ArrayList\u003cString\u003e contents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"            contents.add(scanner.nextLine());","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"        return contents;","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"     * Stores content into storage file.","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"     * @param content Content to be stored.","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"     * @param append Whether content should be appended to the file, or to overwrite the file.","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"     * @throws IOException If file could not be written to.","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"    public void writeToStorage(String content, boolean append) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"        FileWriter fw \u003d new FileWriter(filePath, append);","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"        fw.write(content);","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"        fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Joel-Sung":63}},{"path":"src/main/java/Duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":" * Represents a deadline task. A deadline task has to be completed by a certain date and time.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"    private static final char LABEL \u003d \u0027D\u0027;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd hh:mm a\");","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"     * Constructor.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"     * @param details Details of the deadline task.","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"     * @param deadline Deadline of the deadline task.","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"    public Deadline(String details, String deadline) throws InvalidInputException {","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"        super(LABEL, details);","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"            this.deadline \u003d LocalDateTime.parse(deadline, INPUT_FORMATTER);","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"            throw new InvalidInputException(\"To create an Deadline task, \"","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"                    + \"Date and Time should be in the format: yyyy-mm-dd (24hr time).\");","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"     * Returns deadline of task.","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"     * @return Task deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"        return deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"     * Returns date of task.","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"     * @return Task deadline.","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"        return getDeadline();","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"     * Returns a String representation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"        return \"[\" + LABEL + \"]\" + super.toString() + \" (by: \" + deadline.format(OUTPUT_FORMATTER) + \")\";","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Joel-Sung":63}},{"path":"src/main/java/Duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":" * Represents an event task. An event task has a start and end time.","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"    private static final char LABEL \u003d \u0027E\u0027;","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"    private static final DateTimeFormatter INPUT_DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"    private static final DateTimeFormatter INPUT_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    private static final DateTimeFormatter OUTPUT_DATE_TIME_FORMATTER \u003d DateTimeFormatter","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"            .ofPattern(\"yyyy-MM-dd hh:mm a\");","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"    private static final DateTimeFormatter OUTPUT_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    private final LocalDateTime timing;","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"     * Constructor.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"     * @param details Details of the event task.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"     * @param timing Timing of the event task.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"    public Event(String details, String timing) throws InvalidInputException {","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"        super(LABEL, details);","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"            this.timing \u003d LocalDateTime.parse(timing.substring(0, 15),","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"                    INPUT_DATE_TIME_FORMATTER);","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"            endTime \u003d LocalTime.parse(timing.substring(16),","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"                    INPUT_TIME_FORMATTER);","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"        } catch (DateTimeParseException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"            throw new InvalidInputException(\"To create an Event task, \"","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"                    + \"date and time should be in the format: yyyy-mm-dd (24hr time)-(24hr time).\");","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"     * Returns timing of task.","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"     * @return Task timing.","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"    public LocalDateTime getTiming() {","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"        return timing;","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"     * Returns date of task.","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"     * @return Task timing.","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"        return getTiming();","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"     * Returns end time of task.","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"     * @return Task end time.","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"        return endTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"     * Returns a String representation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"Joel-Sung"},"content":"        return \"[\" + LABEL + \"]\" + super.toString() + \" (at: \"","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"Joel-Sung"},"content":"                + timing.format(OUTPUT_DATE_TIME_FORMATTER) + \"-\" + endTime.format(OUTPUT_TIME_FORMATTER)","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"Joel-Sung"},"content":"                + \")\";","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Joel-Sung":82}},{"path":"src/main/java/Duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":" * Represents a task.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"public abstract class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"    private final char label;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"    private final String details;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"    private boolean completed;","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"     * Constructor.","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"     * @param label Task label.","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"     * @param details Details of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"    public Task(char label, String details) {","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"        this.label \u003d label;","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"        this.details \u003d details;","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"        completed \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"     * Completes task.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"    public void complete() {","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"        completed \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"     * Checks if task is completed.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"     * @return True if completed; false otherwise.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"        return completed;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"     * Returns task details.","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"     * @return Task details.","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"    public String getDetails() {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"        return details;","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"     * Returns date of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"     * @return Task date.","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"    public abstract LocalDateTime getDate();","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"     * Returns task label.","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"     * @return Task label.","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"    public char getLabel() {","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"        return label;","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"     * Returns a String representation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"        String status \u003d completed","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"                ? \"[X]\"","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"                : \"[ ]\";","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"Joel-Sung"},"content":"        return status","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"                + \" \"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"Joel-Sung"},"content":"                + details;","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"Joel-Sung"},"content":"     * Compares this task to another task by date.","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"Joel-Sung"},"content":"     * A task without a date is smaller than a task with a date.","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"Joel-Sung"},"content":"     * A completed task is smaller than an incomplete task.","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"Joel-Sung"},"content":"     * @param task The other task to be compared to.","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"     * @return -1 if this task occurs at an earlier date;","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"Joel-Sung"},"content":"     * 0 if the tasks occur on the same date;","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"Joel-Sung"},"content":"     * 1 if this task occurs at a later date.","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"Joel-Sung"},"content":"    public int compareTo(Task task) {","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"Joel-Sung"},"content":"        if (!(this.isCompleted() \u0026\u0026 task.isCompleted())) {","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"Joel-Sung"},"content":"            if (this.isCompleted()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"Joel-Sung"},"content":"                return -1;","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"Joel-Sung"},"content":"            } else if (task.isCompleted()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"Joel-Sung"},"content":"                return 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"Joel-Sung"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"Joel-Sung"},"content":"        LocalDateTime myDate \u003d this.getDate();","lastModifiedDate":"2021-09-04"},{"lineNumber":101,"author":{"gitId":"Joel-Sung"},"content":"        LocalDateTime yourDate \u003d task.getDate();","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"Joel-Sung"},"content":"        if (myDate \u003d\u003d null \u0026\u0026 yourDate \u003d\u003d null) {","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"Joel-Sung"},"content":"            return 0;","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"Joel-Sung"},"content":"        } else if (myDate \u003d\u003d null) {","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"Joel-Sung"},"content":"            return -1;","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"Joel-Sung"},"content":"        } else if (yourDate \u003d\u003d null) {","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"Joel-Sung"},"content":"            return 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"Joel-Sung"},"content":"        return myDate.compareTo(yourDate);","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Joel-Sung":111}},{"path":"src/main/java/Duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":" * Represents a todo task. A todo task only has a task description.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"    private static final char LABEL \u003d \u0027T\u0027;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"     * Constructor.","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"     * @param details Details of the todo task.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"    public ToDo(String details) {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"        super(LABEL, details);","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"     * Returns date of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"     * ToDo task has no date.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"     * @return null.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"    public LocalDateTime getDate() {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"        return null;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"     * Returns a String representation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"        return \"[\" + LABEL + \"]\" + super.toString();","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Joel-Sung":40}},{"path":"src/main/java/Duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package duke.tasklist;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import java.util.List;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":" * Represents a list of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"     * Constructor for when there are previously saved tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"     * Initializes the task list with previously saved tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"     * @param initial The list of previously saved tasks in String form.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"    public TaskList(List\u003cString\u003e initial) throws InvalidInputException {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"        Scanner scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"        for (int i \u003d 0; i \u003c initial.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"            scanner \u003d new Scanner(initial.get(i));","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"            String task \u003d scanner.next();","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"            String done \u003d scanner.nextLine().trim();","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"            String details \u003d initial.get(++i);","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"            switch (task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"            case \"T\":","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"                taskList.add(new ToDo(details));","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"            case \"D\":","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"                String deadline \u003d initial.get(++i);","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"                taskList.add(new Deadline(details, deadline));","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"            case \"E\":","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"                String timing \u003d initial.get(++i);","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"                taskList.add(new Event(details, timing));","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"            default:","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"                throw new InvalidInputException(\"Task \" + task + \" is unrecognized by Duke.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"            if (Objects.equals(done, \"done\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"                taskList.get(taskList.size() - 1).complete();","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"     * Constructor for when there are no previously saved tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"Joel-Sung"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"Joel-Sung"},"content":"     * Returns the tasks in the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"Joel-Sung"},"content":"     * @return The tasks in the list as a String.","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"Joel-Sung"},"content":"    public String getList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"Joel-Sung"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"            return \"There are no items in the task list.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"Joel-Sung"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"Joel-Sung"},"content":"            String list \u003d \"Tasks in task list:\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"Joel-Sung"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"Joel-Sung"},"content":"                list +\u003d \"\\t\" + (i + 1) + \". \" + taskList.get(i).toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"Joel-Sung"},"content":"                if (i !\u003d taskList.size() - 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"Joel-Sung"},"content":"                    list +\u003d \"\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"Joel-Sung"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"Joel-Sung"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"Joel-Sung"},"content":"            return list;","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"Joel-Sung"},"content":"     * Completes a task in the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"Joel-Sung"},"content":"     * @param index The index of the task to be completed.","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"Joel-Sung"},"content":"     * @throws IndexOutOfBoundsException If index exceeds the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"Joel-Sung"},"content":"    public void completeTask(int index) throws InvalidInputException {","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"Joel-Sung"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":108,"author":{"gitId":"Joel-Sung"},"content":"            taskList.get(index)","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"Joel-Sung"},"content":"                    .complete();","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"Joel-Sung"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"Joel-Sung"},"content":"            throw new InvalidInputException(\"Task number does not exist. Complete failed.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":113,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"Joel-Sung"},"content":"     * Deletes a task in the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"Joel-Sung"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"Joel-Sung"},"content":"     * @throws IndexOutOfBoundsException If index exceeds the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"Joel-Sung"},"content":"    public void deleteTask(int index) throws InvalidInputException {","lastModifiedDate":"2021-09-11"},{"lineNumber":122,"author":{"gitId":"Joel-Sung"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":123,"author":{"gitId":"Joel-Sung"},"content":"            taskList.remove(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"Joel-Sung"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"Joel-Sung"},"content":"            throw new InvalidInputException(\"Task number does not exist. Delete failed.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":126,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":127,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"Joel-Sung"},"content":"     * Returns a task in the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"Joel-Sung"},"content":"     * @param index The index of the task to be returned.","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"Joel-Sung"},"content":"     * @return The task at the given index.","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"Joel-Sung"},"content":"     * @throws IndexOutOfBoundsException If index exceeds the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"Joel-Sung"},"content":"    public Task getTask(int index) throws InvalidInputException {","lastModifiedDate":"2021-09-11"},{"lineNumber":137,"author":{"gitId":"Joel-Sung"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":138,"author":{"gitId":"Joel-Sung"},"content":"            return taskList.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"Joel-Sung"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":140,"author":{"gitId":"Joel-Sung"},"content":"            throw new InvalidInputException(\"Task number does not exist. Unable to get task.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":141,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":142,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"Joel-Sung"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"Joel-Sung"},"content":"     * @return The size of the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"Joel-Sung"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"Joel-Sung"},"content":"        return taskList.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"Joel-Sung"},"content":"     * Returns the tasks that match the given keyword.","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"Joel-Sung"},"content":"     * @param keyword The keyword to match the tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"Joel-Sung"},"content":"     * @return A list of tasks that match the given keyword.","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"Joel-Sung"},"content":"    public String filterByKeyword(String keyword) {","lastModifiedDate":"2021-08-30"},{"lineNumber":160,"author":{"gitId":"Joel-Sung"},"content":"        String list \u003d \"Tasks that contain \" + keyword + \":\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":161,"author":{"gitId":"Joel-Sung"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"Joel-Sung"},"content":"            if (taskList.get(i).getDetails().contains(keyword)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"Joel-Sung"},"content":"                list +\u003d \"\\t\" + (i + 1) + \". \" + taskList.get(i).toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":164,"author":{"gitId":"Joel-Sung"},"content":"                if (i !\u003d taskList.size() - 1) {","lastModifiedDate":"2021-08-30"},{"lineNumber":165,"author":{"gitId":"Joel-Sung"},"content":"                    list +\u003d \"\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":166,"author":{"gitId":"Joel-Sung"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":167,"author":{"gitId":"Joel-Sung"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":168,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":169,"author":{"gitId":"Joel-Sung"},"content":"        return list;","lastModifiedDate":"2021-08-30"},{"lineNumber":170,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":171,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":172,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":173,"author":{"gitId":"Joel-Sung"},"content":"     * Returns the tasks that occur on the given date.","lastModifiedDate":"2021-08-30"},{"lineNumber":174,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":175,"author":{"gitId":"Joel-Sung"},"content":"     * @param date The date to filter by.","lastModifiedDate":"2021-08-30"},{"lineNumber":176,"author":{"gitId":"Joel-Sung"},"content":"     * @return A list of tasks that occur on the given date.","lastModifiedDate":"2021-08-30"},{"lineNumber":177,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":178,"author":{"gitId":"Joel-Sung"},"content":"    public String filterByDate(LocalDate date) {","lastModifiedDate":"2021-08-30"},{"lineNumber":179,"author":{"gitId":"Joel-Sung"},"content":"        String list \u003d \"Tasks that occur on \" + date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\")) + \":\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":180,"author":{"gitId":"Joel-Sung"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-30"},{"lineNumber":181,"author":{"gitId":"Joel-Sung"},"content":"            LocalDateTime taskDateTime \u003d taskList.get(i).getDate();","lastModifiedDate":"2021-08-30"},{"lineNumber":182,"author":{"gitId":"Joel-Sung"},"content":"            LocalDate taskDate \u003d taskDateTime \u003d\u003d null","lastModifiedDate":"2021-08-30"},{"lineNumber":183,"author":{"gitId":"Joel-Sung"},"content":"                    ? null","lastModifiedDate":"2021-08-30"},{"lineNumber":184,"author":{"gitId":"Joel-Sung"},"content":"                    : taskDateTime.toLocalDate();","lastModifiedDate":"2021-08-30"},{"lineNumber":185,"author":{"gitId":"Joel-Sung"},"content":"            if (date.equals(taskDate)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":186,"author":{"gitId":"Joel-Sung"},"content":"                list +\u003d \"\\t\" + (i + 1) + \". \" + taskList.get(i).toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":187,"author":{"gitId":"Joel-Sung"},"content":"                if (i !\u003d taskList.size() - 1) {","lastModifiedDate":"2021-08-30"},{"lineNumber":188,"author":{"gitId":"Joel-Sung"},"content":"                    list +\u003d \"\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":189,"author":{"gitId":"Joel-Sung"},"content":"                }","lastModifiedDate":"2021-08-30"},{"lineNumber":190,"author":{"gitId":"Joel-Sung"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":191,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":192,"author":{"gitId":"Joel-Sung"},"content":"        return list;","lastModifiedDate":"2021-08-30"},{"lineNumber":193,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":194,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":195,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":196,"author":{"gitId":"Joel-Sung"},"content":"     * Sorts the task list.","lastModifiedDate":"2021-09-04"},{"lineNumber":197,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":198,"author":{"gitId":"Joel-Sung"},"content":"     * @param reverse Reverse the order of the task list if true.","lastModifiedDate":"2021-09-04"},{"lineNumber":199,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":200,"author":{"gitId":"Joel-Sung"},"content":"    public void sort(boolean reverse) {","lastModifiedDate":"2021-09-04"},{"lineNumber":201,"author":{"gitId":"Joel-Sung"},"content":"        Comparator\u003cTask\u003e comparator \u003d (Task t1, Task t2) -\u003e {","lastModifiedDate":"2021-09-04"},{"lineNumber":202,"author":{"gitId":"Joel-Sung"},"content":"            return reverse","lastModifiedDate":"2021-09-04"},{"lineNumber":203,"author":{"gitId":"Joel-Sung"},"content":"                    ? (t1.compareTo(t2) * -1)","lastModifiedDate":"2021-09-04"},{"lineNumber":204,"author":{"gitId":"Joel-Sung"},"content":"                    : t1.compareTo(t2);","lastModifiedDate":"2021-09-04"},{"lineNumber":205,"author":{"gitId":"Joel-Sung"},"content":"        };","lastModifiedDate":"2021-09-04"},{"lineNumber":206,"author":{"gitId":"Joel-Sung"},"content":"        taskList.sort(comparator);","lastModifiedDate":"2021-09-04"},{"lineNumber":207,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":208,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Joel-Sung":208}},{"path":"src/main/java/Duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package duke.ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":" * Represents the user interface of Duke. Deals with Duke\u0027s interaction with the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"    public Ui() {}","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"     * Prints a farewell message.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"     * @return A farewell message.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    public String farewell() {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"     * Prints a message saying the task list has been displayed.","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"     * @return A message saying the task list has been displayed.","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"    public String listMsg() {","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"        return \"The tasks currently stored in the task list is shown on the right!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"     * Prints a done message.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"     * When user inputs a done instruction.","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"     * @param task The task marked as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"     * @return A message informing which task is done.","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"    public String doneMsg(Task task) {","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"                + \"\\t\" + task.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"     * Prints a delete message.","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"     * When user inputs a delete instruction.","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"     * @param task The task deleted.","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"     * @return A message informing which task is deleted.","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"    public String deleteMsg(Task task) {","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"        return \"Noted. I\u0027ve removed this task: \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"                + \"\\t\" + task.toString() + \"\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"     * Prints a add task message.","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"     * When user inputs a add task instruction.","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"     * @param task The task added.","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"     * @return A message informing the task has been added.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"    public String addTaskMsg(Task task) {","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"                + \"\\t\" + task.toString() + \"\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"     * Prints a message saying the tasks that match the given keyword has been displayed.","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"     * @param keyword The keyword that the tasks match.","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"     * @return A message saying the tasks that match the given keyword has been displayed.","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"    public String matchingKeyword(String keyword) {","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"Joel-Sung"},"content":"        String text \u003d \"Tasks that match \\\"\" + keyword + \"\\\" are displayed on your right!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"Joel-Sung"},"content":"        return text;","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"Joel-Sung"},"content":"     * Prints a message saying the tasks that occur on the given date has been displayed.","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"Joel-Sung"},"content":"     * @param date Matching tasks to be printed.","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"Joel-Sung"},"content":"     * @return A message saying the tasks that match the given keyword has been displayed.","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"Joel-Sung"},"content":"    public String matchingDate(LocalDate date) {","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"Joel-Sung"},"content":"        String text \u003d \"Tasks happening on \"","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"Joel-Sung"},"content":"                + date.format(DATE_FORMATTER)","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"Joel-Sung"},"content":"                + \" are displayed on your right!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"Joel-Sung"},"content":"        return text;","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"Joel-Sung"},"content":"     * Prints a sort message.","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"Joel-Sung"},"content":"     * @param reverse Indicates if the tasks are sorted in reverse order.","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"Joel-Sung"},"content":"     * @return A message informing the user that the tasks are sorted.","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":101,"author":{"gitId":"Joel-Sung"},"content":"    public String sortMessage(boolean reverse) {","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"Joel-Sung"},"content":"        return reverse","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"Joel-Sung"},"content":"                ? \"Tasks are sorted by date in reverse order.\"","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"Joel-Sung"},"content":"                : \"Tasks are sorted by date.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"Joel-Sung"},"content":"     * Prints an exception message.","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"Joel-Sung"},"content":"     * @param e The Exception.","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"Joel-Sung"},"content":"     * @param extra Extra details about the exception.","lastModifiedDate":"2021-09-02"},{"lineNumber":112,"author":{"gitId":"Joel-Sung"},"content":"     * @return An exception message.","lastModifiedDate":"2021-08-30"},{"lineNumber":113,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"Joel-Sung"},"content":"    public String printException(Exception e, String extra) {","lastModifiedDate":"2021-09-02"},{"lineNumber":115,"author":{"gitId":"Joel-Sung"},"content":"        String errorMessage \u003d \"ERROR ERROR ERROR ERROR ERROR\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":116,"author":{"gitId":"Joel-Sung"},"content":"                + e.toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"Joel-Sung"},"content":"        if (!extra.isEmpty()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"Joel-Sung"},"content":"            errorMessage +\u003d \"\\n\";","lastModifiedDate":"2021-09-11"},{"lineNumber":119,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":120,"author":{"gitId":"Joel-Sung"},"content":"        return errorMessage + extra;","lastModifiedDate":"2021-09-11"},{"lineNumber":121,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Joel-Sung":122}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"\u003c?import javafx.geometry.Rectangle2D?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"490.0\" minHeight\u003d\"100.0\" minWidth\u003d\"490.0\" style\u003d\"-fx-alignment: Bottom_RIGHT;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"75.0\" minWidth\u003d\"370.0\" text\u003d\"Long ass text woooooooooohoooooooooooooooooooooooooooLong ass text woooooooooohoooooooooooooooooooooooooooLong ass text woooooooooohooooooooooooooooooooooooooo\" textFill\u003d\"#000000\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"            \u003cFont name\u003d\"Comic Sans MS Italic\" size\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"         \u003c/font\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"101.0\" fitWidth\u003d\"120.0\" pickOnBounds\u003d\"true\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"         \u003cviewport\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"            \u003cRectangle2D /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"         \u003c/viewport\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"         \u003cimage\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"            \u003cImage url\u003d\"@../images/dog.jpg\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"         \u003c/image\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"      \u003c/ImageView\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"   \u003copaqueInsets\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"      \u003cInsets /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"   \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Joel-Sung":33}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"800.0\" prefWidth\u003d\"1000.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"1.0\" layoutY\u003d\"756.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"432.0\" AnchorPane.bottomAnchor\u003d\"4.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"440.0\" layoutY\u003d\"756.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"60.0\" style\u003d\"-fx-border-color: black; -fx-font-weight: bold; -fx-background-color: white;\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"4.0\" AnchorPane.rightAnchor\u003d\"503.0\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"         \u003ccursor\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"            \u003cCursor fx:constant\u003d\"OPEN_HAND\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"         \u003c/cursor\u003e\u003c/Button\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" prefHeight\u003d\"750.0\" prefWidth\u003d\"500.0\" vbarPolicy\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"745.0\" prefHeight\u003d\"750.0\" prefWidth\u003d\"500.0\" spacing\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"         \u003c/content\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"      \u003cScrollPane hbarPolicy\u003d\"NEVER\" layoutX\u003d\"500.0\" prefHeight\u003d\"800.0\" prefWidth\u003d\"500.0\" vbarPolicy\u003d\"ALWAYS\" vmin\u003d\"1.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"            \u003cLabel fx:id\u003d\"feedback\" style\u003d\"-fx-font-family: Arial; -fx-font-size: 14px;\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"         \u003c/content\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Joel-Sung":29}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package duke.storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import duke.exception.StorageMissingException;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    public void getStorageContents_missingFile_throwsException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertThrows(FileNotFoundException.class, () -\u003e {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"            new Storage(\"this-file-does-not-exist\").getStorageContents();","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"        });","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"    public void writeToStorage_missingFile_throwsException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertThrows(IOException.class, () -\u003e {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"            new Storage(\"/storage/testdirectory\").writeToStorage(\"\", false);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"        });","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"    public void testWriteAndReadFromFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"        Storage storage \u003d new Storage(\"testFile.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"            storage.writeToStorage(\"Coming from storage test.\", false);","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"            ArrayList\u003cString\u003e results \u003d storage.getStorageContents();","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"            assertEquals(\"Coming from storage test.\", results.get(0));","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"        } catch (StorageMissingException | IOException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"            Assertions.fail();","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Joel-Sung":42}},{"path":"src/test/java/duke/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package duke.tasklist;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"    public void getList_emptyList_returnsEmpty() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"        assertEquals(\"There are no items in the task list.\", taskList.getList());","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    public void getList_filledList_returnsTasks() throws InvalidInputException {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"        taskList.addTask(new ToDo(\"Task 1\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"        taskList.addTask(new Deadline(\"Task 2\", \"2021-08-23 0134\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"        taskList.addTask(new Event(\"Task 3\", \"2021-08-23 0134-0140\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"        assertEquals(\"Tasks in task list:\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"                + \"\\t\\t1. [T][ ] Task 1\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"                + \"\\t\\t2. [D][ ] Task 2 (by: Aug 23 2021 0:92AM)\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"                + \"\\t\\t3. [E][ ] Task 3 (at: Aug 23 2021 0:92AM to 0:96AM)\", taskList.getList());","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"    public void testGetTask() throws InvalidInputException {","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"        taskList.addTask(new ToDo(\"Task 1\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"        assertEquals(\"[T][ ] Task 1\", taskList.getTask(0).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertThrows(IndexOutOfBoundsException.class, () -\u003e {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"            taskList.getTask(1);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"        });","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Joel-Sung":43}},{"path":"testFile.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"Coming from storage test.","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Joel-Sung":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"wrongcommand","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"todo","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"todo this","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"deadline","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"deadline /by","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"deadline return book /by 2000-12-20 1200","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"event project meeting /at 2021-08-22 0715-0915","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"event project meeting 2 /at 2000/12/20 1200-0000","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"list","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"done 1","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"done 10","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"list","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"date asdfhasdf","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"date 2000-12-20 1200","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"date 2021/08/22 0715","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"date 2021-12-03","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"find meeting","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"find meeting 3","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"Joel-Sung":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"del ACTUAL.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"REM delete saved taskList from previous run","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"del taskList.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"javac  -cp ..\\bin -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\exception\\*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"javac  -cp ..\\bin -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"javac  -cp ..\\bin -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\parser\\*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"javac  -cp ..\\bin -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\storage\\*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"javac  -cp ..\\bin -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\tasklist\\*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"javac  -cp ..\\bin -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\ui\\*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"java -classpath ..\\bin ..\\src\\main\\java\\duke\\Duke.java \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Joel-Sung":11,"-":19}}]
