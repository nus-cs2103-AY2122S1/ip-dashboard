[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"    mainClassName \u003d \"dino.Dino\"","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"Nature711"},"content":"    archiveBaseName \u003d \"dino\"","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Nature711"},"content":"javafx {","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"Nature711"},"content":"    version \u003d \"15.0.1\"","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"Nature711"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Nature711":9,"-":44}},{"path":"data/dino.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"T | 1 | study","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"D | 1 | study | Aug 30 2021","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Nature711":2}},{"path":"src/main/java/dino/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"Nature711"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"Nature711"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"Nature711"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"Nature711"},"content":"    private void flip() {","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"Nature711"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"Nature711"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"Nature711"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"Nature711"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"Nature711"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"Nature711"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"Nature711"},"content":"    public static DialogBox getDinoDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"Nature711"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"Nature711"},"content":"        db.flip();","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"Nature711"},"content":"        return db;","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Nature711":61}},{"path":"src/main/java/dino/Dino.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.command.*;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import dino.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import dino.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"import dino.util.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"import dino.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"import dino.util.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":" * Represents a Personal Assistant ChatBot name Dino","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":" * It helps the user to keep track of various things","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"public class Dino {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"     * Constructs a Dino object","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"     * Loads storage file from the path specified, if available","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"    public Dino() {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"        this.storage \u003d new Storage(\"data/dino.txt\");","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"        this.taskList \u003d new TaskList(this.storage.loadStorage());","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"     * Gets the response from the chatbot based on input command","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"     * @param input the input command","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"     * @return the output message after processing command","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"            return processCommand(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"Nature711"},"content":"        } catch (DinoException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"Nature711"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Nature711"},"content":"     * Processes the input command after parsing and returns the output message","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"Nature711"},"content":"     * @param command the input command","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"Nature711"},"content":"     * @return the output message after execution","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"Nature711"},"content":"     * @throws DinoException the general set of exceptions","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Nature711"},"content":"    public String processCommand(String command) throws DinoException {","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"Nature711"},"content":"        Parser.CMDTYPE cmdType \u003d Parser.parse(command);","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"Nature711"},"content":"        switch (cmdType) {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"Nature711"},"content":"        case TODO:","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"Nature711"},"content":"        case EVENT:","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"Nature711"},"content":"        case DEADLINE: {","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"Nature711"},"content":"            Command cmd \u003d new AddTaskCommand(command, cmdType);","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"Nature711"},"content":"            return cmd.execute(storage, taskList);","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"Nature711"},"content":"        case DONE:","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"Nature711"},"content":"        case DELETE: {","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"Nature711"},"content":"            Command cmd \u003d new MarkCommand(command, cmdType);","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"Nature711"},"content":"            return cmd.execute(storage, taskList);","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"Nature711"},"content":"        case LIST: {","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"Nature711"},"content":"            Command cmd \u003d new ListCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"Nature711"},"content":"            return cmd.execute(storage, taskList);","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"Nature711"},"content":"        case FIND: {","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"Nature711"},"content":"            Command cmd \u003d new FindCommand(command);","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"Nature711"},"content":"            return cmd.execute(storage, taskList);","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"Nature711"},"content":"        case BYE: {","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"Nature711"},"content":"            return ui.exit(storage, taskList);","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"Nature711"},"content":"        default: {","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"Nature711"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Nature711":80}},{"path":"src/main/java/dino/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"public class Launcher {","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"        Application.launch(dino.Main.class, args);","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Nature711":11}},{"path":"src/main/java/dino/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"    private Dino dino \u003d new Dino();","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDino(dino);","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"            stage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Nature711":31}},{"path":"src/main/java/dino/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.util.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"    private Dino dino;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/Nature.jpg\")));","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"    private final Image dinoImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(\"/images/DinoBot.jpg\")));","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"                DialogBox.getDinoDialog(Ui.greeting(), dinoImage)","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"    public void setDino(Dino d) {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"        dino \u003d d;","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"Nature711"},"content":"     * Creates two dialog boxes, one echoing user input","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"Nature711"},"content":"     * and the other containing Dino\u0027s reply and then appends them to","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"Nature711"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"Nature711"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"Nature711"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"Nature711"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"Nature711"},"content":"        String response \u003d dino.getResponse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"Nature711"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"Nature711"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"Nature711"},"content":"                DialogBox.getDinoDialog(response, dinoImage)","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"Nature711"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"Nature711"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Nature711":52}},{"path":"src/main/java/dino/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import dino.util.Parser;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"import dino.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"import dino.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"import dino.task.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"import dino.task.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"import dino.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"import dino.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"import dino.task.ToDo;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":" * Represents the command for which the user wants to add a task to the task list","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":" * The task can only be one of the task of type ToDo, Deadline, or Event","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"    private final String taskString;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"    private final Parser.CMDTYPE taskType;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"     * Constructs a AskTaskCommand object","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"     * @param taskString the user input command","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"     * @param taskType the type of the task, which can only be one of the type ToDo, Deadline, or Event","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"    public AddTaskCommand(String taskString, Parser.CMDTYPE taskType) {","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"        this.taskString \u003d taskString;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"     * Executes the command to add the specific type of task to the task list","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Nature711"},"content":"     * @param storage the local storage file","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Nature711"},"content":"     * @param taskList the current task list to which the new task will be added","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Nature711"},"content":"     * @return the output message after execution","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"Nature711"},"content":"     * @throws TimeNotSpecifiedException if the task is of type Deadline or Event","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"Nature711"},"content":"     * but the time is not specified","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"Nature711"},"content":"     * @throws EmptyTaskDescriptionException if the description of the task is empty","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Nature711"},"content":"     * @throws InvalidFormatException if the task is of type Deadline or Event","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"Nature711"},"content":"     * but the time is not entered in the format of \"yyyy-mm-dd\"","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Nature711"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Nature711"},"content":"    public String execute(Storage storage, TaskList taskList) throws","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"Nature711"},"content":"            TimeNotSpecifiedException, EmptyTaskDescriptionException, InvalidFormatException {","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"Nature711"},"content":"        String description \u003d getTaskDescription(this.taskString, this.taskType);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Nature711"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"Nature711"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"Nature711"},"content":"        case TODO: {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"Nature711"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Nature711"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Nature711"},"content":"        case DEADLINE: {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Nature711"},"content":"            LocalDate time \u003d getTaskTime(this.taskString);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Nature711"},"content":"            task \u003d new Deadline(description, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Nature711"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Nature711"},"content":"        case EVENT : {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Nature711"},"content":"            LocalDate time \u003d getTaskTime(this.taskString);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Nature711"},"content":"            task \u003d new Event(description, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Nature711"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"Nature711"},"content":"        default: {","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"Nature711"},"content":"            break;","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"Nature711"},"content":"        return taskList.addTask(task);","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"Nature711"},"content":"     * Extracts the description of the task from a user input command to add task","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"Nature711"},"content":"     * @param s the user input command","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"Nature711"},"content":"     * @param type the type of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"Nature711"},"content":"     * @return the description of the task that is extracted from the user input command","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"Nature711"},"content":"     * @throws EmptyTaskDescriptionException if the description of the task is empty","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"Nature711"},"content":"     * @throws TimeNotSpecifiedException if the task is of type Deadline or Event but the time is not specified","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"Nature711"},"content":"    public static String getTaskDescription(String s, Parser.CMDTYPE type) throws EmptyTaskDescriptionException, TimeNotSpecifiedException {","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"Nature711"},"content":"        if (s.length() \u003c type.toString().length() + 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"Nature711"},"content":"            throw new EmptyTaskDescriptionException();","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"Nature711"},"content":"        switch (type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"Nature711"},"content":"        case TODO: {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"Nature711"},"content":"            return s.substring(5).trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"Nature711"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"Nature711"},"content":"        case EVENT: {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"Nature711"},"content":"            if (s.contains(\"/by \") || s.contains(\"/at \")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"Nature711"},"content":"                return s.substring(type.toString().length() + 1, s.indexOf(\"/\")).trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"Nature711"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"Nature711"},"content":"                throw new TimeNotSpecifiedException(type.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"Nature711"},"content":"        default: {","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"Nature711"},"content":"            break;","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"Nature711"},"content":"        return s;","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"Nature711"},"content":"     * @param s the user input command","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"Nature711"},"content":"     * @return the time of the task as a LocalDate object","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"Nature711"},"content":"     * @throws InvalidFormatException if the task is of type Deadline or Event but the time is not entered in the","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"Nature711"},"content":"     *      * format of \"yyyy-mm-dd\"","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"Nature711"},"content":"    public static LocalDate getTaskTime(String s) throws InvalidFormatException {","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"Nature711"},"content":"        String time \u003d s.substring(s.indexOf(\"/\") + 4);","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"Nature711"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"Nature711"},"content":"            return LocalDate.parse(time);","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"Nature711"},"content":"        } catch (DateTimeParseException e){","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"Nature711"},"content":"            throw new InvalidFormatException(\"make sure the date\", \"yyyy-mm-dd\");","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":123}},{"path":"src/main/java/dino/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import dino.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import dino.util.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":" * Contains a set of instructions that can be understood and executed by the ChatBot","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"    abstract public String execute(Storage storage, TaskList taskList) throws InvalidFormatException, TimeNotSpecifiedException, EmptyTaskDescriptionException, InvalidIndexException, TaskAlreadyDoneException, InvalidInputException, IndexNotSpecifiedException, EmptyListException, TaskNotFoundException;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":15}},{"path":"src/main/java/dino/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.exception.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import dino.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import dino.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":" * Represents the command for which the user wants to search for a keyword in the task list","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"    private String cmdString;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"     * Constructs a FindCommand object","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"     * @param cmdString the user input command","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"    public FindCommand(String cmdString) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"        this.cmdString \u003d cmdString;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"     * Executes the Find command to print out a list of tasks which contains the keyword","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"     * @param storage the local storage file","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"     * @param taskList the current task list","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"     * @return the output message after execution","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"     * @throws InvalidInputException if the user input command does not specify the keyword to search for","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"     * @throws TaskNotFoundException if there is no matching result for the current keyword","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"    public String execute(Storage storage, TaskList taskList) throws InvalidInputException, TaskNotFoundException {","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"        return taskList.searchKeyword(this.getKeyword());","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"     * Extracts the keyword given in the fina command","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"Nature711"},"content":"     * @return the keyword that is extracted from the find command","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"Nature711"},"content":"     * @throws InvalidInputException","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"Nature711"},"content":"    public String[] getKeyword() throws InvalidInputException {","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"Nature711"},"content":"        if (this.cmdString.length() \u003c 6) {","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"Nature711"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"Nature711"},"content":"        if (this.cmdString.substring(5).trim().length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"Nature711"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"Nature711"},"content":"        return this.cmdString.substring(5).split(\", \");","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Nature711":50}},{"path":"src/main/java/dino/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.exception.EmptyListException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import dino.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import dino.util.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":" * Represents the command for which the user wants to view the list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"     * Executes the command to display the task list to the user","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"     * @param storage the local storage file","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"     * @param taskList the current task list to be displayed","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"     * @return the output message after execution","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"    public String execute(Storage storage, TaskList taskList) throws EmptyListException {","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"        return taskList.printTaskList();","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":24}},{"path":"src/main/java/dino/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import dino.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import dino.util.Parser;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"import dino.util.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":" * Represents the command for which the user wants to mark a task as done or to delete a task","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"    private final String taskString;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"    private final Parser.CMDTYPE markType;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"     * Constructs a MarkCommand object","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"     * @param taskString the user input command","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"     * @param markType the type of the command, which can only be one of \"done\" or \"delete\"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"    public MarkCommand(String taskString, Parser.CMDTYPE markType) {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"        this.taskString \u003d taskString;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"        this.markType \u003d markType;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"     * Executes the user input command to either mark a task as done or to delete a task based on the","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"     * index of the task given","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"     * @param storage the local storage file","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"     * @param taskList the current task list","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"     * @return the output message after execution","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"     * @throws InvalidIndexException if the index specified by the user","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"     * is out of the bounds of the task list","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"     * @throws TaskAlreadyDoneException if the user is trying to mark an already-finished task as done","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"     * @throws InvalidInputException if the user does not enter a number for the index","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"     * @throws IndexNotSpecifiedException if the user does not specify the index of","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"Nature711"},"content":"     * the task to be marked as done or to be deleted","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Nature711"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Nature711"},"content":"    public String execute(Storage storage, TaskList taskList)","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"Nature711"},"content":"            throws InvalidIndexException, TaskAlreadyDoneException,","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"Nature711"},"content":"            InvalidInputException, IndexNotSpecifiedException {","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"Nature711"},"content":"        int index \u003d getIndex(taskString, markType);","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"Nature711"},"content":"        switch (markType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Nature711"},"content":"        case DONE: {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Nature711"},"content":"            return taskList.markTaskDone(index);","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Nature711"},"content":"        case DELETE: {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Nature711"},"content":"            return taskList.deleteTask(index);","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"Nature711"},"content":"        default: {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"Nature711"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"Nature711"},"content":"     * Extracts the index indicated by the done or delete command","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"Nature711"},"content":"     * @param s the input command","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"Nature711"},"content":"     * @param type the type of the task, which can only be either \"done\" or \"delete\"","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"Nature711"},"content":"     * @return the index that is extracted from the command","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"Nature711"},"content":"     * @throws IndexNotSpecifiedException if the index of the task is not specified","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"Nature711"},"content":"     * @throws InvalidInputException if the message entered after the \"done\" or \"delete\"","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"Nature711"},"content":"     * instruction is not a number but some other string","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"Nature711"},"content":"     * @throws InvalidIndexException if the index specified is out of bounds","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"Nature711"},"content":"    public static int getIndex(String s, Parser.CMDTYPE type)","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"Nature711"},"content":"            throws IndexNotSpecifiedException, InvalidInputException, InvalidIndexException {","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"Nature711"},"content":"        if (s.length() \u003c type.toString().length() + 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"Nature711"},"content":"            throw new IndexNotSpecifiedException();","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"Nature711"},"content":"        String thingsAfterCmd \u003d s.substring(type.toString().length() + 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"Nature711"},"content":"        if (thingsAfterCmd.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"Nature711"},"content":"            throw new IndexNotSpecifiedException();","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"Nature711"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"Nature711"},"content":"            int index \u003d Integer.parseInt(thingsAfterCmd); //may throw NumberFormatException","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"Nature711"},"content":"            if (index \u003c 1) {","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"Nature711"},"content":"                throw new InvalidIndexException();","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"Nature711"},"content":"            return index;","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"Nature711"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"Nature711"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":91}},{"path":"src/main/java/dino/exception/DinoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"public class DinoException extends Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"    public DinoException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"        super(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":30}},{"path":"src/main/java/dino/exception/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"public class EmptyListException extends DinoException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"    public EmptyListException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"        super(\"You don\u0027t have any task in your list~\");","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":7}},{"path":"src/main/java/dino/exception/EmptyTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"public class EmptyTaskDescriptionException extends DinoException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"    public EmptyTaskDescriptionException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"        super(\"The description of a task cannot be empty.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":7}},{"path":"src/main/java/dino/exception/IndexNotSpecifiedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"public class IndexNotSpecifiedException extends DinoException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"    public IndexNotSpecifiedException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"        super(\"Please specify the index of the task!\");","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":7}},{"path":"src/main/java/dino/exception/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"public class InvalidFormatException extends DinoException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"    public InvalidFormatException(String action, String format) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"        super(\"Please \" + action + \" is entered in the format: \" + format);","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":7}},{"path":"src/main/java/dino/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"public class InvalidIndexException extends DinoException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"    public InvalidIndexException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"        super(\"Please enter a valid task index!\");","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":7}},{"path":"src/main/java/dino/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"public class InvalidInputException extends DinoException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"    public InvalidInputException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"        super(\"Hmm... sorry I really don\u0027t understand what you mean.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":7}},{"path":"src/main/java/dino/exception/TaskAlreadyDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"public class TaskAlreadyDoneException extends DinoException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"    public TaskAlreadyDoneException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"        super(\"Hey you have already done this task!\");","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":7}},{"path":"src/main/java/dino/exception/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"public class TaskNotFoundException extends DinoException {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"    public TaskNotFoundException() {","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"        super(\"Seems like there\u0027s no matching result for the keyword you searched\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"                + \"Maybe try again with another keyword?\");","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Nature711":9}},{"path":"src/main/java/dino/exception/TimeNotSpecifiedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"public class TimeNotSpecifiedException extends DinoException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"    public TimeNotSpecifiedException(String type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"        super(\"Please specify the time of your \" + type + \"!\");","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":7}},{"path":"src/main/java/dino/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":" * Tasks that need to be done before a specific date/time","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":" * e.g., submit report by 11/10/2019 5pm","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":" * It is a subclass of Task","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"    private LocalDate by;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"     * Constructs a Deadline object","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"     * @param description the description for the deadline task","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"     * @param by the time by which the deadline task needs to be done","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"    public Deadline(String description, LocalDate by){","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"     * Displays the deadline task in the format of \"D | Status | Description | Time\",","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"     * The time is displayed in the format of \"MMM dd yyyy\"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"     * @return the deadline task in the required format","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"        return \"D\" + super.toString() + \" | \"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Nature711":37}},{"path":"src/main/java/dino/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":" * Tasks that start at a specific time and ends at a specific time","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":" * e.g., team project meeting on 2/10/2019 2-4pm","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":" * It is a subclass of Task","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"    private LocalDate at;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"     * Constructs an Event object","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"     * @param description the description for the event task","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"     * @param at the time at which the event occurs","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"    public Event(String description, LocalDate at){","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"     * Displays the event task in the format of \"E | Status | Description | Time\"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"     * The time is displayed in the format of \"MMM dd yyyy\"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"     * @return the event task in the required format","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"        return \"E\" + super.toString() + \" | \"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"                + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Nature711":37}},{"path":"src/main/java/dino/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":" * Represents a piece of work to be done or undertaken","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"    private String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"     * Constructs a Task object","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"     * Initializes the task status to be undone","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"     * @param description the description for the task","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"    public boolean getStatus() {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"        return isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"        return description;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"     * Displays the task in the format \"| Status | Description\"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"     * @return the task in the required format","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Nature711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"Nature711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"Nature711"},"content":"        return \" | \" + (isDone ? \"1\" : \"0\") + \" | \"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Nature711"},"content":"                + description;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Nature711":45}},{"path":"src/main/java/dino/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"import dino.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"        return taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"     * Adds a new task to the task list","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"     * @param task the task to be added","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"     * @return the output message after execution","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"        int size \u003d taskList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"        String message \u003d \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"                + \"  \" + taskList.get(size - 1) + \"\\n\" +","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"                \"Now you have \" + size +","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"                (size \u003e 1 ? \" tasks\" : \" task\") + \" in the list.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"        return message;","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"     * Prints out the task list in console, prefixed with index","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"Nature711"},"content":"     * @return the output message after execution","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"Nature711"},"content":"     * @throws EmptyListException if the current task list is empty","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"Nature711"},"content":"    public String printTaskList() throws EmptyListException {","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"Nature711"},"content":"        if (taskList.isEmpty()) throw new EmptyListException();","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Nature711"},"content":"        String list \u003d \"\";","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"Nature711"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Nature711"},"content":"            list +\u003d (i + 1) + \". \" + taskList.get(i) + \"\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Nature711"},"content":"        return \"Here are the tasks in your list: \\n\" + list;","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"Nature711"},"content":"     * Marks the task indicated by the given index as done","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"Nature711"},"content":"     * @param index the index of the task as indicated by the task list","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"Nature711"},"content":"     * @return the output message after execution","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"Nature711"},"content":"     * @throws InvalidIndexException if the index entered is out of bounds","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"Nature711"},"content":"     * @throws TaskAlreadyDoneException if the task is already marked as done","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"Nature711"},"content":"    public String markTaskDone(int index) throws InvalidIndexException, TaskAlreadyDoneException {","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"Nature711"},"content":"        if (index \u003e taskList.size()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Nature711"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Nature711"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Nature711"},"content":"            Task t \u003d taskList.get(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Nature711"},"content":"            if (t.getStatus()) throw new TaskAlreadyDoneException();","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Nature711"},"content":"            t.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Nature711"},"content":"            String message \u003d \"Nice! I\u0027ve marked this task as done: \\n\" + t;","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"Nature711"},"content":"            return message;","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"Nature711"},"content":"     * Deletes the task indicated by the index from the task list","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"Nature711"},"content":"     * @param index the index of the task in the task list","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"Nature711"},"content":"     * @return the output message after execution","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"Nature711"},"content":"     * @throws InvalidIndexException if the index entered is out of bounds","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"Nature711"},"content":"    public String deleteTask(int index) throws InvalidIndexException {","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"Nature711"},"content":"        if (index \u003e taskList.size()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"Nature711"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"Nature711"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"Nature711"},"content":"            Task t \u003d taskList.remove(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"Nature711"},"content":"            int size \u003d taskList.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"Nature711"},"content":"            String message \u003d \"Noted. I\u0027ve removed this task: \\n\" + t + \"\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"Nature711"},"content":"                    + \"Now you have \" + size +","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"Nature711"},"content":"                    (size \u003e 1 ? \" tasks\" : \" task\") + \" in the list.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"Nature711"},"content":"            return message;","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"Nature711"},"content":"     * Prints out the task(s) that contains the input keyword(s) in description","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"Nature711"},"content":"     * @param keyword a list of keywords for searching tasks","lastModifiedDate":"2021-09-06"},{"lineNumber":95,"author":{"gitId":"Nature711"},"content":"     * @return the list of task that contains the keyword(s)","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"Nature711"},"content":"     * @throws TaskNotFoundException if there\u0027s no task in the task list that","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"Nature711"},"content":"     * matches the given keyword(s)","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"Nature711"},"content":"    public String searchKeyword(String ...keyword) throws TaskNotFoundException {","lastModifiedDate":"2021-09-06"},{"lineNumber":100,"author":{"gitId":"Nature711"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"Nature711"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"Nature711"},"content":"            for (int i \u003d 0; i \u003c keyword.length; i++) {","lastModifiedDate":"2021-09-06"},{"lineNumber":103,"author":{"gitId":"Nature711"},"content":"                if (task.getDescription().contains(keyword[i])) {","lastModifiedDate":"2021-09-06"},{"lineNumber":104,"author":{"gitId":"Nature711"},"content":"                    matchingTasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"Nature711"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"Nature711"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"Nature711"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-09-06"},{"lineNumber":110,"author":{"gitId":"Nature711"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"Nature711"},"content":"            String list \u003d \"\";","lastModifiedDate":"2021-08-30"},{"lineNumber":112,"author":{"gitId":"Nature711"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"Nature711"},"content":"                list +\u003d (i + 1) + \". \" + matchingTasks.get(i) + \"\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":114,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"Nature711"},"content":"            return \"Here are the matching tasks in your list:\\n\" + list;","lastModifiedDate":"2021-09-06"},{"lineNumber":116,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":119}},{"path":"src/main/java/dino/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":" * Tasks without any date/time attached to it e.g., visit new theme park","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":" * It is a subclass of Task","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"     * Constructs a todo object","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"     * @param description the description for the todo task","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"     * Displays the todo task in the format of \"T | Status | Description\"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"     * @return the todo task in the required format","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"        return \"T\" + super.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":27}},{"path":"src/main/java/dino/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":" * Deals with making sense of the user command","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"    public enum CMDTYPE {TODO, DEADLINE, EVENT, DONE, DELETE, LIST, FIND, BYE, INVALID};","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"     * Interprets the user input command and parses it into one of the messages in the","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"     * enum class CMDTYPE","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"     * If the command doesn\u0027t match any message, then it falls into \"INVALID\"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"     * @param input the input command entered by the user","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"     * @return one of the messages in the enum class CMDTYPE","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"    public static CMDTYPE parse(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"            return CMDTYPE.valueOf(getFirstWord(input).toUpperCase());","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"            return CMDTYPE.INVALID;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"     * Returns the first word of an input string","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"     * Returns the string itself if it contains only one word","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"     * @param s the input string","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"     * @return the first word of the input string","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"    public static String getFirstWord(String s) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"        String firstWord;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"        if (s.contains(\" \")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Nature711"},"content":"            firstWord \u003d s.substring(0, s.indexOf(\" \"));","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Nature711"},"content":"            return firstWord;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Nature711"},"content":"        return s;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":44}},{"path":"src/main/java/dino/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"import dino.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"import dino.task.*;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"     * Constructs a Storage object","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"     * @param filePath path to the local storage file","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"     * Opens the local storage file and loads data from it","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"     * Creates a new empty file at the specified path if there is no file under that path","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Nature711"},"content":"     * @throws IOException if the file cannot be loaded from the path specified, or the file","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Nature711"},"content":"     * does not exist but also fails to created","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Nature711"},"content":"    public List\u003cTask\u003e loadStorage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Nature711"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Nature711"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Nature711"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Nature711"},"content":"                createEmptyFile(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Nature711"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Nature711"},"content":"                return getDataFromStorage(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Nature711"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Nature711"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Nature711"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Nature711"},"content":"     * Loads the task list data from the storage file","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Nature711"},"content":"     * @param file the file that is loaded which contains information about the task list","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"Nature711"},"content":"     * @return the task list that is loaded from the file","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"Nature711"},"content":"    public List\u003cTask\u003e getDataFromStorage(File file)  {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Nature711"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Nature711"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"Nature711"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Nature711"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Nature711"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"Nature711"},"content":"                String currTask \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"Nature711"},"content":"                String[] taskDetails \u003d currTask.split(\" \\\\| \");","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Nature711"},"content":"                Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"Nature711"},"content":"                String type \u003d taskDetails[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"Nature711"},"content":"                String status \u003d taskDetails[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"Nature711"},"content":"                String description \u003d taskDetails[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"Nature711"},"content":"                switch (type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"Nature711"},"content":"                case \"T\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"Nature711"},"content":"                    task \u003d new ToDo(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"Nature711"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"Nature711"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"Nature711"},"content":"                case \"D\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"Nature711"},"content":"                    LocalDate time \u003d LocalDate.parse(taskDetails[3], dtf);","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"Nature711"},"content":"                    task \u003d new Deadline(description, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"Nature711"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"Nature711"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"Nature711"},"content":"                case \"E\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"Nature711"},"content":"                    LocalDate time \u003d LocalDate.parse(taskDetails[3], dtf);","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"Nature711"},"content":"                    task \u003d new Event(description, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"Nature711"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"Nature711"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"Nature711"},"content":"                default: {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"Nature711"},"content":"                    throw new InvalidFormatException(\"check your storage file and make sure each task\",","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"Nature711"},"content":"                            \"Event | Status | Description | Time\");","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"Nature711"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"Nature711"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"Nature711"},"content":"                if (status.equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"Nature711"},"content":"                    task.setDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"Nature711"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"Nature711"},"content":"                taskList.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"Nature711"},"content":"        } catch (FileNotFoundException | DinoException | DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"Nature711"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"Nature711"},"content":"        return taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"Nature711"},"content":"     * Creates an empty file at the directory of the input file","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"Nature711"},"content":"     * @param file the file whose path is used to create a new empty file","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"Nature711"},"content":"     * @throws IOException if the file cannot be created for some reasons","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"Nature711"},"content":"    public void createEmptyFile(File file) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"Nature711"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"Nature711"},"content":"        file.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"Nature711"},"content":"     * Saves the current task list to the local storage file","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"Nature711"},"content":"     * @param tasks the current task list","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"Nature711"},"content":"    public void saveToStorage(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"Nature711"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"Nature711"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"Nature711"},"content":"            for (Task task: tasks) {","lastModifiedDate":"2021-08-30"},{"lineNumber":124,"author":{"gitId":"Nature711"},"content":"                fw.write(task.toString() + \"\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":125,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":126,"author":{"gitId":"Nature711"},"content":"            fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"Nature711"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"Nature711"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":131}},{"path":"src/main/java/dino/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":" * Deals with interactions with the user","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"     * Greets the user upon initialization of a Dino object","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"    public static String greeting() {","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"        String message \u003d \"Hello! I\u0027m dino, your cute dinosaur bot.\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"                + \"Anything I can do for you?\";","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"        return message;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"     * Saves any changes to the task list to the storage","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"     * Greets the user with a farewell message","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"     * @param storage the local storage for task list","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"     * @param taskList the current version of task list","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"    public String exit(Storage storage, TaskList taskList) {","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"        storage.saveToStorage(taskList.getTaskList());","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"        String message \u003d \"Goodbye~ \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"                + \"Your cute Dino is always around you :D\";","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"        return message;","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":33}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"            \u003cInsets left\u003d\"12.0\" right\u003d\"12.0\"/\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Nature711":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"\u003c!--        \"http://javafx.com/javafx/8.0.171\"--\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"            fx:controller\u003d\"dino.MainWindow\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"10.0\" layoutY\u003d\"562.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"34.0\" prefWidth\u003d\"299.0\"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"                   style\u003d\"-fx-background-radius: 20;\"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"                   AnchorPane.bottomAnchor\u003d\"4.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"322.0\" layoutY\u003d\"564.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"28.0\" prefWidth\u003d\"69.0\" style\u003d\"-fx-background-color: #d99694;\" text\u003d\"Send\" textFill\u003d\"WHITE\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: rgba(217,150,148,0.3);\"/\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Nature711":26}},{"path":"src/test/java/dino/ExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import dino.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"public class ExceptionTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"    public void throwEmptyListException_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"        String errorMessage \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"            taskList.printTaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"        } catch (EmptyListException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"            errorMessage \u003d e.getMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"        assertEquals(\"😐 You don\u0027t have any task in your list~\", errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":22}},{"path":"src/test/java/dino/MarkDoneTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"import dino.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"public class MarkDoneTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"    public void markAsDone_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"        Task task \u003d new ToDo(\"test todo\");","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"        task.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"        assertEquals(\"T | 1 | test todo\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":14}},{"path":"src/test/java/dino/TaskConstructorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import dino.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import dino.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"public class TaskConstructorTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"    public void toDoConstructor_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"        assertEquals(\"T | 0 | watch lecture\",","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"                new ToDo(\"watch lecture\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"    public void deadlineConstructor_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"        assertEquals(\"D | 0 | finish project | Aug 24 2021\",","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"                new Deadline(\"finish project\", LocalDate.parse(\"2021-08-24\")).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"    public void eventConstructor_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"        assertEquals(\"E | 0 | play tennis | Aug 25 2021\",","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"                new Event(\"play tennis\", LocalDate.parse(\"2021-08-25\")).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"todo study","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"event dating /at 10pm","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"deadline project /by tonight","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"delete","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Nature711":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"java -classpath ..\\bin Dino \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Nature711":1,"-":20}}]
