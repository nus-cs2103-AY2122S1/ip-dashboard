[{"path":"data/dino.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"T | 0 | eat","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"T | 0 | sleep","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"T | 0 | eat","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"T | 0 | eat","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"T | 0 | sleep","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":5}},{"path":"src/main/java/dino/Dino.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import dino.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import dino.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"import dino.util.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"import dino.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"import dino.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":" * Represents a Personal Assistant ChatBot name Dino","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":" * It helps the user to keep track of various things","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"public class Dino {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"    private boolean isExited \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"     * Constructs a Dino object","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"     * Loads storage file from the path specified, if available","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"     * @param filePath path to the storage file","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"    public Dino(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"        this.taskList \u003d new TaskList(this.storage.loadStorage());","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"     * Runs the program","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"     * Exits only if the user enters \"bye\"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"    public void run() {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"        ui.greeting();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Nature711"},"content":"        while(!isExited) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Nature711"},"content":"            String input \u003d ui.readNextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Nature711"},"content":"            if (input.equals(\"bye\")) isExited \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Nature711"},"content":"            else {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Nature711"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"Nature711"},"content":"                    Command cmd \u003d Parser.parse(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Nature711"},"content":"                    cmd.execute(storage, taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Nature711"},"content":"                } catch (DinoException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"Nature711"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"Nature711"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"Nature711"},"content":"        ui.processExit(storage, taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Nature711"},"content":"     * Drives the start of the program","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Nature711"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"Nature711"},"content":"        new Dino(\"data/dino.txt\").run();","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Nature711":59}},{"path":"src/main/java/dino/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import dino.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import dino.task.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":" * Represents the command for which the user wants to add a task to the task list","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":" * The task can only be one of the task of type ToDo, Deadline, or Event","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"    String taskString;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"    CMDTYPE taskType;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"     * Constructs a AskTaskCommand object","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"     * @param taskString the user input command","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"     * @param taskType the type of the task, which can only be one of the type ToDo, Deadline, or Event","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"    public AddTaskCommand(String taskString, CMDTYPE taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"        this.taskString \u003d taskString;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"     * Executes the command to add the specific type of task to the task list","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"     * @param storage the local storage file","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"     * @param taskList the current task list to which the new task will be added","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"     * @throws TimeNotSpecifiedException if the task is of type Deadline or Event but the time is not specified","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"     * @throws EmptyTaskDescriptionException if the description of the task is empty","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"     * @throws InvalidFormatException if the task is of type Deadline or Event but the time is not entered in the","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"     * format of \"yyyy-mm-dd\"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Nature711"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Nature711"},"content":"    public void execute(Storage storage, TaskList taskList) throws TimeNotSpecifiedException, EmptyTaskDescriptionException, InvalidFormatException {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Nature711"},"content":"        String description \u003d getTaskDescription(this.taskString, this.taskType);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Nature711"},"content":"        Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Nature711"},"content":"        switch (this.taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Nature711"},"content":"        case TODO: {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Nature711"},"content":"            task \u003d new ToDo(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Nature711"},"content":"            taskList.addTask(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Nature711"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Nature711"},"content":"        case DEADLINE: {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Nature711"},"content":"            LocalDate time \u003d getTaskTime(this.taskString);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Nature711"},"content":"            task \u003d new Deadline(description, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Nature711"},"content":"            taskList.addTask(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Nature711"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"Nature711"},"content":"        case EVENT : {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Nature711"},"content":"            LocalDate time \u003d getTaskTime(this.taskString);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Nature711"},"content":"            task \u003d new Event(description, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Nature711"},"content":"            taskList.addTask(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Nature711"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"Nature711"},"content":"     * Extracts the description of the task from a user input command to add task","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"Nature711"},"content":"     * @param s the user input command","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"Nature711"},"content":"     * @param type the type of the task","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"Nature711"},"content":"     * @return the description of the task that is extracted from the user input command","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"Nature711"},"content":"     * @throws EmptyTaskDescriptionException if the description of the task is empty","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"Nature711"},"content":"     * @throws TimeNotSpecifiedException if the task is of type Deadline or Event but the time is not specified","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"Nature711"},"content":"    public static String getTaskDescription(String s, CMDTYPE type) throws EmptyTaskDescriptionException, TimeNotSpecifiedException {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"Nature711"},"content":"        if (s.length() \u003c type.toString().length() + 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"Nature711"},"content":"            throw new EmptyTaskDescriptionException();","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"Nature711"},"content":"        switch (type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"Nature711"},"content":"            case TODO: {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"Nature711"},"content":"                return s.substring(5).trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"Nature711"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"Nature711"},"content":"            case EVENT: {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"Nature711"},"content":"                if (s.contains(\"/by \") || s.contains(\"/at \")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"Nature711"},"content":"                    return s.substring(type.toString().length() + 1, s.indexOf(\"/\")).trim();","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"Nature711"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"Nature711"},"content":"                    throw new TimeNotSpecifiedException(type.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"Nature711"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"Nature711"},"content":"        return s;","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"Nature711"},"content":"     * @param s the user input command","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"Nature711"},"content":"     * @return the time of the task as a LocalDate object","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"Nature711"},"content":"     * @throws InvalidFormatException if the task is of type Deadline or Event but the time is not entered in the","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"Nature711"},"content":"     *      * format of \"yyyy-mm-dd\"","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"Nature711"},"content":"    public static LocalDate getTaskTime(String s) throws InvalidFormatException {","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"Nature711"},"content":"        String time \u003d s.substring(s.indexOf(\"/\") + 4);","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"Nature711"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"Nature711"},"content":"            return LocalDate.parse(time);","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"Nature711"},"content":"        } catch (DateTimeParseException e){","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"Nature711"},"content":"            throw new InvalidFormatException(\"make sure the date\", \"yyyy-mm-dd\");","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":109}},{"path":"src/main/java/dino/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import dino.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import dino.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":" * Contains a set of instructions that can be understood and executed by the ChatBot","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"abstract public class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"    public enum CMDTYPE {TODO, DEADLINE, EVENT, DONE, DELETE, LIST, FIND};","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"    abstract public void execute(Storage storage, TaskList taskList) throws InvalidFormatException, TimeNotSpecifiedException, EmptyTaskDescriptionException, InvalidIndexException, TaskAlreadyDoneException, InvalidInputException, IndexNotSpecifiedException, EmptyListException, TaskNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":17}},{"path":"src/main/java/dino/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.exception.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import dino.task.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import dino.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":" * Represents the command for which the user wants to search for a keyword in the task list","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"    String cmdString;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"     * Constructs a FindCommand object","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"     * @param cmdString the user input command","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"    public FindCommand(String cmdString) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"        this.cmdString \u003d cmdString;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"     * Executes the Find command to print out a list of tasks which contains the keyword","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"     * @param storage the local storage file","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"     * @param taskList the current task list","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"     * @throws InvalidInputException if the user input command does not specify the keyword to search for","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"     * @throws TaskNotFoundException if there is no matching result for the current keyword","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"    public void execute(Storage storage, TaskList taskList) throws InvalidInputException, TaskNotFoundException {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"        taskList.searchKeyword(this.getKeyword());","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"    public String getKeyword() throws InvalidInputException{","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"        if (this.cmdString.length() \u003c 6) throw new InvalidInputException();","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"        if (this.cmdString.substring(5).trim().length() \u003d\u003d 0) throw new InvalidInputException();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Nature711"},"content":"        return this.cmdString.substring(5).trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Nature711":40}},{"path":"src/main/java/dino/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.exception.EmptyListException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import dino.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import dino.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":" * Represents the command for which the user wants to view the list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"     * Executes the command to display the task list to the user","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"     * @param storage the local storage file","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"     * @param taskList the current task list to be displayed","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"    public void execute(Storage storage, TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"            taskList.printTaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"        } catch (EmptyListException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":26}},{"path":"src/main/java/dino/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import dino.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import dino.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":" * Represents the command for which the user wants to mark a task as done or to delete a task","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"    String taskString;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"    CMDTYPE markType;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"    int index;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"     * Constructs a MarkCommand object","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"     * @param taskString the user input command","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"     * @param markType the type of the command, which can only be one of \"done\" or \"delete\"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"    public MarkCommand(String taskString, CMDTYPE markType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"        this.taskString \u003d taskString;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"        this.markType \u003d markType;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"     * Executes the user input command to either mark a task as done or to delete a task based on the","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"     * index of the task given","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"     * @param storage the local storage file","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"     * @param taskList the current task list","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"     * @throws InvalidIndexException if the index specified by the usr is out of the bounds of the task list","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"     * @throws TaskAlreadyDoneException if the user is trying to mark an already-finished task as done","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"     * @throws InvalidInputException if the user does not enter a number for the index","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"     * @throws IndexNotSpecifiedException if the user does not specify the index of the task to be marked","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"     * as done or to be deleted","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Nature711"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Nature711"},"content":"    public void execute(Storage storage, TaskList taskList) throws InvalidIndexException, TaskAlreadyDoneException, InvalidInputException, IndexNotSpecifiedException {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Nature711"},"content":"        this.index \u003d getIndex(taskString, markType);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Nature711"},"content":"        switch (markType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Nature711"},"content":"            case DONE: {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Nature711"},"content":"                taskList.markTaskDone(this.index);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Nature711"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Nature711"},"content":"            case DELETE: {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Nature711"},"content":"                taskList.deleteTask(this.index);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Nature711"},"content":"    public static int getIndex(String s, CMDTYPE type) throws IndexNotSpecifiedException, InvalidInputException, InvalidIndexException {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Nature711"},"content":"        if (s.length() \u003c type.toString().length() + 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"Nature711"},"content":"            throw new IndexNotSpecifiedException();","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Nature711"},"content":"        String thingsAfterCmd \u003d s.substring(type.toString().length() + 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Nature711"},"content":"        if (thingsAfterCmd.trim().length() \u003d\u003d 0) throw new IndexNotSpecifiedException();","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Nature711"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Nature711"},"content":"            int index \u003d Integer.parseInt(thingsAfterCmd); //may throw NumberFormatException","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Nature711"},"content":"            if (index \u003c 1) throw new InvalidIndexException();","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Nature711"},"content":"            return index;","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Nature711"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Nature711"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":70}},{"path":"src/main/java/dino/exception/DinoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"public class DinoException extends Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"    public DinoException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"        super(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":31}},{"path":"src/main/java/dino/exception/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"public class EmptyListException extends DinoException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"    public EmptyListException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"        super(\"😐 You don\u0027t have any task in your list~\");","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":7}},{"path":"src/main/java/dino/exception/EmptyTaskDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"public class EmptyTaskDescriptionException extends DinoException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"    public EmptyTaskDescriptionException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"        super(\"😶 The description of a task cannot be empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":7}},{"path":"src/main/java/dino/exception/IndexNotSpecifiedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"public class IndexNotSpecifiedException extends DinoException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"    public IndexNotSpecifiedException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"        super(\"😕 Please specify the index of the task!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":7}},{"path":"src/main/java/dino/exception/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"public class InvalidFormatException extends DinoException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"    public InvalidFormatException(String action, String format) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"        super(\"😕 Please \"  + action + \" is entered in the format: \" + format);","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":7}},{"path":"src/main/java/dino/exception/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"public class InvalidIndexException extends DinoException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"    public InvalidIndexException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"        super(\"😮 Please enter a valid task index!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":7}},{"path":"src/main/java/dino/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"public class InvalidInputException extends DinoException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"    public InvalidInputException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"        super(\"🤔 Hmm... sorry I really don\u0027t understand what you mean.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":7}},{"path":"src/main/java/dino/exception/TaskAlreadyDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"public class TaskAlreadyDoneException extends DinoException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"    public TaskAlreadyDoneException() {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"        super(\"🤨 Hey you have already done this task!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":7}},{"path":"src/main/java/dino/exception/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"public class TaskNotFoundException extends DinoException{","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"    public TaskNotFoundException(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"        super(\"🤨 Seems like there\u0027s no matching result for the keyword: \" + keyword + \"\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"                + \"Maybe try again with another keyword?\");","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Nature711":9}},{"path":"src/main/java/dino/exception/TimeNotSpecifiedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"public class TimeNotSpecifiedException extends DinoException {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"    public TimeNotSpecifiedException(String type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"        super(\"😛 Please specify the time of your \" + type + \"!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":7}},{"path":"src/main/java/dino/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":" * Tasks that need to be done before a specific date/time","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":" * e.g., submit report by 11/10/2019 5pm","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":" * It is a subclass of Task","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"    private LocalDate by;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"     * Constructs a Deadline object","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"     * @param description the description for the deadline task","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"     * @param by the time by which the deadline task needs to be done","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"    public Deadline(String description, LocalDate by){","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"     * Displays the deadline task in the format of \"D | Status | Description | Time\",","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"     * The time is displayed in the format of \"MMM dd yyyy\"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"     * @return the deadline task in the required format","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"        return \"D\" + super.toString() + \" | \"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Nature711":37}},{"path":"src/main/java/dino/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":" * Tasks that start at a specific time and ends at a specific time","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":" * e.g., team project meeting on 2/10/2019 2-4pm","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":" * It is a subclass of Task","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"    private LocalDate at;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"     * Constructs an Event object","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"     * @param description the description for the event task","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"     * @param at the time at which the event occurs","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"    public Event(String description, LocalDate at){","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"     * Displays the event task in the format of \"E | Status | Description | Time\"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"     * The time is displayed in the format of \"MMM dd yyyy\"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"     * @return the event task in the required format","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"        return \"E\" + super.toString() + \" | \"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"                + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Nature711":37}},{"path":"src/main/java/dino/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":" * Represents a piece of work to be done or undertaken","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"    private String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"     * Constructs a Task object","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"     * Initializes the task status to be undone","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"     * @param description the description for the task","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"    public boolean getStatus() {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"        return isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"        return description;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"     * Displays the task in the format \"| Status | Description\"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"     * @return the task in the required format","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Nature711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"Nature711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"Nature711"},"content":"        return \" | \" + (isDone ? \"1\" : \"0\") + \" | \"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Nature711"},"content":"                + description;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Nature711":45}},{"path":"src/main/java/dino/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import dino.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"    public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"        return taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"        int size \u003d taskList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"                + \"  \" + taskList.get(size - 1));","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"        System.out.println(\"Now you have \" + size +","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"                (size \u003e 1 ? \" tasks\" : \" task\") + \" in the list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"    public void printTaskList() throws EmptyListException{","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"        if (taskList.isEmpty()) throw new EmptyListException();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"            System.out.println((i + 1) + \". \" + taskList.get(i));","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"    public void markTaskDone(int index) throws InvalidIndexException, TaskAlreadyDoneException {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"        if (index \u003e taskList.size()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"Nature711"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Nature711"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Nature711"},"content":"            Task t \u003d taskList.get(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Nature711"},"content":"            if (t.getStatus()) throw new TaskAlreadyDoneException();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Nature711"},"content":"            t.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Nature711"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + t);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Nature711"},"content":"    public void deleteTask(int index) throws InvalidIndexException {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Nature711"},"content":"        if (index \u003e taskList.size()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Nature711"},"content":"            throw new InvalidIndexException();","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Nature711"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Nature711"},"content":"            Task t \u003d taskList.remove(index - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Nature711"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + t);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"Nature711"},"content":"            int size \u003d taskList.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"Nature711"},"content":"            System.out.println(\"Now you have \" + size +","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"Nature711"},"content":"                    (size \u003e 1 ? \" tasks\" : \" task\") + \" in the list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Nature711"},"content":"    public void searchKeyword(String keyword) throws TaskNotFoundException {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"Nature711"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"Nature711"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"Nature711"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"Nature711"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"Nature711"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"Nature711"},"content":"            throw new TaskNotFoundException(keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"Nature711"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"Nature711"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"Nature711"},"content":"            for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"Nature711"},"content":"                System.out.println((i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":76}},{"path":"src/main/java/dino/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":" * Tasks without any date/time attached to it e.g., visit new theme park","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":" * It is a subclass of Task","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"     * Constructs a todo object","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"     * @param description the description for the todo task","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"     * Displays the todo task in the format of \"T | Status | Description\"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"     * @return the todo task in the required format","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"        return \"T\" + super.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":27}},{"path":"src/main/java/dino/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.command.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import dino.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":" * Deals with making sense of the user command","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"     * Interprets the user input command and parses into corresponding Commands","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"     * which can then be understood and executed by the ChatBot","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"     * @param input the input command entered by the user","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"     * @return a specific command object which corresponds to the user input command","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"     * @throws InvalidInputException if the user enters a command that doesn\u0027t fit the required pattern","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"     * and thus cannot be understood","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"    public static Command parse(String input) throws InvalidInputException {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"        Command.CMDTYPE type;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"            type\u003d Command.CMDTYPE.valueOf(getFirstWord(input).toUpperCase());","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"            throw new InvalidInputException();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"        switch (type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"            case TODO:","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"            case EVENT:","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"            case DEADLINE: {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"                return new AddTaskCommand(input, type);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"            case DONE:","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"            case DELETE: {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"                return new MarkCommand(input, type);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"            case LIST: {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Nature711"},"content":"                return new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Nature711"},"content":"            case FIND: {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Nature711"},"content":"                return new FindCommand(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Nature711"},"content":"            default: {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Nature711"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Nature711"},"content":"     * Returns the first word of an input string","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Nature711"},"content":"     * Returns the string itself if it contains only one word","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Nature711"},"content":"     * @param s the input string","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Nature711"},"content":"     * @return the first word of the input string","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Nature711"},"content":"    public static String getFirstWord(String s) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"Nature711"},"content":"        String firstWord;","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"Nature711"},"content":"        if (s.contains(\" \")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Nature711"},"content":"            firstWord \u003d s.substring(0, s.indexOf(\" \"));","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Nature711"},"content":"            return firstWord;","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Nature711"},"content":"        return s;","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":65}},{"path":"src/main/java/dino/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"import dino.task.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"import dino.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"     * Constructs a Storage object","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"     * @param filePath path to the local storage file","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"     * Opens the local storage file and loads data from it","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"     * Creates a new empty file at the specified path if there is no file under that path","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"     * @throws IOException if the file cannot be loaded from the path specified, or the file","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"     * does not exist but also fails to created","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Nature711"},"content":"    public List\u003cTask\u003e loadStorage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"Nature711"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"Nature711"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"Nature711"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"Nature711"},"content":"                createEmptyFile(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"Nature711"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"Nature711"},"content":"                return getDataFromStorage(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Nature711"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Nature711"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"Nature711"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Nature711"},"content":"     * Loads the task list data from the storage file","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Nature711"},"content":"     * @param file the file that is loaded which contains information about the task list","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"Nature711"},"content":"     * @return the task list that is loaded from the file","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"Nature711"},"content":"    public List\u003cTask\u003e getDataFromStorage(File file)  {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"Nature711"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"Nature711"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"Nature711"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"Nature711"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"Nature711"},"content":"                String currTask \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"Nature711"},"content":"                String[] taskDetails \u003d currTask.split(\" \\\\| \");","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"Nature711"},"content":"                Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"Nature711"},"content":"                String type \u003d taskDetails[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"Nature711"},"content":"                String status \u003d taskDetails[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"Nature711"},"content":"                String description \u003d taskDetails[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"Nature711"},"content":"                switch (type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"Nature711"},"content":"                case \"T\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"Nature711"},"content":"                    task \u003d new ToDo(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"Nature711"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"Nature711"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"Nature711"},"content":"                case \"D\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"Nature711"},"content":"                    LocalDate time \u003d LocalDate.parse(taskDetails[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"Nature711"},"content":"                    task \u003d new Deadline(description, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"Nature711"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"Nature711"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"Nature711"},"content":"                case \"E\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"Nature711"},"content":"                    LocalDate time \u003d LocalDate.parse(taskDetails[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"Nature711"},"content":"                    task \u003d new Event(description, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"Nature711"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"Nature711"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"Nature711"},"content":"                default: {","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"Nature711"},"content":"                    throw new InvalidFormatException(\"check your storage file and make sure each task\",","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"Nature711"},"content":"                            \"Event | Status | Description | Time\");","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"Nature711"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"Nature711"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"Nature711"},"content":"                if (status.equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"Nature711"},"content":"                    task.setDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"Nature711"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"Nature711"},"content":"                taskList.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"Nature711"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"Nature711"},"content":"        } catch (FileNotFoundException | DinoException | DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"Nature711"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"Nature711"},"content":"        return taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"Nature711"},"content":"     * Creates an empty file at the directory of the input file","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"Nature711"},"content":"     * @param file the file whose path is used to create a new empty file","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"Nature711"},"content":"     * @throws IOException if the file cannot be created for some reasons","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"Nature711"},"content":"    public void createEmptyFile(File file) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"Nature711"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"Nature711"},"content":"        file.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"Nature711"},"content":"     * Saves the current task list to the local storage file","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"Nature711"},"content":"     * @param tasks the current task list","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"Nature711"},"content":"    public void saveToStorage(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"Nature711"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"Nature711"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"Nature711"},"content":"            for (Task task: tasks) fw.write(task.toString() + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"Nature711"},"content":"            fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"Nature711"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"Nature711"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":125}},{"path":"src/main/java/dino/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import dino.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":" * Deals with interactions with the user","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"    private final Scanner sc;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"     * Constructs an Ui interface by initializing a scanner object","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"     * which reads input from the user","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"     * Reads the next line of user input, if exists","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"    public String readNextLine() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"Nature711"},"content":"     * Greets the user upon initialization of a Dino object","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"Nature711"},"content":"    public void greeting() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"Nature711"},"content":"        System.out.println(\"Hello! I\u0027m dino, your cute dinosaur bot.\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Nature711"},"content":"                + \"Anything I can do for you?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"Nature711"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"Nature711"},"content":"     * Saves any changes to the task list to the storage","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"Nature711"},"content":"     * Greets the user with a farewell message","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"Nature711"},"content":"     * Closes the scanner","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"Nature711"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"Nature711"},"content":"     * @param storage the local storage for task list","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Nature711"},"content":"     * @param taskList the current version of task list","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Nature711"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Nature711"},"content":"    public void processExit(Storage storage, TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"Nature711"},"content":"        storage.saveToStorage(taskList.getTaskList());","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"Nature711"},"content":"        System.out.println(\"Goodbye~ \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"Nature711"},"content":"                + \"Your cute Dino is always around you :D\");","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"Nature711"},"content":"        sc.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":51}},{"path":"src/test/java/dino/ExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import dino.exception.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"public class ExceptionTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"    public void throwEmptyListException_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"        String errorMessage \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"            taskList.printTaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"        } catch (EmptyListException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"            errorMessage \u003d e.getMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"        assertEquals(\"😐 You don\u0027t have any task in your list~\", errorMessage);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":22}},{"path":"src/test/java/dino/MarkDoneTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"import dino.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"public class MarkDoneTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"    public void markAsDone_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"        Task task \u003d new ToDo(\"test todo\");","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"        task.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"        assertEquals(\"T | 1 | test todo\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":14}},{"path":"src/test/java/dino/TaskConstructorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"package dino;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"import dino.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"import dino.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"import dino.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"public class TaskConstructorTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"    public void toDoConstructor_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"Nature711"},"content":"        assertEquals(\"T | 0 | watch lecture\",","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"Nature711"},"content":"                new ToDo(\"watch lecture\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"Nature711"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"Nature711"},"content":"    public void deadlineConstructor_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"        assertEquals(\"D | 0 | finish project | Aug 24 2021\",","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"Nature711"},"content":"                new Deadline(\"finish project\", LocalDate.parse(\"2021-08-24\")).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"Nature711"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"Nature711"},"content":"    public void eventConstructor_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"Nature711"},"content":"        assertEquals(\"E | 0 | play tennis | Aug 25 2021\",","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"Nature711"},"content":"                new Event(\"play tennis\", LocalDate.parse(\"2021-08-25\")).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"Nature711"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"Nature711"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"Nature711":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Nature711"},"content":"todo study","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Nature711"},"content":"event dating /at 10pm","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"Nature711"},"content":"deadline project /by tonight","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Nature711"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Nature711"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Nature711"},"content":"delete 1","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"Nature711"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Nature711"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Nature711"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"Nature711"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"Nature711"},"content":"delete","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"Nature711"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Nature711":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Nature711"},"content":"java -classpath ..\\bin Dino \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Nature711":1,"-":20}}]
