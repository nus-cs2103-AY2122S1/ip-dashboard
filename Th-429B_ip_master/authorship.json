[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Th-429B"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Th-429B"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Th-429B"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Th-429B"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Th-429B"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Th-429B"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Th-429B"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Th-429B"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Th-429B"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Th-429B"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Th-429B"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Th-429B"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Th-429B"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":46,"Th-429B":14}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"E/@0/@meeting/@22/08/2021 1600","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"T/@0/@homework/@10/10/1999 1010","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"D/@0/@meeting/@22/08/2021 1800","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":"T/@0/@book/@10/10/1999 1010","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":"T/@0/@book /@10/10/1999 1010","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":"T/@0/@return book/@10/10/1999 1010","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":"D/@0/@read book/@23/08/2021 1800","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"Th-429B":7}},{"path":"src/main/java/duke/ChatBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Th-429B"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Th-429B"},"content":" * ChatBot is a class that encapsulates what a chat bot has.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Th-429B"},"content":" * It functions as a chat bot that responds to user inputs and","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Th-429B"},"content":" * does tasks specified by the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Th-429B"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Th-429B"},"content":"public class ChatBot {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"Th-429B"},"content":"    private ArrayList\u003cTask\u003e temp;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Th-429B"},"content":"    private TaskList tasklist;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Th-429B"},"content":"    private Storage s;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Th-429B"},"content":"    private UI ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"Th-429B"},"content":"    private int exitStatus \u003d 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Th-429B"},"content":"     * This is the constructor of ChatBot that initializes the UI and Storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Th-429B"},"content":"    public ChatBot() {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Th-429B"},"content":"        this.s \u003d new Storage();","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Th-429B"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Th-429B"},"content":"     * This is the method called when the program is started.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Th-429B"},"content":"     * It checks for the save directory and loads any previously","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Th-429B"},"content":"     * stored tasks. It also prints out the start message.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Th-429B"},"content":"    public void start() {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Th-429B"},"content":"        s.makeDir();","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Th-429B"},"content":"        s.checkFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Th-429B"},"content":"        this.temp \u003d s.loadTasks();","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Th-429B"},"content":"        tasklist \u003d new TaskList(temp);","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Th-429B"},"content":"     * This method is to stop the program from running and prints","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Th-429B"},"content":"     * out the exit message.","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Th-429B"},"content":"    public String handleExit() {","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"Th-429B"},"content":"        exitStatus \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Th-429B"},"content":"        return ui.showExitMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Th-429B"},"content":"     * This method is to call the UI to print all the tasks that is stored.","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Th-429B"},"content":"    public String handleList() {","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"Th-429B"},"content":"        return ui.getListMessage(tasklist);","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Th-429B"},"content":"     * This method is to mark the user specified task as done","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Th-429B"},"content":"     * and print out the corresponding UI message.","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Th-429B"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Th-429B"},"content":"     * @param index Index of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Th-429B"},"content":"    public String handleDone(int index) {","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"Th-429B"},"content":"        Task t \u003d tasklist.completeTask(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Th-429B"},"content":"        s.saveTasks(tasklist);","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Th-429B"},"content":"        return ui.showCompleteTaskMessage(t);","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Th-429B"},"content":"     * This method is to add a new deadline to the storage and","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Th-429B"},"content":"     * print out the add message when the task is added successfully.","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Th-429B"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Th-429B"},"content":"     * @param name Name of the deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Th-429B"},"content":"     * @param deadline The date and time of the deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Th-429B"},"content":"    public String handleDeadline(String name, LocalDateTime deadline) {","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"Th-429B"},"content":"        Task t \u003d tasklist.addDeadline(name, deadline, false);","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Th-429B"},"content":"        s.saveTasks(tasklist);","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Th-429B"},"content":"        return ui.showAddTaskMessage(t, tasklist.getTotalTasksNumber());","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Th-429B"},"content":"     * This method is to add a new task to the storage and","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"Th-429B"},"content":"     * print out the add message when the task is added successfully.","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"Th-429B"},"content":"     * @param name Name of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Th-429B"},"content":"    public String handleTodo(String name) {","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"Th-429B"},"content":"        Task t \u003d tasklist.addTodo(name, false);","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"Th-429B"},"content":"        s.saveTasks(tasklist);","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"Th-429B"},"content":"        return ui.showAddTaskMessage(t, tasklist.getTotalTasksNumber());","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Th-429B"},"content":"     * This method is to add a new event to the storage and","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"Th-429B"},"content":"     * print out the add message when the task is added successfully.","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"Th-429B"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"Th-429B"},"content":"     * @param name Name of the deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"Th-429B"},"content":"     * @param time The date and time of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"Th-429B"},"content":"    public String handleEvent(String name, LocalDateTime time) {","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"Th-429B"},"content":"        Task t \u003d tasklist.addEvent(name, time, false);","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"Th-429B"},"content":"        s.saveTasks(tasklist);","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"Th-429B"},"content":"        return ui.showAddTaskMessage(t, tasklist.getTotalTasksNumber());","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":109,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":110,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"Th-429B"},"content":"     * This method deletes the task specified by the user and","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"Th-429B"},"content":"     * print the delete message on successful deletion.","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"Th-429B"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"Th-429B"},"content":"     * @param index Index of the task specified by the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"Th-429B"},"content":"    public String handleDelete(int index) {","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"Th-429B"},"content":"        Task t \u003d tasklist.deleteTask(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"Th-429B"},"content":"        s.saveTasks(tasklist);","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"Th-429B"},"content":"        return ui.showDeleteTaskMessage(t, tasklist.getTotalTasksNumber());","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":121,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":122,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"Th-429B"},"content":"     * This method calls TaskList to find tasks related to the","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"Th-429B"},"content":"     * input by the user and calls UI to display them.","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"Th-429B"},"content":"     * @param name User input task to find.","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"Th-429B"},"content":"    public String handleFind(String name) {","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"Th-429B"},"content":"        String findTask \u003d tasklist.findTask(name);","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"Th-429B"},"content":"        return ui.showFoundTask(findTask);","lastModifiedDate":"2021-08-29"},{"lineNumber":130,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"Th-429B"},"content":"     * This method prints the list of all commands.","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"Th-429B"},"content":"    public String handleWrongCommand() {","lastModifiedDate":"2021-08-29"},{"lineNumber":136,"author":{"gitId":"Th-429B"},"content":"        return ui.showListOfCommands();","lastModifiedDate":"2021-08-29"},{"lineNumber":137,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":138,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":139,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"Th-429B"},"content":"     * This method prints the error message thrown by the program.","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"Th-429B"},"content":"     * @param message The error message.","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"Th-429B"},"content":"    public String handleErrorMessage(String message) {","lastModifiedDate":"2021-08-29"},{"lineNumber":144,"author":{"gitId":"Th-429B"},"content":"        return ui.showErrorMessage(message);","lastModifiedDate":"2021-08-29"},{"lineNumber":145,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":146,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":147,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":148,"author":{"gitId":"Th-429B"},"content":"     * Calls the UI to return the start message.","lastModifiedDate":"2021-08-29"},{"lineNumber":149,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":150,"author":{"gitId":"Th-429B"},"content":"    public String handleStart() {","lastModifiedDate":"2021-08-29"},{"lineNumber":151,"author":{"gitId":"Th-429B"},"content":"        return ui.showStartMessage();","lastModifiedDate":"2021-08-29"},{"lineNumber":152,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":153,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":154,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":155,"author":{"gitId":"Th-429B"},"content":"     * This method gets the total number of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":156,"author":{"gitId":"Th-429B"},"content":"     * @return total number of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":157,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":158,"author":{"gitId":"Th-429B"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"Th-429B"},"content":"        return tasklist.getTotalTasksNumber();","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":161,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":162,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"Th-429B"},"content":"     * Returns an int depending on exit status.","lastModifiedDate":"2021-08-30"},{"lineNumber":164,"author":{"gitId":"Th-429B"},"content":"     * @return 0 to exit, 1 to continue.","lastModifiedDate":"2021-08-30"},{"lineNumber":165,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"Th-429B"},"content":"    public int getExitStatus() {","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"Th-429B"},"content":"        return exitStatus;","lastModifiedDate":"2021-08-22"},{"lineNumber":168,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":169,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":170,"author":{"gitId":"Th-429B"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Th-429B":170}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Th-429B"},"content":" * The Duke program implements an application that reads the user input","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Th-429B"},"content":" * and does the corresponding actions based on the user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Th-429B"},"content":" * @author Teng Hon","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Th-429B"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"Th-429B"},"content":"    private ChatBot bot;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Th-429B"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Th-429B"},"content":"    public Duke() {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Th-429B"},"content":"        bot \u003d new ChatBot();","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Th-429B"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Th-429B"},"content":"        bot.start();","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Th-429B"},"content":"     * Returns the output depending on the user\u0027s input command","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Th-429B"},"content":"     * @param input User input command","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Th-429B"},"content":"     * @return Bot response.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Th-429B"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Th-429B"},"content":"        String temp;","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Th-429B"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"Th-429B"},"content":"            temp \u003d parser.parse(input, bot);","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Th-429B"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"Th-429B"},"content":"            return bot.handleErrorMessage(e.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"Th-429B"},"content":"        return temp;","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Th-429B"},"content":"     * Returns the starting message when duke starts up.","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Th-429B"},"content":"     * @return Starting message.","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Th-429B"},"content":"    public String getStart() {","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Th-429B"},"content":"        return bot.handleStart();","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"Th-429B"},"content":"     * Returns the exit status of the program with 0 equals exit and 1 otherwise.","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"Th-429B"},"content":"     * @return Int that corresponds to the exit status.","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"Th-429B"},"content":"    public int getExitStatus() {","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"Th-429B"},"content":"        return bot.getExitStatus();","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"Th-429B"},"content":"     * Checks if the program should exit before creating a new thread to handle","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"Th-429B"},"content":"     * bye message and exit.","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"Th-429B"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"Th-429B"},"content":"    public void exit() {","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"Th-429B"},"content":"        if (getExitStatus() \u003d\u003d 0) {","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"Th-429B"},"content":"            new Thread() { //inspiration from Lim PeiYuan","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"Th-429B"},"content":"                @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"Th-429B"},"content":"                public void run() {","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"Th-429B"},"content":"                    try {","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"Th-429B"},"content":"                        Thread.sleep(1000);","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"Th-429B"},"content":"                    } catch (InterruptedException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"Th-429B"},"content":"                        e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"Th-429B"},"content":"                    } finally {","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"Th-429B"},"content":"                        Platform.exit();","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"Th-429B"},"content":"                    }","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"Th-429B"},"content":"                }","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"Th-429B"},"content":"            }.start();","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"Th-429B"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"Th-429B"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Th-429B":73,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Th-429B"},"content":"public class Launcher {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Th-429B"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Th-429B"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Th-429B":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Th-429B"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Th-429B"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Th-429B"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Th-429B"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Th-429B"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Th-429B"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Th-429B"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Th-429B"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Th-429B"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Th-429B"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Th-429B"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Th-429B"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Th-429B"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Th-429B"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Th-429B"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Th-429B"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Th-429B"},"content":"            stage.show();","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Th-429B"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Th-429B"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Th-429B"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Th-429B"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Th-429B":33}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Th-429B"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":" * This is the class that handles user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Th-429B"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Th-429B"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Th-429B"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Th-429B"},"content":"     * This method calls the corresponding ChatBot methods based on the user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Th-429B"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Th-429B"},"content":"     * @param input The user input.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Th-429B"},"content":"     * @param bot","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Th-429B"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Th-429B"},"content":"    public String parse (String input, ChatBot bot) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Th-429B"},"content":"        String[] inputs \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Th-429B"},"content":"        String key \u003d inputs[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Th-429B"},"content":"        switch (key) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Th-429B"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Th-429B"},"content":"            return bot.handleExit();","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Th-429B"},"content":"        case \"list\":","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Th-429B"},"content":"            return bot.handleList();","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Th-429B"},"content":"        case \"done\":","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Th-429B"},"content":"            // check if a number is specified","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Th-429B"},"content":"            if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Th-429B"},"content":"                throw new DukeException(\"The task number cannot be empty you dum dum\");","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Th-429B"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Th-429B"},"content":"            // check if the following string is a number","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Th-429B"},"content":"            int index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Th-429B"},"content":"            // check if the number is valid.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Th-429B"},"content":"            if (index \u003c\u003d 0 || index \u003e bot.getTotalTasks()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Th-429B"},"content":"                throw new DukeException(\"Please enter a valid number\");","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Th-429B"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Th-429B"},"content":"            return bot.handleDone(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Th-429B"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Th-429B"},"content":"            if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Th-429B"},"content":"                throw new DukeException(\"Please specify the deadline description\");","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Th-429B"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Th-429B"},"content":"            String[] info \u003d inputs[1].split(\"/by\", 0);","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Th-429B"},"content":"            if (info.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Th-429B"},"content":"                throw new DukeException(\"Please specify the deadline time\");","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Th-429B"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Th-429B"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Th-429B"},"content":"                LocalDateTime parsedDate \u003d LocalDateTime.parse(info[1].trim(), formatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Th-429B"},"content":"                return bot.handleDeadline(info[0].trim(), parsedDate);","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Th-429B"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Th-429B"},"content":"                throw new DukeException(\"The format of date \u0026 time is wrong. Please use {dd/mm/yyyy hhmm}\");","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Th-429B"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Th-429B"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Th-429B"},"content":"            if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Th-429B"},"content":"                throw new DukeException(\"Please specify the todo description\");","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Th-429B"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Th-429B"},"content":"            return bot.handleTodo(inputs[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"Th-429B"},"content":"        case \"event\":","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Th-429B"},"content":"            if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Th-429B"},"content":"                throw new DukeException(\"Please specify the event description\");","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Th-429B"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Th-429B"},"content":"            info \u003d inputs[1].split(\"/at\");","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Th-429B"},"content":"            if (info.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Th-429B"},"content":"                throw new DukeException(\"Please specify the time\");","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Th-429B"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Th-429B"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Th-429B"},"content":"                LocalDateTime parsedDate \u003d LocalDateTime.parse(info[1].trim(), formatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Th-429B"},"content":"                return bot.handleEvent(info[0].trim(), parsedDate);","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"Th-429B"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Th-429B"},"content":"                throw new DukeException(\"The format of date \u0026 time is wrong. Please use {dd/mm/yyyy hhmm}\");","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Th-429B"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Th-429B"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Th-429B"},"content":"            if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Th-429B"},"content":"                throw new DukeException(\"The task number to delete cannot be empty you dum dum\");","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Th-429B"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Th-429B"},"content":"            // check if the following string is a number","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Th-429B"},"content":"            index \u003d Integer.parseInt(inputs[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"Th-429B"},"content":"            // check if the number is valid.","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"Th-429B"},"content":"            if (index \u003c\u003d 0 || index \u003e bot.getTotalTasks()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Th-429B"},"content":"                throw new DukeException(\"Please enter a valid number\");","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Th-429B"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"Th-429B"},"content":"            return bot.handleDelete(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"Th-429B"},"content":"        case \"find\":","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"Th-429B"},"content":"            if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"Th-429B"},"content":"                throw new DukeException(\"The task to find cannot be empty!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"Th-429B"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"Th-429B"},"content":"            return bot.handleFind(inputs[1].trim());","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"Th-429B"},"content":"        default:","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Th-429B"},"content":"            return bot.handleWrongCommand();","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"Th-429B"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Th-429B"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Th-429B":97}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":" * UI class that handles all interactions with user.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Th-429B"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Th-429B"},"content":"public class UI {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Th-429B"},"content":"     * This method is to print the starting message of Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Th-429B"},"content":"    public String showStartMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Th-429B"},"content":"        return \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Th-429B"},"content":"     * This method is to print the exiting message of Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Th-429B"},"content":"    public String showExitMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Th-429B"},"content":"        return \"bye! for now...\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Th-429B"},"content":"     * This method is to print the message when duke successfully adds a task.","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Th-429B"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Th-429B"},"content":"     * @param t The task that was added.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Th-429B"},"content":"     * @param size The total number of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Th-429B"},"content":"    public String showAddTaskMessage(Task t, int size) {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Th-429B"},"content":"        return \"I\u0027ve added this task:\\n\" + t","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Th-429B"},"content":"                + \"\\n\" + \"You have \" + size + \" tasks left!\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Th-429B"},"content":"     * This method is to print the message when duke successfully marks a task as complete.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Th-429B"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Th-429B"},"content":"     * @param t The task that was completed.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Th-429B"},"content":"    public String showCompleteTaskMessage(Task t) {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Th-429B"},"content":"        return \"Well done! You finally completed \" + t.getName() + \"!\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Th-429B"},"content":"     * This method is to print the message when duke successfully deletes a task.","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Th-429B"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Th-429B"},"content":"     * @param t The task that was added.","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Th-429B"},"content":"     * @param size The total number of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Th-429B"},"content":"    public String showDeleteTaskMessage(Task t, int size) {","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Th-429B"},"content":"        return \"The task has been removed:\\n\" + t","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Th-429B"},"content":"                + \"\\n\" + \"You have \" + size + \" tasks left!\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Th-429B"},"content":"     * This method is to print the list of all tasks in TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Th-429B"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Th-429B"},"content":"     * @param tasklist The TaskList object where all the tasks are stored.","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Th-429B"},"content":"    public String getListMessage(TaskList tasklist) {","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"Th-429B"},"content":"        String message \u003d \"Here are your tasks... if you choose to do it...\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Th-429B"},"content":"        String listMessage \u003d tasklist.getAllTasks();","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Th-429B"},"content":"        return message + listMessage;","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Th-429B"},"content":"     * This method is to print the the list of all commands available to Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Th-429B"},"content":"    public String showListOfCommands() {","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"Th-429B"},"content":"        return \"Unknown Command!\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Th-429B"},"content":"     * This method is to print the error message.","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Th-429B"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Th-429B"},"content":"     * @param errorMessage The error message of the exception thrown.","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Th-429B"},"content":"    public String showErrorMessage(String errorMessage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"Th-429B"},"content":"        return errorMessage + \"\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"Th-429B"},"content":"     * Prints out the task that matched with the keyword with formatting.","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"Th-429B"},"content":"     * @param tasks String input of the tasks found.","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"Th-429B"},"content":"    public String showFoundTask(String tasks) {","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"Th-429B"},"content":"        return \"Here are the matching tasks in your list:\"","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"Th-429B"},"content":"                + tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"Th-429B"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Th-429B":90}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"package duke.exception;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":" * DukeException is a custom error created for duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Th-429B"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":"     * @param message","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Th-429B"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"Th-429B"},"content":"        super(message);","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"Th-429B"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Th-429B":15}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"package duke.gui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Th-429B"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Th-429B"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Th-429B"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Th-429B"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Th-429B"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Th-429B"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Th-429B"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Th-429B"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Th-429B"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Th-429B"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Th-429B"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Th-429B"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Th-429B"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Th-429B"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Th-429B"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Th-429B"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Th-429B"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Th-429B"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Th-429B"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Th-429B"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Th-429B"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Th-429B"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Th-429B"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Th-429B"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Th-429B"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Th-429B"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Th-429B"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Th-429B"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Th-429B"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Th-429B"},"content":"    private void flip() {","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Th-429B"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"Th-429B"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"Th-429B"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"Th-429B"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"Th-429B"},"content":"        setMinHeight(150);","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Th-429B"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Th-429B"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Th-429B"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"Th-429B"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"Th-429B"},"content":"        db.flip();","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"Th-429B"},"content":"        return db;","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"Th-429B"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Th-429B":61}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"package duke.gui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Th-429B"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Th-429B"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Th-429B"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Th-429B"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Th-429B"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Th-429B"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Th-429B"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Th-429B"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Th-429B"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Th-429B"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Th-429B"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Th-429B"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Th-429B"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Th-429B"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"Th-429B"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Th-429B"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"Th-429B"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"Th-429B"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"Th-429B"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Th-429B"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Th-429B"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Th-429B"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Th-429B"},"content":"//        userCircle.setFill(new ImagePattern(userImage));","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"Th-429B"},"content":"//        dukeCircle.setFill(new ImagePattern(dukeImage));","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"Th-429B"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Th-429B"},"content":"                DialogBox.getDukeDialog(duke.getStart(), dukeImage)","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Th-429B"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Th-429B"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"Th-429B"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"Th-429B"},"content":"    @FXML","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"Th-429B"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"Th-429B"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Th-429B"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Th-429B"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Th-429B"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Th-429B"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Th-429B"},"content":"        );","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Th-429B"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"Th-429B"},"content":"        duke.exit();","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"Th-429B"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Th-429B":59}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"package duke.storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"Th-429B"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"Th-429B"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"Th-429B"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"Th-429B"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Th-429B"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Th-429B"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Th-429B"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Th-429B"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Th-429B"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Th-429B"},"content":" * Storage reads and writes to a .txt file to save and load the tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Th-429B"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Th-429B"},"content":"public class Storage {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"Th-429B"},"content":"    final String STRING_TERMINATOR \u003d \"/@\";","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Th-429B"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Th-429B"},"content":"     * This method makes a directory at a hardcoded location for the data to be stored.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Th-429B"},"content":"     * If the directory is already made, nothing happens.","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Th-429B"},"content":"    public void makeDir() {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"Th-429B"},"content":"        File f \u003d new File(\"./data\");","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Th-429B"},"content":"     * This methods checks if the file has been created in a hardcode location","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Th-429B"},"content":"     * and creates the file if it has not been created.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Th-429B"},"content":"    public void checkFile() {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"Th-429B"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"Th-429B"},"content":"            File myObj \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Th-429B"},"content":"            myObj.createNewFile();","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"Th-429B"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"Th-429B"},"content":"            System.out.println(\"An error occurred when creating the file\");","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"Th-429B"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"Th-429B"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Th-429B"},"content":"     * This method reads from a hardcoded location and adds tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Th-429B"},"content":"     * into the task list based on the text stored inside.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Th-429B"},"content":"     * @return An ArrayList of the tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Th-429B"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"Th-429B"},"content":"        ArrayList\u003cTask\u003e load \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"Th-429B"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"Th-429B"},"content":"            File tasks \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"Th-429B"},"content":"            Scanner myReader \u003d new Scanner(tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"Th-429B"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"Th-429B"},"content":"                String[] data \u003d myReader.nextLine().split(\"/@\", 0);","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"Th-429B"},"content":"                String marker \u003d data[0];","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"Th-429B"},"content":"                String name \u003d data[2];","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"Th-429B"},"content":"                boolean isDone \u003d (data[1].equals(\"1\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"Th-429B"},"content":"                LocalDateTime time \u003d LocalDateTime.parse(data[3], formatter);","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"Th-429B"},"content":"                switch (marker) {","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"Th-429B"},"content":"                case \"D\":","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"Th-429B"},"content":"                    Task t \u003d new Deadline(name, time, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"Th-429B"},"content":"                    load.add(t);","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"Th-429B"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"Th-429B"},"content":"                case \"T\":","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"Th-429B"},"content":"                    t \u003d new Todo(name, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"Th-429B"},"content":"                    load.add(t);","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"Th-429B"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"Th-429B"},"content":"                case \"E\":","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"Th-429B"},"content":"                    t \u003d new Event(name, time, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"Th-429B"},"content":"                    load.add(t);","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"Th-429B"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"Th-429B"},"content":"                default:","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"Th-429B"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"Th-429B"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"Th-429B"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"Th-429B"},"content":"            myReader.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"Th-429B"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"Th-429B"},"content":"            System.out.println(\"File not found.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"Th-429B"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"Th-429B"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"Th-429B"},"content":"        return load;","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Th-429B"},"content":"     * This method reads the tasks in tasklist and translates into","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"Th-429B"},"content":"     * a special syntax to be saved in a text file.","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"Th-429B"},"content":"     * @param tasklist The list of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"Th-429B"},"content":"    public void saveTasks(TaskList tasklist) {","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"Th-429B"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"Th-429B"},"content":"            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"Th-429B"},"content":"            BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"Th-429B"},"content":"            for (int i \u003d 0; i \u003c tasklist.getTotalTasksNumber(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"Th-429B"},"content":"                StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"Th-429B"},"content":"                Task current \u003d tasklist.getTask(i);","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"Th-429B"},"content":"                s.append(current.getMarker());","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"Th-429B"},"content":"                s.append(STRING_TERMINATOR);","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"Th-429B"},"content":"                s.append(current.getDone());","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"Th-429B"},"content":"                s.append(STRING_TERMINATOR);","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"Th-429B"},"content":"                s.append(current.getName());","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"Th-429B"},"content":"                s.append(STRING_TERMINATOR);","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"Th-429B"},"content":"                s.append(current.getTime());","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"Th-429B"},"content":"                String temp \u003d s.toString();","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"Th-429B"},"content":"                bw.write(temp);","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"Th-429B"},"content":"                bw.newLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"Th-429B"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"Th-429B"},"content":"            bw.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"Th-429B"},"content":"            fw.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"Th-429B"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"Th-429B"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"Th-429B"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"Th-429B"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"Th-429B":124}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":" * Deadline class inherits from Task that contains the name, the time and the completion status.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Th-429B"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Th-429B"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"Th-429B"},"content":"    private String marker \u003d \"D\";","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"Th-429B"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"Th-429B"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Th-429B"},"content":"     * Constructor for an Deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Th-429B"},"content":"     * @param name Name of the Deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Th-429B"},"content":"     * @param deadline Time of the Deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Th-429B"},"content":"     * @param isDone Completion status of the Deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Th-429B"},"content":"    public Deadline(String name, LocalDateTime deadline, boolean isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"Th-429B"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"Th-429B"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Th-429B"},"content":"     * Returns the time in a specified format.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Th-429B"},"content":"     * @return Time in dd/MM/yy HHmm.","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Th-429B"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"Th-429B"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"Th-429B"},"content":"        return this.deadline.format(formatter);","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Th-429B"},"content":"     * Returns the marker \"D\" denoting deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Th-429B"},"content":"     * @return A string \"D\".","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Th-429B"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"Th-429B"},"content":"    public String getMarker() {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"Th-429B"},"content":"        return this.marker;","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Th-429B"},"content":"     * The string representation of an Event.","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Th-429B"},"content":"     * @return Event in string.","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Th-429B"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"Th-429B"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"Th-429B"},"content":"        return \"[\" + this.marker + \"]\" + super.toString()","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"Th-429B"},"content":"                + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy EEE HH:mm\")) + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"Th-429B"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Th-429B":54}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":" * Event class inherits from Task that contains the name, the time and the completion status.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Th-429B"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Th-429B"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"Th-429B"},"content":"    private String marker \u003d \"E\";","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"Th-429B"},"content":"    private LocalDateTime time;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"Th-429B"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Th-429B"},"content":"     * Constructor for an Event.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Th-429B"},"content":"     * @param name Name of the Event.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Th-429B"},"content":"     * @param time Time of the Event","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Th-429B"},"content":"     * @param isDone Completion status of the Event.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Th-429B"},"content":"    public Event(String name, LocalDateTime time, boolean isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"Th-429B"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"Th-429B"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Th-429B"},"content":"     * Returns the time in a specified format.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Th-429B"},"content":"     * @return Time in dd/MM/yy HHmm.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Th-429B"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"Th-429B"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"Th-429B"},"content":"        return this.time.format(formatter);","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Th-429B"},"content":"     * Returns the marker \"E\" denoting event.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Th-429B"},"content":"     * @return A string \"E\".","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Th-429B"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"Th-429B"},"content":"    public String getMarker() {","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"Th-429B"},"content":"        return this.marker;","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Th-429B"},"content":"     * The string representation of an Event.","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Th-429B"},"content":"     * @return Event in string.","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Th-429B"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"Th-429B"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"Th-429B"},"content":"        return \"[\" + this.marker + \"]\" + super.toString()","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"Th-429B"},"content":"                + \" (by: \" + time.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy EEE HH:mm\")) + \")\";","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"Th-429B"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Th-429B":53}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":" * The Task class encapsulates a task with the task name","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":" * if the task is done or not.","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"Th-429B"},"content":"    private String name;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Th-429B"},"content":"     * The constructor for the Task class.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Th-429B"},"content":"     * @param name Name of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Th-429B"},"content":"     * @param isDone If the task is done or not.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Th-429B"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"Th-429B"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"Th-429B"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Th-429B"},"content":"     * Gets the completion status of the task and returns a string","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Th-429B"},"content":"     * based on if it is complete or not.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Th-429B"},"content":"     * @return \"X\" to mark a task as complete and \" \" as not complete.","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Th-429B"},"content":"    public String getDoneMarker() {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"Th-429B"},"content":"        return this.isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Th-429B"},"content":"     * Gets the completion status of the task and returns a string","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Th-429B"},"content":"     * based on if it is complete or not. This is to store the task","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Th-429B"},"content":"     * as a string for Storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Th-429B"},"content":"     * @return \"1\" to mark a task as complete and \"0\" as not complete.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Th-429B"},"content":"    public String getDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"Th-429B"},"content":"        return isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"Th-429B"},"content":"    public String getMarker() {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"Th-429B"},"content":"        return \" \";","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"Th-429B"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"Th-429B"},"content":"        return \" \";","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Th-429B"},"content":"     * Gets the name of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Th-429B"},"content":"     * @return Name of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Th-429B"},"content":"    public String getName() {","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"Th-429B"},"content":"        return this.name;","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Th-429B"},"content":"     * Sets the completion status of the task as true.","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Th-429B"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"Th-429B"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Th-429B"},"content":"     * This methods returns the string value of a task.","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Th-429B"},"content":"     * @return The task in string.","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Th-429B"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"Th-429B"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"Th-429B"},"content":"        return \"[\" + this.getDoneMarker() + \"] \" + this.getName();","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"Th-429B"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Th-429B":73}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":" * The TaskList class the abstracts a list of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Th-429B"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Th-429B"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Th-429B"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Th-429B"},"content":"     * Constructor of the TaskList class.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Th-429B"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Th-429B"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"Th-429B"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Th-429B"},"content":"     * This methods adds a todo task.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Th-429B"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Th-429B"},"content":"     * @param input Name of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Th-429B"},"content":"     * @param isDone Completion status of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Th-429B"},"content":"     * @return The task that was added.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Th-429B"},"content":"    public Task addTodo(String input, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Th-429B"},"content":"        Task t \u003d new Todo(input, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Th-429B"},"content":"        tasks.add(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Th-429B"},"content":"        return t;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Th-429B"},"content":"     * This methods adds a deadline task.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Th-429B"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Th-429B"},"content":"     * @param name Name of the deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Th-429B"},"content":"     * @param deadline The date and time of the deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Th-429B"},"content":"     * @param isDone Completion status of the deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Th-429B"},"content":"     * @return The task that was added.","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Th-429B"},"content":"    public Task addDeadline(String name, LocalDateTime deadline, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Th-429B"},"content":"        Task t \u003d new Deadline(name, deadline, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Th-429B"},"content":"        tasks.add(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Th-429B"},"content":"        return t;","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Th-429B"},"content":"     * This methods adds a event task.","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Th-429B"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Th-429B"},"content":"     * @param name Name of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Th-429B"},"content":"     * @param time The date and time of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Th-429B"},"content":"     * @param isDone Completion status of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Th-429B"},"content":"     * @return The task that was added.","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Th-429B"},"content":"    public Task addEvent(String name, LocalDateTime time, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Th-429B"},"content":"        Task t \u003d new Event(name, time, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Th-429B"},"content":"        tasks.add(t);","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Th-429B"},"content":"        return t;","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Th-429B"},"content":"     * This method deletes the task specified by the index.","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Th-429B"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Th-429B"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Th-429B"},"content":"     * @return The task that was deleted.","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"Th-429B"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Th-429B"},"content":"        Task delete \u003d tasks.get(index - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Th-429B"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Th-429B"},"content":"        return delete;","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Th-429B"},"content":"     * This method completes the task specified by the index.","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"Th-429B"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Th-429B"},"content":"     * @param index Index of the task to be completed.","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Th-429B"},"content":"     * @return The task that was completed.","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Th-429B"},"content":"    public Task completeTask(int index) {","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Th-429B"},"content":"        Task complete \u003d tasks.get(index - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"Th-429B"},"content":"        complete.completeTask();","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"Th-429B"},"content":"        return complete;","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"Th-429B"},"content":"     * This method returns all the tasks in the list in their string representation.","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"Th-429B"},"content":"     * @return String representation of all the tasks in the list.","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"Th-429B"},"content":"    public String getAllTasks() {","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"Th-429B"},"content":"        String listMessage \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"Th-429B"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Th-429B"},"content":"            listMessage \u003d listMessage + (i + 1) + \".\" + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"Th-429B"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"Th-429B"},"content":"        return listMessage;","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"Th-429B"},"content":"     * This methods returns the task by the give index.","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"Th-429B"},"content":"     * @param index Index of the task to be returned","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"Th-429B"},"content":"     * @return The task at that index.","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"Th-429B"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"Th-429B"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"Th-429B"},"content":"     * Gets the total number of tasks in the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"Th-429B"},"content":"     * @return The total number of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"Th-429B"},"content":"    public int getTotalTasksNumber() {","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"Th-429B"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"Th-429B"},"content":"     * Finds all tasks that has user input keyword in their description.","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"Th-429B"},"content":"     * @param name User input keyword.","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"Th-429B"},"content":"     * @return String representation of all task that match keyword.","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"Th-429B"},"content":"    public String findTask(String name) {","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"Th-429B"},"content":"        String foundTask \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"Th-429B"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"Th-429B"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"Th-429B"},"content":"            Task find \u003d tasks.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"Th-429B"},"content":"            String taskName \u003d find.getName();","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"Th-429B"},"content":"            String[] splitName \u003d taskName.split(\" \", 0);","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"Th-429B"},"content":"            for (int j \u003d 0; j \u003c splitName.length; j++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"Th-429B"},"content":"                if (splitName[j].equals(name)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"Th-429B"},"content":"                    foundTask \u003d foundTask + index + \".\" + find + \"\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"Th-429B"},"content":"                    index +\u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"Th-429B"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"Th-429B"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"Th-429B"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"Th-429B"},"content":"        return foundTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"Th-429B"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Th-429B":137}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":" * Todo class inherits from Task that contains the name, the time and the completion status.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Th-429B"},"content":"    private String marker \u003d \"T\";","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"Th-429B"},"content":"    private String time \u003d \"10/10/1999 1010\";","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Th-429B"},"content":"     * Constructor for a Todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Th-429B"},"content":"     * @param name Name of the Todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Th-429B"},"content":"     * @param isDone Completion status of the Todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Th-429B"},"content":"    public Todo(String name, boolean isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"Th-429B"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Th-429B"},"content":"     * Returns the time in a specified format.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Th-429B"},"content":"     * @return Time in dd/MM/yy HHmm.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Th-429B"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"Th-429B"},"content":"    public String getTime() {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"Th-429B"},"content":"        return this.time;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Th-429B"},"content":"     * Returns the marker \"E\" denoting event.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Th-429B"},"content":"     * @return A string \"E\".","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Th-429B"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"Th-429B"},"content":"    public String getMarker() {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"Th-429B"},"content":"        return this.marker;","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"Th-429B"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Th-429B"},"content":"     * The string representation of an Event.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Th-429B"},"content":"     * @return Event in string.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Th-429B"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Th-429B"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"Th-429B"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"Th-429B"},"content":"        return \"[\" + this.marker + \"]\" + super.toString();","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"Th-429B"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Th-429B":46}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Th-429B"},"content":"\u003cfx:root spacing\u003d\"10\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" prefHeight\u003d\"500\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Th-429B"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" maxHeight\u003d\"500\" minHeight\u003d\"10\" alignment\u003d\"TOP_RIGHT\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Th-429B"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Th-429B"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Th-429B"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Th-429B"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Th-429B"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Th-429B"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Th-429B":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Th-429B"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Th-429B"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Th-429B"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Th-429B"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Th-429B"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Th-429B"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Th-429B"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Th-429B"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Th-429B"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Th-429B"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Th-429B":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Th-429B"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Th-429B"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Th-429B"},"content":"    public void parse_doneCommand_missingNumber_exceptionThrown() {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Th-429B"},"content":"        ChatBot bot \u003d new ChatBot();","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Th-429B"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Th-429B"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Th-429B"},"content":"            p.parse(\"done\", bot);","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Th-429B"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Th-429B"},"content":"            assertEquals(\"The task number cannot be empty you dum dum\", e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Th-429B"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Th-429B"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Th-429B"},"content":"    public void parse_doneCommand_invalidNumber_exceptionThrown() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Th-429B"},"content":"        ChatBot bot \u003d new ChatBot();","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Th-429B"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Th-429B"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Th-429B"},"content":"            p.parse(\"done -1\", bot);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Th-429B"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Th-429B"},"content":"            assertEquals(\"Please enter a valid number\", e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Th-429B"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Th-429B"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Th-429B"},"content":"    public void parse_deadlineCommand_missingDescription_exceptionThrown() {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Th-429B"},"content":"        ChatBot bot \u003d new ChatBot();","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Th-429B"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Th-429B"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Th-429B"},"content":"            p.parse(\"deadline\", bot);","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Th-429B"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Th-429B"},"content":"            assertEquals(\"Please specify the deadline description\", e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Th-429B"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Th-429B"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Th-429B"},"content":"    public void parse_deadlineCommand_missingDeadline_exceptionThrown() {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Th-429B"},"content":"        ChatBot bot \u003d new ChatBot();","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Th-429B"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Th-429B"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Th-429B"},"content":"            p.parse(\"deadline homework\", bot);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Th-429B"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Th-429B"},"content":"            assertEquals(\"Please specify the deadline time\", e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Th-429B"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Th-429B"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Th-429B"},"content":"    public void parse_deadlineCommand_invalidDeadlineFormat_exceptionThrown() {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Th-429B"},"content":"        ChatBot bot \u003d new ChatBot();","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Th-429B"},"content":"        Parser p \u003d new Parser();","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Th-429B"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Th-429B"},"content":"            p.parse(\"deadline homework /by 08/22/2021 2100\", bot);","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Th-429B"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Th-429B"},"content":"            assertEquals(\"The format of date \u0026 time is wrong. Please use {dd/mm/yyyy hhmm}\", e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Th-429B"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Th-429B"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Th-429B":65}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Th-429B"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Th-429B"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Th-429B"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Th-429B"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Th-429B"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Th-429B"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Th-429B"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Th-429B"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Th-429B"},"content":"    private LocalDateTime testDate \u003d LocalDateTime.parse(\"22/08/2021 1830\".trim(), formatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Th-429B"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Th-429B"},"content":"    public void addTodo_oneTodo_success() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Th-429B"},"content":"        TaskList tl \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Th-429B"},"content":"        tl.addTodo(\"homework\", false);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Th-429B"},"content":"        Task expected \u003d new Todo(\"homework\", false);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Th-429B"},"content":"        assertEquals(1, tl.getTotalTasksNumber());","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Th-429B"},"content":"        assertEquals(expected.toString(), tl.getTask(0).toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Th-429B"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Th-429B"},"content":"    public void addDeadline_oneDeadline_success() {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Th-429B"},"content":"        TaskList tl \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Th-429B"},"content":"        tl.addDeadline(\"homework\", testDate, false);","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Th-429B"},"content":"        Task expected \u003d new Deadline(\"homework\", testDate, false);","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Th-429B"},"content":"        assertEquals(1, tl.getTotalTasksNumber());","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Th-429B"},"content":"        assertEquals(expected.toString(), tl.getTask(0).toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Th-429B"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Th-429B"},"content":"    public void addEvent_oneEvent_success() {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Th-429B"},"content":"        TaskList tl \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Th-429B"},"content":"        tl.addEvent(\"meeting\", testDate, false);","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Th-429B"},"content":"        Task expected \u003d new Event(\"meeting\", testDate, false);","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Th-429B"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Th-429B"},"content":"        assertEquals(1, tl.getTotalTasksNumber());","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Th-429B"},"content":"        assertEquals(expected.toString(), tl.getTask(0).toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Th-429B"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Th-429B"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Th-429B":53}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Th-429B"},"content":"hi","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"Th-429B"},"content":"done","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Th-429B"},"content":"done 100","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Th-429B"},"content":"done -100","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Th-429B"},"content":"done hello","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Th-429B"},"content":"deadline return book /by sunday","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Th-429B"},"content":"todo eat lunch","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Th-429B"},"content":"event lecture /at tuesday 2pm-4pm","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Th-429B"},"content":"todo homework","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":"todo play some games","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"Th-429B"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"Th-429B"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"Th-429B"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"Th-429B"},"content":"done 3","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"Th-429B"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"Th-429B"},"content":"not a command","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"Th-429B"},"content":"deadline","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"Th-429B"},"content":"deadline return book","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"Th-429B"},"content":"deadline return book /by","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"Th-429B"},"content":"deadline return book by","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"Th-429B"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"Th-429B"},"content":"event","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"Th-429B"},"content":"event meeting","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"Th-429B"},"content":"event meeting /at","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"Th-429B"},"content":"event meeting at","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"Th-429B"},"content":"delete 0","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"Th-429B"},"content":"delete 1","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"Th-429B"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"Th-429B"},"content":"delete 2","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"Th-429B"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"Th-429B"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Th-429B":31}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Th-429B"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\tasks\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\storage\\*.java ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"Th-429B":1}}]
