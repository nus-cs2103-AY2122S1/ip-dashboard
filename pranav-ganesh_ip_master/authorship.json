[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"# duke.Duke project template","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"pranav-ganesh":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"pranav-ganesh":15,"-":46}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"    private void flip() {","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"pranav-ganesh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"pranav-ganesh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"pranav-ganesh"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"pranav-ganesh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"pranav-ganesh"},"content":"        db.flip();","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"pranav-ganesh"},"content":"        return db;","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"pranav-ganesh":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"    public Duke() {","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"        storage \u003d new Storage(\"./duke.txt\");","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"        storage.loadTaskListData(taskList);","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"        ui \u003d new Ui(taskList, storage);","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"    public void runCLI() {","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"        this.ui.showWelcome();","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"        Ui.showLine();","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"            String command \u003d ui.getCommand();","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"            Parser parser \u003d new Parser(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"            if (parser.isExit()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"            Command c \u003d parser.parse();","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"            c.execute(taskList, storage);","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"            isExit \u003d parser.isExit();","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"        new Duke().runCLI();","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"    } ","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"    ","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"        if (parser.isExit()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"            String response \u003d Ui.sayBye();","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"            return response;","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"        } ","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"        Command c \u003d parser.parse();","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"        String response \u003d c.execute(this.taskList, this.storage);","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"        return response;","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"pranav-ganesh":48,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"public class Launcher {","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"pranav-ganesh":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"            stage.show();","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"pranav-ganesh":34}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/anonymous.png\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke_img.png\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"        Storage storage \u003d new Storage(\"./duke.txt\");","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"        storage.loadTaskListData(taskList);","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"        Ui ui \u003d new Ui(taskList, storage);","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"        String welcomeMessage \u003d ui.showWelcome();","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"                DialogBox.getDukeDialog(welcomeMessage, dukeImage)","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"        );","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"pranav-ganesh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"pranav-ganesh"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"pranav-ganesh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"pranav-ganesh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"pranav-ganesh"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"pranav-ganesh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"pranav-ganesh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"pranav-ganesh"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"pranav-ganesh"},"content":"        );","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"pranav-ganesh"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"pranav-ganesh"},"content":"            exitIfByeInput();","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"pranav-ganesh"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"pranav-ganesh"},"content":"    ","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"pranav-ganesh"},"content":"    private void exitIfByeInput() {","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"pranav-ganesh"},"content":"        int time \u003d 1000;","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"pranav-ganesh"},"content":"        TimerTask timerTask \u003d new TimerTask() {","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"pranav-ganesh"},"content":"            public void run() {","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"pranav-ganesh"},"content":"                Platform.exit();","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"pranav-ganesh"},"content":"                System.exit(0);","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"pranav-ganesh"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"pranav-ganesh"},"content":"        };","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"pranav-ganesh"},"content":"        ","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"pranav-ganesh"},"content":"        new Timer().schedule(timerTask, time);    ","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"pranav-ganesh":81}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"import duke.command.deadlineCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import duke.command.doneCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"import duke.command.eventCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"import duke.command.listCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"import duke.command.InvalidCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"import duke.command.deleteCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"import duke.command.todoCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"import duke.command.findCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":" * Deals with making sense of the user command","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"public class Parser {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"    private String command;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"     * Constructor for the Parser class where the user command is initialized","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"     * @param command Command typed the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"    public Parser(String command) {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns the instance of the type of command entered by the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"     * @return Command object.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"    public Command parse() {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"        if (command.equals(\"list\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"            return new listCommand(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"        } else if (command.startsWith(\"done\") \u0026\u0026 Character.isDigit(command.charAt(command.length() - 1)) \u0026\u0026 command.length() \u003c\u003d 8 ","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"                \u0026\u0026 !Character.isAlphabetic(command.charAt(command.length() - 2))  \u0026\u0026 Character.isDigit(command.charAt(5))) {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"            return new doneCommand(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"        } else if (command.startsWith(\"todo\")) {","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"            return new todoCommand(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"        } else if (command.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"            return new deadlineCommand(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"        } else if (command.startsWith(\"event\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"            return new eventCommand(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"        } else if (command.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"            return new deleteCommand(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"        } else if (command.startsWith(\"find\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"            return new findCommand(command);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"            return new InvalidCommand(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"pranav-ganesh"},"content":"     * Checks if the user types the command \u0027bye\u0027 or the user clicks enter without typing any command.","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"pranav-ganesh"},"content":"     * @return True or False.","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"pranav-ganesh"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"pranav-ganesh"},"content":"        if (command.equals(\"bye\") || command.equals(\"\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"pranav-ganesh"},"content":"            Ui.sayBye();","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"pranav-ganesh"},"content":"            Ui.showLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"pranav-ganesh"},"content":"            return true;","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"pranav-ganesh"},"content":"        return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"pranav-ganesh":67}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import java.io.File;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"public class Storage {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"    private String filepath;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"    private File file;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"     * Constructor for the Storage class where the filepath is initialized","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"     * @param filepath Filepath of the file (duke.txt) where the task data is stored.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"            File file \u003d new File(filepath);","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"            this.file \u003d file;","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"     * Loads the task data from the duke.txt file into the list variable.","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"     * @param taskList TaskList where the tasks are stored.","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"    public void loadTaskListData(TaskList taskList) {","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"pranav-ganesh"},"content":"            Scanner s \u003d new Scanner(this.file); // create a Scanner using the File as the source","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"pranav-ganesh"},"content":"            if (!s.hasNext()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"pranav-ganesh"},"content":"                Ui.printMessage(\"There are no items in your task list!\");","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"            } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"pranav-ganesh"},"content":"                Ui.printMessage(\"Here is your current task list: \");","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"pranav-ganesh"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"pranav-ganesh"},"content":"                    String str \u003d s.nextLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"pranav-ganesh"},"content":"                    System.out.println(str);","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"pranav-ganesh"},"content":"                    String[] parts \u003d str.split(\"\\\\|\", 4);","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"pranav-ganesh"},"content":"                    String subStr \u003d parts[0].substring(3).trim();","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"pranav-ganesh"},"content":"                    if (subStr.equals(\"duke.task.Todo\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"pranav-ganesh"},"content":"                        Task task \u003d new Todo(parts[2].trim());","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"pranav-ganesh"},"content":"                        if (parts[1].trim().equals(\"X\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"pranav-ganesh"},"content":"                            task.markAsDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"pranav-ganesh"},"content":"                        }","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"                        taskList.addTask(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"pranav-ganesh"},"content":"                    } else if (subStr.equals(\"duke.task.Deadline\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"pranav-ganesh"},"content":"                        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h a\");","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"pranav-ganesh"},"content":"                        LocalDateTime dateTime \u003d LocalDateTime.parse(parts[3].substring(5).trim(), dtf);","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"pranav-ganesh"},"content":"                        Task task \u003d new Deadline(parts[2].trim(), dateTime);","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"pranav-ganesh"},"content":"                        if (parts[1].trim().equals(\"X\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"pranav-ganesh"},"content":"                            task.markAsDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"pranav-ganesh"},"content":"                        }","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"pranav-ganesh"},"content":"                        taskList.addTask(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"pranav-ganesh"},"content":"                    } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"pranav-ganesh"},"content":"                        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h a\");","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"pranav-ganesh"},"content":"                        LocalDateTime dateTime \u003d LocalDateTime.parse(parts[3].substring(5).trim(), dtf);","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"pranav-ganesh"},"content":"                        Task task \u003d new Event(parts[2].trim(), dateTime);","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"pranav-ganesh"},"content":"                        if (parts[1].trim().equals(\"X\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"pranav-ganesh"},"content":"                            task.markAsDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"pranav-ganesh"},"content":"                        }","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"pranav-ganesh"},"content":"                        taskList.addTask(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"pranav-ganesh"},"content":"                    }","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"pranav-ganesh"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"pranav-ganesh"},"content":"                Ui.printMessage(\"End of task list\");","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"pranav-ganesh"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"pranav-ganesh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"pranav-ganesh"},"content":"            System.out.println(\"File not found!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"pranav-ganesh"},"content":"    ","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"pranav-ganesh"},"content":"     * Writes the task data to the duke.txt file whenever the list variable is updated.","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"pranav-ganesh"},"content":"     * @param filePath Filepath of the file (duke.txt) where the task data is stored.","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"pranav-ganesh"},"content":"     * @param taskList TaskList where the tasks are stored.","lastModifiedDate":"2021-09-02"},{"lineNumber":97,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"pranav-ganesh"},"content":"    public void writeToFile(String filePath, TaskList taskList) {","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"pranav-ganesh"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"pranav-ganesh"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"pranav-ganesh"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"pranav-ganesh"},"content":"                int num \u003d i + 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"pranav-ganesh"},"content":"                fw.write(num + \". \" + taskList.getTask(i).getTaskListOnDisk() + \"\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"pranav-ganesh"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"pranav-ganesh"},"content":"            fw.close();","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"pranav-ganesh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"pranav-ganesh"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"pranav-ganesh":110}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":" * Represents the user interface which deals with interactions with the user","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"public class Ui {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"    Scanner sc;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"    private static TaskList taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"    private static Storage storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"     * Constructor for the Ui class where variables are initialized","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"     * @param taskList TaskList that stores the tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"     * @param storage Storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"    public Ui(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns the command typed by the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"     * If the user doesn\u0027t type any command and clicks enter, an empty string is returned.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String representation of the command entered by the user.","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"    public String getCommand() {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"        if (sc.hasNextLine()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"            String str \u003d sc.nextLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"            return str;","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"        return \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns the appropriate welcome message along with the existing task list when duke starts up.","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"     * ","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String representation of welcome commands and the current task list.","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"    public String showWelcome() {","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"        String welcomeMessage \u003d \"Hello from duke :)) \\n\\n\" + \"Here is your current task list: \\n\" + showLine() + \"\\n\" ","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"                + this.taskList.printList() + \"\\n\" + showLine()  + \"\\nEnd of task list \\n\\n\" + \"How can I help you?\";","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"        System.out.println(welcomeMessage);","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"pranav-ganesh"},"content":"        return welcomeMessage;","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"pranav-ganesh"},"content":"     * Class method that returns the string response to the bye command.","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"pranav-ganesh"},"content":"     * ","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String response to the bye command.","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"pranav-ganesh"},"content":"    public static String sayBye() {","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"pranav-ganesh"},"content":"        String byeMessage \u003d \"Bye. Have a great day!\";","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"pranav-ganesh"},"content":"        System.out.println(byeMessage);","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"pranav-ganesh"},"content":"        return byeMessage;","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"     * Class method that returns a dashed line to enhance user interface.","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"pranav-ganesh"},"content":"     * ","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String representation of a dashed line.","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"pranav-ganesh"},"content":"    public static String showLine() {","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"pranav-ganesh"},"content":"        String line \u003d \"-----------------------------------------------\";","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"pranav-ganesh"},"content":"        System.out.println(line);","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"pranav-ganesh"},"content":"        return line;","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"pranav-ganesh"},"content":"     * Class method that returns a string value argument on the screen.","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"pranav-ganesh"},"content":"     * @param msg String value to be printed on the screen.","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String value to be printed on the screen.","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"pranav-ganesh"},"content":"    public static String printMessage(String msg) {","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"pranav-ganesh"},"content":"        System.out.println(msg);","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"pranav-ganesh"},"content":"        return msg;","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"pranav-ganesh"},"content":"     * Class method that returns the string response to the task command.","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"pranav-ganesh"},"content":"     * @param task Task object.","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String representation of the task as well as the number of tasks in the task list.","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"pranav-ganesh"},"content":"    public static String taskResponse(Task task) {","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"pranav-ganesh"},"content":"        String taskMessage \u003d \"Got it. I\u0027ve added this task:\" + System.lineSeparator() + task.toString() + System.lineSeparator()","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"pranav-ganesh"},"content":"                + \"Now you have \" + taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"pranav-ganesh"},"content":"        System.out.println(taskMessage);","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"pranav-ganesh"},"content":"        return taskMessage;","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"pranav-ganesh"},"content":"     * Class method that returns the string response to the done command.","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"pranav-ganesh"},"content":"     * @param task Task object.","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String representation of the task that is done by the user.","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"pranav-ganesh"},"content":"    public static String doneResponse(Task task) {","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"pranav-ganesh"},"content":"        String doneMessage \u003d \"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator() + task.toString();","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"pranav-ganesh"},"content":"        System.out.println(doneMessage);","lastModifiedDate":"2021-09-10"},{"lineNumber":109,"author":{"gitId":"pranav-ganesh"},"content":"        return doneMessage;","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"pranav-ganesh"},"content":"     * Class method that returns the string response to the delete command.","lastModifiedDate":"2021-09-10"},{"lineNumber":114,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"pranav-ganesh"},"content":"     * @param task Task object.","lastModifiedDate":"2021-09-10"},{"lineNumber":116,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String representation of the task that is deleted by the user as well as the number of tasks ","lastModifiedDate":"2021-09-10"},{"lineNumber":117,"author":{"gitId":"pranav-ganesh"},"content":"     * remaining in the task list.","lastModifiedDate":"2021-09-10"},{"lineNumber":118,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":119,"author":{"gitId":"pranav-ganesh"},"content":"    public static String deleteResponse(Task task) {","lastModifiedDate":"2021-09-10"},{"lineNumber":120,"author":{"gitId":"pranav-ganesh"},"content":"        String deleteMessage \u003d \"Noted. I\u0027ve removed this task:\" + System.lineSeparator() + task.toString() + System.lineSeparator()","lastModifiedDate":"2021-09-10"},{"lineNumber":121,"author":{"gitId":"pranav-ganesh"},"content":"                + \"Now you have \" + taskList.getSize() + \" tasks in the list.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":122,"author":{"gitId":"pranav-ganesh"},"content":"        System.out.println(deleteMessage);","lastModifiedDate":"2021-09-10"},{"lineNumber":123,"author":{"gitId":"pranav-ganesh"},"content":"        return deleteMessage;","lastModifiedDate":"2021-09-10"},{"lineNumber":124,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":125,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":126,"author":{"gitId":"pranav-ganesh"},"content":"    private static boolean isWordPresent(String[] furtherBreakdownIntoParts, String wordToFind) {","lastModifiedDate":"2021-09-10"},{"lineNumber":127,"author":{"gitId":"pranav-ganesh"},"content":"        for (int j \u003d 0; j \u003c furtherBreakdownIntoParts.length; j++) {","lastModifiedDate":"2021-09-10"},{"lineNumber":128,"author":{"gitId":"pranav-ganesh"},"content":"            if (wordToFind.equals(furtherBreakdownIntoParts[j].trim())) {","lastModifiedDate":"2021-09-10"},{"lineNumber":129,"author":{"gitId":"pranav-ganesh"},"content":"                return true;","lastModifiedDate":"2021-09-10"},{"lineNumber":130,"author":{"gitId":"pranav-ganesh"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":131,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":132,"author":{"gitId":"pranav-ganesh"},"content":"        return false;","lastModifiedDate":"2021-09-10"},{"lineNumber":133,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":134,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":135,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":136,"author":{"gitId":"pranav-ganesh"},"content":"     * Class method that returns the string response to the find command.","lastModifiedDate":"2021-09-10"},{"lineNumber":137,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":138,"author":{"gitId":"pranav-ganesh"},"content":"     * @param wordToFind Task class.","lastModifiedDate":"2021-09-10"},{"lineNumber":139,"author":{"gitId":"pranav-ganesh"},"content":"     * @param taskList TaskList object.","lastModifiedDate":"2021-09-10"},{"lineNumber":140,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String representation of the tasks in the task list that contain the wordToFind string.","lastModifiedDate":"2021-09-10"},{"lineNumber":141,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":142,"author":{"gitId":"pranav-ganesh"},"content":"    public static String findResponse(String wordToFind, TaskList taskList) {","lastModifiedDate":"2021-09-10"},{"lineNumber":143,"author":{"gitId":"pranav-ganesh"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-09-10"},{"lineNumber":144,"author":{"gitId":"pranav-ganesh"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-10"},{"lineNumber":145,"author":{"gitId":"pranav-ganesh"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2021-09-10"},{"lineNumber":146,"author":{"gitId":"pranav-ganesh"},"content":"            Task task \u003d taskList.getTask(i);","lastModifiedDate":"2021-09-10"},{"lineNumber":147,"author":{"gitId":"pranav-ganesh"},"content":"            String[] partsBeforeSlash \u003d task.toString().split(\"\\\\(\", 2);","lastModifiedDate":"2021-09-10"},{"lineNumber":148,"author":{"gitId":"pranav-ganesh"},"content":"            String[] furtherBreakdownIntoParts \u003d partsBeforeSlash[0].split(\" \");","lastModifiedDate":"2021-09-10"},{"lineNumber":149,"author":{"gitId":"pranav-ganesh"},"content":"            if (isWordPresent(furtherBreakdownIntoParts, wordToFind)) {","lastModifiedDate":"2021-09-10"},{"lineNumber":150,"author":{"gitId":"pranav-ganesh"},"content":"                response +\u003d count + \". \" + task.toString() + \"\\n\"; ","lastModifiedDate":"2021-09-10"},{"lineNumber":151,"author":{"gitId":"pranav-ganesh"},"content":"                System.lineSeparator();","lastModifiedDate":"2021-09-10"},{"lineNumber":152,"author":{"gitId":"pranav-ganesh"},"content":"                count++;","lastModifiedDate":"2021-09-10"},{"lineNumber":153,"author":{"gitId":"pranav-ganesh"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":154,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":155,"author":{"gitId":"pranav-ganesh"},"content":"        ","lastModifiedDate":"2021-09-10"},{"lineNumber":156,"author":{"gitId":"pranav-ganesh"},"content":"        if (count \u003d\u003d 1) {","lastModifiedDate":"2021-09-10"},{"lineNumber":157,"author":{"gitId":"pranav-ganesh"},"content":"            String message \u003d Ui.printMessage(\"Sorry, there are no matching tasks in your list :/\");","lastModifiedDate":"2021-09-10"},{"lineNumber":158,"author":{"gitId":"pranav-ganesh"},"content":"            return message;","lastModifiedDate":"2021-09-10"},{"lineNumber":159,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":160,"author":{"gitId":"pranav-ganesh"},"content":"        ","lastModifiedDate":"2021-09-10"},{"lineNumber":161,"author":{"gitId":"pranav-ganesh"},"content":"        String findMessage \u003d \"Here are the matching tasks in your list:\" + System.lineSeparator() + response;","lastModifiedDate":"2021-09-10"},{"lineNumber":162,"author":{"gitId":"pranav-ganesh"},"content":"        System.out.println(findMessage);","lastModifiedDate":"2021-09-10"},{"lineNumber":163,"author":{"gitId":"pranav-ganesh"},"content":"        return findMessage;","lastModifiedDate":"2021-09-10"},{"lineNumber":164,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":165,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"pranav-ganesh":165}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":" * An abstract class that represents the various types of commands that can be entered by the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"    private String command;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"     * Constructor for the Command class where the user command is initialized.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"     * @param command Command entered by the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"    public Command(String command) {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"     * Abstract method which represents Duke\u0027s response to various types of user commands.","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"     * @param taskList TaskList where the tasks are stored.","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String response to various types of commands.","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"    public abstract String execute(TaskList taskList, Storage storage);","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"pranav-ganesh":29}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":" * Represents the user command when the user enters an invalid command.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"    private String command;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"     * Constructor for the InvalidCommand class where the user command is initialized.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"     * @param command Command entered by the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"    public InvalidCommand(String command) {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"        super(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns the string representation of the class.","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String description of the class.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"        return \"This is an invalid command\";","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"     * Prints an error message when the user enters an invalid command.","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"     * @param taskList TaskList that stores the tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"     * @param storage Storage that deals with loading tasks from the file and saving tasks in the file.            ","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"        DukeException exp \u003d new InvalidCommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"        return exp.toString();","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"pranav-ganesh":45}},{"path":"src/main/java/duke/command/deadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":" * Represents the user command when the user enters a deadline.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"public class deadlineCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"    private String command;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"     * Constructor for the deadlineCommand class where the user command is initialized.","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"     * @param command Command entered by the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"    public deadlineCommand(String command) {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"        super(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns the string representation of the class.","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String description of the class.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"        return \"This is a deadline command\";","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"     * Executes the response when the user enters a \u0027deadline\u0027 command and updates the task list and storage ","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"     * file (duke.txt)","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"     * @param taskList TaskList that stores the tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"     * @param storage Storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String representation of the new deadline task as well as the number of tasks in the task list.","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"pranav-ganesh"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"pranav-ganesh"},"content":"        if (command.length() \u003c\u003d 9) {","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"            DukeException exp \u003d new EmptyDescriptionException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"pranav-ganesh"},"content":"            return exp.toString();","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"pranav-ganesh"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"pranav-ganesh"},"content":"            String[] parts \u003d command.split(\"/\", 2);","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"pranav-ganesh"},"content":"            try {","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"pranav-ganesh"},"content":"                DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"pranav-ganesh"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(parts[1].substring(3).trim(), dtf);","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"pranav-ganesh"},"content":"                Task task \u003d new Deadline(parts[0].substring(9), dateTime);","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"pranav-ganesh"},"content":"                taskList.addTask(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"pranav-ganesh"},"content":"                storage.writeToFile(\"./duke.txt\", taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"pranav-ganesh"},"content":"                String response \u003d Ui.taskResponse(task);","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"pranav-ganesh"},"content":"                return response;","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"pranav-ganesh"},"content":"                DukeException exp \u003d new InvalidDateTimeException(\"The format of your command is incorrect! It should be deadline/by \" ","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"pranav-ganesh"},"content":"                        + \"\u003cyyyy-mm-dd HHmm\u003e\");","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"pranav-ganesh"},"content":"                return exp.toString();","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"pranav-ganesh"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"pranav-ganesh":73}},{"path":"src/main/java/duke/command/deleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":" * Represents the user command when the user is deletes a task.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"public class deleteCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"    private String command;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"     * Constructor for the deleteCommand class where the user command is initialized.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"     * @param command Command entered by the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"    public deleteCommand(String command) {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"        super(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns the string representation of the class.","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String description of the class.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"        return \"This is a delete command\";","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"     * Executes the response when the user enters a \u0027delete\u0027 command and updates the task list and storage ","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"     * file (duke.txt)","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"     * @param taskList TaskList that stores the tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"     * @param storage Storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String representation of the task that is deleted by the user as well as the number of ","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"     * tasks remaining in the task list.","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"        int value \u003d Integer.parseInt(command.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"        Task task \u003d taskList.getTask(value-1);","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"        taskList.removeTask(value-1);","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"        storage.writeToFile(\"./duke.txt\", taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"        String response \u003d Ui.deleteResponse(task);","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"        return response;","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"pranav-ganesh":52}},{"path":"src/main/java/duke/command/doneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":" * Represents the user command when the user is done with a task.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"public class doneCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"    private String command;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"     * Constructor for the doneCommand class where the user command is initialized.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"     * @param command Command entered by the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"    public doneCommand(String command) {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"        super(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns the string representation of the class.","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String description of the class.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"        return \"This is a done command\";","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"     * Executes the response when the user enters a \u0027done\u0027 command and updates the task list and storage ","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"     * file (duke.txt)","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"     * @param taskList TaskList that stores the tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"     * @param storage Storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String representation of the task that is done by the user.","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"        int value \u003d Integer.parseInt(command.replaceAll(\"[^0-9]\", \"\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"        if (value \u003e taskList.getSize()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"            return \"Sorry the task doesn\u0027t exist yet, please try again!\";","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"            Task t \u003d taskList.getTask(value - 1);","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"            t.markAsDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"            storage.writeToFile(\"./duke.txt\", taskList);","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"pranav-ganesh"},"content":"            String response \u003d Ui.doneResponse(t);","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"pranav-ganesh"},"content":"            return response;","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"pranav-ganesh":55}},{"path":"src/main/java/duke/command/eventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":" * Represents the user command when the user enters an event.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"public class eventCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"    private String command;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"     * Constructor for the eventCommand class where the user command is initialized.","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"     * @param command Command entered by the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"    public eventCommand(String command) {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"        super(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns the string representation of the class.","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String description of the class.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"        return \"This is an event command\";","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"     * Executes the response when the user enters an \u0027event\u0027 command and updates the task list and storage ","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"     * file (duke.txt)","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"     * @param taskList TaskList that stores the tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"     * @param storage Storage that deals with loading tasks from the file and saving tasks in the file. ","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String representation of the new event task as well as the number of tasks in the task list.","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"pranav-ganesh"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"pranav-ganesh"},"content":"        if (command.length() \u003c\u003d 6) {","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"            DukeException exp \u003d new EmptyDescriptionException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"pranav-ganesh"},"content":"            return exp.toString();","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"pranav-ganesh"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"pranav-ganesh"},"content":"            String[] parts \u003d command.split(\"/\");","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"pranav-ganesh"},"content":"            try {","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"pranav-ganesh"},"content":"                DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"pranav-ganesh"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(parts[1].substring(3).trim(), dtf);","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"pranav-ganesh"},"content":"                Task task \u003d new Event(parts[0].substring(6), dateTime);","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"pranav-ganesh"},"content":"                taskList.addTask(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"pranav-ganesh"},"content":"                storage.writeToFile(\"./duke.txt\", taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"pranav-ganesh"},"content":"                String response \u003d Ui.taskResponse(task);","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"pranav-ganesh"},"content":"                return response;","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"pranav-ganesh"},"content":"                DukeException exp \u003d new InvalidDateTimeException(\"The format of your command is incorrect! It should be event/at \" ","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"pranav-ganesh"},"content":"                        + \"\u003cyyyy-mm-dd HHmm\u003e\");","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"pranav-ganesh"},"content":"                return exp.toString();","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"pranav-ganesh"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"pranav-ganesh":73}},{"path":"src/main/java/duke/command/findCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke.command;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":" * Represents the user command when the user wants to filter tasks that contain a matching word.","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"public class findCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"    private String command;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"     * Constructor for the findCommand class where the user command is initialized.","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"     * @param command Command entered by the user.","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"    public findCommand(String command) {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"        super(command);","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns the string representation of the class.","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String description of the class.","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"        return \"This is a find command\";","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"     * Executes the response when the user enters a \u0027find\u0027 command ","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"     * @param taskList TaskList that stores the tasks.","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"     * @param storage Storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String representation of the filtered tasks in the task list that contain the matching word ","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"     * entered by the user in the find command.","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"        String[] parts \u003d this.command.split(\" \", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"        String wordToFind \u003d parts[1];","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"        String response \u003d Ui.findResponse(wordToFind, taskList);","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"        return response;","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"pranav-ganesh":48}},{"path":"src/main/java/duke/command/listCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":" * Represents the user command when the user wants to view the task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"public class listCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"    private String command;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"     * Constructor for the listCommand class where the user command is initialized.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"     * @param command Command entered by the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"    public listCommand(String command) {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"        super(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns the string representation of the class.","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String description of the class.","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"        return \"This is a list command\";","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"     * Displays the task list when the user enters \u0027list\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"     * @param taskList TaskList that stores the tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"     * @param storage Storage that deals with loading tasks from the file and saving tasks in the file.            ","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"        String response \u003d taskList.printList();","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"        return response;","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"pranav-ganesh":42}},{"path":"src/main/java/duke/command/todoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":" * Represents the user command when the user enters a todo task.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"public class todoCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"    private String command;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"     * Constructor for the todoCommand class where the user command is initialized.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"     * @param command Command entered by the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"    public todoCommand(String command) {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"        super(command);","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns the string representation of the class.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String description of the class.","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"        return \"This is a todo command\";","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"     * Executes the response when the user enters a \u0027todo\u0027 command and updates the task list and storage ","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"     * file (duke.txt)","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"     * @param taskList TaskList that stores the tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"     * @param storage Storage that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String representation of the new todo task as well as the number of tasks in the task list.","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"        if (command.length() \u003c\u003d 5) {","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"            DukeException exp \u003d new EmptyDescriptionException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"            return exp.toString();","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"pranav-ganesh"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"pranav-ganesh"},"content":"            Task task \u003d new Todo(command.substring(5));","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"pranav-ganesh"},"content":"            taskList.addTask(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"            storage.writeToFile(\"./duke.txt\", taskList);","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"pranav-ganesh"},"content":"            String response \u003d Ui.taskResponse(task);","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"pranav-ganesh"},"content":"            return response;","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"pranav-ganesh":59}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke.exception;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"    private String message;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"        return message;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"pranav-ganesh":14}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke.exception;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"    public EmptyDescriptionException(String message) {","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"        super(message);","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"        return super.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"pranav-ganesh":12}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke.exception;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"        super(message);","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"        return super.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"pranav-ganesh":11}},{"path":"src/main/java/duke/exception/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke.exception;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"public class InvalidDateTimeException extends DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"    public InvalidDateTimeException(String message) {","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"        super(message);","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"    ","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"        return super.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"pranav-ganesh":11}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":" * Represents a deadline task in the task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"    private String formattedDtf;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"     * Constructor for the Deadline class where the description of task and date are initialized.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"     * @param by The date of deadline in yyyy-MM-dd HHmm format.             ","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h a\");","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"        String formattedDtf \u003d this.by.format(dtf);","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"        this.formattedDtf \u003d formattedDtf;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns the string representation of the deadline task stored on duke.txt.","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String representation of the deadline task stored on duke.txt.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"    public String getTaskListOnDisk() {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"        return \"duke.task.Deadline |\" + super.getStatusIcon() + \"| \" + description + \" | by: \" + formattedDtf;","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns the string representation of the deadline task stored in the list variable.","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String description of the deadline task.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedDtf + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"pranav-ganesh":45}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":" * Represents an event task in the task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"    private String formattedDtf;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"     * Constructor for the Event class where the description of task and date are initialized.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"     * @param at The date of the event in yyyy-MM-dd HHmm format.             ","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy, h a\");","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"        String formattedDtf \u003d this.at.format(dtf);","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"        this.formattedDtf \u003d formattedDtf;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"    ","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns the string representation of the event task stored on duke.txt.","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String representation of the event task stored on duke.txt.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"    public String getTaskListOnDisk() {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"        return \"duke.task.Event |\" + super.getStatusIcon() + \"| \" + description + \" | by: \" + formattedDtf;","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns the string representation of the event task stored in the list variable.","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String description of the event task.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formattedDtf + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"pranav-ganesh":45}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":" * An abstract class that represents the various types of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"    protected String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"     * Constructor for the Command class where the user command is initialized.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"     * Checks if the task has been completed or not.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"     * @return Either X or an empty string depending on whether the task is completed or not.","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"     * Marks the task as completed.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"    ","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"     * Abstract method which denotes the string representation of the task list that is stored on duke.txt.","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"     * ","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String representation of task list stored on duke.txt.","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"    public abstract String getTaskListOnDisk();","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"    ","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns the string representation of the task stored in the list variable.","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String description of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.description;","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"pranav-ganesh":52}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":" * Represents the list of tasks that are added by the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"public class TaskList {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"    private ArrayList\u003cTask\u003e userList;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"     * Constructor for the TaskList class where the task list is initialized.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"        userList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"     * Prints every task in the task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"    public String printList() {","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"        if (userList.isEmpty()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"            String response \u003d Ui.printMessage(\"You don\u0027t have any tasks in the list!\");","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"            return response;","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"            String response \u003d \"\";","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"            int count \u003d 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"            for (int i \u003d 0; i \u003c userList.size(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"                Task t \u003d userList.get(i);","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"                response +\u003d count + \". \" + t.toString() + \"\\n\";","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"                count++;","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"            return response;","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"     * @return Number of items in the task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"        return userList.size();","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns the task at the specified index (val) from the task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"pranav-ganesh"},"content":"     * @param val Index value;","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"pranav-ganesh"},"content":"     * @return Task object.","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"pranav-ganesh"},"content":"    public Task getTask(int val) {","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"pranav-ganesh"},"content":"        return userList.get(val);","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"pranav-ganesh"},"content":"     * Adds the specified task to the task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"pranav-ganesh"},"content":"     * @param task Task object;","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"pranav-ganesh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"pranav-ganesh"},"content":"        userList.add(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"pranav-ganesh"},"content":"     * Removes the task at the specified index (val) from the task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"pranav-ganesh"},"content":"     * @param val Index value;","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"pranav-ganesh"},"content":"    public void removeTask(int val) {","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"pranav-ganesh"},"content":"        userList.remove(val);","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"pranav-ganesh":75}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":" * Represents a todo task in the task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"     * Constructor for the Todo class where the description of task is initialized.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns the string representation of the todo task stored on duke.txt.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String representation of the todo task stored on duke.txt.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"    public String getTaskListOnDisk() {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"        return \"duke.task.Todo |\" + super.getStatusIcon() + \"| \" + description;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"     * Returns the string representation of the todo task stored in the list variable.","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"     * @return String description of the todo task.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"pranav-ganesh":35}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" maxHeight\u003d\"Infinity\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"pranav-ganesh":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"pranav-ganesh":19}},{"path":"src/test/java/duke/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import org.junit.Assert;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"public class DukeExceptionTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"    public void InvalidCommandException_exceptionObject_errorMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"        Assert.assertEquals(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", new InvalidCommandException(\"OOPS!!! \" +","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"                \"I\u0027m sorry, but I don\u0027t know what that means :-(\").toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"    public void EmptyDescriptionException_exceptionObject_errorMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"        Assert.assertEquals(\"OOPS!!! The description of a deadline cannot be empty.\", new InvalidCommandException(\"OOPS!!! \" +","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"                \"The description of a deadline cannot be empty.\").toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"    public void InvalidDateTimeException_exceptionObject_errorMessage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"        Assert.assertEquals(\"The format of your command is incorrect! It should be deadline/by \" + \"\u003cyyyy-mm-dd HHmm\u003e\", ","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"                new InvalidCommandException(\"The format of your command is incorrect! It should be deadline/by \u003cyyyy-mm-dd HHmm\u003e\").toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"pranav-ganesh":25}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"import org.junit.Assert;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"    public void isExit_commandBye_true() {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"        Assert.assertEquals(true, new Parser(\"bye\").isExit());","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"    public void isExit_commandEmptyString_true() {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"        Assert.assertEquals(true, new Parser(\"\").isExit());","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"    public void isExit_commandDeadline_false() {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"        Assert.assertEquals(false, new Parser(\"deadline book ticket/by 2016-09-22 1700\").isExit());","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"    public void parse_commandDeadline_success() {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"        Assert.assertEquals(\"This is a deadline command\", new Parser(\"deadline book ticket/by 2016-09-22 1700\").parse()","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"                .toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"    public void parse_commandEvent_success() {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"        Assert.assertEquals(\"This is an event command\", new Parser(\"event concert/at 2016-09-22 1900\").parse()","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"                .toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"    public void parse_commandTodo_success() {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"        Assert.assertEquals(\"This is a todo command\", new Parser(\"todo play cricket\").parse().toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"    public void parse_commandDelete_success() {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"        Assert.assertEquals(\"This is a delete command\", new Parser(\"delete 1\").parse().toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"pranav-ganesh"},"content":"    public void parse_commandDone_success() {","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"pranav-ganesh"},"content":"        Assert.assertEquals(\"This is a done command\", new Parser(\"done 1\").parse().toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"pranav-ganesh"},"content":"    public void parse_commandInvalidString_success() {","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"pranav-ganesh"},"content":"        Assert.assertEquals(\"This is an invalid command\", new Parser(\"Some invalid string\").parse().toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"pranav-ganesh":53}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"import org.junit.Assert;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"    public void addTask_taskObject_success() {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"        Todo todo \u003d new Todo(\"todo do assignment\");","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"        Assert.assertEquals(todo, taskList.getTask(0));","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"    public void removeTask_taskObjects_success() {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"        Todo todo \u003d new Todo(\"todo do assignment\");","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"        Todo todo2 \u003d new Todo(\"todo play sports\");","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"        Todo todo3 \u003d new Todo(\"todo sing song\");","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"        taskList.addTask(todo2);","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"        taskList.addTask(todo3);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"        taskList.removeTask(1);","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"        Assert.assertEquals(todo3, taskList.getTask(1));","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"pranav-ganesh"},"content":"    public void size_taskObjects_success() {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"pranav-ganesh"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"pranav-ganesh"},"content":"        Todo todo \u003d new Todo(\"todo do assignment\");","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"pranav-ganesh"},"content":"        Todo todo2 \u003d new Todo(\"todo play sports\");","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"pranav-ganesh"},"content":"        Todo todo3 \u003d new Todo(\"todo sing song\");","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"pranav-ganesh"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"pranav-ganesh"},"content":"        taskList.addTask(todo2);","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"pranav-ganesh"},"content":"        taskList.addTask(todo3);","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"pranav-ganesh"},"content":"        Assert.assertEquals(3, taskList.getSize());","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"pranav-ganesh":41}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"package duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"import org.junit.Assert;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"    public void getStatusIcon_todoObject_X() {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"        Task task \u003d new Todo(\"Watch football\");","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"        Assert.assertEquals(\"X\", task.getStatusIcon());","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"pranav-ganesh"},"content":"    public void taskListOnDisk_todoObject_success() {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"        Task task \u003d new Todo(\"Watch football\");","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"pranav-ganesh"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"pranav-ganesh"},"content":"        Assert.assertEquals(\"duke.task.Todo |X| Watch football\", task.getTaskListOnDisk());","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"pranav-ganesh"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"pranav-ganesh"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"pranav-ganesh"},"content":"    public void toString_todoObject_success() {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"pranav-ganesh"},"content":"        Task task \u003d new Todo(\"Watch football\");","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"pranav-ganesh"},"content":"        Assert.assertEquals(\"[T][X] Watch football\", task.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"pranav-ganesh"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"pranav-ganesh"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"pranav-ganesh":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"pranav-ganesh"},"content":"deadline homework due /by 2pm","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"pranav-ganesh"},"content":"event cricket /at 10pm","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"pranav-ganesh"},"content":"event concert /at 5pm","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"pranav-ganesh"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"pranav-ganesh"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"pranav-ganesh"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"pranav-ganesh"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"pranav-ganesh"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"pranav-ganesh"},"content":"deadline assignment due /by 12am","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"pranav-ganesh"},"content":"random","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"pranav-ganesh"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"pranav-ganesh"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"pranav-ganesh"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"pranav-ganesh"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"pranav-ganesh":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"pranav-ganesh"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"pranav-ganesh":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"pranav-ganesh"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"pranav-ganesh":1,"-":33}}]
