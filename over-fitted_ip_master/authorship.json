[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"# duke.duke project template","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"over-fitted":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"jar {","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"    manifest {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"        attributes(","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"                \u0027Main-Class\u0027: \u0027Duke\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"        )","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"over-fitted"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"over-fitted":26,"-":44}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"public class Launcher {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"over-fitted":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"import duke.common.Duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"import duke.controller.MainWindow;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/MainWindow.fxml\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"            stage.show();","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"over-fitted":32}},{"path":"src/main/java/duke/common/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke.common;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":" * Duke is the parent class encapsulating the logic behind consuming input from the GUI of the application, and","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":" * producing output back to the GUI.","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"public class Duke {","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"    private Parser parser;","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"    private String taskListFileName;","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"    public Duke() {","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"        this(\"data/duke.txt\");","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"     * DukeException is used for thrown exceptions related to the logic behind Duke.","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"    public static class DukeException extends Exception {","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"        public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"            super(errorMessage);","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"     * Configures a Duke runtime to use a taskList storage file at specified location.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"     * This exposes the storage file location dependency for testing purposes.","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"     * @param taskListFileName path to taskList storage file.","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"    public Duke(String taskListFileName) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"        this.taskListFileName \u003d taskListFileName;","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"        storage \u003d new Storage(this.taskListFileName);","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"        taskList \u003d storage.initialise();","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"     * Passes user input to Duke runtime and relays response back.","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"     * @param input user input","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"     * @return Duke response","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"over-fitted"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"over-fitted"},"content":"        String response \u003d parser.parse(input, taskList, ui);","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"over-fitted"},"content":"        storage.store(taskList);","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"        return response;","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"over-fitted":56,"-":2}},{"path":"src/main/java/duke/common/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke.common;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"import duke.common.enums.TaskField;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"import duke.common.task.Deadline;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"import duke.common.task.Event;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"import duke.common.task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"import duke.common.task.Todo;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":" * Parses inputs provided by ui, and directs ui to print corresponding output.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"public class Parser {","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"     * Checks whether provided string input is associated with a valid Duke action,","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"     * then if so executes action associated with provided string input and returns a string response for UI to pass","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"     * back to the user.","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"     * @param ui intermediary text processor between parser and Duke\u0027s response output,","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"     * @param input    command associated with an action","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"     * @param taskList storage used to carry out actions","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"     * @return whether Duke has completed executing","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"    public static String parse(String input, TaskList taskList, Ui ui) {","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"        Pattern todoPattern \u003d Pattern.compile(\"todo (.*)\");","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"        Pattern deadlinePattern \u003d Pattern.compile(\"deadline (.*) /by (.*)\");","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"        Pattern eventPattern \u003d Pattern.compile(\"event (.*) /at (.*)\");","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"        Pattern findPattern \u003d Pattern.compile(\"find (.*)\");","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"        Pattern updatePattern \u003d Pattern.compile(\"update (\\\\d) (/.*) (.*)\");","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"        // Print out list","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"            return ui.printResponse(taskList.list());","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"        // Find related tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"        Matcher findMatcher \u003d findPattern.matcher(input);","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"        if (findMatcher.find()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"            ArrayList\u003cTask\u003e tasks \u003d taskList.find(findMatcher.group(1));","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"            return ui.printFind(tasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"        // Complete a task","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"        if (Pattern.matches(\"done \\\\d\", input)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"            String[] items \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"            return ui.printResponse(taskList.done(Integer.parseInt(items[1])));","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"over-fitted"},"content":"        // Delete a task","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"over-fitted"},"content":"        if (Pattern.matches(\"delete \\\\d\", input)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"over-fitted"},"content":"            String[] items \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"            return ui.printResponse(taskList.delete(Integer.parseInt(items[1])));","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"over-fitted"},"content":"        // Update a task","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"over-fitted"},"content":"        Matcher updateMatcher \u003d updatePattern.matcher(input);","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"over-fitted"},"content":"        if (updateMatcher.find()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"over-fitted"},"content":"            try {","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"over-fitted"},"content":"                int taskNumber \u003d Integer.parseInt(updateMatcher.group(1));","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"over-fitted"},"content":"                if (updateMatcher.group(2).equals(\"/desc\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"over-fitted"},"content":"                    return ui.printResponse(taskList.update(taskNumber, TaskField.DESCRIPTION, updateMatcher.group(3)));","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"over-fitted"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"over-fitted"},"content":"                if (updateMatcher.group(2).equals(\"/by\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"over-fitted"},"content":"                    return ui.printResponse(taskList.update(taskNumber, TaskField.DEADLINE, updateMatcher.group(3)));","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"over-fitted"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"over-fitted"},"content":"                if (updateMatcher.group(2).equals(\"/at\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"over-fitted"},"content":"                    return ui.printResponse(taskList.update(taskNumber, TaskField.EVENT_START, updateMatcher.group(3)));","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"over-fitted"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"over-fitted"},"content":"            } catch (Duke.DukeException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"over-fitted"},"content":"                return ui.printResponse(e.getLocalizedMessage());","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"over-fitted"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"over-fitted"},"content":"            return ui.printUpdateFail();","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"over-fitted"},"content":"        // Add a Todo type task","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"over-fitted"},"content":"        Matcher todoMatcher \u003d todoPattern.matcher(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"over-fitted"},"content":"        if (todoMatcher.find()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"over-fitted"},"content":"            String response \u003d taskList.addCustom(new Todo(todoMatcher.group(1)));","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"over-fitted"},"content":"            return ui.printResponse(response);","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"over-fitted"},"content":"        // Add a Deadline type task","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"over-fitted"},"content":"        Matcher deadlineMatcher \u003d deadlinePattern.matcher(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"over-fitted"},"content":"        if (deadlineMatcher.find()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"over-fitted"},"content":"            String response \u003d taskList.addCustom(new Deadline(deadlineMatcher.group(1), deadlineMatcher.group(2)));","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"over-fitted"},"content":"            return ui.printResponse(response);","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"over-fitted"},"content":"        // Add an Event type task","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"over-fitted"},"content":"        Matcher eventMatcher \u003d eventPattern.matcher(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"over-fitted"},"content":"        if (eventMatcher.find()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"over-fitted"},"content":"            String response \u003d taskList.addCustom(new Event(eventMatcher.group(1), eventMatcher.group(2)));","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"over-fitted"},"content":"            return ui.printResponse(response);","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"over-fitted"},"content":"        // Exit application","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"over-fitted"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"over-fitted"},"content":"            return ui.terminate();","lastModifiedDate":"2021-09-06"},{"lineNumber":103,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"over-fitted"},"content":"        // Identify reason for mis-input","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"over-fitted"},"content":"        if (input.length() \u003e\u003d 4 \u0026\u0026 input.startsWith(\"todo\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"over-fitted"},"content":"            return ui.printResponse(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"over-fitted"},"content":"        return ui.fail();","lastModifiedDate":"2021-09-06"},{"lineNumber":110,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"over-fitted":111}},{"path":"src/main/java/duke/common/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke.common;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import java.io.File;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":" * Handles saving of taskLists between Duke runtime sessions to text file by serialisation.","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"    private String taskListFileName;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"    private File taskListFile;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"    public Storage(String taskListFileName) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"        assert taskListFileName !\u003d \"\" : \"Filename should not be empty.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"        assert !taskListFileName.contains(\" \") : \"Filename should not contain whitespaces.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"        this.taskListFileName \u003d taskListFileName;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"            Files.createDirectories(Paths.get(this.taskListFileName).getParent().getFileName());","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"            System.out.println(\"cannot create directory\");","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"        this.taskListFile \u003d new File(this.taskListFileName);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"     * Loads taskList from textFile configured in constructor if it exists, else initialises empty taskList.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"     * @return stored taskList if present, or empty taskList.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"    public TaskList initialise() {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"            if (!this.taskListFile.createNewFile()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"                FileInputStream fis \u003d new FileInputStream(this.taskListFileName);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"                ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"                taskList \u003d (TaskList) ois.readObject();","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"                ois.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"            System.out.println(\"classnotfound\");","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"        assert taskList !\u003d null : \"TaskList was not initialised\";","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"        return taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"over-fitted"},"content":"     * Serialises a taskList into a text file for use in future sessions.","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"over-fitted"},"content":"     * @param taskList taskList to be serialised.","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"over-fitted"},"content":"    public void store(TaskList taskList) {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"over-fitted"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"over-fitted"},"content":"            FileOutputStream fos \u003d new FileOutputStream(this.taskListFileName);","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"over-fitted"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"over-fitted"},"content":"            oos.writeObject(taskList);","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"over-fitted"},"content":"            oos.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"over-fitted"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"over-fitted"},"content":"            System.out.println(\"Problem storing\");","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"over-fitted"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"over-fitted":72}},{"path":"src/main/java/duke/common/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke.common;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"import duke.common.enums.TaskField;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"import duke.common.task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":" * TaskList stores and retrieves tasks created by Duke.","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"     * Default constructor for TaskList","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"     * General-purpose method that stores any task created by Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"     * @param task the task to be stored","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"     * @return confirmation that task has been stored.","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"    public String addCustom(Task task) {","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"        return \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"               + String.format(\"  %s\\n\", task)","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"               + String.format(\"Now you have %d %s in the list.\", this.tasks.size(),","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"                                                                  this.tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"     * Retrieves all stored tasks and displays them.","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"     * @return formatted list of stored tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"    public String list() {","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"            result +\u003d (i + 1) + \". \" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"        return result;","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"     * Marks a task as done, represented in the future with a cross in the associated column.","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"     * @param taskNumber position of task in the TaskList","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"over-fitted"},"content":"     * @return confirmation that task has been marked as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"over-fitted"},"content":"    public String done(int taskNumber) {","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"        tasks.get(taskNumber - 1).complete();","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"over-fitted"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"over-fitted"},"content":"               + \"  \" + tasks.get(taskNumber - 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"over-fitted"},"content":"     * Removes target task.","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"over-fitted"},"content":"     * @param taskNumber position of target task","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"over-fitted"},"content":"     * @return confirmation that task has been deleted.","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"over-fitted"},"content":"    public String delete(int taskNumber) {","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"over-fitted"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"over-fitted"},"content":"        if (taskNumber \u003e this.tasks.size() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"over-fitted"},"content":"            return \"Sorry, that task does not exist!\\n\";","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"over-fitted"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"over-fitted"},"content":"        result +\u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"over-fitted"},"content":"                  + \"  \" + task + \"\\n\";","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"over-fitted"},"content":"        tasks.remove(taskNumber - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"over-fitted"},"content":"        return result + String.format(\"Now you have %d %s in the list.\\n\", this.tasks.size(),","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"over-fitted"},"content":"                                                                           this.tasks.size() \u003d\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"over-fitted"},"content":"     * Updates corresponding field of target task to new user-provided value.","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"over-fitted"},"content":"     * @param taskNumber rank of target task.","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"over-fitted"},"content":"     * @param taskField target field of task","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"over-fitted"},"content":"     * @param newItem new user-provided value for target field","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"over-fitted"},"content":"     * @return Duke response indicating if task was successful","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"over-fitted"},"content":"     * @throws Duke.DukeException indicates that a field that does not exist was requested to be updated.","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"over-fitted"},"content":"    public String update(int taskNumber, TaskField taskField, String newItem) throws Duke.DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"over-fitted"},"content":"        if (taskNumber \u003e this.tasks.size() || taskNumber \u003c\u003d 0) {","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"over-fitted"},"content":"            return \"Sorry, that task does not exist!\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"over-fitted"},"content":"        return \"Updated task\\n \" + tasks.get(taskNumber - 1).update(taskField, newItem) + \"\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"over-fitted"},"content":"     * Finds stored tasks by keyword.","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"over-fitted"},"content":"     * @param query keywords for task-finding","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"over-fitted"},"content":"     * @return list of tasks that contain the keyword","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"over-fitted"},"content":"    public ArrayList\u003cTask\u003e find(String query) {","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"over-fitted"},"content":"        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"over-fitted"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"over-fitted"},"content":"            Task tmp \u003d this.tasks.get(i);","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"over-fitted"},"content":"            if (tmp.getDescription().contains(query)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"over-fitted"},"content":"                results.add(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"over-fitted"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"over-fitted"},"content":"        return results;","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"over-fitted"},"content":"     * Indicates whether the taskList contains any tasks. Primarily used for testing.","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"over-fitted"},"content":"     * @return whether taskList is empty.","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"over-fitted"},"content":"     * @throws Duke.DukeException issue found in state of empty taskList","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"over-fitted"},"content":"    public boolean isEmpty() throws Duke.DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"over-fitted"},"content":"        return this.tasks.isEmpty();","lastModifiedDate":"2021-09-10"},{"lineNumber":121,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"over-fitted":122}},{"path":"src/main/java/duke/common/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke.common;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"import duke.common.task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":" * UI handles processes string responses from Duke before passing them on to be displayed in the app.","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"     * Displays default Duke startup banner.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"     * @return initialisation banner","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"    public String init() {","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"        return \"Hello from\\n\" + logo","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"               + \"What can I do for you?\";","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"     * Displays bye message.","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"     * @return bye message","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"    public String terminate() {","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"     * Displays failure message.","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"     * @return failure message","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"    public String fail() {","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"     * Displays update failure message.","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"     * @return update failure message","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"    public String printUpdateFail() {","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"        return \"Sorry, there does not seem to be such a field in this task.\";","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"over-fitted"},"content":"     * Prints tasks found from find query","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"     * @param tasks tasks found by taskList","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"over-fitted"},"content":"     * @return formatted list of tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"over-fitted"},"content":"    public String printFind(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"over-fitted"},"content":"        String response \u003d \"\";","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"over-fitted"},"content":"        response +\u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"over-fitted"},"content":"                    + \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"over-fitted"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"over-fitted"},"content":"            response +\u003d (i + 1) + \". \" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"over-fitted"},"content":"        response +\u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"over-fitted"},"content":"        return response;","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"over-fitted"},"content":"     * Prints data-reliant response to a command. Responses are fed by Parser","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"over-fitted"},"content":"     * @param response string reply to command","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"over-fitted"},"content":"     * @return response","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"over-fitted"},"content":"    public String printResponse(String response) {","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"over-fitted"},"content":"        return response;","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"over-fitted":81}},{"path":"src/main/java/duke/common/enums/TaskField.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke.common.enums;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"public enum TaskField {","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"    DESCRIPTION, DEADLINE, EVENT_START","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"over-fitted":5}},{"path":"src/main/java/duke/common/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke.common.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"import duke.common.Duke;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"import duke.common.enums.TaskField;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":" * Task with a specified deadline.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"    private LocalDate deadline;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"        super(description);","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"            this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"            this.deadline \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"            System.out.println(\"Deadline was not readable, saving as unspecified deadline\");","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"    public String update(TaskField taskField, String newItem) throws Duke.DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"        if (taskField \u003d\u003d TaskField.DESCRIPTION) {","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"            return super.update(taskField, newItem);","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"        if (taskField !\u003d TaskField.DEADLINE) {","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"            throw new Duke.DukeException(\"Sorry, there does not seem to be such a field in this task.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"            this.deadline \u003d LocalDate.parse(newItem);","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"            return this.toString();","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"            throw new Duke.DukeException(\"Sorry, new deadline could not be read.\\n Aborting update.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"        String stem \u003d super.toString();","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"        return String.format(\"[D]%s (by: %s)\", stem, this.deadline \u003d\u003d null","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"            ? \"unspecified\"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"            : this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"over-fitted":49}},{"path":"src/main/java/duke/common/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke.common.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import duke.common.Duke;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"import duke.common.enums.TaskField;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":" * Task associated with a given start time","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"    private String eventTime;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"    public Event(String description, String eventTime) {","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"        super(description);","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"    public String update(TaskField taskField, String newItem) throws Duke.DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"        if (taskField \u003d\u003d TaskField.DESCRIPTION) {","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"            return super.update(taskField, newItem);","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"        if (taskField !\u003d TaskField.EVENT_START) {","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"            throw new Duke.DukeException(\"Sorry, there does not seem to be such a field in this task.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"        this.eventTime \u003d newItem;","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"        return this.toString();","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"        String stem \u003d super.toString();","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"        return String.format(\"[E]%s (at: %s)\", stem, this.eventTime);","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"over-fitted":34}},{"path":"src/main/java/duke/common/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke.common.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"import duke.common.Duke;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"import duke.common.enums.TaskField;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":" * Generic task that stores a description and whether the task is completed.","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"public class Task implements Serializable {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"    protected String description;","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"        assert this.description !\u003d \"\" : \"Task description should not be empty\";","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"     * Updates corresponding field of task to new user-provided value.","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"     * @param taskField target field of task","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"     * @param newItem new user-provided value for target field","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"     * @return string representation of updated item","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"     * @throws Duke.DukeException indicates that a field that does not exist was requested to be updated.","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"    public String update(TaskField taskField, String newItem) throws Duke.DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"        if (taskField !\u003d TaskField.DESCRIPTION) {","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"            throw new Duke.DukeException(\"Sorry, there does not seem to be such a field in this task.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"        this.description \u003d newItem;","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"        return this.toString();","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"     * Getter for task description.","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"     * @return description of task","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"        return this.description;","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"     * Changes task completion state to true.","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"over-fitted"},"content":"    public void complete() {","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"over-fitted"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"over-fitted":61}},{"path":"src/main/java/duke/common/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke.common.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":" * Extension of generic task that indicates that the task has no extra information with a [T] prefix.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"        super(description);","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"        String stem \u003d super.toString();","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"        return String.format(\"[T]%s\", stem);","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"over-fitted":16}},{"path":"src/main/java/duke/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke.controller;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/DialogBox.fxml\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"    private void flip() {","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"over-fitted"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"over-fitted"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"over-fitted"},"content":"        db.flip();","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"over-fitted"},"content":"        return db;","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"over-fitted":61}},{"path":"src/main/java/duke/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke.controller;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import duke.common.Duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"     * Initialises chatbot window. Prints out welcome message and binds window height.","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"        String prompt \u003d \"Hello from\\n\" + logo","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"                        + \"What can I do for you?\";","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(prompt, dukeImage));","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"     * Sets duke instance to be used by window controller.","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"     * @param d duke instance to be used.","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"over-fitted"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"over-fitted"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"over-fitted"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"over-fitted"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"over-fitted"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"over-fitted"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"over-fitted"},"content":"            DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"over-fitted"},"content":"            DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"over-fitted"},"content":"        );","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"over-fitted"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"over-fitted":69}},{"path":"src/main/resources/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"over-fitted":16}},{"path":"src/main/resources/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controller.MainWindow\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"over-fitted":19}},{"path":"src/test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import java.io.File;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"import java.nio.file.DirectoryStream;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"import duke.common.Duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"import duke.common.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"import duke.common.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"    public void createTaskDirTest() {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"        final String testFileName \u003d \"createDirTest/createDirTest.txt\";","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"        // Test creation of directory","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"        Storage testStorage \u003d new Storage(testFileName);","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"        // assert empty directory is created","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"        assertTrue(Files.isDirectory(Paths.get(testFileName).getParent().getFileName()));","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"            assertTrue(isEmpty(Paths.get(testFileName).getParent().getFileName()));","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"            Assertions.fail(\"IOException when checking if teststorage is empty\");","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"        // Test initialising from non-existent file","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"        TaskList testTaskList \u003d testStorage.initialise();","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"            assertTrue(testTaskList.isEmpty());","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"        } catch (Duke.DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"            Assertions.fail(\"numTasks not 0 but tasklist is empty\");","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"        new File(testFileName).delete();","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"        new File(\"createDirTest\").delete();","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"    // Helper functions below","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"    public static boolean isEmpty(Path path) throws IOException {","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"        if (Files.isDirectory(path)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"            try (DirectoryStream\u003cPath\u003e directory \u003d Files.newDirectoryStream(path)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"                return !directory.iterator().hasNext();","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"        return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"over-fitted":54}}]
