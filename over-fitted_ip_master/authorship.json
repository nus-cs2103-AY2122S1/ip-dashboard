[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"# duke.duke project template","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"over-fitted":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"jar {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"    manifest {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"        attributes(","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"                \u0027Main-Class\u0027: \u0027duke\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"        )","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"over-fitted":10,"-":45}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"    private LocalDate deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"     * Task with a specified deadline.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"     * @param description description of task.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"     * @param deadline deadline of task.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"        super(description);","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"            this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"            this.deadline \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"            System.out.println(\"Deadline was not readable, saving as unspecified deadline\");","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"        String stem \u003d super.toString();","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"        return String.format(\"[D]%s (by: %s)\", stem, this.deadline \u003d\u003d null","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"            ? \"unspecified\"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"            : this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"over-fitted":33}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"    private String taskListFileName;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"     * Configures a Duke runtime to use a taskList storage file at specified location.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"     * @param taskListFileName path to taskList storage file.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"    public Duke(String taskListFileName) {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"        this.taskListFileName \u003d taskListFileName;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"    public static class DukeException extends Exception {","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"        public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"            super(errorMessage);","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"     * Default way to run the Duke programme.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"    public void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"        this.run(new BufferedReader(new InputStreamReader(System.in)), new PrintWriter(System.out));","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"     * Runs the Duke programme with provided inputs and outputs. Normally invoked by run() unless dependencies need","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"     * to be injected by test.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"     * @param in BufferedReader taking in user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"     * @param out PrintWriter to write responses to user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"    public void run(BufferedReader in, PrintWriter out) {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"        Ui ui \u003d new Ui(in, out);","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"        Parser parser \u003d new Parser(ui);","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"        Storage storage \u003d new Storage(this.taskListFileName);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"        TaskList taskList \u003d storage.initialise();","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"        ui.init();","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"        boolean ended \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"        while (!ended) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"            String input \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"            // Reading data using readLine","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"            try {","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"                input \u003d ui.getNextCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"over-fitted"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":54,"author":{"gitId":"over-fitted"},"content":"                System.out.println(\"Cannot get next command, terminating\");","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"over-fitted"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"over-fitted"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"over-fitted"},"content":"            ended \u003d parser.parse(input, taskList);","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"over-fitted"},"content":"        storage.store(taskList);","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"over-fitted"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"over-fitted"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"over-fitted":65,"-":3}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"    private String eventTime;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"     * Task associated with a given start time","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"     * @param description description of the event","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"     * @param eventTime when the event will occur","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"    public Event(String description, String eventTime) {","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"        super(description);","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"        String stem \u003d super.toString();","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"        return String.format(\"[E]%s (at: %s)\", stem, this.eventTime);","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"over-fitted":21}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"     * Parses inputs provided by ui, and directs ui to print corresponding output.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"     * @param ui ui used to interact with users.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"    public Parser(Ui ui) {","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"     * Executes action associated with provided string input, and prints out relevant details to console.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"     * @param input command associated with an action","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"     * @param taskList storage used to carry out actions","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"     * @return whether Duke has completed executing","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"    public boolean parse(String input, TaskList taskList) {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"        Pattern todoPattern \u003d Pattern.compile(\"todo (.*)\");","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"        Pattern deadlinePattern \u003d Pattern.compile(\"deadline (.*) /by (.*)\");","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"        Pattern eventPattern \u003d Pattern.compile(\"event (.*) /at (.*)\");","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"        Pattern findPattern \u003d Pattern.compile(\"find (.*)\");","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"        // print out list","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"            taskList.list();","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"        // finds related tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"        Matcher findMatcher \u003d findPattern.matcher(input);","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"        if (findMatcher.find()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"            ArrayList\u003cTask\u003e tasks \u003d taskList.find(findMatcher.group(1));","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"            this.ui.printFind(tasks);","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"            return false;","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"        // complete a task","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"        if (Pattern.matches(\"done \\\\d\", input)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"            String[] items \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"            taskList.done(Integer.parseInt(items[1]));","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"        if (Pattern.matches(\"delete \\\\d\", input)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"            String[] items \u003d input.split(\" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"over-fitted"},"content":"            taskList.delete(Integer.parseInt(items[1]));","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"over-fitted"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"over-fitted"},"content":"        Matcher todoMatcher \u003d todoPattern.matcher(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"over-fitted"},"content":"        if (todoMatcher.find()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"over-fitted"},"content":"            taskList.addCustom(new Todo(todoMatcher.group(1)));","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"over-fitted"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"over-fitted"},"content":"        Matcher deadlineMatcher \u003d deadlinePattern.matcher(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"over-fitted"},"content":"        if (deadlineMatcher.find()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"over-fitted"},"content":"            taskList.addCustom(new Deadline(deadlineMatcher.group(1), deadlineMatcher.group(2)));","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"over-fitted"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"over-fitted"},"content":"        Matcher eventMatcher \u003d eventPattern.matcher(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"over-fitted"},"content":"        if (eventMatcher.find()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"over-fitted"},"content":"            taskList.addCustom(new Event(eventMatcher.group(1), eventMatcher.group(2)));","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"over-fitted"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"over-fitted"},"content":"        // exit application","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"over-fitted"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"over-fitted"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"over-fitted"},"content":"            return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"over-fitted"},"content":"        // identify reason for misinput","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"over-fitted"},"content":"        if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equals(\"todo\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"over-fitted"},"content":"            System.out.println(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"over-fitted"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"over-fitted"},"content":"        System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"over-fitted"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"over-fitted":89}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"import java.io.File;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"    private String taskListFileName;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"    private File taskListFile;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"     * Handles saving of taskLists between Duke runtime sessions to text file by serialisation.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"     * @param taskListFileName path to text file to store taskList in.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"    public Storage(String taskListFileName) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"        this.taskListFileName \u003d taskListFileName;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"            Files.createDirectories(Paths.get(this.taskListFileName).getParent().getFileName());","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"            System.out.println(\"cannot create directory\");","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"        this.taskListFile \u003d new File(this.taskListFileName);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"     * Loads taskList from textFile configured in constructor if it exists, else initialises empty taskList.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"     * @return stored taskList if present, or empty taskList.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"    public TaskList initialise() {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"            if (!this.taskListFile.createNewFile()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"                FileInputStream fis \u003d new FileInputStream(this.taskListFileName);","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"                ObjectInputStream ois \u003d new ObjectInputStream(fis);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"                taskList \u003d (TaskList) ois.readObject();","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"                ois.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"            System.out.println(\"IOException\");","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"            System.out.println(\"classnotfound\");","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"        return taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"over-fitted"},"content":"     * Serialises a taskList into a text file for use in future sessions.","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"     * @param taskList taskList to be serialised.","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"over-fitted"},"content":"    public void store(TaskList taskList) {","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"over-fitted"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"over-fitted"},"content":"            FileOutputStream fos \u003d new FileOutputStream(this.taskListFileName);","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"over-fitted"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"over-fitted"},"content":"            oos.writeObject(taskList);","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"over-fitted"},"content":"            oos.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"over-fitted"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"over-fitted"},"content":"            System.out.println(\"Problem storing\");","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"over-fitted"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"over-fitted":69}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"public class Task implements Serializable {","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"    protected String description;","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"     * Generic task that stores a description and whether the task is completed.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"     * @param description description of task.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"     * Getter for task description.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"     * @return description of task","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"        return this.description;","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"     * Changes task completion state to true.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"    public void complete() {","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"over-fitted":40}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"    private int numTask;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"     * TaskList stores and retrieves tasks created by Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"        this.numTask \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"     * General-purpose method that stores any task created by Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"     * @param task the task to be stored","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"    public void addCustom(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"        this.numTask++;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"        System.out.printf(\"Now you have %d %s in the list.\\n\", this.numTask, this.numTask \u003d\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"     * Retrieves all stored tasks and displays them.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"    public void list() {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"        for (int i \u003d 0; i \u003c this.numTask; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"     * Marks a task as done, represented in the future with a cross in the associated column.","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"     * @param taskNumber position of task in the TaskList","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"    public void done(int taskNumber) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"        tasks.get(taskNumber - 1).complete();","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"        System.out.println(\"  \" + tasks.get(taskNumber - 1));","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"     * Removes target task.","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"     * @param taskNumber position of target task","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"over-fitted"},"content":"    public void delete(int taskNumber) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"over-fitted"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"over-fitted"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"over-fitted"},"content":"        tasks.remove(taskNumber - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"over-fitted"},"content":"        this.numTask--;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"over-fitted"},"content":"        System.out.printf(\"Now you have %d %s in the list.\\n\", this.numTask, this.numTask \u003d\u003d 1 ? \"task\" : \"tasks\");","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"over-fitted"},"content":"     * Finds stored tasks by keyword","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"over-fitted"},"content":"     * @param query keywords for task-finding","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"over-fitted"},"content":"    public ArrayList\u003cTask\u003e find(String query) {","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"over-fitted"},"content":"        ArrayList\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"over-fitted"},"content":"        for (int i \u003d 0; i \u003c this.numTask; i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"over-fitted"},"content":"            Task tmp \u003d this.tasks.get(i);","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"over-fitted"},"content":"            if (tmp.getDescription().contains(query)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"over-fitted"},"content":"                results.add(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"over-fitted"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"over-fitted"},"content":"        return results;","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"over-fitted"},"content":"     * Indicates whether the taskList contains any tasks. Primarily used for testing.","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"over-fitted"},"content":"     * @return whether taskList is empty.","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"over-fitted"},"content":"     * @throws Duke.DukeException issue found in state of empty taskList","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"over-fitted"},"content":"    public boolean isEmpty() throws Duke.DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"over-fitted"},"content":"        if (this.numTask \u003d\u003d 0) {","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"over-fitted"},"content":"            if (!this.tasks.isEmpty()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"over-fitted"},"content":"                throw new Duke.DukeException(\"TaskList is empty without any items\");","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"over-fitted"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"over-fitted"},"content":"            return true;","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"over-fitted"},"content":"        return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"over-fitted":91}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"     * Extension of generic task that indicates that the task has no extra information with a [T] prefix.","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"     * @param description description of task.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"        super(description);","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"        String stem \u003d super.toString();","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"        return String.format(\"[T]%s\", stem);","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"over-fitted":17}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"    private final BufferedReader in;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"    private final PrintWriter out;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"     * Handles user interaction. I/O dependencies are exposed for injection in tests.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"     * @param in source of user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"     * @param out output to respond to user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"    public Ui(BufferedReader in, PrintWriter out) {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"        this.in \u003d in;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"        this.out \u003d out;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"     * Displays default Duke startup banner.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"    public void init() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"        out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"        out.println(\"Hello! I\u0027m Duke.Duke\");","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"        out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"        out.flush();","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"     * Prints tasks found from find query","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"     * @param tasks tasks found by taskList","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"    public void printFind(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"     * Reads next user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"     * @return user input in string format.","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"over-fitted"},"content":"     * @throws IOException issue found in reading file.","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"over-fitted"},"content":"    public String getNextCommand() throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"        return this.in.readLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"over-fitted":58}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"import java.io.File;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"import java.io.StringReader;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"import org.junit.jupiter.api.Order;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"    @AfterAll","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"    public static void fileTeardown() {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"        File testTask1 \u003d new File(\"testInput/duke1.txt\");","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"        File testTask2 \u003d new File(\"testInput/duke2.txt\");","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"        if (new File(\"testInput\").exists()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"            testTask1.delete();","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"            testTask2.delete();","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"     * TODO: convert Storage to using passed output stream, or add Commander that redirects user interaction to UI from","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"     * Storage, instead of converting System.out into mock output stream","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"     * Fix before testing other I/O stuff","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"    @Order(1)","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"    public void defaultTaskTest() {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"        String input \u003d \"list\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"            + \"todo Test1\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"            + \"bye\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"        String expected \u003d \"Hello from\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"            + \" ____        _        \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"            + \"\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"            + \"Hello! I\u0027m Duke.Duke\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"            + \"What can I do for you?\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"            + \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"            + \"  [T][ ] Test1\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"            + \"Now you have 1 task in the list.\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"            + \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"over-fitted"},"content":"        final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"over-fitted"},"content":"        final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"over-fitted"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"over-fitted"},"content":"        Duke testDuke \u003d new Duke(\"testInput/duke1.txt\");","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"over-fitted"},"content":"        testDuke.run(new BufferedReader(new StringReader(input)), new PrintWriter(System.out));","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"over-fitted"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"over-fitted"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"over-fitted"},"content":"    @Order(2)","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"over-fitted"},"content":"    public void preexistingTaskTest() {","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"over-fitted"},"content":"        String firstInput \u003d \"list\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"over-fitted"},"content":"            + \"todo Test1\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"over-fitted"},"content":"            + \"bye\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"over-fitted"},"content":"        String input \u003d \"list\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"over-fitted"},"content":"            + \"bye\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"over-fitted"},"content":"        String expected \u003d \"Hello from\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"over-fitted"},"content":"            + \" ____        _        \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"over-fitted"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"over-fitted"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"over-fitted"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"over-fitted"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"over-fitted"},"content":"            + \"\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"over-fitted"},"content":"            + \"Hello! I\u0027m Duke.Duke\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"over-fitted"},"content":"            + \"What can I do for you?\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"over-fitted"},"content":"            + \"1. [T][ ] Test1\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"over-fitted"},"content":"            + \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"over-fitted"},"content":"        Duke firstDuke \u003d new Duke(\"testInput/duke2.txt\");","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"over-fitted"},"content":"        firstDuke.run(new BufferedReader(new StringReader(firstInput)), new PrintWriter(System.out));","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"over-fitted"},"content":"        final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"over-fitted"},"content":"        final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"over-fitted"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"over-fitted"},"content":"        Duke testDuke \u003d new Duke(\"testInput/duke2.txt\");","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"over-fitted"},"content":"        testDuke.run(new BufferedReader(new StringReader(input)), new PrintWriter(System.out));","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"over-fitted"},"content":"        assertEquals(expected, outContent.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"over-fitted":95}},{"path":"src/test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"import java.io.File;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"import java.nio.file.DirectoryStream;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"over-fitted"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"over-fitted"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"over-fitted"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"over-fitted"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"over-fitted"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"over-fitted"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"over-fitted"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"over-fitted"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"over-fitted"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"over-fitted"},"content":"    public void createTaskDirTest() {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"over-fitted"},"content":"        final String testFileName \u003d \"createDirTest/createDirTest.txt\";","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"over-fitted"},"content":"        // Test creation of directory","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"over-fitted"},"content":"        Storage testStorage \u003d new Storage(testFileName);","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"over-fitted"},"content":"        // assert empty directory is created","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"over-fitted"},"content":"        assertTrue(Files.isDirectory(Paths.get(testFileName).getParent().getFileName()));","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"over-fitted"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"over-fitted"},"content":"            assertTrue(isEmpty(Paths.get(testFileName).getParent().getFileName()));","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"over-fitted"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"over-fitted"},"content":"            Assertions.fail(\"IOException when checking if teststorage is empty\");","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"over-fitted"},"content":"        // Test initialising from non-existent file","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"over-fitted"},"content":"        TaskList testTaskList \u003d testStorage.initialise();","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"over-fitted"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"over-fitted"},"content":"            assertTrue(testTaskList.isEmpty());","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"over-fitted"},"content":"        } catch (Duke.DukeException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"over-fitted"},"content":"            Assertions.fail(\"numTasks not 0 but tasklist is empty\");","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"over-fitted"},"content":"        new File(testFileName).delete();","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"over-fitted"},"content":"        new File(\"createDirTest\").delete();","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"over-fitted"},"content":"    // Helper functions below","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"over-fitted"},"content":"    public static boolean isEmpty(Path path) throws IOException {","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"over-fitted"},"content":"        if (Files.isDirectory(path)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"over-fitted"},"content":"            try (DirectoryStream\u003cPath\u003e directory \u003d Files.newDirectoryStream(path)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"over-fitted"},"content":"                return !directory.iterator().hasNext();","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"over-fitted"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"over-fitted"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"over-fitted"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"over-fitted"},"content":"        return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"over-fitted"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"over-fitted"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"over-fitted":54}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"over-fitted"},"content":"normal task","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"over-fitted"},"content":"todo todotask","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"over-fitted"},"content":"event eventtask /at time","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"over-fitted"},"content":"deadline deadlinetask /by deadline","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"over-fitted"},"content":"done 3","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"over-fitted":5}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"over-fitted"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"over-fitted":1,"-":20}}]
