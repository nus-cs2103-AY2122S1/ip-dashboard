[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"bentanjunrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"bentanjunrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"bentanjunrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"bentanjunrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"bentanjunrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"bentanjunrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"bentanjunrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"bentanjunrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"bentanjunrong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"bentanjunrong"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"bentanjunrong"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bentanjunrong":17,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"T | 1 | read book","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"D | 0 | return book | 02/12/2021 1800","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"E | 0 | project meeting | 04/06/2022 1200","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"T | 1 | join sports club","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"bentanjunrong":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"## How to use Duke","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"### Prerequisites","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"1. Ensure that your version of Java is 11 or higher","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"2. Download the latest version of Duke [here](https://github.com/bentanjunrong/ip/releases)","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"## What is Duke?","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"Duke is a chatbot that can help you manage your tasks!","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"![Find Tasks](./Ui.png)","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"Check out his immense swag and power.","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"### *Task Management*","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":"### `event`","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"bentanjunrong"},"content":"Adds an Event task to the list","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"bentanjunrong"},"content":"### `deadline`","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"bentanjunrong"},"content":"Adds a Deadline task to the list","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"bentanjunrong"},"content":"### `todo`","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"bentanjunrong"},"content":"Adds a ToDo task to the list","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"bentanjunrong"},"content":"### `list`","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"bentanjunrong"},"content":"Lists all the tasks in the list","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":32,"author":{"gitId":"bentanjunrong"},"content":"### `delete`","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"bentanjunrong"},"content":"Removes a task from the list","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":35,"author":{"gitId":"bentanjunrong"},"content":"### `done`","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"bentanjunrong"},"content":"Marks a task in the list as done","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"bentanjunrong"},"content":"### *Miscellaneous*","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"bentanjunrong"},"content":"### `help`","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"bentanjunrong"},"content":"Provide in-App guidance to users","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"bentanjunrong"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"bentanjunrong"},"content":"### `event` -  Adds an Event task to the list","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"bentanjunrong"},"content":"Format:","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"bentanjunrong"},"content":"`event \u003cname\u003e /at dd/MM/yyyy HHmm`","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"bentanjunrong"},"content":"Example of usage:","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"bentanjunrong"},"content":"`event return book /at 02/12/2021 1800`","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"bentanjunrong"},"content":"Expected outcome:","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"bentanjunrong"},"content":"Adds a Event task with the name \"return book\" and the date \"02 Dec 2021 1800\" into the list.","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"bentanjunrong"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"bentanjunrong"},"content":"### `deadline` - Adds a Deadline task to the list","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"bentanjunrong"},"content":"Format:","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"bentanjunrong"},"content":"`deadline \u003cname\u003e /by \u003cdate\u003e`","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"bentanjunrong"},"content":"Example of usage:","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"bentanjunrong"},"content":"`deadline return book /by 02/12/2021 1800`","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"bentanjunrong"},"content":"Expected outcome:","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"bentanjunrong"},"content":"Adds a deadline task with the name \"return book\" and the date \"02 Dec 2021 1800\" into the list.","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"bentanjunrong"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"bentanjunrong"},"content":"### `todo` - Adds a ToDo task to the list","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"bentanjunrong"},"content":"Format:","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"bentanjunrong"},"content":"`todo \u003cname\u003e`","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"bentanjunrong"},"content":"`todo join sports club`","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"bentanjunrong"},"content":"Adds a ToDo task with the name \"join sports club\" to the list.","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"bentanjunrong"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"bentanjunrong"},"content":"### `list` - Lists all the tasks in the list","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"bentanjunrong"},"content":"Format:","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"bentanjunrong"},"content":"`list`","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"bentanjunrong"},"content":"Example of usage:","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"bentanjunrong"},"content":"`list`","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"bentanjunrong"},"content":"Expected outcome:","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"bentanjunrong"},"content":"Displays a list of tasks in chronological order. With the oldest task being in the first position.","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"bentanjunrong"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"bentanjunrong"},"content":"### `delete` - Removes a task from the list","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"bentanjunrong"},"content":"Format:","lastModifiedDate":"2021-09-20"},{"lineNumber":113,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"bentanjunrong"},"content":"`delete \u003cindex\u003e`","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":116,"author":{"gitId":"bentanjunrong"},"content":"Example of usage:","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":118,"author":{"gitId":"bentanjunrong"},"content":"`delete 1`","lastModifiedDate":"2021-09-20"},{"lineNumber":119,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":120,"author":{"gitId":"bentanjunrong"},"content":"Expected outcome:","lastModifiedDate":"2021-09-20"},{"lineNumber":121,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":122,"author":{"gitId":"bentanjunrong"},"content":"Removes  1st task in the list.","lastModifiedDate":"2021-09-20"},{"lineNumber":123,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":124,"author":{"gitId":"bentanjunrong"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":125,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":126,"author":{"gitId":"bentanjunrong"},"content":"### `done` - Marks a task in the list as done","lastModifiedDate":"2021-09-20"},{"lineNumber":127,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":128,"author":{"gitId":"bentanjunrong"},"content":"Format:","lastModifiedDate":"2021-09-20"},{"lineNumber":129,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":130,"author":{"gitId":"bentanjunrong"},"content":"`done \u003cindex\u003e`","lastModifiedDate":"2021-09-20"},{"lineNumber":131,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":132,"author":{"gitId":"bentanjunrong"},"content":"Example of usage:","lastModifiedDate":"2021-09-20"},{"lineNumber":133,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":134,"author":{"gitId":"bentanjunrong"},"content":"`done 1`","lastModifiedDate":"2021-09-20"},{"lineNumber":135,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":136,"author":{"gitId":"bentanjunrong"},"content":"Expected outcome:","lastModifiedDate":"2021-09-20"},{"lineNumber":137,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":138,"author":{"gitId":"bentanjunrong"},"content":"Marks 1st task in the list as completed.","lastModifiedDate":"2021-09-20"},{"lineNumber":139,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":140,"author":{"gitId":"bentanjunrong"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"bentanjunrong":119,"-":22}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"bentanjunrong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"bentanjunrong"},"content":"    @FXML","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"bentanjunrong"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"bentanjunrong"},"content":"    @FXML","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"bentanjunrong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"bentanjunrong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"bentanjunrong"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"bentanjunrong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"bentanjunrong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"bentanjunrong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"bentanjunrong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"bentanjunrong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"bentanjunrong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"bentanjunrong"},"content":"        if (text.toLowerCase().startsWith(\"error\")) {","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"bentanjunrong"},"content":"            dialog.setTextFill(Color.web(\"red\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"bentanjunrong"},"content":"        } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"bentanjunrong"},"content":"            dialog.setTextFill(Color.web(\"#0076a3\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"bentanjunrong"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"bentanjunrong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"bentanjunrong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"bentanjunrong"},"content":"    private void flip() {","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"bentanjunrong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"bentanjunrong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"bentanjunrong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"bentanjunrong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"bentanjunrong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"bentanjunrong"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"bentanjunrong"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"bentanjunrong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"bentanjunrong"},"content":"        db.flip();","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"bentanjunrong"},"content":"        return db;","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"bentanjunrong":65}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"public class Duke {","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"     * Constructor for Duke class.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"    public Duke() {","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"        this.tasks \u003d new TaskList(new Storage());","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":"//    private void serve() {","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":"//        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"//","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":"//        while (true) {","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"bentanjunrong"},"content":"//            // Extract first word as command","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"bentanjunrong"},"content":"//            String inputString \u003d input.nextLine().trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"bentanjunrong"},"content":"//","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"bentanjunrong"},"content":"//            if (inputString.equals(\"bye\")) {","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"bentanjunrong"},"content":"//                this.ui.print(\" LIVE OUT YOUR PATHETIC LIFE, WEAKLING.\");","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"bentanjunrong"},"content":"//                break;","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"bentanjunrong"},"content":"//            } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"bentanjunrong"},"content":"//                this.ui.print(this.parser.dispatch(tasks, inputString));","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"bentanjunrong"},"content":"//","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"bentanjunrong"},"content":"//            }","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"bentanjunrong"},"content":"//            System.out.print(\"WHAT ELSE DO YOU WANT, INSECT?\\n \");","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"bentanjunrong"},"content":"//        }","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"bentanjunrong"},"content":"//        input.close();","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"bentanjunrong"},"content":"//    }","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"bentanjunrong"},"content":"//    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"bentanjunrong"},"content":"//     * Executes Duke program.","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"bentanjunrong"},"content":"//     * @param args Input arguments for the Duke program.","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"bentanjunrong"},"content":"//     * @throws DukeException If there is a generic Duke Exception.","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"bentanjunrong"},"content":"//     */","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"bentanjunrong"},"content":"//    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"bentanjunrong"},"content":"//        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"bentanjunrong"},"content":"//            Duke squirtle \u003d new Duke();","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"bentanjunrong"},"content":"//            squirtle.serve();","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"bentanjunrong"},"content":"//        } catch (Exception e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"bentanjunrong"},"content":"//            throw new DukeException(\"ERROR WITH PROGRAM YOU FOOL\");","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"bentanjunrong"},"content":"//        }","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"bentanjunrong"},"content":"//    }","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"bentanjunrong"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"bentanjunrong"},"content":"        return parser.dispatch(tasks, input);","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bentanjunrong":52,"-":1}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"public class Launcher {","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"bentanjunrong":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"bentanjunrong"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"bentanjunrong"},"content":"            scene.getRoot().setStyle(\"-fx-font-family: \u0027serif\u0027\");","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"bentanjunrong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"bentanjunrong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"bentanjunrong"},"content":"            stage.show();","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"bentanjunrong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"bentanjunrong"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"bentanjunrong":30}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"    @FXML","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"    @FXML","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"    @FXML","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":"    @FXML","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"bentanjunrong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"bentanjunrong"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"bentanjunrong"},"content":"     * Initialises main GUI window.","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"bentanjunrong"},"content":"    @FXML","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"bentanjunrong"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"bentanjunrong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"bentanjunrong"},"content":"        greeting();","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"bentanjunrong"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"bentanjunrong"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"bentanjunrong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"bentanjunrong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"bentanjunrong"},"content":"    @FXML","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"bentanjunrong"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"bentanjunrong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"bentanjunrong"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"bentanjunrong"},"content":"        if (input.trim().equals(\"bye\")) {","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"bentanjunrong"},"content":"            String message \u003d \"LIVE OUT YOUR PATHETIC LIFE, WEAKLING.\";","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"bentanjunrong"},"content":"            dialogContainer.getChildren().add(DialogBox.getDukeDialog(message, dukeImage));","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"bentanjunrong"},"content":"            System.exit(0);","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"bentanjunrong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"bentanjunrong"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"bentanjunrong"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"bentanjunrong"},"content":"        );","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"bentanjunrong"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"bentanjunrong"},"content":"    @FXML","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"bentanjunrong"},"content":"    private void greeting() {","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"bentanjunrong"},"content":"        String message \u003d \" BOW BEFORE ME, FOR I AM SQUIRTLE,\\n DESTROYER OF MEN, TAKER OF LIVES. \\n\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"bentanjunrong"},"content":"               + \" WHAT DO YOU WANT DO, INSECT?\";","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"bentanjunrong"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(message, dukeImage));","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"bentanjunrong":64}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"     * @param deadline Deadline of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"     * @throws DateTimeParseException If deadline cannot be parsed.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"    public Deadline(String taskName, String deadline) throws DateTimeParseException {","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"        super(taskName);","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":"        this.deadline \u003d DukeDateFormatter.stringToDateTime(deadline.trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"bentanjunrong"},"content":"     * Constructor for Deadline class specifying if a Deadline is done.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"bentanjunrong"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"bentanjunrong"},"content":"     * @param isDone True implies task has been done.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"bentanjunrong"},"content":"     * @param deadline Deadline of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"bentanjunrong"},"content":"     * @throws DateTimeParseException If the deadline input string cannot be parsed.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"bentanjunrong"},"content":"    public Deadline(String taskName, boolean isDone, String deadline) throws DateTimeParseException {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"bentanjunrong"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"bentanjunrong"},"content":"        this.deadline \u003d DukeDateFormatter.stringToDateTime(deadline.trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"bentanjunrong"},"content":"    public LocalDateTime getDeadline() {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"bentanjunrong"},"content":"        return this.deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"bentanjunrong"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"bentanjunrong"},"content":"    public String getFileString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"bentanjunrong"},"content":"        return String.format(\"D | %s | %s\", super.getFileString(), DukeDateFormatter.dateTimeToFile(this.deadline));","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"bentanjunrong"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"bentanjunrong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"bentanjunrong"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), DukeDateFormatter.dateTimeToString(this.deadline));","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bentanjunrong":45}},{"path":"src/main/java/duke/DukeDateFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"public class DukeDateFormatter {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"    // DateTimeFormatter is immutable and thread-safe, and thus the recommended","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"    // approach is to store it in a static constant.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"    private static final DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"    private static final DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"    public static String dateTimeToString(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"        return dateTime.format(outputFormatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":"    public static String dateTimeToFile(LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":"        return dateTime.format(inputFormatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bentanjunrong"},"content":"    public static LocalDateTime stringToDateTime(String dateTime) throws DateTimeParseException {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bentanjunrong"},"content":"        return LocalDateTime.parse(dateTime, inputFormatter);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bentanjunrong":24}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"        super(message);","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"bentanjunrong":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"    private final LocalDateTime duration;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"     * Constructor for Event class.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"     * @param duration Duration of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"     * @throws DateTimeParseException If deadline cannot be parsed.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"    public Event(String taskName, String duration) throws DateTimeParseException {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"        super(taskName);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":"        this.duration \u003d DukeDateFormatter.stringToDateTime(duration.trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":"     * Constructor for Event class.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"bentanjunrong"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"bentanjunrong"},"content":"     * @param isDone True implies task has been done.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"bentanjunrong"},"content":"     * @param duration Duration of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"bentanjunrong"},"content":"     * @throws DateTimeParseException If deadline cannot be parsed.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"bentanjunrong"},"content":"    public Event(String taskName, boolean isDone, String duration) throws DateTimeParseException {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bentanjunrong"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"bentanjunrong"},"content":"        this.duration \u003d DukeDateFormatter.stringToDateTime(duration.trim());","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"bentanjunrong"},"content":"    public LocalDateTime getDuration() {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"bentanjunrong"},"content":"        return this.duration;","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"bentanjunrong"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"bentanjunrong"},"content":"    public String getFileString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"bentanjunrong"},"content":"        return String.format(\"E | %s | %s\", super.getFileString(), DukeDateFormatter.dateTimeToFile(this.duration));","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"bentanjunrong"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"bentanjunrong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"bentanjunrong"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), DukeDateFormatter.dateTimeToString(this.duration));","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bentanjunrong":45}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"import java.util.Map;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"    private final Map\u003cString, ThrowingBiFunction\u003cTaskList, String, String\u003e\u003e functions \u003d new HashMap\u003c\u003e() {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"        {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"            put(\"list\", (tasks, input) -\u003e list(tasks));","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"            put(\"done\", (tasks, input) -\u003e markDone(tasks, input));","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"            put(\"todo\", (tasks, input) -\u003e addToDo(tasks, input));","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"            put(\"deadline\", (tasks, input) -\u003e addDeadline(tasks, input));","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"            put(\"event\", (tasks, input) -\u003e addEvent(tasks, input));","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"            put(\"delete\", (tasks, input) -\u003e deleteTask(tasks, input));","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"            put(\"find\", (tasks, input) -\u003e findTasks(tasks, input));","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":"            put(\"help\", (tasks, input) -\u003e help());","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"    };","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"bentanjunrong"},"content":"     * Parse the user input string and execute the respective command given in the functions Map.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"bentanjunrong"},"content":"     * @param tasks Current Tasklist being used by the program.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"bentanjunrong"},"content":"     * @param input Input String for the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"bentanjunrong"},"content":"     * @return String Result to be printed by the UI class.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"bentanjunrong"},"content":"    public String dispatch(TaskList tasks, String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"bentanjunrong"},"content":"        String[] cmd \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"bentanjunrong"},"content":"        assert cmd !\u003d null : \"Input String cannot be empty\";","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"bentanjunrong"},"content":"        return functions.getOrDefault(cmd[0], (a, b) -\u003e \"FOOLISH MORTAL, I CAN\u0027T EXECUTE THAT COMMAND. TRY AGAIN:\")","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"bentanjunrong"},"content":"                .apply(tasks, cmd.length \u003e 1 ? cmd[1] : \"\");","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"bentanjunrong"},"content":"    private String list(TaskList tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"bentanjunrong"},"content":"        StringBuilder output \u003d new StringBuilder(\"YOU WISH FOR THESE FOOLISH THINGS:\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"bentanjunrong"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"bentanjunrong"},"content":"            output.append(String.format(\" %s. %s\\n\", i + 1, tasks.get(i)));","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"bentanjunrong"},"content":"        return output.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"bentanjunrong"},"content":"    private String markDone(TaskList tasks, String input) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"bentanjunrong"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"bentanjunrong"},"content":"            throw new DukeException(\"YOU HAVE NO TASKS YOU FOOL.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"bentanjunrong"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"bentanjunrong"},"content":"            int index \u003d Integer.parseInt(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"bentanjunrong"},"content":"            if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"bentanjunrong"},"content":"                throw new DukeException(\"INVALID TASK NUMBER YOU FOOL.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"bentanjunrong"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"bentanjunrong"},"content":"            Task currentTask \u003d tasks.get(index - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"bentanjunrong"},"content":"            if (currentTask.getIsDone()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"bentanjunrong"},"content":"                return String.format(\"YOU ALREADY DID THIS YOU FOOL.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"bentanjunrong"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"bentanjunrong"},"content":"            tasks.setDone(index - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"bentanjunrong"},"content":"            return String.format(\"YOU SAY YOU\u0027VE COMPLETED THIS TASK:\\n \" + currentTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"bentanjunrong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"bentanjunrong"},"content":"            throw new DukeException(\"DO YOU NOT KNOW WHAT A NUMBER IS, FOOLISH HUMAN?\");","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"bentanjunrong"},"content":"    private String findTasks(TaskList tasks, String input) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"bentanjunrong"},"content":"        assert input !\u003d null : \"Input String cannot be empty\";","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"bentanjunrong"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"bentanjunrong"},"content":"            throw new DukeException(\"YOU HAVE NO TASKS YOU FOOL.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"bentanjunrong"},"content":"        return tasks.findTasks(input);","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"bentanjunrong"},"content":"    private String deleteTask(TaskList tasks, String input) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"bentanjunrong"},"content":"        assert input !\u003d null : \"Input String cannot be empty\";","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"bentanjunrong"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"bentanjunrong"},"content":"            throw new DukeException(\"YOU HAVE NO TASKS YOU FOOL.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"bentanjunrong"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"bentanjunrong"},"content":"            int index \u003d Integer.parseInt(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"bentanjunrong"},"content":"            if (index \u003c 1 || index \u003e tasks.size()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"bentanjunrong"},"content":"                throw new DukeException(\"INVALID TASK NUMBER YOU FOOL.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"bentanjunrong"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"bentanjunrong"},"content":"            Task currentTask \u003d tasks.get(index - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"bentanjunrong"},"content":"            tasks.remove(index - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"bentanjunrong"},"content":"            return String.format(String.format(\"YOU\u0027VE CHOSEN TO ABANDON THIS TASK:\\n %s\\n YOU HAVE %d TASKS LEFT.\",","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"bentanjunrong"},"content":"                    currentTask, tasks.size()));","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"bentanjunrong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"bentanjunrong"},"content":"            throw new DukeException(\"DO YOU NOT KNOW WHAT A NUMBER IS, FOOLISH HUMAN?\");","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"bentanjunrong"},"content":"    private String addToDo(TaskList tasks, String taskName) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"bentanjunrong"},"content":"        assert taskName !\u003d null : \"taskName String cannot be empty\";","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"bentanjunrong"},"content":"        if (taskName.equals(\"\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"bentanjunrong"},"content":"            throw new DukeException(\"NAME YOUR TASK. DON\u0027T WASTE MY TIME.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"bentanjunrong"},"content":"        Task newTask \u003d new ToDo(taskName);","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"bentanjunrong"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"bentanjunrong"},"content":"        return String.format(String.format(\" MORTAL, YOU\u0027VE ADDED THIS TASK:\\n %s\\n YOU HAVE %d TASKS LEFT.\", newTask,","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"bentanjunrong"},"content":"                tasks.size()));","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"bentanjunrong"},"content":"    private String addEvent(TaskList tasks, String input) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"bentanjunrong"},"content":"        if (input.equals(\"\") || !input.contains(\" /at\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"bentanjunrong"},"content":"            throw new DukeException(\"FORMAT YOUR EVENT PROPERLY. DON\u0027T WASTE MY TIME.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"bentanjunrong"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"bentanjunrong"},"content":"            String[] args \u003d input.split(\"/at\", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"bentanjunrong"},"content":"            Task newEvent \u003d new Event(args[0].trim(), args[1].trim());","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"bentanjunrong"},"content":"            tasks.add(newEvent);","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"bentanjunrong"},"content":"            return String.format(String.format(\" MORTAL, YOU\u0027VE ADDED THIS EVENT:\\n %s\\n YOU HAVE %d TASKS LEFT.\",","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"bentanjunrong"},"content":"                    newEvent, tasks.size()));","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"bentanjunrong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"bentanjunrong"},"content":"            throw new DukeException(\"FORMAT YOUR DATETIME PROPERLY YOU FOOL\");","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"bentanjunrong"},"content":"    private String addDeadline(TaskList tasks, String input) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"bentanjunrong"},"content":"        if (input.equals(\"\") || !input.contains(\" /by\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"bentanjunrong"},"content":"            throw new DukeException(\"FORMAT YOUR DEADLINE PROPERLY. DON\u0027T WASTE MY TIME.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"bentanjunrong"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"bentanjunrong"},"content":"            String[] args \u003d input.split(\"/by\", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"bentanjunrong"},"content":"            Task newDeadline \u003d new Deadline(args[0].trim(), args[1].trim());","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"bentanjunrong"},"content":"            tasks.add(newDeadline);","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"bentanjunrong"},"content":"            return String.format(String.format(\" MORTAL, YOU\u0027VE ADDED THIS DEADLINE:\\n %s\\n YOU NOW HAVE %d TASKS.\",","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"bentanjunrong"},"content":"                    newDeadline, tasks.size()));","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"bentanjunrong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"bentanjunrong"},"content":"            throw new DukeException(\"FORMAT YOUR DATETIME PROPERLY YOU FOOL\");","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":130,"author":{"gitId":"bentanjunrong"},"content":"    private String help() {","lastModifiedDate":"2021-09-20"},{"lineNumber":131,"author":{"gitId":"bentanjunrong"},"content":"        String message \u003d \"For further help, please see: https://github.com/se-edu/duke \\nfor issues with Duke.\";","lastModifiedDate":"2021-09-20"},{"lineNumber":132,"author":{"gitId":"bentanjunrong"},"content":"        return message;","lastModifiedDate":"2021-09-20"},{"lineNumber":133,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":134,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"bentanjunrong":134}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"     * Loads List of tasks from the file in [project_root]/data/duke.txt","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"     * @return List of Tasks to be processed by the TaskList class.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":"    public List\u003cTask\u003e getTasksFromFile() {","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"bentanjunrong"},"content":"            File taskFile \u003d new File(\"../../../data\", \"duke.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"bentanjunrong"},"content":"            Scanner myReader \u003d new Scanner(taskFile);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"bentanjunrong"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"bentanjunrong"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"bentanjunrong"},"content":"                String[] args \u003d data.split(Pattern.quote(\"|\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"bentanjunrong"},"content":"                boolean isDone \u003d args[1].trim().equals(\"1\");","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"bentanjunrong"},"content":"                switch (args[0].trim()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"bentanjunrong"},"content":"                case \"T\":","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"bentanjunrong"},"content":"                    tasks.add(new ToDo(args[2], isDone));","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"bentanjunrong"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"bentanjunrong"},"content":"                case \"E\":","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"bentanjunrong"},"content":"                    tasks.add(new Event(args[2], isDone, args[3]));","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"bentanjunrong"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"bentanjunrong"},"content":"                case \"D\":","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"bentanjunrong"},"content":"                    tasks.add(new Deadline(args[2], isDone, args[3]));","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"bentanjunrong"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"bentanjunrong"},"content":"                default:","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"bentanjunrong"},"content":"                    myReader.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"bentanjunrong"},"content":"                    throw new IllegalArgumentException(","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"bentanjunrong"},"content":"                            \"COULDN\u0027T PARSE YOUR STUPID FILE. FORMAT THE INPUT PROPERLY.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"bentanjunrong"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"bentanjunrong"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"bentanjunrong"},"content":"            myReader.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"bentanjunrong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"bentanjunrong"},"content":"            // Initialise file and directory if they do not exist","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"bentanjunrong"},"content":"            saveToFile(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"bentanjunrong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"bentanjunrong"},"content":"            throw new RuntimeException(\"FORMAT YOUR FILE DATETIMES PROPERLY YOU FOOL.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"bentanjunrong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"bentanjunrong"},"content":"            System.out.println(\"COULDN\u0027T GET YOUR MISERABLE FILE. TRY AGAIN.\");","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"bentanjunrong"},"content":"        return tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"bentanjunrong"},"content":"     * Saves List of tasks from the file in [project_root]/data/duke.txt","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"bentanjunrong"},"content":"     * @param tasks List of Tasks to be saved.","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"bentanjunrong"},"content":"    public void saveToFile(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"bentanjunrong"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"bentanjunrong"},"content":"            // create directory if it does not exist","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"bentanjunrong"},"content":"            File directory \u003d new File(\"../../../data\");","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"bentanjunrong"},"content":"            directory.mkdirs();","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"bentanjunrong"},"content":"            File myFile \u003d new File(\"../../../data\", \"duke.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"bentanjunrong"},"content":"            FileWriter dukeWriter \u003d new FileWriter(myFile);","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"bentanjunrong"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"bentanjunrong"},"content":"                dukeWriter.write(String.format(\"%s\\n\", task.getFileString()));","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"bentanjunrong"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"bentanjunrong"},"content":"            dukeWriter.close();","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"bentanjunrong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"bentanjunrong"},"content":"            System.out.println(\"SAVING THE FILE FAILED YOU IDIOT. JUST GIVE UP.\");","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"bentanjunrong":76}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"    private final String taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"     * Constructor for Task class.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"        this.taskName \u003d taskName.trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":"     * Constructor for Task class.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":"     * @param taskName Name of task.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"     * @param isDone True implies task has been done.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"bentanjunrong"},"content":"    public Task(String taskName, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"bentanjunrong"},"content":"        this.taskName \u003d taskName.trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"bentanjunrong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"bentanjunrong"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"bentanjunrong"},"content":"        return this.taskName;","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"bentanjunrong"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"bentanjunrong"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"bentanjunrong"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"bentanjunrong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"bentanjunrong"},"content":"    public String getFileString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"bentanjunrong"},"content":"        return String.format(\"%d | %s\", isDone ? 1 : 0, this.taskName);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"bentanjunrong"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"bentanjunrong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"bentanjunrong"},"content":"        return String.format(\"[%s] %s\", isDone ? \"X\" : \" \", this.taskName);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bentanjunrong":46}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"import java.util.List;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"     * Constructor for TaskList class.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"     * @param storage","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":"    public TaskList(Storage storage) {","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"        this.tasks \u003d this.storage.getTasksFromFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"bentanjunrong"},"content":"     * Append Task to the list of tasks, and saves file to storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"bentanjunrong"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"bentanjunrong"},"content":"     * @throws DukeException If there is a generic Duke Exception.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"bentanjunrong"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"bentanjunrong"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"bentanjunrong"},"content":"        this.storage.saveToFile(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"bentanjunrong"},"content":"    public Task get(int idx) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"bentanjunrong"},"content":"        return this.tasks.get(idx);","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"bentanjunrong"},"content":"    public int size() {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"bentanjunrong"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"bentanjunrong"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"bentanjunrong"},"content":"        return this.tasks.size() \u003d\u003d 0;","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"bentanjunrong"},"content":"     * Sets a task as done for a given index.","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"bentanjunrong"},"content":"     * @param idx Index of task to be marked as done.","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"bentanjunrong"},"content":"    public void setDone(int idx) {","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"bentanjunrong"},"content":"        tasks.get(idx).setDone(true);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"bentanjunrong"},"content":"        storage.saveToFile(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"bentanjunrong"},"content":"     * Remove a task for a given index.","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"bentanjunrong"},"content":"     * @param idx Index of task to be removed.","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"bentanjunrong"},"content":"     * @throws DukeException If there is a generic Duke Exception.","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"bentanjunrong"},"content":"    public void remove(int idx) {","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"bentanjunrong"},"content":"        this.tasks.remove(idx);","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"bentanjunrong"},"content":"        this.storage.saveToFile(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"bentanjunrong"},"content":"     * Returns String of filtered tasks that match the input query.","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"bentanjunrong"},"content":"     * @param input Query to be searched.","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"bentanjunrong"},"content":"     * @return String result of filtered tasks to be printed.","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"bentanjunrong"},"content":"     * @throws DukeException If the input string is empty.","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"bentanjunrong"},"content":"    public String findTasks(String input) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"bentanjunrong"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"bentanjunrong"},"content":"            throw new DukeException(\"HOW AM I SUPPOSED TO FIND AN EMPTY STRING YOU FOOL.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"bentanjunrong"},"content":"        List\u003cTask\u003e filteredTasks \u003d this.tasks.stream().filter(task -\u003e task.toString().contains(input.trim()))","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"bentanjunrong"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"bentanjunrong"},"content":"        if (filteredTasks.isEmpty()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"bentanjunrong"},"content":"            throw new DukeException(\"THERE ARE NO MATCHES\");","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"bentanjunrong"},"content":"        StringBuilder output \u003d new StringBuilder(\"THESE ARE THE TASKS THAT MATCH YOUR PLEA:\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"bentanjunrong"},"content":"        for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"bentanjunrong"},"content":"            output.append(String.format(\" %s. %s\\n\", i + 1, filteredTasks.get(i)));","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"bentanjunrong"},"content":"        return output.toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"bentanjunrong":85}},{"path":"src/main/java/duke/ThrowingBiFunction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"@FunctionalInterface","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"public interface ThrowingBiFunction\u003cT, U, R\u003e extends BiFunction\u003cT, U, R\u003e {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"    static final String LINEBREAK \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"    default R apply(final T t, final U u) {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"            return applyThrows(t, u);","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"        } catch (final Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"            System.out.printf(\"%s\\n%s\\n%s\\n\", LINEBREAK, e.getMessage(), LINEBREAK);","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"        return null;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"    R applyThrows(T t, U u) throws Exception;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"bentanjunrong":20}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"        super(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"        super(name, isDone);","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"    public String getFileString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"        return String.format(\"T | %s\", super.getFileString());","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"bentanjunrong":21}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"bentanjunrong":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"bentanjunrong":19}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"public class EventTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"     * Test the Event constructor and toString methods.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"        assertEquals(\"[E][ ] sample event (at: Dec 02 2019 18:00)\",","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"                new Event(\"sample event /at 02/12/2019 1800\").toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"bentanjunrong":16}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"package duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"     * Test the ToDo constructor and toString methods.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"        assertEquals(\"[T][ ] sample todo\", new ToDo(\"sample todo\").toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":"     * Test the ToDo constructor with the isDone boolean and getFileString methods.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":"    public void getFileStringTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"bentanjunrong"},"content":"        assertEquals(\"T | 1 | sample todo\", new ToDo(\"sample todo\", true).getFileString());","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"bentanjunrong":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"todo Pray to lord Squirtle","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"deadline Prepare an offering /by 10pm Tonight","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"event Beg for forgiveness /at 10pm-11pm ","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"bentanjunrong":13}}]
