[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"# duke project template","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"EltonGohJH":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"plugins {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"    id \u0027java\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"    id \u0027application\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"    id \"com.github.johnrengelman.shadow\" version \"5.1.0\"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"group \u0027org.example\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"version \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"repositories {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    mavenCentral()","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"dependencies {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.6.0\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"application {","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"shadowJar {","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"test {","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"EltonGohJH":45}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"rootProject.name \u003d \u0027ip\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"EltonGohJH":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import java.io.File;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"     * Creates duke with the file path given.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"     * @param filePath The file path where the tasks are stored locally.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"        assert new File(filePath).exists();","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"        File tempFile \u003d new File(\"c:/temp/temp.txt\");","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"        tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"    public String getFarewellMessage() {","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"        return ui.farewellUser();","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"     * Gets the response from the input.","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"     * @param input The user input to duke.","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"     * @return String The String representing Duke\u0027s response.","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"            if (c instanceof ExitCommand) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"                return ui.farewellUser();","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":53,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"public class Launcher {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"     * Launches the application.","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"     * @param args The input arguments.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"EltonGohJH":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"    private final Duke duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"     * Starts the application.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"     * @param stage The stage that will be used.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"            stage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"EltonGohJH":37}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":" * Represents the command of adding a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"    private final Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"     * Creates the command that will add the task provided to the taskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"     * @param task The task that will be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"     * Executes the command by creating the task and printing the message through the ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"     * @param taskList The taskList where the task will be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"     * @param ui The ui where the message will be printed.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"     * @param storage The storage where it will be updated with the new task.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"        int numOfTasks \u003d taskList.getAllTasks().size();","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"        String msg \u003d taskList.addTask(ui, this.task);","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"        assert numOfTasks + 1 \u003d\u003d taskList.getAllTasks().size();","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"        storage.updateTasks(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"        return msg;","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":39}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":10}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    private final int taskNo;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    public DeleteCommand(int taskNo) {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"        this.taskNo \u003d taskNo;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"        int numOfTasks \u003d taskList.getAllTasks().size();","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"        String msg \u003d taskList.deleteTask(ui, this.taskNo);","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"        assert numOfTasks - 1 \u003d\u003d taskList.getAllTasks().size();","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"        storage.updateTasks(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"        return msg;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":23}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    private final int taskNo;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    public DoneCommand(int taskNo) {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"        this.taskNo \u003d taskNo;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"        int numOfTasks \u003d taskList.getAllTasks().size();","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"        String msg \u003d taskList.markTaskAsDone(ui, this.taskNo);","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"        assert numOfTasks \u003d\u003d taskList.getAllTasks().size();","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"        storage.updateTasks(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"        return msg;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":23}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"        throw new DukeException(\"This should not be executed\");","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":14}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    protected String keyword;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"        output.append(ui.returnMessage(\"Here are the matching tasks in your list:\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"        output.append(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"        for (Task task : taskList.getAllTasks()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"            if (task.isMatchingTask(this.keyword)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"                output.append(ui.returnMessage(String.format(\"%d.%s\", index++, task)));","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"        return output.toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"EltonGohJH":28}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"        return ui.returnTasks(tasks);","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":13}},{"path":"src/main/java/duke/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":" * Represents the command of adding a task.","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"    private final int taskNum;","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    private final Task updatedTask;","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"     * Creates the command that will update the task in the taskList.","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"     * @param taskNum The taskNum of the task that will be updated.","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"     * @param updatedTask The task that contains the updated fields.","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"    public UpdateCommand(int taskNum, Task updatedTask) {","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"        this.updatedTask \u003d updatedTask;","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"    private void updateTask(Task task, Task updatedTask) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"            Todo todo \u003d (Todo) task;","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"            todo.updateTodo((Todo) updatedTask);","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"            event.updateEvent((Event) updatedTask);","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"            deadline.updateDeadline((Deadline) updatedTask);","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"            throw new DukeException(\"Wrong format for updating of task!\");","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"     * Executes the command by updating the task.","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"     * @param taskList The taskList where the task will be added.","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"     * @param ui The ui where the message will be printed.","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"     * @param storage The storage where it will be updated with the new task.","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"        updateTask(taskList.getAllTasks().get(taskNum - 1), updatedTask);","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"        return String.format(\"Task %d successfully updated!\", taskNum);","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"EltonGohJH":59}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":" * Represents the command of adding a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"        super(message);","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.UpdateCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":" * Parses the user input.","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"     * Creates todo when given userInput.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"     * @param userInput the input by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"     * @return the todo inputted by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"     * @throws DukeException if no description is inputted.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"    private static Todo createTodo(String userInput) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"        String description \u003d userInput.substring(4).trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"            throw new DukeException(\":( OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"        return new Todo(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"    private static LocalDate parseDateOfDeadline(String[] splitInput) {","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"        String by \u003d splitInput[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"        String[] splitDateTime \u003d by.split(\" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"        return LocalDate.parse(splitDateTime[0], DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"    private static LocalTime parseTimeOfDeadline(String[] splitInput) {","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"        LocalTime time \u003d null;","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"        String by \u003d splitInput[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"        String[] splitDateTime \u003d by.split(\" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"        if (splitDateTime.length \u003d\u003d 2) {","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"            time \u003d LocalTime.parse(splitDateTime[1], DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"        return time;","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"     * Creates deadline when given userInput.","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"     * @param userInput the input by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"     * @return the deadline inputted by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"     * @throws DukeException if no date and time or description of deadline is inputted.","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"    private static Deadline createDeadline(String userInput) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"        String[] splitInput \u003d userInput.split(\" /by \");","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"EltonGohJH"},"content":"        if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"EltonGohJH"},"content":"            throw new DukeException(\":( OOPS!!! The day of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"        String description \u003d splitInput[0].substring(8).trim();","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"EltonGohJH"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"EltonGohJH"},"content":"            throw new DukeException(\":( OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"EltonGohJH"},"content":"        return new Deadline(description, parseDateOfDeadline(splitInput), parseTimeOfDeadline(splitInput));","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"EltonGohJH"},"content":"    private static LocalDate parseDateOfEvent(String[] splitInput) {","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"EltonGohJH"},"content":"        String dayTime \u003d splitInput[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"EltonGohJH"},"content":"        String[] splitDateTime \u003d dayTime.split(\" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"EltonGohJH"},"content":"        return LocalDate.parse(splitDateTime[0], DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"EltonGohJH"},"content":"    private static LocalTime parseTimeOfEvent(String[] splitInput) {","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"EltonGohJH"},"content":"        String dayTime \u003d splitInput[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"EltonGohJH"},"content":"        String[] splitDateTime \u003d dayTime.split(\" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"EltonGohJH"},"content":"        LocalTime time \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"EltonGohJH"},"content":"        if (splitDateTime.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"EltonGohJH"},"content":"            time \u003d LocalTime.parse(splitDateTime[1], DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"EltonGohJH"},"content":"        return time;","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"EltonGohJH"},"content":"     * Creates event when given userInput.","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"EltonGohJH"},"content":"     * @param userInput the input by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"EltonGohJH"},"content":"     * @return the event inputted by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"EltonGohJH"},"content":"     * @throws DukeException if no date and time or description of event is inputted.","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"EltonGohJH"},"content":"    private static Event createEvent(String userInput) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"EltonGohJH"},"content":"        String[] splitInput \u003d userInput.split(\" /at \");","lastModifiedDate":"2021-09-06"},{"lineNumber":105,"author":{"gitId":"EltonGohJH"},"content":"        if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-06"},{"lineNumber":106,"author":{"gitId":"EltonGohJH"},"content":"            throw new DukeException(\":( OOPS!!! The day of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"EltonGohJH"},"content":"        String description \u003d splitInput[0].substring(5).trim();","lastModifiedDate":"2021-09-06"},{"lineNumber":109,"author":{"gitId":"EltonGohJH"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"EltonGohJH"},"content":"            throw new DukeException(\":( OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"EltonGohJH"},"content":"        return new Event(description, parseDateOfEvent(splitInput), parseTimeOfEvent(splitInput));","lastModifiedDate":"2021-09-06"},{"lineNumber":113,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"EltonGohJH"},"content":"    private static Task createTask(String fullCommand) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":116,"author":{"gitId":"EltonGohJH"},"content":"        String[] splitInput \u003d fullCommand.split(\" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"EltonGohJH"},"content":"        switch (splitInput[0]) {","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"EltonGohJH"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"EltonGohJH"},"content":"            return createTodo(fullCommand);","lastModifiedDate":"2021-09-06"},{"lineNumber":120,"author":{"gitId":"EltonGohJH"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"EltonGohJH"},"content":"            return createDeadline(fullCommand);","lastModifiedDate":"2021-09-06"},{"lineNumber":122,"author":{"gitId":"EltonGohJH"},"content":"        case \"event\":","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"EltonGohJH"},"content":"            return createEvent(fullCommand);","lastModifiedDate":"2021-09-06"},{"lineNumber":124,"author":{"gitId":"EltonGohJH"},"content":"        default:","lastModifiedDate":"2021-09-06"},{"lineNumber":125,"author":{"gitId":"EltonGohJH"},"content":"            throw new DukeException(\":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-06"},{"lineNumber":126,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":127,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":129,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"EltonGohJH"},"content":"     * Parses the string for command and returns the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"EltonGohJH"},"content":"     * @param fullCommand The string representing the command inputted by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"EltonGohJH"},"content":"     * @return A command that can be executed to perform action specified by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"EltonGohJH"},"content":"     * @throws DukeException if the command is not recognised.","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"EltonGohJH"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"EltonGohJH"},"content":"        String[] splitInput \u003d fullCommand.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"EltonGohJH"},"content":"        switch (splitInput[0]) {","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"EltonGohJH"},"content":"        case \"list\":","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"EltonGohJH"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"EltonGohJH"},"content":"        case \"done\":","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"EltonGohJH"},"content":"            return new DoneCommand(Integer.parseInt(splitInput[1]));","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"EltonGohJH"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"EltonGohJH"},"content":"            return new AddCommand(createTodo(fullCommand));","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"EltonGohJH"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"EltonGohJH"},"content":"            return new AddCommand(createDeadline(fullCommand));","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"EltonGohJH"},"content":"        case \"event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"EltonGohJH"},"content":"            return new AddCommand(createEvent(fullCommand));","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"EltonGohJH"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"EltonGohJH"},"content":"            return new DeleteCommand(Integer.parseInt(splitInput[1]));","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"EltonGohJH"},"content":"        case \"find\":","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"EltonGohJH"},"content":"            return new FindCommand(fullCommand.substring(4).trim());","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"EltonGohJH"},"content":"        case \"update\":","lastModifiedDate":"2021-09-06"},{"lineNumber":154,"author":{"gitId":"EltonGohJH"},"content":"            System.out.println(String.join(\" \", Arrays.copyOfRange(splitInput, 2, splitInput.length)));","lastModifiedDate":"2021-09-06"},{"lineNumber":155,"author":{"gitId":"EltonGohJH"},"content":"            return new UpdateCommand(Integer.parseInt(splitInput[1]),","lastModifiedDate":"2021-09-06"},{"lineNumber":156,"author":{"gitId":"EltonGohJH"},"content":"                    createTask(String.join(\" \", Arrays.copyOfRange(splitInput, 2, splitInput.length))));","lastModifiedDate":"2021-09-06"},{"lineNumber":157,"author":{"gitId":"EltonGohJH"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-30"},{"lineNumber":158,"author":{"gitId":"EltonGohJH"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":159,"author":{"gitId":"EltonGohJH"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"EltonGohJH"},"content":"            throw new DukeException(\":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-30"},{"lineNumber":161,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":163}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":" * Stores all the tasks.","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"     * Creates storage with the file path provided.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"     * @param filePath The file path where all the tasks are stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"    private void createNewFile(File file) throws IOException {","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"        file.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"    private Todo parseTodo(String[] splitInput) {","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"        return new Todo(splitInput[2], splitInput[1].equals(\"1\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"    private Deadline parseDeadline(String[] splitInput) {","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"        LocalDate date \u003d LocalDate.parse(splitInput[3], DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"        LocalTime time \u003d splitInput.length \u003d\u003d 5 ? LocalTime.parse(splitInput[4]) : null;","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"        return new Deadline(splitInput[2], splitInput[1].equals(\"1\"), date, time);","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"    private Event parseEvent(String[] splitInput) {","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"        LocalDate date \u003d LocalDate.parse(splitInput[3], DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"        LocalTime time \u003d splitInput.length \u003d\u003d 5 ? LocalTime.parse(splitInput[4]) : null;","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"        return new Event(splitInput[2], splitInput[1].equals(\"1\"), date, time);","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"    private Task parseTask(String line) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"        char type \u003d line.charAt(0);","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"        String[] splitInput \u003d line.split(\" \\\\| \");","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"        if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"            return parseTodo(splitInput);","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"        } else if (type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"            return parseDeadline(splitInput);","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"        } else if (type \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"            return parseEvent(splitInput);","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"EltonGohJH"},"content":"        throw new DukeException(\"Unknown task format!\");","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"EltonGohJH"},"content":"    private void addTasksToFile(File file, ArrayList\u003cTask\u003e tasks) throws IOException, DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"EltonGohJH"},"content":"        FileReader fr \u003d new FileReader(file);","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"        BufferedReader br \u003d new BufferedReader(fr);","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"EltonGohJH"},"content":"        String line \u003d br.readLine();","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"EltonGohJH"},"content":"        while (line !\u003d null) {","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"EltonGohJH"},"content":"            tasks.add(parseTask(line));","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"EltonGohJH"},"content":"            line \u003d br.readLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"EltonGohJH"},"content":"     * Loads the text file and creates a text file if file does not exist.","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"EltonGohJH"},"content":"     * @return A array list with all the tasks read from the file.","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"EltonGohJH"},"content":"    public ArrayList\u003cTask\u003e loadFile() {","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"EltonGohJH"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"EltonGohJH"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"EltonGohJH"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"EltonGohJH"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"EltonGohJH"},"content":"                createNewFile(file);","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"EltonGohJH"},"content":"            } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"EltonGohJH"},"content":"                addTasksToFile(file, tasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"EltonGohJH"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"EltonGohJH"},"content":"            return tasks;","lastModifiedDate":"2021-09-06"},{"lineNumber":95,"author":{"gitId":"EltonGohJH"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"EltonGohJH"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"EltonGohJH"},"content":"            return tasks;","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"EltonGohJH"},"content":"    private String tasksToFileFormat(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-06"},{"lineNumber":102,"author":{"gitId":"EltonGohJH"},"content":"        ArrayList\u003cString\u003e displayTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-06"},{"lineNumber":103,"author":{"gitId":"EltonGohJH"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-06"},{"lineNumber":104,"author":{"gitId":"EltonGohJH"},"content":"            displayTasks.add(task.fileFormat());","lastModifiedDate":"2021-09-06"},{"lineNumber":105,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":106,"author":{"gitId":"EltonGohJH"},"content":"        return String.join(String.format(\"%n\"), displayTasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":107,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":109,"author":{"gitId":"EltonGohJH"},"content":"    private void writeToFile(String tasks) throws IOException {","lastModifiedDate":"2021-09-06"},{"lineNumber":110,"author":{"gitId":"EltonGohJH"},"content":"        FileWriter writer \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-09-06"},{"lineNumber":111,"author":{"gitId":"EltonGohJH"},"content":"        writer.write(String.join(String.format(\"%n\"), tasks));","lastModifiedDate":"2021-09-06"},{"lineNumber":112,"author":{"gitId":"EltonGohJH"},"content":"        writer.close();","lastModifiedDate":"2021-09-06"},{"lineNumber":113,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":114,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":115,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"EltonGohJH"},"content":"     * Updates the tasks given to the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"EltonGohJH"},"content":"     * @param taskList The tasks that will be updated to the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"EltonGohJH"},"content":"    public void updateTasks(TaskList taskList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"EltonGohJH"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getAllTasks();","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"EltonGohJH"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"EltonGohJH"},"content":"            String displayTasks \u003d tasksToFileFormat(tasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":124,"author":{"gitId":"EltonGohJH"},"content":"            writeToFile(displayTasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":125,"author":{"gitId":"EltonGohJH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"EltonGohJH"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":129}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":" * A task that stores the deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"     * The date of the deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"     * The time of the deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    private LocalTime time;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"     * A constructor used to initialize the deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"     * @param description the description of the deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"     * @param date the date of the deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"     * @param time the time of the deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"    public Deadline(String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"     * A constructor used to initialize the deadline through file input.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"     * @param description the description of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"     * @param isCompleted the state of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"     * @param date the date of the deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"     * @param time the time of the deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"    public Deadline(String description, boolean isCompleted, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"        super(description, isCompleted);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"    public void updateDeadline(Deadline updatedDeadline) {","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"        this.description \u003d updatedDeadline.description;","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"        this.date \u003d updatedDeadline.date;","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"        this.time \u003d updatedDeadline.time;","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"     * Returns the string representation of deadline.","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representation of deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"        String str \u003d \"[D]\" + super.toString() + \" (by: \" + this.date.format(DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"        str +\u003d this.time !\u003d null ? \" \" + this.time + \")\" : \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"        return str;","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"EltonGohJH"},"content":"     * Returns the string representation of deadline for file input/output.","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representation of deadline for file input/output.","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"    public String fileFormat() {","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"EltonGohJH"},"content":"        String displayCompletion \u003d this.isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"EltonGohJH"},"content":"        String str \u003d String.format(\"%s | %s | %s | %s\", \"D\", displayCompletion, this.description,","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"EltonGohJH"},"content":"                this.date.format(DateTimeFormatter.ofPattern(\"d/M/yyyy\")));","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"EltonGohJH"},"content":"        str +\u003d this.time !\u003d null ? \" | \" + this.time : \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"EltonGohJH"},"content":"        return str;","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"EltonGohJH":79}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":" * A task that stores the day and time of the event.","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"     * The date of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"     * The time of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    private LocalTime time;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"     * A constructor used to initialize the event.","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"     * @param description the description of the event.","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"     * @param date the date of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"     * @param time the time of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"    public Event(String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"     * A constructor used to initialize the event through file input.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"     * @param description the description of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"     * @param isCompleted the state of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"     * @param date the date of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"     * @param time the time of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"    public Event(String description, boolean isCompleted, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"        super(description, isCompleted);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"    public void updateEvent(Event updatedEvent) {","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"        this.description \u003d updatedEvent.description;","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"        this.date \u003d updatedEvent.date;","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"        this.time \u003d updatedEvent.time;","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"     * Returns the string representation of event.","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representation of event.","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"        String str \u003d \"[E]\" + super.toString() + \" (at: \" + this.date.format(DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"        str +\u003d this.time !\u003d null ? \" \" + this.time + \")\" : \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"        return str;","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"EltonGohJH"},"content":"     * Returns the string representation of event for file input/output.","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representation of event for file input/output.","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"    public String fileFormat() {","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"EltonGohJH"},"content":"        String displayCompletion \u003d this.isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"EltonGohJH"},"content":"        String str \u003d String.format(\"%s | %s | %s | %s\", \"E\", displayCompletion, this.description,","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"EltonGohJH"},"content":"                this.date.format(DateTimeFormatter.ofPattern(\"d/M/yyyy\")));","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"EltonGohJH"},"content":"        str +\u003d this.time !\u003d null ? \" | \" + this.time : \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"EltonGohJH"},"content":"        return str;","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"EltonGohJH":79}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":" * A task that can be mark as completed.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"     * The description of the task.","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    protected String description;","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"     * If true, the task is completed. Else, the task is not completed.","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    protected boolean isCompleted \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"     * A constructor used to initialize the task.","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"     * A constructor used to initialize the task through file input.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"     * @param isCompleted The state of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"    public Task(String description, boolean isCompleted) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"     * Returns a boolean representing if the task matches the string.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"     * @param keyword The keyword of the task to check against.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"     * @return boolean that represents whether if task matches the keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"    public boolean isMatchingTask(String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"        return description.matches(String.format(\".*%s.*\", keyword));","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"     * Returns the string representation of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representation of task.","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"        String displayCompletion \u003d this.isCompleted ? \"[X]\" : \"[]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"        return displayCompletion + \u0027 \u0027 + this.description;","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"     * Returns the string representation of task for file input/output.","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representation of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"EltonGohJH"},"content":"    public String fileFormat() {","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"EltonGohJH"},"content":"        String displayCompletion \u003d this.isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"        return String.format(\"%s | %s\", displayCompletion, this.description);","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"EltonGohJH":74}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":" * A task that is to be done.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"     * A constructor used to initialize the todo.","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"     * @param description the description of the todo.","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"     * A constructor used to initialize the todo through file input.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"     * @param description the description of the todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"     * @param isCompleted the state of the todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    public Todo(String description, boolean isCompleted) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"        super(description, isCompleted);","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"    public void updateTodo(Todo updatedTodo) {","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"        this.description \u003d updatedTodo.description;","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"     * Returns the string representation of todo.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representation of todo.","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"     * Returns the string representation of todo for file input/output.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representation of todo for file input/output.","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"    public String fileFormat() {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"        String displayCompletion \u003d this.isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"        return String.format(\"%s | %s | %s\", \"T\", displayCompletion, this.description);","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"EltonGohJH":50}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.tasklist;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":" * Represents all the tasks created through Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"     * Returns all the tasks in an array list.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"     * @return ArrayList containing all the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"        return tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"     * Adds the task to the list and prints the added task.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"     * @param task the task that will be added to the list","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representing the success message.","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"    public String addTask(Ui ui, Task task) {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"        return ui.returnMessage(String.format(\"Got it. I\u0027ve added this task:%n  %s%nNow you have %d tasks in the list.\",","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"                task, this.tasks.size()));","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"     * Deletes the task with taskNo specified.","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"     * @param taskNo the taskNo of the task to be deleted.","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representing the success message.","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"    public String deleteTask(Ui ui, int taskNo) {","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"        Task task \u003d this.tasks.get(taskNo - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"        this.tasks.remove(taskNo - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"        return ui.returnMessage(String.format(\"Noted. I\u0027ve removed this task:%n  %s%nNow you have %d tasks \"","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"                + \"in the list.\", task, this.tasks.size()));","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"     * Marks the task with taskNo specified.","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"     * @param taskNo the taskNo of the task to be marked as done.","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"    public String markTaskAsDone(Ui ui, int taskNo) {","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"        Task task \u003d this.tasks.get(taskNo - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"        return ui.returnMessage(String.format(\"Nice! I\u0027ve marked this task as done:%n  %s\", task));","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":63}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"        dialog.getStylesheets().add(\"/stylesheets/DialogBox.css\");","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"        displayPicture.setClip(new Circle(40, 40, 40));","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"    private void flip() {","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"     * Creates the user\u0027s dialog box with text and img provided.","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"     * @param text The string representing the dialog.","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"     * @param img The image of the person.","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"     * @return the dialog box which contains the text and image.","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"     * Creates the duke\u0027s dialog box with text and img provided.","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"EltonGohJH"},"content":"     * @param text The string representing the dialog.","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"EltonGohJH"},"content":"     * @param img The image of duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"EltonGohJH"},"content":"     * @return the dialog box which contains the text and image.","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"EltonGohJH"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"EltonGohJH"},"content":"        db.flip();","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"EltonGohJH"},"content":"        return db;","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"EltonGohJH":76}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import java.util.Timer;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":" * The main window where the interaction occurs with duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.jpg\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"     * Initializes the main window with the greeting message from duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"        dialogContainer.getStylesheets().add(\"/stylesheets/MainWindow.css\");","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"                DialogBox.getDukeDialog(\"Greetings! I am Duke.\" + \"\\n\" + \"How can I assist you?\", dukeImage)","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"     * Sets the instance of duke to one provided.","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"     * @param d The duke instance that will be use to handle the input.","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"EltonGohJH"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"EltonGohJH"},"content":"        if (response.equals(duke.getFarewellMessage())) {","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"EltonGohJH"},"content":"            new Timer().schedule(new TimerTask() {","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"EltonGohJH"},"content":"                public void run () {","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"EltonGohJH"},"content":"                    Platform.exit();","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"                }","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"EltonGohJH"},"content":"            }, 1000);","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"EltonGohJH":76}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":" * Deals with the interaction with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"     * Returns the farewell message.","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"     * @return A string that represents the farewell message.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"    public String farewellUser() {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"        return \"Bye! See you soon!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"     * Returns the message inputted.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"     * @param message The message to be outputted.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"    public String returnMessage(String message) {","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"        return message;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"     * Returns the tasks in the task list.","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"     * @param taskList The tasks that will be printed.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"     * @return String The string representing all the tasks.","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"    public String returnTasks(TaskList taskList) {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"        output.append(\"\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"        for (int i \u003d 0; i \u003c taskList.getAllTasks().size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"            output.append(String.format(\"%d. %s%n\", i + 1, taskList.getAllTasks().get(i)));","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"        return output.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":41}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"        \u003cLabel fx:id\u003d\"dialog\" styleClass\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"            \u003cInsets left\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"EltonGohJH":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" styleClass\u003d\"dialogContainer\"/\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"EltonGohJH":19}},{"path":"src/main/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"    public void parseTodoTest() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"        Storage s \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"        TaskList t \u003d new TaskList(s.loadFile());","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"        Command c \u003d Parser.parse(\"todo finish CS2103 ip\");","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"        c.execute(t, ui, s);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"        ArrayList\u003cTask\u003e tasks \u003d t.getAllTasks();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"        assertEquals(tasks.get(tasks.size() - 1).toString(), \"[T][] finish CS2103 ip\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"EltonGohJH":27}},{"path":"src/main/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"    public void writeFileTest() throws FileNotFoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"        Storage s \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"        PrintWriter writer \u003d new PrintWriter(\"data/test.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"        writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"        assertEquals(s.loadFile().size(), 0);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"EltonGohJH":20}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":" * Tests the parser.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"class ParserTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"     * Tests the functionality of parser.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"     * @throws DukeException if the input is not accepted.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"    public void parse() throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"        Storage s \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"        TaskList t \u003d new TaskList(s.loadFile());","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"        Command c \u003d Parser.parse(\"todo finish CS2103 ip\");","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"        c.execute(t, ui, s);","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"        ArrayList\u003cTask\u003e tasks \u003d t.getAllTasks();","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"        assertEquals(tasks.get(tasks.size() - 1).toString(), \"[T][] finish CS2103 ip\");","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"EltonGohJH":34}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":" * Tests the storage of duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"class StorageTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    * Tests the functionality of storage.","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    * @throws FileNotFoundException if no file is found.","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"    */","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"    @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    public void loadFile() throws FileNotFoundException {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"        Storage s \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"        PrintWriter writer \u003d new PrintWriter(\"data/test.txt\");","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"        writer.close();","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"        assertEquals(s.loadFile().size(), 0);","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"EltonGohJH":25}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"apple","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"todo borrow book","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"deadline finish CS2103T IP /by 2/12/2019 1800","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"deadline /by 2/12/2019 1800","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"deadline apple","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"deadline","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"event exam /at 2/12/2019 1800","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"event /at 2/12/2019","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"event pear123","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"event","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"deadline finish assignment /by 2/12/2019 1800","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"event lecture /at 2/12/2019 1800","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"done 7","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"done orange","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"done","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"delete 2","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"delete 9","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"delete apple","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"delete","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"EltonGohJH":25}}]
