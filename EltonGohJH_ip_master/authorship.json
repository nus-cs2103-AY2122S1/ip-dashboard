[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"# duke project template","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"EltonGohJH":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"plugins {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"    id \u0027java\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"group \u0027org.example\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"version \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"repositories {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    mavenCentral()","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"dependencies {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.6.0\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"test {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"EltonGohJH":19}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"rootProject.name \u003d \u0027ip\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"EltonGohJH":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"     * Creates duke with the file path given.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"     * @param filePath The file path where the tasks are stored locally.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"        tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"     * Starts duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"    public void run() {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"        ui.greetUser();","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"        while (true) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"                if (c instanceof ExitCommand) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"                    ui.farewellUser();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"                    break;","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"                ui.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"                ui.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"                ui.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"                ui.printsMessage(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"                ui.printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":54,"-":2}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":" * Represents the command of adding a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"    private final Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"     * Creates the command that will add the task provided to the taskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"     * @param task The task that will be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"     * Executes the command by creating the task and printing the message through the ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"     * @param taskList The taskList where the task will be added.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"     * @param ui The ui where the message will be printed.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"     * @param storage The storage where it will be updated with the new task.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"        taskList.addTask(ui, this.task);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"        storage.updateTasks(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":36}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":10}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    private final int taskNo;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    public DeleteCommand(int taskNo) {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"        this.taskNo \u003d taskNo;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"        taskList.deleteTask(ui, this.taskNo);","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"        storage.updateTasks(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":20}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    private final int taskNo;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    public DoneCommand(int taskNo) {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"        this.taskNo \u003d taskNo;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"        taskList.markTaskAsDone(ui, this.taskNo);","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"        storage.updateTasks(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":20}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"        throw new DukeException(\"This should not be executed\");","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":14}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    protected String keyword;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"        ui.printsMessage(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"        for (Task task : taskList.getAllTasks()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"            if (task.isMatchingTask(this.keyword)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"                ui.printsMessage(String.format(\"%d.%s\", index++, task));","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"EltonGohJH":25}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"        ui.printTasks(tasks);","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":13}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":" * Represents the command of adding a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"        super(message);","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"     * Creates todo when given userInput.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"     * @param userInput the input by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"     * @return the todo inputted by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"     * @throws DukeException if no description is inputted.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"    private static Todo createTodo(String userInput) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"        String description \u003d userInput.substring(4).trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"            throw new DukeException(\"☹ OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"        return new Todo(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"     * Creates deadline when given userInput.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"     * @param userInput the input by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"     * @return the deadline inputted by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"     * @throws DukeException if no date and time or description of deadline is inputted.","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"    private static Deadline createDeadline(String userInput) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"        String[] splitByBy \u003d userInput.split(\" /by \");","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"        if (splitByBy.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"            throw new DukeException(\"☹ OOPS!!! The day of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"        String description \u003d splitByBy[0].substring(8).trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"            throw new DukeException(\"☹ OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"        String by \u003d splitByBy[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"        String[] splitDateTime \u003d by.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"        LocalDate date \u003d LocalDate.parse(splitDateTime[0], DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"        LocalTime time \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"        if (splitDateTime.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"            time \u003d LocalTime.parse(splitDateTime[1], DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"        return new Deadline(description, date, time);","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"     * Creates event when given userInput.","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"     * @param userInput the input by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"     * @return the event inputted by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"     * @throws DukeException if no date and time or description of event is inputted.","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"EltonGohJH"},"content":"    private static Event createEvent(String userInput) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"EltonGohJH"},"content":"        String[] splitByAt \u003d userInput.split(\" /at \");","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"EltonGohJH"},"content":"        if (splitByAt.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"EltonGohJH"},"content":"            throw new DukeException(\"☹ OOPS!!! The day of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"EltonGohJH"},"content":"        String description \u003d splitByAt[0].substring(5).trim();","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"EltonGohJH"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"EltonGohJH"},"content":"            throw new DukeException(\"☹ OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"EltonGohJH"},"content":"        String dayTime \u003d splitByAt[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"EltonGohJH"},"content":"        String[] splitDateTime \u003d dayTime.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"EltonGohJH"},"content":"        LocalDate date \u003d LocalDate.parse(splitDateTime[0], DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"EltonGohJH"},"content":"        LocalTime time \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"EltonGohJH"},"content":"        if (splitDateTime.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"EltonGohJH"},"content":"            time \u003d LocalTime.parse(splitDateTime[1], DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"EltonGohJH"},"content":"        return new Event(description, date, time);","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"EltonGohJH"},"content":"     * Parses the string for command and returns the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"EltonGohJH"},"content":"     * @param fullCommand The string representing the command inputted by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"EltonGohJH"},"content":"     * @return A command that can be executed to perform action specified by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"EltonGohJH"},"content":"     * @throws DukeException if the command is not recognised.","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"EltonGohJH"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"EltonGohJH"},"content":"        String[] splitInput \u003d fullCommand.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"EltonGohJH"},"content":"        switch (splitInput[0]) {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"EltonGohJH"},"content":"        case \"list\":","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"EltonGohJH"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"EltonGohJH"},"content":"        case \"done\":","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"EltonGohJH"},"content":"            return new DoneCommand(Integer.parseInt(splitInput[1]));","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"EltonGohJH"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"EltonGohJH"},"content":"            return new AddCommand(createTodo(fullCommand));","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"EltonGohJH"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"EltonGohJH"},"content":"            return new AddCommand(createDeadline(fullCommand));","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"EltonGohJH"},"content":"        case \"event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"EltonGohJH"},"content":"            return new AddCommand(createEvent(fullCommand));","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"EltonGohJH"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"EltonGohJH"},"content":"            return new DeleteCommand(Integer.parseInt(splitInput[1]));","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"EltonGohJH"},"content":"        case \"find\":","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"EltonGohJH"},"content":"            return new FindCommand(fullCommand.substring(4).trim());","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"EltonGohJH"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"EltonGohJH"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":115}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"     * Creates storage with the file path provided.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"     * @param filePath The file path where all the tasks are stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"     * Loads the text file and creates a text file if file does not exist.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"     * @return A array list with all the tasks read from the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"    public ArrayList\u003cTask\u003e loadFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"            File file \u003d new File(this.filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"                file.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"                FileReader fr \u003d new FileReader(file);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"                BufferedReader br \u003d new BufferedReader(fr);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"                String line \u003d br.readLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"                while (line !\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"                    char type \u003d line.charAt(0);","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"                    String[] splitInput \u003d line.split(\" \\\\| \");","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"                    if (type \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"                        taskList.add(new Todo(splitInput[2], splitInput[1].equals(\"1\")));","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"                    } else if (type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"                        LocalDate date \u003d LocalDate.parse(splitInput[3], DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"                        LocalTime time \u003d splitInput.length \u003d\u003d 5 ? LocalTime.parse(splitInput[4]) : null;","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"                        taskList.add(new Deadline(splitInput[2], splitInput[1].equals(\"1\"), date, time));","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"                    } else if (type \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"                        LocalDate date \u003d LocalDate.parse(splitInput[3], DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"                        LocalTime time \u003d splitInput.length \u003d\u003d 5 ? LocalTime.parse(splitInput[4]) : null;","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"                        taskList.add(new Event(splitInput[2], splitInput[1].equals(\"1\"), date, time));","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"                    line \u003d br.readLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"            return taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"EltonGohJH"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"EltonGohJH"},"content":"            return taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"EltonGohJH"},"content":"     * Updates the tasks given to the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"EltonGohJH"},"content":"     * @param taskList The tasks that will be updated to the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"EltonGohJH"},"content":"    public void updateTasks(TaskList taskList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"EltonGohJH"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getAllTasks();","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"EltonGohJH"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"EltonGohJH"},"content":"            FileWriter writer \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"EltonGohJH"},"content":"            ArrayList\u003cString\u003e displayTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"EltonGohJH"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"EltonGohJH"},"content":"                displayTasks.add(task.fileFormat());","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"EltonGohJH"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"EltonGohJH"},"content":"            writer.write(String.join(String.format(\"%n\"), displayTasks));","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"EltonGohJH"},"content":"            writer.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"EltonGohJH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"EltonGohJH"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":91}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":" * A task that stores the deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"     * The date of the deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"     * The time of the deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    private LocalTime time;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"     * A constructor used to initialize the deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"     * @param description the description of the deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"     * @param date the date of the deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"     * @param time the time of the deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"    public Deadline(String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"     * A constructor used to initialize the deadline through file input.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"     * @param description the description of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"     * @param isCompleted the state of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"     * @param date the date of the deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"     * @param time the time of the deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"    public Deadline(String description, boolean isCompleted, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"        super(description, isCompleted);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"     * Return the string representation of deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representation of deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"        String str \u003d \"[D]\" + super.toString() + \" (by: \" + this.date.format(DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"        str +\u003d this.time !\u003d null ? \" \" + this.time + \")\" : \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"        return str;","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"     * Return the string representation of deadline for file input/output.","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representation of deadline for file input/output.","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"    public String fileFormat() {","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"EltonGohJH"},"content":"        String displayCompletion \u003d this.isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"EltonGohJH"},"content":"        String str \u003d String.format(\"%s | %s | %s | %s\", \"D\", displayCompletion, this.description,","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"EltonGohJH"},"content":"                this.date.format(DateTimeFormatter.ofPattern(\"d/M/yyyy\")));","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"EltonGohJH"},"content":"        str +\u003d this.time !\u003d null ? \" | \" + this.time : \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"EltonGohJH"},"content":"        return str;","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"EltonGohJH":73}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":" * A task that stores the day and time of the event.","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"     * The date of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"     * The time of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    private LocalTime time;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"     * A constructor used to initialize the event.","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"     * @param description the description of the event.","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"     * @param date the date of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"     * @param time the time of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"    public Event(String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"     * A constructor used to initialize the event through file input.","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"     * @param description the description of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"     * @param isCompleted the state of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"     * @param date the date of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"     * @param time the time of the event.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"    public Event(String description, boolean isCompleted, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"        super(description, isCompleted);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"     * Return the string representation of event.","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representation of event.","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"        String str \u003d \"[E]\" + super.toString() + \" (at: \" + this.date.format(DateTimeFormatter.ofPattern(\"d/M/yyyy\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"        str +\u003d this.time !\u003d null ? \" \" + this.time + \")\" : \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"        return str;","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"     * Return the string representation of event for file input/output.","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representation of event for file input/output.","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"    public String fileFormat() {","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"EltonGohJH"},"content":"        String displayCompletion \u003d this.isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"EltonGohJH"},"content":"        String str \u003d String.format(\"%s | %s | %s | %s\", \"E\", displayCompletion, this.description,","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"EltonGohJH"},"content":"                this.date.format(DateTimeFormatter.ofPattern(\"d/M/yyyy\")));","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"EltonGohJH"},"content":"        str +\u003d this.time !\u003d null ? \" | \" + this.time : \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"EltonGohJH"},"content":"        return str;","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"EltonGohJH":73}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":" * A task that can be mark as completed.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"     * The description of the task.","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    protected String description;","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"     * If true, the task is completed. Else, the task is not completed.","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    protected boolean isCompleted \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"     * A constructor used to initialize the task.","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"     * A constructor used to initialize the task through file input.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"     * @param isCompleted The state of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"    public Task(String description, boolean isCompleted) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"     * Returns a boolean representing if the task matches the string.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"     * @param keyword The keyword of the task to check against.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"     * @return boolean that represents whether if task matches the keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"    public boolean isMatchingTask(String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"        return description.matches(String.format(\".*%s.*\", keyword));","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"     * Returns the string representation of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representation of task.","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"        String displayCompletion \u003d this.isCompleted ? \"[X]\" : \"[]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"        return displayCompletion + \u0027 \u0027 + this.description;","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"     * Returns the string representation of task for file input/output.","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representation of task.","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"EltonGohJH"},"content":"    public String fileFormat() {","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"EltonGohJH"},"content":"        String displayCompletion \u003d this.isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"        return String.format(\"%s | %s\", displayCompletion, this.description);","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"EltonGohJH":74}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":" * A task that is to be done.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"     * A constructor used to initialize the todo.","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"     * @param description the description of the todo.","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"     * A constructor used to initialize the todo through file input.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"     * @param description the description of the todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"     * @param isCompleted the state of the todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    public Todo(String description, boolean isCompleted) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"        super(description, isCompleted);","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"     * Returns the string representation of todo.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representation of todo.","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"     * Returns the string representation of todo for file input/output.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representation of todo for file input/output.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"    public String fileFormat() {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"        String displayCompletion \u003d this.isCompleted ? \"1\" : \"0\";","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"        return String.format(\"%s | %s | %s\", \"T\", displayCompletion, this.description);","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"EltonGohJH":46}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.tasklist;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":" * Represents all the tasks created through Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"     * Returns all the tasks in an array list.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"     * @return ArrayList containing all the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"        return tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"     * Adds the task to the list and prints the added task.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"     * @param task the task that will be added to the list","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"    public void addTask(Ui ui, Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"        ui.printsMessage(String.format(\"Got it. I\u0027ve added this task:%n  %s%nNow you have %d tasks in the list.\",","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"                task, this.tasks.size()));","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"     * Deletes the task with taskNo specified.","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"     * @param taskNo the taskNo of the task to be deleted.","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"    public void deleteTask(Ui ui, int taskNo) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"        Task task \u003d this.tasks.get(taskNo - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"        this.tasks.remove(taskNo - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"        ui.printsMessage(String.format(\"Noted. I\u0027ve removed this task:%n  %s%nNow you have %d tasks in the list.\",","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"                task, this.tasks.size()));","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"     * Deletes the task with taskNo specified.","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"     * @param taskNo the taskNo of the task to be deleted.","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"    public void markTaskAsDone(Ui ui, int taskNo) {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"        Task task \u003d this.tasks.get(taskNo - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"        ui.printsMessage(String.format(\"Nice! I\u0027ve marked this task as done:%n  %s\", task));","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":61}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":" * Deals with the interaction with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"     * Reads the text inputted by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"     * @return A String representing the user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"     * Prints a line.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"    public void printLine() {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"        System.out.println(\"__________________________________________________________\");","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"     * Prints the greeting message.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"    public void greetUser() {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"        printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"        System.out.println(\"Greetings! I am Duke.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"        System.out.println(\"How can I assist you?\");","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"        printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"     * Prints the farewell message.","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"    public void farewellUser() {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"        printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"        System.out.println(\"Bye! See you soon!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"        printLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"     * Prints the message inputted.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"     * @param message The message to be outputted.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"    public void printsMessage(String message) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"     * Prints the tasks in the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"     * @param taskList The tasks that will be printed.","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"    public void printTasks(TaskList taskList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"        for (int i \u003d 0; i \u003c taskList.getAllTasks().size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"            System.out.printf(\"%d. %s%n\", i + 1, taskList.getAllTasks().get(i));","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"EltonGohJH":69}},{"path":"src/main/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"    public void parseTodoTest() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"        Storage s \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"        TaskList t \u003d new TaskList(s.loadFile());","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"        Command c \u003d Parser.parse(\"todo finish CS2103 ip\");","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"        c.execute(t, ui, s);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"        ArrayList\u003cTask\u003e tasks \u003d t.getAllTasks();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"        assertEquals(tasks.get(tasks.size() - 1).toString(), \"[T][] finish CS2103 ip\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"EltonGohJH":27}},{"path":"src/main/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"    public void writeFileTest() throws FileNotFoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"        Storage s \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"        PrintWriter writer \u003d new PrintWriter(\"data/test.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"        writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"        assertEquals(s.loadFile().size(), 0);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"EltonGohJH":20}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"class ParserTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"  @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"  void parse() throws DukeException {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"    Storage s \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    TaskList t \u003d new TaskList(s.loadFile());","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"    Command c \u003d Parser.parse(\"todo finish CS2103 ip\");","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    c.execute(t, ui, s);","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"    ArrayList\u003cTask\u003e tasks \u003d t.getAllTasks();","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    assertEquals(tasks.get(tasks.size() - 1).toString(), \"[T][] finish CS2103 ip\");","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"  }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"EltonGohJH":26}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"package duke.storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"class StorageTest {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"  @Test","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"  void loadFile() throws FileNotFoundException {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"    Storage s \u003d new Storage(\"data/test.txt\");","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"    PrintWriter writer \u003d new PrintWriter(\"data/test.txt\");","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    writer.close();","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    assertEquals(s.loadFile().size(), 0);","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"  }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"EltonGohJH":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"apple","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"todo borrow book","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"deadline finish CS2103T IP /by 2/12/2019 1800","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"deadline /by 2/12/2019 1800","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"deadline apple","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"deadline","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"event exam /at 2/12/2019 1800","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"event /at 2/12/2019","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"event pear123","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"event","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"deadline finish assignment /by 2/12/2019 1800","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"event lecture /at 2/12/2019 1800","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"done 7","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"done orange","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"done","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"delete 2","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"delete 9","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"delete apple","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"delete","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"EltonGohJH":25}}]
