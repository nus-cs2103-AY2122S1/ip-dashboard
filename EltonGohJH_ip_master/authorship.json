[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":" * A task that stores the deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"     * The day of the deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"    protected String by;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"     * A constructor used to initialize the deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"     * @param description the description of the deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"     * @param by the day of the deadline","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    protected Deadline(String description, String by) {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"     * Return the string representation of deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representation of deadline.","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"EltonGohJH":30}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"     * The list of tasks that are inputted by the user.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"     * The number of tasks.","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"    private static int noOfTasks \u003d 0;","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"     * All the recognised commands.","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"    protected enum Command {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"        DONE(\"done\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"        BYE(\"bye\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"        TODO(\"todo\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"        DEADLINE(\"deadline\"),","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"        EVENT(\"event\");","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"        private String name;","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"        Command(String name) {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"        @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"        public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"            return this.name;","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"     * Prints a line.","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"    private static void printLine() {","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"        System.out.println(\"__________________________________________________________\");","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"     * Prints the greeting message.","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"    private static void greetUser() {","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"        printLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"        System.out.println(\"Greetings! I am Duke.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"        System.out.println(\"How can I assist you?\");","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"        printLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"     * Prints the farewell message.","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"    private static void farewellUser() {","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"        printLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"        System.out.println(\"Bye! See you soon!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"        printLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"     * Adds the task to the list and prints the added task.","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"     * @param task the task that will be added to the list","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"EltonGohJH"},"content":"    private static void addToList(Task task) {","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"EltonGohJH"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"EltonGohJH"},"content":"        noOfTasks++;","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"EltonGohJH"},"content":"        System.out.printf(\"Got it. I\u0027ve added this task:%n  %s%nNow you have %d tasks in the list.%n\",","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"                task, noOfTasks);","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"EltonGohJH"},"content":"     * Prints all the tasks in the list in order.","lastModifiedDate":"2021-08-15"},{"lineNumber":77,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"EltonGohJH"},"content":"    private static void printTasks() {","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"EltonGohJH"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"EltonGohJH"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"EltonGohJH"},"content":"            System.out.printf(\"%d. %s%n\", i + 1, taskList.get(i));","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":85,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":86,"author":{"gitId":"EltonGohJH"},"content":"     * Marks the task with taskNo specified and prints the task completed.","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":88,"author":{"gitId":"EltonGohJH"},"content":"     * @param splitInput the user input split by space.","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"EltonGohJH"},"content":"     * @throws NoTaskNumException if no task number for done is inputted.","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"EltonGohJH"},"content":"     * @throws InvalidTaskNumException if invalid task number is inputted.","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":92,"author":{"gitId":"EltonGohJH"},"content":"    private static void markTaskAsDone(String[] splitInput) throws NoTaskNumException, InvalidTaskNumException {","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"EltonGohJH"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"EltonGohJH"},"content":"            // If splitInput length is 1, that means no task number is inputted.","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"EltonGohJH"},"content":"            if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"EltonGohJH"},"content":"                throw new NoTaskNumException();","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"EltonGohJH"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"EltonGohJH"},"content":"            int taskNo \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"EltonGohJH"},"content":"            Task task \u003d taskList.get(taskNo - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":100,"author":{"gitId":"EltonGohJH"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-15"},{"lineNumber":101,"author":{"gitId":"EltonGohJH"},"content":"            System.out.printf(\"Nice! I\u0027ve marked this task as done:%n  %s%n\", task);","lastModifiedDate":"2021-08-16"},{"lineNumber":102,"author":{"gitId":"EltonGohJH"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"EltonGohJH"},"content":"            // When non numeric or out of bounds task number is inputted.","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"EltonGohJH"},"content":"            throw new InvalidTaskNumException();","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":106,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":107,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":108,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":109,"author":{"gitId":"EltonGohJH"},"content":"     * Deletes the task with taskNo specified and prints the task deleted.","lastModifiedDate":"2021-08-16"},{"lineNumber":110,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":111,"author":{"gitId":"EltonGohJH"},"content":"     * @param splitInput the user input split by space.","lastModifiedDate":"2021-08-16"},{"lineNumber":112,"author":{"gitId":"EltonGohJH"},"content":"     * @throws NoTaskNumException if no task number for delete is inputted.","lastModifiedDate":"2021-08-16"},{"lineNumber":113,"author":{"gitId":"EltonGohJH"},"content":"     * @throws InvalidTaskNumException if invalid task number for deletion is inputted.","lastModifiedDate":"2021-08-16"},{"lineNumber":114,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":115,"author":{"gitId":"EltonGohJH"},"content":"    private static void deleteTask(String[] splitInput) throws NoTaskNumException, InvalidTaskNumException {","lastModifiedDate":"2021-08-16"},{"lineNumber":116,"author":{"gitId":"EltonGohJH"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":117,"author":{"gitId":"EltonGohJH"},"content":"            // If splitInput length is 1, that means no task number is inputted.","lastModifiedDate":"2021-08-16"},{"lineNumber":118,"author":{"gitId":"EltonGohJH"},"content":"            if (splitInput.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-16"},{"lineNumber":119,"author":{"gitId":"EltonGohJH"},"content":"                throw new NoTaskNumException();","lastModifiedDate":"2021-08-16"},{"lineNumber":120,"author":{"gitId":"EltonGohJH"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":121,"author":{"gitId":"EltonGohJH"},"content":"            int taskNo \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2021-08-16"},{"lineNumber":122,"author":{"gitId":"EltonGohJH"},"content":"            Task task \u003d taskList.get(taskNo - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":123,"author":{"gitId":"EltonGohJH"},"content":"            taskList.remove(taskNo - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":124,"author":{"gitId":"EltonGohJH"},"content":"            noOfTasks--;","lastModifiedDate":"2021-08-16"},{"lineNumber":125,"author":{"gitId":"EltonGohJH"},"content":"            System.out.printf(\"Noted. I\u0027ve removed this task:%n  %s%nNow you have %d tasks in the list.%n\", task,","lastModifiedDate":"2021-08-16"},{"lineNumber":126,"author":{"gitId":"EltonGohJH"},"content":"                    noOfTasks);","lastModifiedDate":"2021-08-16"},{"lineNumber":127,"author":{"gitId":"EltonGohJH"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":128,"author":{"gitId":"EltonGohJH"},"content":"            // When non numeric or out of bounds task number is inputted.","lastModifiedDate":"2021-08-16"},{"lineNumber":129,"author":{"gitId":"EltonGohJH"},"content":"            throw new InvalidTaskNumException();","lastModifiedDate":"2021-08-16"},{"lineNumber":130,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":131,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":132,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":133,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":134,"author":{"gitId":"EltonGohJH"},"content":"     * Creates todo when given userInput.","lastModifiedDate":"2021-08-16"},{"lineNumber":135,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":136,"author":{"gitId":"EltonGohJH"},"content":"     * @param userInput the input by the user.","lastModifiedDate":"2021-08-16"},{"lineNumber":137,"author":{"gitId":"EltonGohJH"},"content":"     * @return the todo inputted by the user.","lastModifiedDate":"2021-08-16"},{"lineNumber":138,"author":{"gitId":"EltonGohJH"},"content":"     * @throws NoDescriptionException if no description is inputted.","lastModifiedDate":"2021-08-16"},{"lineNumber":139,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":140,"author":{"gitId":"EltonGohJH"},"content":"    public static Todo createTodo(String userInput) throws NoDescriptionException {","lastModifiedDate":"2021-08-16"},{"lineNumber":141,"author":{"gitId":"EltonGohJH"},"content":"        String description \u003d userInput.substring(4).trim();","lastModifiedDate":"2021-08-16"},{"lineNumber":142,"author":{"gitId":"EltonGohJH"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":143,"author":{"gitId":"EltonGohJH"},"content":"            throw new NoDescriptionException(Command.TODO);","lastModifiedDate":"2021-08-16"},{"lineNumber":144,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":145,"author":{"gitId":"EltonGohJH"},"content":"        return new Todo(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":146,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":147,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":148,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":149,"author":{"gitId":"EltonGohJH"},"content":"     * Creates deadline when given userInput.","lastModifiedDate":"2021-08-15"},{"lineNumber":150,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":151,"author":{"gitId":"EltonGohJH"},"content":"     * @param userInput the input by the user.","lastModifiedDate":"2021-08-16"},{"lineNumber":152,"author":{"gitId":"EltonGohJH"},"content":"     * @return the deadline inputted by the user.","lastModifiedDate":"2021-08-16"},{"lineNumber":153,"author":{"gitId":"EltonGohJH"},"content":"     * @throws NoDateTimeInputException if no day of deadline is inputted.","lastModifiedDate":"2021-08-16"},{"lineNumber":154,"author":{"gitId":"EltonGohJH"},"content":"     * @throws NoDescriptionException if no description is inputted.","lastModifiedDate":"2021-08-16"},{"lineNumber":155,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":156,"author":{"gitId":"EltonGohJH"},"content":"    public static Deadline createDeadline(String userInput) throws NoDateTimeInputException, NoDescriptionException {","lastModifiedDate":"2021-08-16"},{"lineNumber":157,"author":{"gitId":"EltonGohJH"},"content":"        String[] splitByBy \u003d userInput.split(\" /by \");","lastModifiedDate":"2021-08-16"},{"lineNumber":158,"author":{"gitId":"EltonGohJH"},"content":"        if (splitByBy.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-16"},{"lineNumber":159,"author":{"gitId":"EltonGohJH"},"content":"            throw new NoDateTimeInputException(Command.DEADLINE);","lastModifiedDate":"2021-08-16"},{"lineNumber":160,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":161,"author":{"gitId":"EltonGohJH"},"content":"        String description \u003d splitByBy[0].substring(8).trim();","lastModifiedDate":"2021-08-16"},{"lineNumber":162,"author":{"gitId":"EltonGohJH"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":163,"author":{"gitId":"EltonGohJH"},"content":"            throw new NoDescriptionException(Command.DEADLINE);","lastModifiedDate":"2021-08-16"},{"lineNumber":164,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":165,"author":{"gitId":"EltonGohJH"},"content":"        String by \u003d splitByBy[1];","lastModifiedDate":"2021-08-16"},{"lineNumber":166,"author":{"gitId":"EltonGohJH"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2021-08-15"},{"lineNumber":167,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":168,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":169,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":170,"author":{"gitId":"EltonGohJH"},"content":"     * Creates event when given userInput.","lastModifiedDate":"2021-08-15"},{"lineNumber":171,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":172,"author":{"gitId":"EltonGohJH"},"content":"     * @param userInput the input by the user.","lastModifiedDate":"2021-08-16"},{"lineNumber":173,"author":{"gitId":"EltonGohJH"},"content":"     * @return the event inputted by the user.","lastModifiedDate":"2021-08-16"},{"lineNumber":174,"author":{"gitId":"EltonGohJH"},"content":"     * @throws NoDateTimeInputException if no date and time of event is inputted.","lastModifiedDate":"2021-08-16"},{"lineNumber":175,"author":{"gitId":"EltonGohJH"},"content":"     * @throws NoDescriptionException if no description is inputted.","lastModifiedDate":"2021-08-16"},{"lineNumber":176,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":177,"author":{"gitId":"EltonGohJH"},"content":"    public static Event createEvent(String userInput) throws NoDateTimeInputException, NoDescriptionException {","lastModifiedDate":"2021-08-16"},{"lineNumber":178,"author":{"gitId":"EltonGohJH"},"content":"        String[] splitByAt \u003d userInput.split(\" /at \");","lastModifiedDate":"2021-08-16"},{"lineNumber":179,"author":{"gitId":"EltonGohJH"},"content":"        if (splitByAt.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-16"},{"lineNumber":180,"author":{"gitId":"EltonGohJH"},"content":"            throw new NoDateTimeInputException(Command.EVENT);","lastModifiedDate":"2021-08-16"},{"lineNumber":181,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":182,"author":{"gitId":"EltonGohJH"},"content":"        String description \u003d splitByAt[0].substring(5).trim();","lastModifiedDate":"2021-08-16"},{"lineNumber":183,"author":{"gitId":"EltonGohJH"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":184,"author":{"gitId":"EltonGohJH"},"content":"            throw new NoDescriptionException(Command.EVENT);","lastModifiedDate":"2021-08-16"},{"lineNumber":185,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":186,"author":{"gitId":"EltonGohJH"},"content":"        String dayTime \u003d splitByAt[1];","lastModifiedDate":"2021-08-16"},{"lineNumber":187,"author":{"gitId":"EltonGohJH"},"content":"        return new Event(description, dayTime);","lastModifiedDate":"2021-08-15"},{"lineNumber":188,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":189,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":190,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":191,"author":{"gitId":"EltonGohJH"},"content":"     * Interacts with the user.","lastModifiedDate":"2021-08-15"},{"lineNumber":192,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":193,"author":{"gitId":"EltonGohJH"},"content":"    public static void interactWithUser() {","lastModifiedDate":"2021-08-16"},{"lineNumber":194,"author":{"gitId":"EltonGohJH"},"content":"        greetUser();","lastModifiedDate":"2021-08-15"},{"lineNumber":195,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":196,"author":{"gitId":"EltonGohJH"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-15"},{"lineNumber":197,"author":{"gitId":"EltonGohJH"},"content":"        String userInput \u003d scanner.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":198,"author":{"gitId":"EltonGohJH"},"content":"        String[] splitInput \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":199,"author":{"gitId":"EltonGohJH"},"content":"        while (!userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":200,"author":{"gitId":"EltonGohJH"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":201,"author":{"gitId":"EltonGohJH"},"content":"                printLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":202,"author":{"gitId":"EltonGohJH"},"content":"                if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":203,"author":{"gitId":"EltonGohJH"},"content":"                    printTasks();","lastModifiedDate":"2021-08-15"},{"lineNumber":204,"author":{"gitId":"EltonGohJH"},"content":"                } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":205,"author":{"gitId":"EltonGohJH"},"content":"                    switch (splitInput[0]) {","lastModifiedDate":"2021-08-15"},{"lineNumber":206,"author":{"gitId":"EltonGohJH"},"content":"                    case \"done\":","lastModifiedDate":"2021-08-15"},{"lineNumber":207,"author":{"gitId":"EltonGohJH"},"content":"                        markTaskAsDone(splitInput);","lastModifiedDate":"2021-08-16"},{"lineNumber":208,"author":{"gitId":"EltonGohJH"},"content":"                        break;","lastModifiedDate":"2021-08-15"},{"lineNumber":209,"author":{"gitId":"EltonGohJH"},"content":"                    case \"todo\":","lastModifiedDate":"2021-08-15"},{"lineNumber":210,"author":{"gitId":"EltonGohJH"},"content":"                        addToList(createTodo(userInput));","lastModifiedDate":"2021-08-16"},{"lineNumber":211,"author":{"gitId":"EltonGohJH"},"content":"                        break;","lastModifiedDate":"2021-08-15"},{"lineNumber":212,"author":{"gitId":"EltonGohJH"},"content":"                    case \"deadline\":","lastModifiedDate":"2021-08-15"},{"lineNumber":213,"author":{"gitId":"EltonGohJH"},"content":"                        addToList(createDeadline(userInput));","lastModifiedDate":"2021-08-15"},{"lineNumber":214,"author":{"gitId":"EltonGohJH"},"content":"                        break;","lastModifiedDate":"2021-08-15"},{"lineNumber":215,"author":{"gitId":"EltonGohJH"},"content":"                    case \"event\":","lastModifiedDate":"2021-08-15"},{"lineNumber":216,"author":{"gitId":"EltonGohJH"},"content":"                        addToList(createEvent(userInput));","lastModifiedDate":"2021-08-15"},{"lineNumber":217,"author":{"gitId":"EltonGohJH"},"content":"                        break;","lastModifiedDate":"2021-08-15"},{"lineNumber":218,"author":{"gitId":"EltonGohJH"},"content":"                    case \"delete\":","lastModifiedDate":"2021-08-16"},{"lineNumber":219,"author":{"gitId":"EltonGohJH"},"content":"                        deleteTask(splitInput);","lastModifiedDate":"2021-08-16"},{"lineNumber":220,"author":{"gitId":"EltonGohJH"},"content":"                        break;","lastModifiedDate":"2021-08-16"},{"lineNumber":221,"author":{"gitId":"EltonGohJH"},"content":"                    default:","lastModifiedDate":"2021-08-16"},{"lineNumber":222,"author":{"gitId":"EltonGohJH"},"content":"                        throw new UnknownCommandException(splitInput[0]);","lastModifiedDate":"2021-08-16"},{"lineNumber":223,"author":{"gitId":"EltonGohJH"},"content":"                    }","lastModifiedDate":"2021-08-16"},{"lineNumber":224,"author":{"gitId":"EltonGohJH"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":225,"author":{"gitId":"EltonGohJH"},"content":"            } catch (NoTaskNumException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":226,"author":{"gitId":"EltonGohJH"},"content":"                System.out.println(\"☹ OOPS!!! The task number cannot be empty.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":227,"author":{"gitId":"EltonGohJH"},"content":"            } catch (InvalidTaskNumException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":228,"author":{"gitId":"EltonGohJH"},"content":"                System.out.println(\"☹ OOPS!!! The task number inputted is invalid.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":229,"author":{"gitId":"EltonGohJH"},"content":"            } catch (NoDateTimeInputException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":230,"author":{"gitId":"EltonGohJH"},"content":"                switch (e.command) {","lastModifiedDate":"2021-08-16"},{"lineNumber":231,"author":{"gitId":"EltonGohJH"},"content":"                case DEADLINE:","lastModifiedDate":"2021-08-16"},{"lineNumber":232,"author":{"gitId":"EltonGohJH"},"content":"                    System.out.println(\"☹ OOPS!!! The day of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":233,"author":{"gitId":"EltonGohJH"},"content":"                    break;","lastModifiedDate":"2021-08-16"},{"lineNumber":234,"author":{"gitId":"EltonGohJH"},"content":"                case EVENT:","lastModifiedDate":"2021-08-16"},{"lineNumber":235,"author":{"gitId":"EltonGohJH"},"content":"                    System.out.println(\"☹ OOPS!!! The date and time of a event cannot be empty.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":236,"author":{"gitId":"EltonGohJH"},"content":"                    break;","lastModifiedDate":"2021-08-16"},{"lineNumber":237,"author":{"gitId":"EltonGohJH"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":238,"author":{"gitId":"EltonGohJH"},"content":"            } catch (NoDescriptionException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":239,"author":{"gitId":"EltonGohJH"},"content":"                System.out.printf(\"☹ OOPS!!! The description of a %s cannot be empty.%n\", e.command);","lastModifiedDate":"2021-08-16"},{"lineNumber":240,"author":{"gitId":"EltonGohJH"},"content":"            } catch (UnknownCommandException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":241,"author":{"gitId":"EltonGohJH"},"content":"                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-16"},{"lineNumber":242,"author":{"gitId":"EltonGohJH"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":243,"author":{"gitId":"EltonGohJH"},"content":"            printLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":244,"author":{"gitId":"EltonGohJH"},"content":"            userInput \u003d scanner.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":245,"author":{"gitId":"EltonGohJH"},"content":"            splitInput \u003d userInput.split(\" \");","lastModifiedDate":"2021-08-15"},{"lineNumber":246,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":247,"author":{"gitId":"EltonGohJH"},"content":"        scanner.close();","lastModifiedDate":"2021-08-15"},{"lineNumber":248,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":249,"author":{"gitId":"EltonGohJH"},"content":"        farewellUser();","lastModifiedDate":"2021-08-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":251,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":252,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":253,"author":{"gitId":"EltonGohJH"},"content":"     * Starts Duke.","lastModifiedDate":"2021-08-16"},{"lineNumber":254,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":255,"author":{"gitId":"EltonGohJH"},"content":"     * @param args array of strings.","lastModifiedDate":"2021-08-16"},{"lineNumber":256,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-16"},{"lineNumber":258,"author":{"gitId":"EltonGohJH"},"content":"        interactWithUser();","lastModifiedDate":"2021-08-16"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"EltonGohJH":255,"-":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":" * A task that stores the day and time of the event.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"     * The day and time of the event.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"    protected String dayTime;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"     * A constructor used to initialize the event.","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"     * @param description the description of the event.","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"     * @param dayTime the day and time of the event.","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    protected Event(String description, String dayTime) {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"        this.dayTime \u003d dayTime;","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"     * Return the string representation of event.","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representation of event.","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.dayTime + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"EltonGohJH":30}},{"path":"src/main/java/InvalidTaskNumException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":" * This exception is thrown when no task number is inputted.","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"public class InvalidTaskNumException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"    protected InvalidTaskNumException() {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"        super(\"Invalid task number inputted.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"EltonGohJH":9}},{"path":"src/main/java/NoDateTimeInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":" * This exception is thrown when no date or time for command is inputted.","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"public class NoDateTimeInputException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"    protected Duke.Command command;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"    protected NoDateTimeInputException(Duke.Command command) {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"        super(String.format(\"No date or time inputted for %s.\", command));","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"EltonGohJH":12}},{"path":"src/main/java/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":" * This exception is thrown when no description for command is inputted.","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"public class NoDescriptionException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"    protected Duke.Command command;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"    protected NoDescriptionException(Duke.Command command) {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"        super(String.format(\"No description inputted for %s.\", command));","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"EltonGohJH":12}},{"path":"src/main/java/NoTaskNumException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":" * This exception is thrown when no task number is inputted.","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"public class NoTaskNumException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"    protected NoTaskNumException() {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"        super(\"No task number inputted.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"EltonGohJH":9}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":" * A task that can be mark as completed.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"     * The description of the task.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"    protected String description;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"     * If true, the task is completed. Else, the task is not completed.","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"    protected boolean isCompleted \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"     * A constructor used to initialize the task.","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"     * @param description the description of the task.","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"    protected Task(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"    protected void markAsDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"     * Return the string representation of task.","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representation of task.","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"        String displayCompletion \u003d this.isCompleted ? \"[X]\" : \"[]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"        return displayCompletion + \u0027 \u0027 + this.description;","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"EltonGohJH":41}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":" * A task that is to be done.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"     * A constructor used to initialize the todo.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"     * @param description the description of the todo.","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    protected Todo(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"     * Return the string representation of todo.","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"     * @return the string representation of todo.","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"EltonGohJH":23}},{"path":"src/main/java/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":" * This exception is thrown when the command is not recognised by Duke.","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"    protected UnknownCommandException(String command) {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"        super(String.format(\"Unrecognised command \\\"%s\\\" is inputted.\", command));","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"EltonGohJH":8}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EltonGohJH"},"content":"apple","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"todo borrow book","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"deadline finish CS2103T IP /by Monday","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"deadline /by Tuesday","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"deadline apple","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"deadline","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"event exam /at Mon 2-4pm","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"event /at Tues 2-7am","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"event pear123","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"event","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"deadline finish assignment /by August 31st","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"event lecture /at Mon 3-5pm","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"done 7","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"done orange","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"done","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"delete 2","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"delete 9","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"delete apple","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"delete","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"EltonGohJH":25}}]
