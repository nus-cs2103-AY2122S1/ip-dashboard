[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"tzejit":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    mainClassName \u003d \"chadbot.Launcher\"","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"    archiveBaseName \u003d \"chadbot\"","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"tzejit":17}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"### Help Page","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"Shows all possible commands and their usage.","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"### Task List","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"Shows all tasks entered with their current completed status.","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"### Add Todo, Event and Deadline Tasks","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"Adds 1 of 3 types of tasks into the task list.","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"* Todo tasks requires only a task description","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"* Events require both a task description, and a start date \u0026 time","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"* Deadlines require both a task description, and a due date \u0026 time","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"### Find tasks","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"Finds all tasks whose description contains the keyword searched for.","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"### Mark tasks as done","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"Mark tasks that are completed as done.","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"### Delete tasks","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"Remove tasks from the task list.","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"### Filter tasks","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"Filters event and deadline tasks by their inputted dates. Options are available for filtering of only events, deadlines, or both.","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"### Automatically saves tasks","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"Automatically saves task list to local memory after every command.","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"***","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"### `help` - Displays the help page","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"Displays a list of all possible commands and their usage.","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"#### Example of usage: ","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"`help`","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"#### Expected outcome:","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"A list of all possible commands and their usage is displayed on the screen.","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"bye : Closes the programme","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"list : Returns all tasks added","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"todo \u003cdescription\u003e : Adds a todo task","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"find \u003cdescription\u003e : Returns all tasks with \u003cdescription\u003e in their description","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"event \u003cdescription\u003e /at \u003ctime: YYYY-MM-DDThh:mm\u003e : Adds an event at time \u003ctime\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"deadline \u003cdescription\u003e /by \u003ctime: YYYY-MM-DDThh:mm\u003e : Adds a task with deadline at time \u003ctime\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"done \u003cindex\u003e : Marks the task at \u003cindex\u003e as done","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"delete \u003cindex\u003e : deletes the task at \u003cindex\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"at \u003ctime: YYYY-MM-DDThh:mm\u003e : Returns all events up till \u003ctime\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"by \u003ctime: YYYY-MM-DDThh:mm\u003e : Returns all tasks with deadline due before or at \u003ctime\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"all \u003ctime: YYYY-MM-DDThh:mm\u003e : Returns all timed tasks with times up till \u003ctime\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"### `list` - Displays the current task list","lastModifiedDate":"2021-09-10"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"Displays a list of all tasks inputted.","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"#### Example of usage:","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"`list`","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"#### Expected outcome:","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"A list of all tasks their status is displayed on the screen.","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"1.[T][X] eat","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"2.[D][ ] sleep (by: Sep 9 2021 04:00 AM)","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"3.[E][ ] lesson (at: Sep 11 2021 11:00 AM","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"### `todo \u003cdescription\u003e` - Adds a todo task","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"Adds a todo task to the task list.","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"#### Example of usage:","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"`todo eat`","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"#### Expected outcome:","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"The task to be inputted is displayed on the screen together with the total number of tasks in the list.","lastModifiedDate":"2021-09-10"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"Noted. I\u0027ve added this task:","lastModifiedDate":"2021-09-10"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"  [T][ ] eat","lastModifiedDate":"2021-09-10"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-10"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":119,"author":{"gitId":"tzejit"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":120,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"### `event \u003cdescription\u003e /at \u003ctime: YYYY-MM-DDThh:mm\u003e` - Adds an event task","lastModifiedDate":"2021-09-10"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":123,"author":{"gitId":"tzejit"},"content":"Adds an event task to the task list.","lastModifiedDate":"2021-09-10"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"#### Example of usage:","lastModifiedDate":"2021-09-10"},{"lineNumber":126,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":127,"author":{"gitId":"tzejit"},"content":"`event lesson /at 2021-01-12T13:00`","lastModifiedDate":"2021-09-10"},{"lineNumber":128,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":129,"author":{"gitId":"tzejit"},"content":"#### Expected outcome:","lastModifiedDate":"2021-09-10"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":131,"author":{"gitId":"tzejit"},"content":"The task to be inputted is displayed on the screen together with the total number of tasks in the list.","lastModifiedDate":"2021-09-10"},{"lineNumber":132,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":133,"author":{"gitId":"tzejit"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"Noted. I\u0027ve added this task:","lastModifiedDate":"2021-09-10"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"  [E][ ] lesson (at: Jan 12 2021 01:00 PM)","lastModifiedDate":"2021-09-10"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2021-09-10"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"### `deadline \u003cdescription\u003e /by \u003ctime: YYYY-MM-DDThh:mm\u003e` - Adds a deadline task","lastModifiedDate":"2021-09-10"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":142,"author":{"gitId":"tzejit"},"content":"Adds a deadline task to the task list.","lastModifiedDate":"2021-09-10"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":144,"author":{"gitId":"tzejit"},"content":"#### Example of usage:","lastModifiedDate":"2021-09-10"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"`deadline submission /by 2021-02-11T11:00`","lastModifiedDate":"2021-09-10"},{"lineNumber":147,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":148,"author":{"gitId":"tzejit"},"content":"#### Expected outcome:","lastModifiedDate":"2021-09-10"},{"lineNumber":149,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":150,"author":{"gitId":"tzejit"},"content":"The task to be inputted is displayed on the screen together with the total number of tasks in the list.","lastModifiedDate":"2021-09-10"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":152,"author":{"gitId":"tzejit"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":153,"author":{"gitId":"tzejit"},"content":"Noted. I\u0027ve added this task:","lastModifiedDate":"2021-09-10"},{"lineNumber":154,"author":{"gitId":"tzejit"},"content":"  [D][ ] submission (by: Feb 11 2021 11:00 AM)","lastModifiedDate":"2021-09-10"},{"lineNumber":155,"author":{"gitId":"tzejit"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2021-09-10"},{"lineNumber":156,"author":{"gitId":"tzejit"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":157,"author":{"gitId":"tzejit"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":158,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":159,"author":{"gitId":"tzejit"},"content":"### `find \u003cdescription\u003e` - Finds tasks based on a keyword","lastModifiedDate":"2021-09-10"},{"lineNumber":160,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":161,"author":{"gitId":"tzejit"},"content":"Finds all tasks whose description contains the keyword.","lastModifiedDate":"2021-09-10"},{"lineNumber":162,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":163,"author":{"gitId":"tzejit"},"content":"#### Example of usage:","lastModifiedDate":"2021-09-10"},{"lineNumber":164,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":165,"author":{"gitId":"tzejit"},"content":"`find lesson`","lastModifiedDate":"2021-09-10"},{"lineNumber":166,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":167,"author":{"gitId":"tzejit"},"content":"#### Expected outcome:","lastModifiedDate":"2021-09-10"},{"lineNumber":168,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":169,"author":{"gitId":"tzejit"},"content":"Tasks that match the keyword are displayed on the screen.","lastModifiedDate":"2021-09-10"},{"lineNumber":170,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":171,"author":{"gitId":"tzejit"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":172,"author":{"gitId":"tzejit"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-10"},{"lineNumber":173,"author":{"gitId":"tzejit"},"content":"1.[E][ ] lesson (at: Jan 12 2021 01:00 PM)","lastModifiedDate":"2021-09-10"},{"lineNumber":174,"author":{"gitId":"tzejit"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":175,"author":{"gitId":"tzejit"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":176,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":177,"author":{"gitId":"tzejit"},"content":"### `done \u003cindex\u003e` - Marks a task as done","lastModifiedDate":"2021-09-10"},{"lineNumber":178,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":179,"author":{"gitId":"tzejit"},"content":"Marks a task at a given index as done.","lastModifiedDate":"2021-09-10"},{"lineNumber":180,"author":{"gitId":"tzejit"},"content":"    ","lastModifiedDate":"2021-09-10"},{"lineNumber":181,"author":{"gitId":"tzejit"},"content":"#### Example of usage:","lastModifiedDate":"2021-09-10"},{"lineNumber":182,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":183,"author":{"gitId":"tzejit"},"content":"`done 1`","lastModifiedDate":"2021-09-10"},{"lineNumber":184,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":185,"author":{"gitId":"tzejit"},"content":"#### Expected outcome:","lastModifiedDate":"2021-09-10"},{"lineNumber":186,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":187,"author":{"gitId":"tzejit"},"content":"The task that is marked as done is displayed on the screen with its status updated.","lastModifiedDate":"2021-09-10"},{"lineNumber":188,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":189,"author":{"gitId":"tzejit"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":190,"author":{"gitId":"tzejit"},"content":"Noted. I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-10"},{"lineNumber":191,"author":{"gitId":"tzejit"},"content":"[T][X] eat","lastModifiedDate":"2021-09-10"},{"lineNumber":192,"author":{"gitId":"tzejit"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":193,"author":{"gitId":"tzejit"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":194,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":195,"author":{"gitId":"tzejit"},"content":"### `delete \u003cindex\u003e` - Deletes a task","lastModifiedDate":"2021-09-11"},{"lineNumber":196,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":197,"author":{"gitId":"tzejit"},"content":"Deletes a task at a given index.","lastModifiedDate":"2021-09-10"},{"lineNumber":198,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":199,"author":{"gitId":"tzejit"},"content":"#### Example of usage:","lastModifiedDate":"2021-09-10"},{"lineNumber":200,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":201,"author":{"gitId":"tzejit"},"content":"`delete 1`","lastModifiedDate":"2021-09-10"},{"lineNumber":202,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":203,"author":{"gitId":"tzejit"},"content":"#### Expected outcome:","lastModifiedDate":"2021-09-10"},{"lineNumber":204,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":205,"author":{"gitId":"tzejit"},"content":"The task that is deleted is displayed on the screen together with an updated count of the number of tasks left in the list.","lastModifiedDate":"2021-09-10"},{"lineNumber":206,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":207,"author":{"gitId":"tzejit"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":208,"author":{"gitId":"tzejit"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-10"},{"lineNumber":209,"author":{"gitId":"tzejit"},"content":"[T][X] eat","lastModifiedDate":"2021-09-10"},{"lineNumber":210,"author":{"gitId":"tzejit"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-10"},{"lineNumber":211,"author":{"gitId":"tzejit"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":212,"author":{"gitId":"tzejit"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":213,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":214,"author":{"gitId":"tzejit"},"content":"### `at \u003ctime: YYYY-MM-DDThh:mm\u003e` - Finds all event tasks by a certain date and time ","lastModifiedDate":"2021-09-10"},{"lineNumber":215,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":216,"author":{"gitId":"tzejit"},"content":"Finds all event tasks that occur at or before a specified date and time.","lastModifiedDate":"2021-09-10"},{"lineNumber":217,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":218,"author":{"gitId":"tzejit"},"content":"#### Example of usage:","lastModifiedDate":"2021-09-10"},{"lineNumber":219,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":220,"author":{"gitId":"tzejit"},"content":"`at 2022-01-01T00:00`","lastModifiedDate":"2021-09-10"},{"lineNumber":221,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":222,"author":{"gitId":"tzejit"},"content":"#### Expected outcome:","lastModifiedDate":"2021-09-10"},{"lineNumber":223,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":224,"author":{"gitId":"tzejit"},"content":"Events that occur at or before the given date and time are displayed on the screen.","lastModifiedDate":"2021-09-10"},{"lineNumber":225,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":226,"author":{"gitId":"tzejit"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":227,"author":{"gitId":"tzejit"},"content":"Here are the Events happening before Jan 1 2022 12:00 AM:","lastModifiedDate":"2021-09-10"},{"lineNumber":228,"author":{"gitId":"tzejit"},"content":"[E][ ] lesson (at: Jan 12 2021 01:00 PM) ","lastModifiedDate":"2021-09-10"},{"lineNumber":229,"author":{"gitId":"tzejit"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":230,"author":{"gitId":"tzejit"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":231,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":232,"author":{"gitId":"tzejit"},"content":"### `by \u003ctime: YYYY-MM-DDThh:mm\u003e` - Finds all deadline tasks by a certain date and time","lastModifiedDate":"2021-09-10"},{"lineNumber":233,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":234,"author":{"gitId":"tzejit"},"content":"Finds all deadline tasks that are due at or before a specified date and time.","lastModifiedDate":"2021-09-10"},{"lineNumber":235,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":236,"author":{"gitId":"tzejit"},"content":"#### Example of usage:","lastModifiedDate":"2021-09-10"},{"lineNumber":237,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":238,"author":{"gitId":"tzejit"},"content":"`by 2022-01-01T00:00`","lastModifiedDate":"2021-09-10"},{"lineNumber":239,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":240,"author":{"gitId":"tzejit"},"content":"#### Expected outcome:","lastModifiedDate":"2021-09-10"},{"lineNumber":241,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":242,"author":{"gitId":"tzejit"},"content":"Deadline tasks that are due at or before the given date and time are displayed on the screen.","lastModifiedDate":"2021-09-10"},{"lineNumber":243,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":244,"author":{"gitId":"tzejit"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":245,"author":{"gitId":"tzejit"},"content":"Here are the Deadlines to be completed by Jan 1 2022 12:00 AM:","lastModifiedDate":"2021-09-10"},{"lineNumber":246,"author":{"gitId":"tzejit"},"content":"[D][ ] submission (by: Feb 11 2021 11:00 AM)","lastModifiedDate":"2021-09-10"},{"lineNumber":247,"author":{"gitId":"tzejit"},"content":"```","lastModifiedDate":"2021-09-10"},{"lineNumber":248,"author":{"gitId":"tzejit"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":249,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":250,"author":{"gitId":"tzejit"},"content":"### `all \u003ctime: YYYY-MM-DDThh:mm\u003e` - Finds all tasks by a certain date and time","lastModifiedDate":"2021-09-10"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":252,"author":{"gitId":"tzejit"},"content":"Finds all tasks that have a time field at or before a specified date and time.","lastModifiedDate":"2021-09-10"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":254,"author":{"gitId":"tzejit"},"content":"#### Example of usage:","lastModifiedDate":"2021-09-10"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":256,"author":{"gitId":"tzejit"},"content":"`all 2022-01-01T00:00`","lastModifiedDate":"2021-09-10"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":258,"author":{"gitId":"tzejit"},"content":"#### Expected outcome:","lastModifiedDate":"2021-09-10"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":260,"author":{"gitId":"tzejit"},"content":"Tasks that have a time field at or before the given date and time are displayed on the screen.","lastModifiedDate":"2021-09-10"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":262,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":263,"author":{"gitId":"tzejit"},"content":"Here are the timed tasks occurring before Jan 1 2022 12:00 AM:","lastModifiedDate":"2021-09-10"},{"lineNumber":264,"author":{"gitId":"tzejit"},"content":"[E][ ] lesson (at: Jan 12 2021 01:00 PM)","lastModifiedDate":"2021-09-10"},{"lineNumber":265,"author":{"gitId":"tzejit"},"content":"[D][ ] submission (by: Feb 11 2021 11:00 AM)","lastModifiedDate":"2021-09-10"},{"lineNumber":266,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":18,"tzejit":248}},{"path":"src/main/java/chadbot/Chad.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package chadbot;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import chadbot.data.Storage;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import chadbot.data.TaskList;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import chadbot.io.Parser;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import chadbot.io.Ui;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"public class Chad {","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"     * Returns a new Chad object.","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"     * @param filePath Path to the file storing saved data and to save new data to.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    public Chad(String filePath) {","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        } catch (ChadException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"            ui.showChadException(e);","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"     * Returns a String that corresponds to a user input command.","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"     * @param input Path to the file storing saved data and to save new data to.","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"     * @return String to be used as Chad output that corresponds to a user input command.","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        } catch (ChadException chadException) {","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"            return ui.showChadException(chadException);","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"            return ui.showSavingError();","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"            return ui.showDateTimeException();","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"            return ui.showIntError();","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":1,"tzejit":58}},{"path":"src/main/java/chadbot/ChadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package chadbot;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"public class ChadException extends Exception {","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"    /** String with details on the exception */","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"    private String errorMessage;","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"    /** Types of exceptions */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"    public enum Type {","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"        DESCRIPTION, INDEX, COMMAND, DEADLINE, EVENT, EXECUTE","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"     * Returns a new ChadException object.","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"     * @param s Type of exception it is initialized to.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    public ChadException(Type s) {","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"        switch (s) {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"        case DESCRIPTION:","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"            this.errorMessage \u003d \"The description of a task cannot be empty.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"        case INDEX:","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"            this.errorMessage \u003d \"The index of the task is out of range.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"        case COMMAND:","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"            this.errorMessage \u003d \"I don\u0027t know what that means.\\n\"","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"                    + \"Type help to get a list of available commands.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"            this.errorMessage \u003d \"Usage of deadline does not match \u0027description\u0027 /by \u0027deadline\u0027\";","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        case EVENT:","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"            this.errorMessage \u003d \"Usage of event does not match \u0027description\u0027 /at \u0027timeframe\u0027\";","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        case EXECUTE:","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"            this.errorMessage \u003d \"There is a problem executing this command.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"            break;","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        default:","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"     * Returns a the error message.","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"     * @return Error message in the exception.","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        return errorMessage;","lastModifiedDate":"2021-08-13"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"tzejit":52}},{"path":"src/main/java/chadbot/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package chadbot;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import chadbot.data.Storage;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import chadbot.data.TaskList;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import chadbot.io.Ui;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import chadbot.task.Deadline;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import chadbot.task.Event;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import chadbot.task.Task;","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import chadbot.task.Todo;","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"public class Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    /** Enumeration of valid commands */","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    public enum Commands {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"        BYE, LIST, DONE, DELETE, TODO, DEADLINE, EVENT, BY, AT, ALL, HELP, FIND","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    /** Types of commands */","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    public enum Types {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"        SINGLE_INPUT, INT_INPUT, STR_INPUT, STR_ARR_INPUT, DATETIME_INPUT","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    private Commands command;","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    private Types type;","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    private int index;","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    private String[] subInputs;","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    private String description;","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"     * Returns a new Command.","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"     * Used to initializing SINGLE_INPUT commands","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"     * @param command Command type to be instantiated.","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    public Command(Commands command) {","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        this.type \u003d Types.SINGLE_INPUT;","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"     * Returns a new Command.","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"     * Used to initializing INT_INPUT commands","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"     * @param command Command type to be instantiated.","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"     * @param index Index to be used in the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    public Command(Commands command, int index) {","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        this.type \u003d Types.INT_INPUT;","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"     * Returns a new Command.","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"     * Used to initializing STR_INPUT commands","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"     * @param command Command type to be instantiated.","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"     * @param description description to be used in the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"    public Command(Commands command, String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"        this.type \u003d Types.STR_INPUT;","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"     * Returns a new Command.","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"     * Used to initializing STR_ARR_INPUT commands","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"     * @param command Command type to be instantiated.","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"     * @param subitems Array of strings to be used in the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"    public Command(Commands command, String[] subitems) {","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"        this.type \u003d Types.STR_ARR_INPUT;","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        this.subInputs \u003d subitems;","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"     * Returns a new Command.","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"     * Used to initializing DATETIME_INPUT commands","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"     * @param command Command type to be instantiated.","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"     * @param dateTime Date and time to be used in the commnad.","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"    public Command(Commands command, LocalDateTime dateTime) {","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"        this.type \u003d Types.DATETIME_INPUT;","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"     * Executes a command and returns a String that signifies proper execution.","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"     * @param tasks Lists of tasks to be executed on.","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"     * @param ui Ui object used to print to screen.","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"     * @param storage Storage object used to save any modifications","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"     * @return String that shows the command has been executed.","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"     * @throws ChadException If there is missing information or the declaration of the task is of the wrong format.","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"     * @throws IOException  If data file cannot be saved to.","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws ChadException, IOException,","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"            DateTimeParseException, NumberFormatException {","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"        assert this.command !\u003d null : \"Command should not be null\";","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"        assert this.type !\u003d null : \"Type should not be null\";","lastModifiedDate":"2021-09-03"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"        switch (this.type) {","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"        case SINGLE_INPUT:","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"            return executeSingleInputCommand(tasks, ui);","lastModifiedDate":"2021-09-03"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"        case INT_INPUT:","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"            return executeIntInputCommand(tasks, ui, storage);","lastModifiedDate":"2021-09-03"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"        case STR_INPUT:","lastModifiedDate":"2021-09-03"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"            return executeStrInputCommand(tasks, ui, storage);","lastModifiedDate":"2021-09-03"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"        case STR_ARR_INPUT:","lastModifiedDate":"2021-09-03"},{"lineNumber":119,"author":{"gitId":"tzejit"},"content":"            return executeStrArrInputCommand(tasks, ui, storage);","lastModifiedDate":"2021-09-03"},{"lineNumber":120,"author":{"gitId":"tzejit"},"content":"        case DATETIME_INPUT:","lastModifiedDate":"2021-09-03"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"            return executeDateTimeInputCommand(tasks, ui);","lastModifiedDate":"2021-09-03"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"        default:","lastModifiedDate":"2021-09-03"},{"lineNumber":123,"author":{"gitId":"tzejit"},"content":"            throw new ChadException(ChadException.Type.EXECUTE);","lastModifiedDate":"2021-09-10"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":126,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":127,"author":{"gitId":"tzejit"},"content":"    private String executeDateTimeInputCommand(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-09-03"},{"lineNumber":128,"author":{"gitId":"tzejit"},"content":"        assert this.dateTime !\u003d null : \"dateTime should not be null\";","lastModifiedDate":"2021-09-03"},{"lineNumber":129,"author":{"gitId":"tzejit"},"content":"        return ui.displayDateTimeFilteredCommand(this.command, tasks, this.dateTime);","lastModifiedDate":"2021-09-03"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":131,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":132,"author":{"gitId":"tzejit"},"content":"    private String executeStrArrInputCommand(TaskList tasks, Ui ui, Storage storage) throws ChadException, IOException {","lastModifiedDate":"2021-09-10"},{"lineNumber":133,"author":{"gitId":"tzejit"},"content":"        assert this.subInputs !\u003d null : \"subInputs should not be null\";","lastModifiedDate":"2021-09-03"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"        Task task;","lastModifiedDate":"2021-09-03"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"        if (this.command.equals(Commands.DEADLINE)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"            task \u003d new Deadline(subInputs);","lastModifiedDate":"2021-09-03"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"        } else if (this.command.equals(Commands.EVENT)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"            task \u003d new Event(subInputs);","lastModifiedDate":"2021-09-03"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"            throw new ChadException(ChadException.Type.EXECUTE);","lastModifiedDate":"2021-09-10"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":142,"author":{"gitId":"tzejit"},"content":"        tasks.addItem(task, storage);","lastModifiedDate":"2021-09-03"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"        storage.save();","lastModifiedDate":"2021-08-21"},{"lineNumber":144,"author":{"gitId":"tzejit"},"content":"        return ui.displayAddOrSingleInputCommand(this.command, tasks);","lastModifiedDate":"2021-09-03"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":147,"author":{"gitId":"tzejit"},"content":"    private String executeStrInputCommand(TaskList tasks, Ui ui, Storage storage) throws ChadException, IOException {","lastModifiedDate":"2021-09-10"},{"lineNumber":148,"author":{"gitId":"tzejit"},"content":"        assert this.description !\u003d null : \"Description should not be null\";","lastModifiedDate":"2021-09-03"},{"lineNumber":149,"author":{"gitId":"tzejit"},"content":"        if (this.command.equals(Commands.TODO)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":150,"author":{"gitId":"tzejit"},"content":"            tasks.addItem(new Todo(this.description), storage);","lastModifiedDate":"2021-08-21"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"            storage.save();","lastModifiedDate":"2021-08-21"},{"lineNumber":152,"author":{"gitId":"tzejit"},"content":"            return ui.displayAddOrSingleInputCommand(this.command, tasks);","lastModifiedDate":"2021-09-03"},{"lineNumber":153,"author":{"gitId":"tzejit"},"content":"        } else if (this.command.equals(Commands.FIND)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":154,"author":{"gitId":"tzejit"},"content":"            return ui.displayFindTaskCommand(this.command, this.description, tasks);","lastModifiedDate":"2021-09-03"},{"lineNumber":155,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":156,"author":{"gitId":"tzejit"},"content":"        throw new ChadException(ChadException.Type.EXECUTE);","lastModifiedDate":"2021-09-10"},{"lineNumber":157,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":158,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":159,"author":{"gitId":"tzejit"},"content":"    private String executeIntInputCommand(TaskList tasks, Ui ui, Storage storage) throws ChadException, IOException {","lastModifiedDate":"2021-09-10"},{"lineNumber":160,"author":{"gitId":"tzejit"},"content":"        Task t;","lastModifiedDate":"2021-09-03"},{"lineNumber":161,"author":{"gitId":"tzejit"},"content":"        if (this.command.equals(Commands.DONE)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":162,"author":{"gitId":"tzejit"},"content":"            t \u003d tasks.markDone(this.index, storage);","lastModifiedDate":"2021-09-03"},{"lineNumber":163,"author":{"gitId":"tzejit"},"content":"        } else if (this.command.equals(Commands.DELETE)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":164,"author":{"gitId":"tzejit"},"content":"            t \u003d tasks.removeTask(this.index, storage);","lastModifiedDate":"2021-09-03"},{"lineNumber":165,"author":{"gitId":"tzejit"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":166,"author":{"gitId":"tzejit"},"content":"            throw new ChadException(ChadException.Type.EXECUTE);","lastModifiedDate":"2021-09-10"},{"lineNumber":167,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":168,"author":{"gitId":"tzejit"},"content":"        storage.save();","lastModifiedDate":"2021-08-21"},{"lineNumber":169,"author":{"gitId":"tzejit"},"content":"        return ui.displayTaskModificationCommand(this.command, t, tasks);","lastModifiedDate":"2021-09-03"},{"lineNumber":170,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":171,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":172,"author":{"gitId":"tzejit"},"content":"    private String executeSingleInputCommand(TaskList tasks, Ui ui) throws ChadException {","lastModifiedDate":"2021-09-10"},{"lineNumber":173,"author":{"gitId":"tzejit"},"content":"        if (this.command.equals(Commands.BYE)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":174,"author":{"gitId":"tzejit"},"content":"            Main.exit();","lastModifiedDate":"2021-09-03"},{"lineNumber":175,"author":{"gitId":"tzejit"},"content":"        } else if (this.command.equals(Commands.LIST) || this.command.equals(Commands.HELP)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":176,"author":{"gitId":"tzejit"},"content":"            return ui.displayAddOrSingleInputCommand(this.command, tasks);","lastModifiedDate":"2021-09-03"},{"lineNumber":177,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":178,"author":{"gitId":"tzejit"},"content":"        throw new ChadException(ChadException.Type.EXECUTE);","lastModifiedDate":"2021-09-10"},{"lineNumber":179,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":180,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"tzejit":180}},{"path":"src/main/java/chadbot/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package chadbot;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        displayPicture.setClip(new Circle(25, 25, 25));","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"        this.setBackground(new Background(new BackgroundFill(Color.web(\"a2d2ff\"), CornerRadii.EMPTY , Insets.EMPTY)));","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"    private void flip() {","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        this.setBackground(new Background(new BackgroundFill(Color.web(\"bde0fe\"), CornerRadii.EMPTY , Insets.EMPTY)));","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    public static DialogBox getChadDialog(String text, Image img) {","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        db.flip();","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        return db;","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"tzejit":64}},{"path":"src/main/java/chadbot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package chadbot;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"public class Launcher {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"     * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"tzejit":12}},{"path":"src/main/java/chadbot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package chadbot;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":" * A GUI for Chad using FXML.","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    private static Stage stage;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    private Chad chad \u003d new Chad(\"chadbot.txt\");","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    private Image chadImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/chad.png\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"            this.stage \u003d stage;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setChad(chad);","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"            stage.setTitle(\"Chadbot\");","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"            stage.getIcons().add(chadImage);","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"            stage.show();","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    public static void exit() {","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        stage.close();","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"tzejit":41}},{"path":"src/main/java/chadbot/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package chadbot;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import chadbot.io.Ui;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    private Chad chad;","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    private boolean isExit;","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpeg\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    private Image chadImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/chad.png\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"     * Initializes the scroll pane and adds a welcome message to the dialog container","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        dialogContainer.getChildren().add(DialogBox.getChadDialog(Ui.showWelcome(), chadImage));","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"    public void setChad(Chad d) {","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        chad \u003d d;","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Chad\u0027s reply and then appends them to","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    @FXML","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        String response \u003d chad.getResponse(input);","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        setChadOutput(input, response);","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"    private void setChadOutput(String input, String response) {","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"                DialogBox.getChadDialog(response, chadImage)","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        );","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"tzejit":61}},{"path":"src/main/java/chadbot/data/Calendar.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package chadbot.data;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import chadbot.task.DateTimeTask;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import chadbot.task.Deadline;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import chadbot.task.Event;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"class Calendar {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"    /** Tree of all timed tasks */","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"    private TreeMap\u003cLocalDateTime, ArrayList\u003cDateTimeTask\u003e\u003e calendar;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"    /** Tree of all Events */","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    private TreeMap\u003cLocalDateTime, ArrayList\u003cDateTimeTask\u003e\u003e calendarEvents;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    /** Tree of all Deadlines */","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    private TreeMap\u003cLocalDateTime, ArrayList\u003cDateTimeTask\u003e\u003e calendarDeadlines;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"     * Returns a new Calendar object with its different trees initialized.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    public Calendar() {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"        calendar \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"        calendarEvents \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"        calendarDeadlines \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"     * Adds a timed task to the main tree and its respective tree.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"     * If task is an Event, add it to the Event tree.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"     * If task is a Deadline, add it to the Deadline tree.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"     * @param dtTask Timed task to be added to Calendar.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    public void add(DateTimeTask dtTask) {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        if (dtTask instanceof Event) {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"            addEntry(dtTask, calendarEvents);","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        } else if (dtTask instanceof Deadline) {","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"            addEntry(dtTask, calendarDeadlines);","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        addEntry(dtTask, calendar);","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    private void addEntry(DateTimeTask dtTask, TreeMap\u003cLocalDateTime, ArrayList\u003cDateTimeTask\u003e\u003e map) {","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        LocalDateTime dateTime \u003d dtTask.getDateTime();","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"        if (!map.containsKey(dateTime)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"            map.put(dateTime, new ArrayList\u003c\u003e());","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        map.get(dateTime).add(dtTask);","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"     * Returns an ArrayList of all Events occurring before or at the given date and time.","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"     * @param dt Maximum date and time of Events.","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"     * @return ArrayList of Events.","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"    public ArrayList\u003cDateTimeTask\u003e getEventsAt(LocalDateTime dt) {","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"        ArrayList\u003cDateTimeTask\u003e arrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        calendarEvents.headMap(dt, true).values().forEach(arrayList::addAll);","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"        return arrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"     * Returns an ArrayList of all Deadlines due before or at the given date and time.","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"     * @param dt Maximum date and time of Deadlines.","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"     * @return ArrayList of Deadlines.","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"    public ArrayList\u003cDateTimeTask\u003e getDeadlinesBy(LocalDateTime dt) {","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"        ArrayList\u003cDateTimeTask\u003e arrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"        calendarDeadlines.headMap(dt, true).values().forEach(arrayList::addAll);","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"        return arrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"     * Returns an ArrayList of all Events and Deadlines occurring before or at the given date and time.","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"     * @param dt Maximum date and time of Events and Deadlines.","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"     * @return ArrayList of Events and Deadlines.","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"    public ArrayList\u003cDateTimeTask\u003e getAllBy(LocalDateTime dt) {","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"        ArrayList\u003cDateTimeTask\u003e arrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"        calendar.headMap(dt, true).values().forEach(arrayList::addAll);","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"        return arrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"tzejit":88}},{"path":"src/main/java/chadbot/data/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package chadbot.data;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"public class Storage {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"    /** File to read and write saved data */","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"    private File file;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    /** Scanner to read saved data from file */","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    /** Intermediate data structure to modify saved data */","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    private ArrayList\u003cString\u003e taskListString;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"     * Returns a new Storage object initialized with data from the file in filePath.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"     * @param filePath Path to the file containing storage data.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public Storage (String filePath) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"        this.taskListString \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"     * Returns an ArrayList of String arrays, where each array specifies a single stored Task.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"     * @return ArrayList of String arrays representing Tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"     * @throws FileNotFoundException  If file specified in filePath does not exists.","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    public ArrayList\u003cString[]\u003e load() throws FileNotFoundException {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        ArrayList\u003cString[]\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        scanner \u003d new Scanner(file);","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"            taskListString.add(line);","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"            String[] parsedSavedEntry \u003d line.split(\"[|]\");","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"            taskList.add(parsedSavedEntry);","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        return taskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"     * Saves current tasks from the intermediate data structure to file specified in filePath.","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"     * @throws IOException  If file specified in filePath cannot be written to.","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"    public void save() throws IOException {","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"        FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        int lastIndex \u003d this.taskListString.size() - 1;","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        boolean hasMoreThanOneEntry \u003d lastIndex \u003e\u003d 0;","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        if (hasMoreThanOneEntry) {","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"            for (int i \u003d 0; i \u003c lastIndex; i++) {","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"                String saveFileEntry \u003d this.taskListString.get(i);","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"                fileWriter.write(saveFileEntry + \"\\n\");","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"            String finalSaveEntry \u003d this.taskListString.get(lastIndex);","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"            fileWriter.write(finalSaveEntry);","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"        fileWriter.close();","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"     * Saves non-timed task to the intermediate data structure.","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"     * @param type Type of task to be saved.","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"     * @param status Status of task to be saved.","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"     * @param description Description of task to be saved.","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"    public void saveUntimedTask(String type, String status, String description) {","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        taskListString.add(type + \"|\" + status + \"|\" + description);","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"     * Saves timed task to the intermediate data structure.","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"     * @param type Type of task to be saved.","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"     * @param status Status of task to be saved.","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"     * @param description Description of task to be saved.","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"     * @param timeframe Time limit of task to be saved","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"    public void saveTimedTask(String type, String status, String description, LocalDateTime timeframe) {","lastModifiedDate":"2021-09-03"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"        String dateTime \u003d timeframe.format(DateTimeFormatter.ISO_DATE_TIME);","lastModifiedDate":"2021-09-03"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"        taskListString.add(type + \"|\" + status + \"|\" + description + \"|\" + dateTime);","lastModifiedDate":"2021-09-03"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"     * Modifies the status of task in intermediate data structure to done.","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"     * @param index Index of task to be modified.","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"    public void saveTaskDone(int index) {","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"        assert taskListString.size() \u003e\u003d index : \"Index should be in range\";","lastModifiedDate":"2021-09-03"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"        int storedIndex \u003d index - 1;","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"        String oldData \u003d taskListString.get(storedIndex);","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"        String newData \u003d oldData.substring(0, 2) + \u0027X\u0027 + oldData.substring(3);","lastModifiedDate":"2021-09-03"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"        taskListString.set(storedIndex, newData);","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"     * Removes task from intermediate data structure.","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"     * @param index Index of task to be removed.","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"        assert taskListString.size() \u003e\u003d index : \"Index should be in range\";","lastModifiedDate":"2021-09-03"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"        taskListString.remove(index);","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"tzejit":115}},{"path":"src/main/java/chadbot/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package chadbot.data;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"import chadbot.ChadException;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import chadbot.task.DateTimeTask;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import chadbot.task.Deadline;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"import chadbot.task.Event;","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"import chadbot.task.Task;","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"import chadbot.task.Todo;","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"public class TaskList {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    /** ArrayList to store all tasks */","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    private ArrayList\u003cTask\u003e items;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    /** Calendar object to store dates and times of timed tasks */","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    private Calendar calendar;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    private enum TaskType {","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"        T, E, D","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"     * Returns a new TaskList object when there is no previously saved data.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"     * Item list and calendar initialized to be empty.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        this.items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        this.calendar \u003d new Calendar();","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"     * Returns a new TaskList object when there is previously saved data.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"     * Converts saved data to Task objects and initializes item list and calendar with saved data.","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"     * @param taskArrayList ArrayList of String arrays, each representing a task.","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"     * @throws ChadException If data is corrupt or missing information.","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"     * @throws FileNotFoundException If data file cannot be found.","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    public TaskList(ArrayList\u003cString[]\u003e taskArrayList) throws ChadException, FileNotFoundException {","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        this.items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"        this.calendar \u003d new Calendar();","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        for (String[] taskElements : taskArrayList) {","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"            Task task \u003d convertSavedDataToTask(taskElements);","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"                items.add(task);","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"    private Task convertSavedDataToTask(String[] taskElements) throws ChadException {","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        TaskType taskType \u003d TaskType.valueOf(taskElements[0]);","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"        Task task;","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        case T:","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"            String description \u003d taskElements[2];","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"        case E:","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"            String[] eventParameters \u003d Arrays.copyOfRange(taskElements, 2, taskElements.length);","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"            task \u003d new Event(eventParameters);","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"            calendar.add((DateTimeTask) task);","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"        case D:","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"            String[] deadlineParameters \u003d Arrays.copyOfRange(taskElements, 2, taskElements.length);","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"            task \u003d new Deadline(deadlineParameters);","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"            calendar.add((DateTimeTask) task);","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"        default:","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"            task \u003d null;","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"        boolean isTaskDone \u003d taskElements[1].equals(\"X\");","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"        if (task !\u003d null \u0026\u0026 isTaskDone) {","lastModifiedDate":"2021-09-03"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"            task.markDone();","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"        return task;","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"     * Adds a task to item list and storage.","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"     * If the task is a timed task, adds it to calendar as well.","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"     * @param storage Storage object to store task data.","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"    public void addItem(Task task, Storage storage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"        this.items.add(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"        if (task instanceof DateTimeTask) {","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"            DateTimeTask dt \u003d (DateTimeTask) task;","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"            calendar.add(dt);","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"            storage.saveTimedTask(task.getCode(), task.getStatus(), task.getDescription(), dt.getDateTime());","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"            storage.saveUntimedTask(task.getCode(), task.getStatus(), task.getDescription());","lastModifiedDate":"2021-09-03"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"     * Returns the String representation of all tasks in an array.","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"     * @return String array containing a header as the first element and enumerated tasks for subsequent elements.","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"    public String[] returnItems() {","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"        int returnArraySize \u003d this.items.size() + 1;","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"        String[] itemList \u003d new String[returnArraySize];","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"        itemList[0] \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"        for (int i \u003d 0; i \u003c returnArraySize - 1; i++) {","lastModifiedDate":"2021-09-03"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"            int indexNum \u003d i + 1;","lastModifiedDate":"2021-09-03"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"            Task currentTask \u003d this.items.get(i);","lastModifiedDate":"2021-09-03"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"            itemList[indexNum] \u003d indexNum + \".\" + currentTask;","lastModifiedDate":"2021-09-03"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"        return itemList;","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"tzejit"},"content":"     * Returns a formatted String representation of the number of tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"     * @param offset Number to decrement current number of tasks by.","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"tzejit"},"content":"     * @return String array containing a header as the first element and enumerated tasks for subsequent elements.","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"    public String returnItemCount(int offset) {","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"tzejit"},"content":"        int numberOfItems \u003d this.items.size() - offset;","lastModifiedDate":"2021-09-03"},{"lineNumber":127,"author":{"gitId":"tzejit"},"content":"        return \"Now you have \" + numberOfItems + \" tasks in the list.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":128,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"tzejit"},"content":"     * Changes the status of a task to done.","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"tzejit"},"content":"     * @param index Index of task to be modified.","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"     * @param storage Storage object to save modification of task status.","lastModifiedDate":"2021-08-21"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"     * @return Task that was modified.","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"     * @throws ChadException If index is invalid.","lastModifiedDate":"2021-09-10"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"    public Task markDone(int index, Storage storage) throws ChadException {","lastModifiedDate":"2021-09-10"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"        if (!isValidIndex(index)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"            throw new ChadException(ChadException.Type.INDEX);","lastModifiedDate":"2021-09-10"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":142,"author":{"gitId":"tzejit"},"content":"        int storedIndex \u003d index - 1;","lastModifiedDate":"2021-09-03"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"        Task task \u003d this.items.get(storedIndex);","lastModifiedDate":"2021-09-03"},{"lineNumber":144,"author":{"gitId":"tzejit"},"content":"        task.markDone();","lastModifiedDate":"2021-09-03"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"        storage.saveTaskDone(index);","lastModifiedDate":"2021-08-21"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"        return task;","lastModifiedDate":"2021-09-03"},{"lineNumber":147,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":148,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":149,"author":{"gitId":"tzejit"},"content":"    private boolean isValidIndex(int index) {","lastModifiedDate":"2021-09-03"},{"lineNumber":150,"author":{"gitId":"tzejit"},"content":"        boolean isWithinSize \u003d index \u003c\u003d this.items.size();","lastModifiedDate":"2021-09-03"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"        boolean isValidIndex \u003d index \u003e\u003d 1;","lastModifiedDate":"2021-09-03"},{"lineNumber":152,"author":{"gitId":"tzejit"},"content":"        if (isValidIndex \u0026\u0026 isWithinSize) {","lastModifiedDate":"2021-09-03"},{"lineNumber":153,"author":{"gitId":"tzejit"},"content":"            return true;","lastModifiedDate":"2021-09-03"},{"lineNumber":154,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":155,"author":{"gitId":"tzejit"},"content":"        return false;","lastModifiedDate":"2021-09-03"},{"lineNumber":156,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":157,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":158,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":159,"author":{"gitId":"tzejit"},"content":"     * Returns String representation of a task.","lastModifiedDate":"2021-08-21"},{"lineNumber":160,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":161,"author":{"gitId":"tzejit"},"content":"     * @param index Index of task to be returned.","lastModifiedDate":"2021-08-21"},{"lineNumber":162,"author":{"gitId":"tzejit"},"content":"     * @return String representation of a task at index.","lastModifiedDate":"2021-08-21"},{"lineNumber":163,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":164,"author":{"gitId":"tzejit"},"content":"    public String returnTask(int index) {","lastModifiedDate":"2021-08-21"},{"lineNumber":165,"author":{"gitId":"tzejit"},"content":"        assert items.size() \u003e\u003d index : \"Index should be in range\";","lastModifiedDate":"2021-09-03"},{"lineNumber":166,"author":{"gitId":"tzejit"},"content":"        int storedIndex \u003d index - 1;","lastModifiedDate":"2021-09-03"},{"lineNumber":167,"author":{"gitId":"tzejit"},"content":"        return this.items.get(storedIndex).toString();","lastModifiedDate":"2021-09-03"},{"lineNumber":168,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":169,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":170,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":171,"author":{"gitId":"tzejit"},"content":"     * Returns String representation of the last task added.","lastModifiedDate":"2021-08-21"},{"lineNumber":172,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":173,"author":{"gitId":"tzejit"},"content":"     * @return String representation of the last task added.","lastModifiedDate":"2021-08-21"},{"lineNumber":174,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":175,"author":{"gitId":"tzejit"},"content":"    public String returnLastTask() {","lastModifiedDate":"2021-08-21"},{"lineNumber":176,"author":{"gitId":"tzejit"},"content":"        int lastTaskIndex \u003d items.size();","lastModifiedDate":"2021-09-03"},{"lineNumber":177,"author":{"gitId":"tzejit"},"content":"        return this.returnTask(lastTaskIndex);","lastModifiedDate":"2021-09-03"},{"lineNumber":178,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":179,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":180,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":181,"author":{"gitId":"tzejit"},"content":"     * Removes a task completely.","lastModifiedDate":"2021-08-21"},{"lineNumber":182,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":183,"author":{"gitId":"tzejit"},"content":"     * @param index Index of task to be removed.","lastModifiedDate":"2021-08-21"},{"lineNumber":184,"author":{"gitId":"tzejit"},"content":"     * @param storage Storage object to save removal of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":185,"author":{"gitId":"tzejit"},"content":"     * @return Task that was removed.","lastModifiedDate":"2021-08-21"},{"lineNumber":186,"author":{"gitId":"tzejit"},"content":"     * @throws ChadException If index is invalid.","lastModifiedDate":"2021-09-10"},{"lineNumber":187,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":188,"author":{"gitId":"tzejit"},"content":"    public Task removeTask(int index, Storage storage) throws ChadException {","lastModifiedDate":"2021-09-10"},{"lineNumber":189,"author":{"gitId":"tzejit"},"content":"        if (!isValidIndex(index)) {","lastModifiedDate":"2021-09-03"},{"lineNumber":190,"author":{"gitId":"tzejit"},"content":"            throw new ChadException(ChadException.Type.INDEX);","lastModifiedDate":"2021-09-10"},{"lineNumber":191,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":192,"author":{"gitId":"tzejit"},"content":"        int storedIndex \u003d index - 1;","lastModifiedDate":"2021-09-03"},{"lineNumber":193,"author":{"gitId":"tzejit"},"content":"        storage.removeTask(storedIndex);","lastModifiedDate":"2021-09-03"},{"lineNumber":194,"author":{"gitId":"tzejit"},"content":"        return items.remove(storedIndex);","lastModifiedDate":"2021-09-03"},{"lineNumber":195,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":196,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":197,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":198,"author":{"gitId":"tzejit"},"content":"     * Returns String array of formatted String representations of all events occurring before a given date and time.","lastModifiedDate":"2021-08-21"},{"lineNumber":199,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":200,"author":{"gitId":"tzejit"},"content":"     * @param dt Date and time limit of events returned.","lastModifiedDate":"2021-08-21"},{"lineNumber":201,"author":{"gitId":"tzejit"},"content":"     * @return String array with each String representing an event.","lastModifiedDate":"2021-08-27"},{"lineNumber":202,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":203,"author":{"gitId":"tzejit"},"content":"    public String[] getEventsAt(LocalDateTime dt) {","lastModifiedDate":"2021-08-21"},{"lineNumber":204,"author":{"gitId":"tzejit"},"content":"        ArrayList\u003cDateTimeTask\u003e tasks \u003d calendar.getEventsAt(dt);","lastModifiedDate":"2021-08-21"},{"lineNumber":205,"author":{"gitId":"tzejit"},"content":"        String[] strArr \u003d new String[tasks.size() + 1];","lastModifiedDate":"2021-08-21"},{"lineNumber":206,"author":{"gitId":"tzejit"},"content":"        strArr[0] \u003d \"Here are the Events happening before \"","lastModifiedDate":"2021-08-21"},{"lineNumber":207,"author":{"gitId":"tzejit"},"content":"                + dt.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\")) + \":\";","lastModifiedDate":"2021-08-21"},{"lineNumber":208,"author":{"gitId":"tzejit"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":209,"author":{"gitId":"tzejit"},"content":"        for (DateTimeTask dtTask : tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":210,"author":{"gitId":"tzejit"},"content":"            strArr[count++] \u003d dtTask.toString();","lastModifiedDate":"2021-08-21"},{"lineNumber":211,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":212,"author":{"gitId":"tzejit"},"content":"        return strArr;","lastModifiedDate":"2021-08-21"},{"lineNumber":213,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":214,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":215,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":216,"author":{"gitId":"tzejit"},"content":"     * Returns String array of formatted String representations of all deadlines due by given date and time.","lastModifiedDate":"2021-08-21"},{"lineNumber":217,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":218,"author":{"gitId":"tzejit"},"content":"     * @param dt Date and time limit of deadlines returned.","lastModifiedDate":"2021-08-21"},{"lineNumber":219,"author":{"gitId":"tzejit"},"content":"     * @return String array with each String representing deadline.","lastModifiedDate":"2021-08-27"},{"lineNumber":220,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":221,"author":{"gitId":"tzejit"},"content":"    public String[] getDeadlinesBy(LocalDateTime dt) {","lastModifiedDate":"2021-08-21"},{"lineNumber":222,"author":{"gitId":"tzejit"},"content":"        ArrayList\u003cDateTimeTask\u003e tasks \u003d calendar.getDeadlinesBy(dt);","lastModifiedDate":"2021-08-21"},{"lineNumber":223,"author":{"gitId":"tzejit"},"content":"        String[] strArr \u003d new String[tasks.size() + 1];","lastModifiedDate":"2021-08-21"},{"lineNumber":224,"author":{"gitId":"tzejit"},"content":"        strArr[0] \u003d \"Here are the Deadlines to be completed by \"","lastModifiedDate":"2021-08-21"},{"lineNumber":225,"author":{"gitId":"tzejit"},"content":"                + dt.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\")) + \":\";","lastModifiedDate":"2021-08-21"},{"lineNumber":226,"author":{"gitId":"tzejit"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":227,"author":{"gitId":"tzejit"},"content":"        for (DateTimeTask dtTask : tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":228,"author":{"gitId":"tzejit"},"content":"            strArr[count++] \u003d dtTask.toString();","lastModifiedDate":"2021-08-21"},{"lineNumber":229,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":230,"author":{"gitId":"tzejit"},"content":"        return strArr;","lastModifiedDate":"2021-08-21"},{"lineNumber":231,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":232,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":233,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":234,"author":{"gitId":"tzejit"},"content":"     * Returns String array of all events and deadlines formatted as Strings occurring before a given date and time.","lastModifiedDate":"2021-08-21"},{"lineNumber":235,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":236,"author":{"gitId":"tzejit"},"content":"     * @param dt Date and time limit of events and deadlines returned.","lastModifiedDate":"2021-08-21"},{"lineNumber":237,"author":{"gitId":"tzejit"},"content":"     * @return String array with each String representing an event or deadline.","lastModifiedDate":"2021-08-27"},{"lineNumber":238,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":239,"author":{"gitId":"tzejit"},"content":"    public String[] getAllBy(LocalDateTime dt) {","lastModifiedDate":"2021-08-21"},{"lineNumber":240,"author":{"gitId":"tzejit"},"content":"        ArrayList\u003cDateTimeTask\u003e tasks \u003d calendar.getAllBy(dt);","lastModifiedDate":"2021-08-21"},{"lineNumber":241,"author":{"gitId":"tzejit"},"content":"        String[] strArr \u003d new String[tasks.size() + 1];","lastModifiedDate":"2021-08-21"},{"lineNumber":242,"author":{"gitId":"tzejit"},"content":"        strArr[0] \u003d \"Here are the timed tasks occurring before \"","lastModifiedDate":"2021-08-21"},{"lineNumber":243,"author":{"gitId":"tzejit"},"content":"                + dt.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\")) + \":\";","lastModifiedDate":"2021-08-21"},{"lineNumber":244,"author":{"gitId":"tzejit"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":245,"author":{"gitId":"tzejit"},"content":"        for (DateTimeTask dtTask : tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":246,"author":{"gitId":"tzejit"},"content":"            strArr[count++] \u003d dtTask.toString();","lastModifiedDate":"2021-08-21"},{"lineNumber":247,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":248,"author":{"gitId":"tzejit"},"content":"        return strArr;","lastModifiedDate":"2021-08-21"},{"lineNumber":249,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":250,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":251,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":252,"author":{"gitId":"tzejit"},"content":"     * Returns String array of all tasks formatted as Strings that completely or partially match the toFind argument.","lastModifiedDate":"2021-08-27"},{"lineNumber":253,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":254,"author":{"gitId":"tzejit"},"content":"     * @param toFind Substring to be found in tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":255,"author":{"gitId":"tzejit"},"content":"     * @return String array with each String representing a task that matches toFind.","lastModifiedDate":"2021-08-27"},{"lineNumber":256,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":257,"author":{"gitId":"tzejit"},"content":"    public String[] returnFoundItem(String toFind) {","lastModifiedDate":"2021-08-21"},{"lineNumber":258,"author":{"gitId":"tzejit"},"content":"        ArrayList\u003cString \u003e strArr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":259,"author":{"gitId":"tzejit"},"content":"        strArr.add(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-21"},{"lineNumber":260,"author":{"gitId":"tzejit"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":261,"author":{"gitId":"tzejit"},"content":"        for (Task t : items) {","lastModifiedDate":"2021-08-21"},{"lineNumber":262,"author":{"gitId":"tzejit"},"content":"            if (t.getDescription().contains(toFind)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":263,"author":{"gitId":"tzejit"},"content":"                strArr.add(count++ + \".\" + t);","lastModifiedDate":"2021-08-21"},{"lineNumber":264,"author":{"gitId":"tzejit"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":265,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":266,"author":{"gitId":"tzejit"},"content":"        return strArr.toArray(new String[strArr.size()]);","lastModifiedDate":"2021-08-21"},{"lineNumber":267,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":268,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"tzejit":268}},{"path":"src/main/java/chadbot/io/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package chadbot.io;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import chadbot.ChadException;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import chadbot.Command;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"public class Parser {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"     * Returns a Command object based on user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"     * @param userRawInput String inputted by the user.","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"     * @return Command object.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"     * @throws NumberFormatException If an int is expected to be inputted but the user fails to do so.","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"     * @throws DateTimeParseException If the user enters the date and time in a wrong format.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"     * @throws ChadException If the user enters the command in a wrong format.","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    public static Command parse(String userRawInput) throws NumberFormatException, DateTimeParseException,","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"            ChadException {","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"        String userCommandInput \u003d \"\";","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"        String auxiliaryInputs \u003d \"\";","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"        int indexOfWhitespace \u003d userRawInput.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"        if (indexOfWhitespace \u003e 0) {","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"            userCommandInput \u003d userRawInput.substring(0, indexOfWhitespace);","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"            auxiliaryInputs \u003d userRawInput.substring(indexOfWhitespace + 1);","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"        } else if (indexOfWhitespace \u003d\u003d -1) {","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"            userCommandInput \u003d userRawInput;","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        switch (userCommandInput) {","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"            return new Command(Command.Commands.BYE);","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"        case \"find\":","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"            return new Command(Command.Commands.FIND, auxiliaryInputs);","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"        case \"list\":","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"            return new Command(Command.Commands.LIST);","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        case \"help\":","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"            return new Command(Command.Commands.HELP);","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        case \"done\":","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"            return new Command(Command.Commands.DONE, Integer.parseInt(auxiliaryInputs));","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"            return new Command(Command.Commands.DELETE, Integer.parseInt(auxiliaryInputs));","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"            return new Command(Command.Commands.TODO, auxiliaryInputs);","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"            return new Command(Command.Commands.DEADLINE, auxiliaryInputs.split(\" /by \"));","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"        case \"event\":","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"            return new Command(Command.Commands.EVENT, auxiliaryInputs.split(\" /at \"));","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        case \"by\":","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"            return new Command(Command.Commands.BY, LocalDateTime.parse(auxiliaryInputs));","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"        case \"at\":","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"            return new Command(Command.Commands.AT, LocalDateTime.parse(auxiliaryInputs));","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"        case \"all\":","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"            return new Command(Command.Commands.ALL, LocalDateTime.parse(auxiliaryInputs));","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"        default:","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"            throw new ChadException(ChadException.Type.COMMAND);","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"tzejit":60}},{"path":"src/main/java/chadbot/io/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package chadbot.io;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import chadbot.ChadException;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import chadbot.Command;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import chadbot.data.TaskList;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import chadbot.task.Task;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"public class Ui {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"     * Returns a new Ui object.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"    public Ui() {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    private static String format(String... inputs) {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"        for (String s : inputs) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"            str.append(s).append(\"\\n\");","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"        return str.toString();","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"     * Returns a formatted String that signifies Chad is launched.","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"     * @return String that shows a welcome message.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    public static String showWelcome() {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        return format(\"I am Chad.\", \"What can I do for you?\");","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"     * Returns a formatted String that signifies that a user fails to input an int when required.","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"     * @return String that shows a integer error.","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    public String showIntError() {","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"        return format(\"The index of a task must be specified.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"     * Returns a formatted String that signifies that the saved file cannot be loaded.","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"     * @return String that shows a loading error.","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    public String showLoadingError() {","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"        return format(\"Task description cannot be found in database.\", \"A new file will be created.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"     * Returns a formatted String that signifies that the data file cannot be saved.","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"     * @return String that shows saving error.","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"    public String showSavingError() {","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"        return format(\"File cannot be saved.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"     * Returns a formatted String containing the ChadException error message.","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"     * @param e ChadException to whose error message will be returned.","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"     * @return String that shows the ChadExeception error message.","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"tzejit"},"content":"    public String showChadException(ChadException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"tzejit"},"content":"        return format(e.toString());","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"tzejit"},"content":"     * Returns a formatted String that signifies that the user inputs the date and time in a wrong format.","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"tzejit"},"content":"     * @return String that shows a date time format error.","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"tzejit"},"content":"    public String showDateTimeException() {","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"tzejit"},"content":"        return format(\"Date\u0027T\u0027time inputted is not of valid format: YYYY-MM-DDThh:mm\");","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"tzejit"},"content":"     * Returns a formatted String that shows the outcome of a the command the user inputted.","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"tzejit"},"content":"     * Used for commands involving a single word or for addition of tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"tzejit"},"content":"     * @param c Type of command the user has inputted.","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"tzejit"},"content":"     * @param list Current TaskList used.","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"tzejit"},"content":"     * @return String that shows the outcome of a the command the user inputted.","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"tzejit"},"content":"    public String displayAddOrSingleInputCommand(Command.Commands c, TaskList list) {","lastModifiedDate":"2021-09-03"},{"lineNumber":90,"author":{"gitId":"tzejit"},"content":"        switch (c) {","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"tzejit"},"content":"        case HELP:","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"tzejit"},"content":"            return format(\"bye : Closes the programme\\n\",","lastModifiedDate":"2021-09-03"},{"lineNumber":93,"author":{"gitId":"tzejit"},"content":"                    \"list : Returns all tasks added\\n\",","lastModifiedDate":"2021-09-03"},{"lineNumber":94,"author":{"gitId":"tzejit"},"content":"                    \"todo \u003cdescription\u003e : Adds a todo task\\n\",","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"tzejit"},"content":"                    \"find \u003cdescription\u003e : Returns all tasks with \u003cdescription\u003e in their description\\n\",","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"tzejit"},"content":"                    \"event \u003cdescription\u003e /at \u003ctime: YYYY-MM-DDThh:mm\u003e : Adds an event at time \u003ctime\u003e\\n\",","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"tzejit"},"content":"                    \"deadline \u003cdescription\u003e /by \u003ctime: YYYY-MM-DDThh:mm\u003e : Adds a task with deadline at time \u003ctime\u003e\\n\",","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"tzejit"},"content":"                    \"done \u003cindex\u003e : Marks the task at \u003cindex\u003e as done\\n\",","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"tzejit"},"content":"                    \"delete \u003cindex\u003e : deletes the task at \u003cindex\u003e\\n\",","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"tzejit"},"content":"                    \"at \u003ctime: YYYY-MM-DDThh:mm\u003e : Returns all events up till \u003ctime\u003e\\n\",","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"tzejit"},"content":"                    \"by \u003ctime: YYYY-MM-DDThh:mm\u003e : Returns all tasks with deadline due before or at \u003ctime\u003e\\n\",","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"tzejit"},"content":"                    \"all \u003ctime: YYYY-MM-DDThh:mm\u003e : Returns all timed tasks with times up till \u003ctime\u003e\");","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"tzejit"},"content":"        case LIST:","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"tzejit"},"content":"            return format(list.returnItems());","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"tzejit"},"content":"        case TODO:","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"tzejit"},"content":"            //Fallthrough","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"tzejit"},"content":"        case EVENT:","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"tzejit"},"content":"            //Fallthrough","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"tzejit"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"tzejit"},"content":"            return format(\"Noted. I\u0027ve added this task:\",","lastModifiedDate":"2021-09-10"},{"lineNumber":111,"author":{"gitId":"tzejit"},"content":"                    \"  \" + list.returnLastTask(), list.returnItemCount(0));","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"tzejit"},"content":"        default:","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"tzejit"},"content":"            return \"Oops an error has occurred\";","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"tzejit"},"content":"     * Returns a formatted String that that shows the outcome of a the command the user inputted.","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"tzejit"},"content":"     * Used for commands involving involving retrieval of tasks based on date and time.","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"tzejit"},"content":"     * @param c Type of command the user has inputted.","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"tzejit"},"content":"     * @param list Current TaskList used.","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"tzejit"},"content":"     * @param dt Date and Time used by the command.","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"tzejit"},"content":"     * @return String that shows the outcome of a the command the user inputted.","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"tzejit"},"content":"    public String displayDateTimeFilteredCommand(Command.Commands c, TaskList list, LocalDateTime dt) {","lastModifiedDate":"2021-09-03"},{"lineNumber":127,"author":{"gitId":"tzejit"},"content":"        switch (c) {","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"tzejit"},"content":"        case AT:","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"tzejit"},"content":"            return format(list.getEventsAt(dt));","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"tzejit"},"content":"        case BY:","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"tzejit"},"content":"            return format(list.getDeadlinesBy(dt));","lastModifiedDate":"2021-08-28"},{"lineNumber":132,"author":{"gitId":"tzejit"},"content":"        case ALL:","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"tzejit"},"content":"            return format(list.getAllBy(dt));","lastModifiedDate":"2021-08-28"},{"lineNumber":134,"author":{"gitId":"tzejit"},"content":"        default:","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"tzejit"},"content":"            return \"Oops an error has occurred.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":136,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":137,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":138,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":139,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":140,"author":{"gitId":"tzejit"},"content":"     * Returns a formatted String that shows the outcome of a the command the user inputted.","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"tzejit"},"content":"     * Used for commands involving modification of tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":142,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":143,"author":{"gitId":"tzejit"},"content":"     * @param c Type of command the user has inputted.","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"tzejit"},"content":"     * @param t Task modified by the command.","lastModifiedDate":"2021-08-21"},{"lineNumber":145,"author":{"gitId":"tzejit"},"content":"     * @param list Current TaskList used.","lastModifiedDate":"2021-08-21"},{"lineNumber":146,"author":{"gitId":"tzejit"},"content":"     * @return String that shows the outcome of a the command the user inputted.","lastModifiedDate":"2021-08-28"},{"lineNumber":147,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":148,"author":{"gitId":"tzejit"},"content":"    public String displayTaskModificationCommand(Command.Commands c, Task t, TaskList list) {","lastModifiedDate":"2021-09-03"},{"lineNumber":149,"author":{"gitId":"tzejit"},"content":"        switch (c) {","lastModifiedDate":"2021-08-21"},{"lineNumber":150,"author":{"gitId":"tzejit"},"content":"        case DONE:","lastModifiedDate":"2021-08-21"},{"lineNumber":151,"author":{"gitId":"tzejit"},"content":"            return format(\"Noted. I\u0027ve marked this task as done:\", t.toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":152,"author":{"gitId":"tzejit"},"content":"        case DELETE:","lastModifiedDate":"2021-08-21"},{"lineNumber":153,"author":{"gitId":"tzejit"},"content":"            return format(\"Noted. I\u0027ve removed this task:\", t.toString(), list.returnItemCount(0));","lastModifiedDate":"2021-08-28"},{"lineNumber":154,"author":{"gitId":"tzejit"},"content":"        default:","lastModifiedDate":"2021-08-27"},{"lineNumber":155,"author":{"gitId":"tzejit"},"content":"            return \"Oops an error has occurred.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":156,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":157,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":158,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":159,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":160,"author":{"gitId":"tzejit"},"content":"     * Returns a formatted String that shows the outcome of a the command the user inputted.","lastModifiedDate":"2021-08-28"},{"lineNumber":161,"author":{"gitId":"tzejit"},"content":"     * Used for commands involving searching of tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":163,"author":{"gitId":"tzejit"},"content":"     * @param c Type of command the user has inputted.","lastModifiedDate":"2021-08-28"},{"lineNumber":164,"author":{"gitId":"tzejit"},"content":"     * @param toFind The String to search for among the tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":165,"author":{"gitId":"tzejit"},"content":"     * @param list Current TaskList used.","lastModifiedDate":"2021-08-28"},{"lineNumber":166,"author":{"gitId":"tzejit"},"content":"     * @return String that shows the outcome of a the command the user inputted.","lastModifiedDate":"2021-08-28"},{"lineNumber":167,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":168,"author":{"gitId":"tzejit"},"content":"    public String displayFindTaskCommand(Command.Commands c, String toFind, TaskList list) {","lastModifiedDate":"2021-09-03"},{"lineNumber":169,"author":{"gitId":"tzejit"},"content":"        return format(list.returnFoundItem(toFind));","lastModifiedDate":"2021-08-28"},{"lineNumber":170,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":171,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"tzejit":171}},{"path":"src/main/java/chadbot/task/DateTimeTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package chadbot.task;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import chadbot.ChadException;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"public abstract class DateTimeTask extends Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"     * Constructor for a timed task","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"     * @param description Description of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"     * @throws ChadException If description of task is empty.","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"    public DateTimeTask(String description) throws ChadException {","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"        super(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"     * Returns the date and time of a timed task.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"     * @return Date and time of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    public abstract LocalDateTime getDateTime();","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"tzejit":25}},{"path":"src/main/java/chadbot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package chadbot.task;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import chadbot.ChadException;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"public class Deadline extends DateTimeTask {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    /** Code representing a deadline task */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"    public final String code \u003d \"D\";","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"    /** Date and time of the deadline */","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"     * Returns a new deadline task.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"     * @param input String array containing the description and date and time information of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"     * @throws ChadException If there is missing information or the declaration of the task is of the wrong format.","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"     * @throws DateTimeParseException If the date and time are entered with the wrong format.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    public Deadline(String[] input) throws ChadException, DateTimeParseException {","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"        super(input[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"        if (input.length !\u003d 2) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"            throw new ChadException(ChadException.Type.DEADLINE);","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"        this.by \u003d LocalDateTime.parse(input[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"     * Returns a formatted String representation of the deadline.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"     * @return String representation of the deadline.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        assert this.by !\u003d null : \"Deadline should not be null\";","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        String dateTime \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        return \"[\" + code + \"]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"                + dateTime + \")\";","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"     * Returns the date and time of the deadline.","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"     * @return Date and time of the deadline.","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-08-20"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        return this.by;","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"     * Returns the code of the deadline task.","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"     * @return The code representing a deadline.","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"    public String getCode() {","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        return this.code;","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"tzejit":63}},{"path":"src/main/java/chadbot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package chadbot.task;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import chadbot.ChadException;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"public class Event extends DateTimeTask {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    /** Code representing a event */","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"    public final String code \u003d \"E\";","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"    /** Date and time of the event */","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"    private final LocalDateTime at;","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"     * Returns a new event.","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"     * @param input String array containing the description and date and time information of the event.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"     * @throws ChadException If there is missing information or the declaration of the task is of the wrong format.","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"     * @throws DateTimeParseException If the date and time are entered with the wrong format.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    public Event(String[] input) throws ChadException, DateTimeParseException {","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"        super(input[0]);","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"        if (input.length !\u003d 2) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"            throw new ChadException(ChadException.Type.EVENT);","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"        this.at \u003d LocalDateTime.parse(input[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"     * Returns a formatted String representation of the event.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"     * @return String representation of the event.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"        assert this.at !\u003d null : \"Event time should not be null\";","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"        String dateTime \u003d at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"        return \"[\" + code + \"]\" + super.toString() + \" (at: \" + dateTime + \")\";","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"     * Returns the date and time of the event.","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"     * @return Date and time of the event.","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-08-20"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"        return this.at;","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"     * Returns the code of the event.","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"     * @return The code representing a event.","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"    public String getCode() {","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"        return this.code;","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"tzejit":63}},{"path":"src/main/java/chadbot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package chadbot.task;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import chadbot.ChadException;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"    /** Description of the task */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"    private final String description;","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"    /** Status of the task */","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"     * Returns a new task.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"     * @throws ChadException If there is missing information or the declaration of the task is of the wrong format.","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    public Task(String description) throws ChadException {","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"            throw new ChadException(ChadException.Type.DESCRIPTION);","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"     * Returns the status of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"     * @return \"X\" if the task is done, \" \" otherwise.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-13"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"     * Returns a formatted String representation of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":41,"author":{"gitId":"tzejit"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":42,"author":{"gitId":"tzejit"},"content":"        return \"[\" + this.getStatus() + \"] \" + this.description;","lastModifiedDate":"2021-08-13"},{"lineNumber":43,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":44,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":45,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"tzejit"},"content":"     * Marks a task a completed.","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"tzejit"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-13"},{"lineNumber":49,"author":{"gitId":"tzejit"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-13"},{"lineNumber":50,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":51,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"tzejit"},"content":"     * Returns the description of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"tzejit"},"content":"     * @return Description of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"tzejit"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"tzejit"},"content":"        return this.description;","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"tzejit"},"content":"     * Returns the code of the task.","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"tzejit"},"content":"     * @return The code representing a specified type of task.","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"tzejit"},"content":"    public abstract String getCode();","lastModifiedDate":"2021-08-20"},{"lineNumber":67,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"tzejit":67}},{"path":"src/main/java/chadbot/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package chadbot.task;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import chadbot.ChadException;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"    /** Code representing a todo task */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"    public final String code \u003d \"T\";","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"     * Returns a new todo task.","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"     * @throws ChadException If there is missing information or the declaration of the task is of the wrong format.","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    public Todo(String description) throws ChadException {","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"        super(description);","lastModifiedDate":"2021-08-13"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"     * Returns a formatted String representation of the todo task.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"     * @return String representation of the todo task.","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"        return \"[\" + code + \"]\" + super.toString();","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"     * Returns the code of the todo task.","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"     *","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"     * @return The code representing a todo task.","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"tzejit"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"tzejit"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"tzejit"},"content":"    public String getCode() {","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"tzejit"},"content":"        return this.code;","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":39,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"tzejit":39}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-padding: 15,5,5,15;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-padding: 5,5,5,5;\" text\u003d\"Label\" textFill\u003d\"#746f6f\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"            \u003cFont name\u003d\"MS Reference Sans Serif\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"tzejit":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"\u003c?import chadbot.DialogBox?\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #FAEFD7;\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"chadbot.MainWindow\"\u003e","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Type \u0026quot;help\u0026quot; for help\" style\u003d\"-fx-background-color: transparent;\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"            \u003cFont name\u003d\"MS Reference Sans Serif\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #F9D8CE#F9D8CE; -fx-border-style: none; -fx-border-width: 0;\" text\u003d\"Send\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"            \u003cFont name\u003d\"MS Reference Sans Serif\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #FAEFD7;\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"Infinity\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"tzejit":27}},{"path":"src/test/java/chadbot/data/CalendarTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package chadbot.data;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import chadbot.ChadException;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import chadbot.task.Event;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"import java.time.Month;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"public class CalendarTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"    class EventStub extends Event {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"        public EventStub() throws ChadException {","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"            super(new String[]{\"test\", \"2015-02-20T06:30\"});","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"    public void getEventsAt_getEvents_eventCorrectlyRetrieved() {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"            LocalDateTime t \u003d LocalDateTime.of(2015, Month.FEBRUARY, 20, 06, 30);","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"            Calendar c \u003d new Calendar();","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"            c.add(new EventStub());","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"            assertEquals(t, c.getEventsAt(t).get(0).getDateTime());","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"tzejit"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"tzejit":33}},{"path":"src/test/java/chadbot/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package chadbot.task;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import chadbot.ChadException;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"public class EventTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    public void Event_missingDateTime_chadExceptionThrown(){","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"            assertEquals(0, new Event(new String[]{\"test\"}));","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"        } catch (ChadException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"            assertEquals(\"Usage of event does not match \u0027description\u0027 /at \u0027timeframe\u0027\", e.toString());","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"tzejit":19}},{"path":"src/test/java/chadbot/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"package chadbot.task;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"import chadbot.ChadException;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"    public void Todo_emptyDescription_chadExceptionThrown(){","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"tzejit"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"tzejit"},"content":"            assertEquals(0, new Todo(\"\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"tzejit"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"tzejit"},"content":"        } catch (ChadException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"tzejit"},"content":"            assertEquals(\"The description of a task cannot be empty.\", e.toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"tzejit"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"tzejit"},"content":"    public void toString_properDescription_correctStringFormat(){","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"tzejit"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"tzejit"},"content":"            assertEquals(\"[T][ ] eat\", (new Todo(\"eat\").toString()));","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"tzejit"},"content":"        } catch (ChadException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"tzejit"},"content":"            fail();","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"tzejit"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"tzejit"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"tzejit"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"tzejit"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"tzejit":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tzejit"},"content":"todo borrow book","lastModifiedDate":"2021-08-13"},{"lineNumber":2,"author":{"gitId":"tzejit"},"content":"deadline return book /by 2021-05-12T19:22","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"tzejit"},"content":"event project meeting /at 2001-12-01T03:41","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"tzejit"},"content":"event party /at 2009-03-13T00:11","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"tzejit"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"tzejit"},"content":"done 2","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"tzejit"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"by 2021-05-12T19:22","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"tzejit"},"content":"all 2011-05-12T19:22","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"tzejit"},"content":"at 2008-03-13T00:11","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"bye","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"tzejit":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"tzejit"},"content":"if exist Duke.txt del Duke.txt","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"tzejit"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\data\\*.java ..\\src\\main\\java\\duke\\io\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"tzejit"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"tzejit":3}}]
