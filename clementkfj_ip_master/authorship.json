[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"# Duke Chatbot","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"Welcome to Duke! An intelligent chatbot that helps you plan your tasks at hand! The following are **features** that have been completed","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"- [X] Add Todo task ","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"- [X] Add upcoming Event ","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"- [X] Add upcoming deadline ","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"- [X] List tasks at hand ","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"- [X] Mark tasks as completed ","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"- [X] Delete tasks from list ","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"- [X] Search for tasks using keywords ","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"- [X] Call for help to see what commands are available ","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"## Requirements to open Duke","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"Prerequisites: [JDK 11](https://www.oracle.com/sg/java/technologies/javase/jdk11-archive-downloads.html) to open Duke.","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"## Locate and install","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"You can find the latest version of the Duke chatbot [here](https://github.com/clementkfj/ip/releases/tag/A-Release).","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"## Run the program","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"- After downloading, you should see `duke.jar` in your `Downloads` directory. ","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"- You can double click it to run the program.","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"- You can also start `terminal` and go to the directory with `duke.jar`, type `java -jar duke.jar` to run the program.","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"## User guide","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"For a more detailed user guide, click [here](https://github.com/clementkfj/ip/blob/master/docs/README.md) for more information on how Duke Chatbot works!","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"clementkfj":30}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"clementkfj"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"clementkfj"},"content":"repositories {","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"clementkfj"},"content":"    mavenCentral()","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"clementkfj"},"content":"dependencies {","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"clementkfj"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"clementkfj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"clementkfj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"clementkfj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"clementkfj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"clementkfj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"clementkfj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"clementkfj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"clementkfj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"clementkfj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"clementkfj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"clementkfj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"clementkfj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"clementkfj":25,"-":46}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"Welcome to Duke Vision! ","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"This README will teach you how to navigate and use the chatbot effectively.","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"The following is a list of features currently in use for Duke:","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"- [x] Add Todos","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"- [x] Add Events","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"- [x] Add Deadlines","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"- [x] Mark tasks as done","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"- [x] Check list of tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"- [x] Search for tasks containing keywords","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"- [x] Delete tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"### Adding your tasks to Duke","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"Add a task of a certain type(Deadline, Event or Todo) to your list of tasks to complete.","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"You can check your outstanding list of tasks as well.","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"### Manage task list","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"You can mark tasks as done once you have completed it, delete tasks from the list, or search","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"for keywords and Duke will highlight to you tasks that match the keywords you searched for!","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"### `todo` - Add a Todo to your task list","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"Generic usage: ","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"`todo {task description}` or `t {task description}`","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"Example of usage: ","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"`todo mop the floor`","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"Expected outcome:","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"clementkfj"},"content":"Adds a todo with description mop the floor to the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"clementkfj"},"content":"Expected output:","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"clementkfj"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"clementkfj"},"content":"Understood! The following task has been added:","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"clementkfj"},"content":" [T][ ] mop the floor","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"clementkfj"},"content":"You have 8 tasks in your current list","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"clementkfj"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"clementkfj"},"content":"### `event` - Add an Event to your task list. Events require a date and time when the event begins.","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"clementkfj"},"content":"Generic usage: ","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"clementkfj"},"content":"`event {event description} /on DD/MM/YYYY HH:mm` or `e {event description} /on DD/MM/YYYY HH:mm`","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"clementkfj"},"content":"Example of usage: ","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"clementkfj"},"content":"`event mahjong night /on 20/09/2021 15:00`","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"clementkfj"},"content":"Expected outcome:","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"clementkfj"},"content":"Adds an event to task list containing date time of the event and the description of the event.","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"clementkfj"},"content":"Expected output:","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"clementkfj"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"clementkfj"},"content":"Understood! The following task has been added:","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"clementkfj"},"content":" [E][ ] mahjong night (on: Sep 20, 2021 15:00) ","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"clementkfj"},"content":"You have 9 tasks in your current list","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"clementkfj"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"clementkfj"},"content":"### `deadline` - Add a Deadline to your task list. Deadlines require a date and time when the deadline is due.","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"clementkfj"},"content":"Generic usage: ","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"clementkfj"},"content":"`deadline {task description} /by DD/MM/YYYY HH:mm` or `d {task description} /by DD/MM/YYYY HH:mm`","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"clementkfj"},"content":"`deadline iP submission /by 17/09/2021 23:59`","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"clementkfj"},"content":"Adds a deadline to task list containing date time of the deadline and the description of the deadline.","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":87,"author":{"gitId":"clementkfj"},"content":"Expected output:","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"clementkfj"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"clementkfj"},"content":"Understood! The following task has been added:","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"clementkfj"},"content":" [D][ ] iP submission (by: Sep 17, 2021 23:59) ","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"clementkfj"},"content":"You have 10 tasks in your current list","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":94,"author":{"gitId":"clementkfj"},"content":"### `list` - Displays a list of all tasks you have put added in the past that have not been deleted.","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"clementkfj"},"content":"Generic usage: ","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"clementkfj"},"content":"`list` or `l`","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"clementkfj"},"content":"Example of usage: ","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"clementkfj"},"content":"`list`","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"clementkfj"},"content":"Expected outcome:","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"clementkfj"},"content":"Summons a list of items that have been added to your list, including those that you added the previous time","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"clementkfj"},"content":"Duke was opened.","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"clementkfj"},"content":"Expected output:","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"clementkfj"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"clementkfj"},"content":"You have 3 tasks in your current list.","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"clementkfj"},"content":"1: [T][ ] Run program","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"clementkfj"},"content":"2: [D][X] look at program (by: 16 Sep, 2021 18:00)","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"clementkfj"},"content":"3: [E][ ] Attend conference (on 20 Sep, 2021 20:00)","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"clementkfj"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"clementkfj"},"content":"### `delete` - Deletes the task specified from the task list. Task number refers to the number on the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"clementkfj"},"content":"Generic usage: ","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"clementkfj"},"content":"`delete {task number}` or `del {task number}`","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"clementkfj"},"content":"Example of usage: ","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"clementkfj"},"content":"`delete 2`","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"clementkfj"},"content":"Expected outcome:","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"clementkfj"},"content":"Deletes the second task on the list. If following the tasks on the list in the `list` command example, deletes","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"clementkfj"},"content":"look at program.","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"clementkfj"},"content":"Expected output:","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":136,"author":{"gitId":"clementkfj"},"content":"Note: I\u0027ve removed the following task from your list: ","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"clementkfj"},"content":"[D][X] look at program (by: Sep 16, 2021 18:00)","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"clementkfj"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"clementkfj"},"content":"### `done` - Marks a task as completed. Taask number refers to the number on the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"clementkfj"},"content":"Generic usage: ","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"clementkfj"},"content":"`done {task number}` *Note that done does not have a short form command because it is already quite short*","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":146,"author":{"gitId":"clementkfj"},"content":"Example of usage: ","lastModifiedDate":"2021-09-17"},{"lineNumber":147,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":148,"author":{"gitId":"clementkfj"},"content":"`done 1`","lastModifiedDate":"2021-09-17"},{"lineNumber":149,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"clementkfj"},"content":"Expected outcome:","lastModifiedDate":"2021-09-17"},{"lineNumber":151,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"clementkfj"},"content":"Marks the 1st task as completed. Following the list that was given in the `list` example, marks Run program as done, ","lastModifiedDate":"2021-09-17"},{"lineNumber":153,"author":{"gitId":"clementkfj"},"content":"which is denoted by an X in the second box.","lastModifiedDate":"2021-09-17"},{"lineNumber":154,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":155,"author":{"gitId":"clementkfj"},"content":"Expected output:","lastModifiedDate":"2021-09-17"},{"lineNumber":156,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"clementkfj"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":158,"author":{"gitId":"clementkfj"},"content":"Great job! I\u0027ve marked the following as done:","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"clementkfj"},"content":"[T][X] Run program","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"clementkfj"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":161,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":162,"author":{"gitId":"clementkfj"},"content":"### `help` - Displays a list of commands and their functions so that users can better understand what Duke does.","lastModifiedDate":"2021-09-17"},{"lineNumber":163,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":164,"author":{"gitId":"clementkfj"},"content":"Generic usage: ","lastModifiedDate":"2021-09-17"},{"lineNumber":165,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":166,"author":{"gitId":"clementkfj"},"content":"`help` or `h`","lastModifiedDate":"2021-09-17"},{"lineNumber":167,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":168,"author":{"gitId":"clementkfj"},"content":"Example of usage: ","lastModifiedDate":"2021-09-17"},{"lineNumber":169,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":170,"author":{"gitId":"clementkfj"},"content":"`help`","lastModifiedDate":"2021-09-17"},{"lineNumber":171,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":172,"author":{"gitId":"clementkfj"},"content":"Expected outcome:","lastModifiedDate":"2021-09-17"},{"lineNumber":173,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":174,"author":{"gitId":"clementkfj"},"content":"Shows a list of helpful commands and their uses so users can understand more about the commands Duke have.","lastModifiedDate":"2021-09-17"},{"lineNumber":175,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":176,"author":{"gitId":"clementkfj"},"content":"Expected output:","lastModifiedDate":"2021-09-17"},{"lineNumber":177,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":178,"author":{"gitId":"clementkfj"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":179,"author":{"gitId":"clementkfj"},"content":"The following commands are compatible with our task-planning chatbot!","lastModifiedDate":"2021-09-17"},{"lineNumber":180,"author":{"gitId":"clementkfj"},"content":"list(or l for short):","lastModifiedDate":"2021-09-17"},{"lineNumber":181,"author":{"gitId":"clementkfj"},"content":"provides a list of items in your task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":182,"author":{"gitId":"clementkfj"},"content":"done {number}:","lastModifiedDate":"2021-09-17"},{"lineNumber":183,"author":{"gitId":"clementkfj"},"content":"ticks the task with that number as done!","lastModifiedDate":"2021-09-17"},{"lineNumber":184,"author":{"gitId":"clementkfj"},"content":"delete(or del for short) {number}:","lastModifiedDate":"2021-09-17"},{"lineNumber":185,"author":{"gitId":"clementkfj"},"content":"deletes the task with that number off the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":186,"author":{"gitId":"clementkfj"},"content":"bye:","lastModifiedDate":"2021-09-17"},{"lineNumber":187,"author":{"gitId":"clementkfj"},"content":"ends the program.","lastModifiedDate":"2021-09-17"},{"lineNumber":188,"author":{"gitId":"clementkfj"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":189,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":190,"author":{"gitId":"clementkfj"},"content":"### `find` - Creates a list of tasks that contain the words that you queried into the program.","lastModifiedDate":"2021-09-17"},{"lineNumber":191,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":192,"author":{"gitId":"clementkfj"},"content":"Generic usage: ","lastModifiedDate":"2021-09-17"},{"lineNumber":193,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":194,"author":{"gitId":"clementkfj"},"content":"`find {keywords}` or `f {keywords}`","lastModifiedDate":"2021-09-17"},{"lineNumber":195,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":196,"author":{"gitId":"clementkfj"},"content":"Example of usage: ","lastModifiedDate":"2021-09-17"},{"lineNumber":197,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":198,"author":{"gitId":"clementkfj"},"content":"`find Run`","lastModifiedDate":"2021-09-17"},{"lineNumber":199,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":200,"author":{"gitId":"clementkfj"},"content":"Expected outcome:","lastModifiedDate":"2021-09-17"},{"lineNumber":201,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":202,"author":{"gitId":"clementkfj"},"content":"Creates a list of tasks that contain the keyword Run.","lastModifiedDate":"2021-09-17"},{"lineNumber":203,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":204,"author":{"gitId":"clementkfj"},"content":"Expected output:","lastModifiedDate":"2021-09-17"},{"lineNumber":205,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":206,"author":{"gitId":"clementkfj"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":207,"author":{"gitId":"clementkfj"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-17"},{"lineNumber":208,"author":{"gitId":"clementkfj"},"content":"[T][X] Run program","lastModifiedDate":"2021-09-17"},{"lineNumber":209,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":210,"author":{"gitId":"clementkfj"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":211,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":212,"author":{"gitId":"clementkfj"},"content":"### `bye` - Bids farewell to the program. ","lastModifiedDate":"2021-09-17"},{"lineNumber":213,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":214,"author":{"gitId":"clementkfj"},"content":"Generic usage: ","lastModifiedDate":"2021-09-17"},{"lineNumber":215,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":216,"author":{"gitId":"clementkfj"},"content":"`bye`","lastModifiedDate":"2021-09-17"},{"lineNumber":217,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":218,"author":{"gitId":"clementkfj"},"content":"Expected outcome:","lastModifiedDate":"2021-09-17"},{"lineNumber":219,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":220,"author":{"gitId":"clementkfj"},"content":"Duke sadly says goodbye to you too.","lastModifiedDate":"2021-09-17"},{"lineNumber":221,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":222,"author":{"gitId":"clementkfj"},"content":"Expected output:","lastModifiedDate":"2021-09-17"},{"lineNumber":223,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":224,"author":{"gitId":"clementkfj"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":225,"author":{"gitId":"clementkfj"},"content":"Bye! Please visit me again!","lastModifiedDate":"2021-09-17"},{"lineNumber":226,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":227,"author":{"gitId":"clementkfj"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":228,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"clementkfj":208,"-":20}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.layout.Border;","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.layout.BorderStroke;","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.layout.BorderStrokeStyle;","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.layout.BorderWidths;","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"clementkfj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"clementkfj"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"clementkfj"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"clementkfj"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"clementkfj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"clementkfj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"clementkfj"},"content":"        setTextProperties();","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"clementkfj"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"clementkfj"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"clementkfj"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"clementkfj"},"content":"     * Creates a new dialog box using the string of text and image given.","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"clementkfj"},"content":"     * @param text The string to be displayed.","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"clementkfj"},"content":"     * @param img The image to be shown.","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"clementkfj"},"content":"     * @return A dialog box containing both items.","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"clementkfj"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"clementkfj"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"clementkfj"},"content":"     * Creates a new dialog box for the program instead of the user.","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"clementkfj"},"content":"     * @param text The string to be displayed.","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"clementkfj"},"content":"     * @param img The image of duke.Duke.","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"clementkfj"},"content":"     * @return A dialog box containing both items.","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"clementkfj"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"clementkfj"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"clementkfj"},"content":"        db.flip();","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"clementkfj"},"content":"        return db;","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"clementkfj"},"content":"     * Sets the text properties suc as paddings, text alignments, border and background.","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"clementkfj"},"content":"    private void setTextProperties() {","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"clementkfj"},"content":"        dialog.setPadding(new Insets(5, 20, 5, 20));","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"clementkfj"},"content":"        dialog.setAlignment(Pos.CENTER);","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"clementkfj"},"content":"        dialog.setBorder(new Border(new BorderStroke(Color.BLACK,","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"clementkfj"},"content":"                BorderStrokeStyle.SOLID, new CornerRadii(10.0), BorderWidths.DEFAULT)));","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"clementkfj"},"content":"        dialog.setBackground(new Background(new BackgroundFill(Color.LIGHTGRAY,","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"clementkfj"},"content":"                new CornerRadii(10.0), new Insets(0))));","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"clementkfj"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"clementkfj"},"content":"    private void flip() {","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"clementkfj"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"clementkfj"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"clementkfj"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"clementkfj"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"clementkfj"},"content":"        dialog.setBackground(new Background(new BackgroundFill(Color.LIGHTBLUE,","lastModifiedDate":"2021-09-06"},{"lineNumber":100,"author":{"gitId":"clementkfj"},"content":"                new CornerRadii(10.0), new Insets(0))));","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"clementkfj":102}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":" * The main class where the program starts running in.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"public class Duke extends Application {","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"    private Scene scene;","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"     * Initialises a duke.Duke program to start chatting with the user. ALl inputs go through this method.","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"     * @param filePath The file to store the data that users input will be initialised if it does not exist, else will","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"     *                 be overwritten.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"clementkfj"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"clementkfj"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"clementkfj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"clementkfj"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"clementkfj"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"clementkfj"},"content":"    public Duke() {","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"clementkfj"},"content":"        this(\"data/duke.txt\");","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"clementkfj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"clementkfj"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"clementkfj"},"content":"     * Starts the program when this method is called.","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"clementkfj"},"content":"    public void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"clementkfj"},"content":"        ui.welcomeMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"clementkfj"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"clementkfj"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"clementkfj"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"clementkfj"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"clementkfj"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"clementkfj"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"clementkfj"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"clementkfj"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"clementkfj"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"clementkfj"},"content":"     * Takes in a userInput and returns a String that contains the program\u0027s response.","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"clementkfj"},"content":"     * @param input The user input that will be read and deciphered.","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"clementkfj"},"content":"     * @return A string that shows the program\u0027s response.","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"clementkfj"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"clementkfj"},"content":"        String toPrint \u003d \"\";","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"clementkfj"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"clementkfj"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"clementkfj"},"content":"            toPrint \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"clementkfj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"clementkfj"},"content":"            toPrint \u003d ui.showError(e.getMessage());","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"clementkfj"},"content":"        return toPrint;","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"clementkfj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"clementkfj"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"clementkfj"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"clementkfj"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"clementkfj"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"clementkfj"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"clementkfj"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"clementkfj"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"clementkfj"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"clementkfj"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"clementkfj"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"clementkfj"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"clementkfj"},"content":"        stage.show();","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"clementkfj"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"clementkfj"},"content":"        stage.setTitle(\"duke.Duke\");","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"clementkfj"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"clementkfj"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"clementkfj"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"clementkfj"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2021-09-05"},{"lineNumber":118,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":119,"author":{"gitId":"clementkfj"},"content":"        scrollPane.setPrefSize(395, 535);","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"clementkfj"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-09-05"},{"lineNumber":121,"author":{"gitId":"clementkfj"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"clementkfj"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-09-05"},{"lineNumber":124,"author":{"gitId":"clementkfj"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":126,"author":{"gitId":"clementkfj"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2021-09-05"},{"lineNumber":127,"author":{"gitId":"clementkfj"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":129,"author":{"gitId":"clementkfj"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"clementkfj"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"clementkfj"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-09-05"},{"lineNumber":134,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":135,"author":{"gitId":"clementkfj"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-05"},{"lineNumber":136,"author":{"gitId":"clementkfj"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-05"},{"lineNumber":137,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":138,"author":{"gitId":"clementkfj"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2021-09-05"},{"lineNumber":139,"author":{"gitId":"clementkfj"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2021-09-05"},{"lineNumber":140,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":141,"author":{"gitId":"clementkfj"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2021-09-05"},{"lineNumber":142,"author":{"gitId":"clementkfj"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2021-09-05"},{"lineNumber":143,"author":{"gitId":"clementkfj"},"content":"            handleUserInput();","lastModifiedDate":"2021-09-05"},{"lineNumber":144,"author":{"gitId":"clementkfj"},"content":"        });","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":146,"author":{"gitId":"clementkfj"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2021-09-05"},{"lineNumber":147,"author":{"gitId":"clementkfj"},"content":"            handleUserInput();","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"clementkfj"},"content":"        });","lastModifiedDate":"2021-09-05"},{"lineNumber":149,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":150,"author":{"gitId":"clementkfj"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(ui.welcomeMessage(), duke));","lastModifiedDate":"2021-09-06"},{"lineNumber":151,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":152,"author":{"gitId":"clementkfj"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2021-09-05"},{"lineNumber":153,"author":{"gitId":"clementkfj"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-09-05"},{"lineNumber":154,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":155,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":156,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":157,"author":{"gitId":"clementkfj"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing duke.Duke\u0027s reply and then","lastModifiedDate":"2021-09-16"},{"lineNumber":158,"author":{"gitId":"clementkfj"},"content":"     * appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-16"},{"lineNumber":159,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":160,"author":{"gitId":"clementkfj"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-05"},{"lineNumber":161,"author":{"gitId":"clementkfj"},"content":"        String userText \u003d userInput.getText();","lastModifiedDate":"2021-09-06"},{"lineNumber":162,"author":{"gitId":"clementkfj"},"content":"        String dukeText \u003d getResponse(userInput.getText());","lastModifiedDate":"2021-09-06"},{"lineNumber":163,"author":{"gitId":"clementkfj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-05"},{"lineNumber":164,"author":{"gitId":"clementkfj"},"content":"                DialogBox.getUserDialog(userText, user),","lastModifiedDate":"2021-09-06"},{"lineNumber":165,"author":{"gitId":"clementkfj"},"content":"                DialogBox.getDukeDialog(dukeText, duke)","lastModifiedDate":"2021-09-06"},{"lineNumber":166,"author":{"gitId":"clementkfj"},"content":"        );","lastModifiedDate":"2021-09-05"},{"lineNumber":167,"author":{"gitId":"clementkfj"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-05"},{"lineNumber":168,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"clementkfj":168,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":" * An exception class that allows the program to throw one type of exception","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":" * when the program encounters a problem.","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"        super(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"clementkfj":13}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"public class Launcher {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"clementkfj":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":" * A GUI for duke.Duke using FXML.","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"            scene.getRoot().setStyle(\"-fx-font-family: \u0027Times New Roman\u0027\");","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"            stage.setTitle(\"Duke Vision\");","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"            stage.show();","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"clementkfj":33}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":" * Controller for duke.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"     * Initialises a mainWindow and a welcome message.","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"        String toWelcome \u003d (\"Hello I\u0027m your friendly task-planning chatbot duke.Duke!\\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"                + \"To enter a deadline, please type in this format:\\n\u0027deadline(or d) {title of item} \"","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"                + \"/by d/mm/yyyy hh:mm\u0027\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"                + \"To enter an event, please type in this format: \\n\u0027event(or e) {title of item} /on d/mm/yyyy hh:mm\u0027\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"                + \"To enter a todo, please type in this format: \\n\u0027todo(or t) {title of item}\u0027\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"                + \"type help(or h) to know more commands available in this bot!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(toWelcome, dukeImage));","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"clementkfj"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"clementkfj"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"clementkfj"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"clementkfj"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing duke.Duke\u0027s reply","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"clementkfj"},"content":"     * and then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"clementkfj"},"content":"    @FXML","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"clementkfj"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"clementkfj"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"clementkfj"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"clementkfj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"clementkfj"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"clementkfj"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"clementkfj"},"content":"        );","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"clementkfj"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"clementkfj":61}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"import duke.command.DeadlineAddCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"import duke.command.EventAddCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"import duke.command.TodoAddCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":" * An interpreter that evaluates the user input and produces a Command based on","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":" * what the user has requested for.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"     * This method evaluates a string given to it by the program and produces a Command","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"     * that does whatever the user has requested for.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"     * @param str String that is inputted by the user when prompted and passed into this method.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"     * @return A Command that makes the Ui, Storage and TaskList perform various actions.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException An error thrown due to user input error.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"    public static Command parse(String str) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"        String[] splitBySpace \u003d str.split(\"\\\\s+\");","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"        if (str.equals(\"bye\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"        } else if (str.equals(\"list\") || str.equals(\"l\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"        } else if (splitBySpace[0].equals(\"done\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"            int doneNumber \u003d handleDoneCommand(splitBySpace);","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"            return new DoneCommand(doneNumber);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"        } else if (splitBySpace[0].equals(\"deadline\") || splitBySpace[0].equals(\"d\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"            String title \u003d handleTitleChecking(str);","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"            String endTime \u003d findTime(str, \"D\");","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"clementkfj"},"content":"            return new DeadlineAddCommand(title, endTime);","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"clementkfj"},"content":"        } else if (splitBySpace[0].equals(\"event\") || splitBySpace[0].equals(\"e\")) {","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"clementkfj"},"content":"            String title \u003d handleTitleChecking(str);","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"clementkfj"},"content":"            String startTime \u003d findTime(str, \"E\");","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"clementkfj"},"content":"            return new EventAddCommand(title, startTime);","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"clementkfj"},"content":"        } else if (splitBySpace[0].equals(\"todo\") || splitBySpace[0].equals(\"t\")) {","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"clementkfj"},"content":"            String description \u003d handleToDoAddCommand(str, splitBySpace);","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"clementkfj"},"content":"            return new TodoAddCommand(description);","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"clementkfj"},"content":"        } else if (splitBySpace[0].equals(\"delete\") || splitBySpace[0].equals(\"del\")) {","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"clementkfj"},"content":"            int deleteNumber \u003d handleDeleteCommand(splitBySpace);","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"clementkfj"},"content":"            return new DeleteCommand(deleteNumber);","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"clementkfj"},"content":"        } else if (splitBySpace[0].equals(\"help\") || splitBySpace[0].equals(\"h\")) {","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"clementkfj"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"clementkfj"},"content":"        } else if (splitBySpace[0].equals(\"find\") || splitBySpace[0].equals(\"f\")) {","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"clementkfj"},"content":"            String keyword \u003d handleFindCommand(str, splitBySpace);","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"clementkfj"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"clementkfj"},"content":"        throw new DukeException(\"I\u0027m sorry :( I don\u0027t quite seem to understand, try again pls!\");","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"clementkfj"},"content":"     * Finds the string that contains the information of the time of event or deadline depending on the type.","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"clementkfj"},"content":"     * @param str The String containing the user input.","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"clementkfj"},"content":"     * @param type The type of input they gave(e.g. \"D\" for deadline and \"E\" for event).","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"clementkfj"},"content":"     * @return The string containing only the information of time.","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException Thrown when there is a wrong user input.","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"clementkfj"},"content":"    private static String findTime(String str, String type) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"clementkfj"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"clementkfj"},"content":"            String time;","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"clementkfj"},"content":"            if (type.equals(\"E\")) {","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"clementkfj"},"content":"                time \u003d str.split(\"/on \", 2)[1];","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"clementkfj"},"content":"            } else {","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"clementkfj"},"content":"                assert type.equals(\"D\") : \"Type error\";","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"clementkfj"},"content":"                time \u003d str.split(\"/by \", 2)[1];","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"clementkfj"},"content":"            return time;","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"clementkfj"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"clementkfj"},"content":"            throw new DukeException(\"Sorry please indicate your deadline time with a \u0027/by\u0027 after your \"","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"clementkfj"},"content":"                    + \"deadline title or a \u0027/on\u0027 after your event title\");","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"clementkfj"},"content":"     * Checks whether the title of the task given by the user is correct.","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"clementkfj"},"content":"     * @param str The String containing the user input, which contains both the title and the time.","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"clementkfj"},"content":"     * @return The String with only the title.","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException Thrown when titles are empty.","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"clementkfj"},"content":"    private static String handleTitleChecking(String str) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"clementkfj"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"clementkfj"},"content":"            checkSlashFormatting(str);","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"clementkfj"},"content":"            String title \u003d str.split(\"/\")[0].split(\"\\\\s+\", 2)[1];","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"clementkfj"},"content":"            checkDescriptionLength(title);","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"clementkfj"},"content":"            return title;","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"clementkfj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"clementkfj"},"content":"            throw new DukeException(\"Oh no! Titles cannot be empty! Please try again\");","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"clementkfj"},"content":"     * Handles the steps taken before returning the FindCommand Command in parse.","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"clementkfj"},"content":"     * @param str The String containing the user input.","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"clementkfj"},"content":"     * @param splitBySpace The String array that was divided by space.","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"clementkfj"},"content":"     * @return A String containing just the keywords to find.","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException Throws An exception when user input is invalid.","lastModifiedDate":"2021-09-10"},{"lineNumber":109,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"clementkfj"},"content":"    private static String handleFindCommand(String str, String[] splitBySpace) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":111,"author":{"gitId":"clementkfj"},"content":"        checkTaskLength(splitBySpace);","lastModifiedDate":"2021-09-10"},{"lineNumber":112,"author":{"gitId":"clementkfj"},"content":"        assert str.split(\"\\\\s+\", 2).length \u003d\u003d 2 : \"No task specified to find\";","lastModifiedDate":"2021-09-10"},{"lineNumber":113,"author":{"gitId":"clementkfj"},"content":"        return str.split(\"\\\\s+\", 2)[1];","lastModifiedDate":"2021-09-10"},{"lineNumber":114,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":116,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":117,"author":{"gitId":"clementkfj"},"content":"     * Handles the steps taken before DeleteCommand is called in parse.","lastModifiedDate":"2021-09-10"},{"lineNumber":118,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":119,"author":{"gitId":"clementkfj"},"content":"     * @param splitBySpace The String array split by whitespaces from the user input.","lastModifiedDate":"2021-09-10"},{"lineNumber":120,"author":{"gitId":"clementkfj"},"content":"     * @return The task number the user wants to delete.","lastModifiedDate":"2021-09-10"},{"lineNumber":121,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException Thrown when the user input is invalid.","lastModifiedDate":"2021-09-10"},{"lineNumber":122,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":123,"author":{"gitId":"clementkfj"},"content":"    private static int handleDeleteCommand(String[] splitBySpace) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":124,"author":{"gitId":"clementkfj"},"content":"        checkTaskLength(splitBySpace);","lastModifiedDate":"2021-09-10"},{"lineNumber":125,"author":{"gitId":"clementkfj"},"content":"        assert splitBySpace.length \u003e 1 : \"No task specified to delete\";","lastModifiedDate":"2021-09-10"},{"lineNumber":126,"author":{"gitId":"clementkfj"},"content":"        return Integer.parseInt(splitBySpace[1]);","lastModifiedDate":"2021-09-10"},{"lineNumber":127,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":129,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":130,"author":{"gitId":"clementkfj"},"content":"     * Handles the steps before a DoneCommand Command is called in parse.","lastModifiedDate":"2021-09-10"},{"lineNumber":131,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":132,"author":{"gitId":"clementkfj"},"content":"     * @param splitBySpace The String array split by whitespaces from the user input.","lastModifiedDate":"2021-09-10"},{"lineNumber":133,"author":{"gitId":"clementkfj"},"content":"     * @return The task number the user wants to mark as done.","lastModifiedDate":"2021-09-10"},{"lineNumber":134,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException Thrown when user input is invalid.","lastModifiedDate":"2021-09-10"},{"lineNumber":135,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":136,"author":{"gitId":"clementkfj"},"content":"    private static int handleDoneCommand(String[] splitBySpace) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":137,"author":{"gitId":"clementkfj"},"content":"        checkTaskLength(splitBySpace);","lastModifiedDate":"2021-09-10"},{"lineNumber":138,"author":{"gitId":"clementkfj"},"content":"        assert splitBySpace.length \u003e 1 : \"No task indicated.\";","lastModifiedDate":"2021-09-10"},{"lineNumber":139,"author":{"gitId":"clementkfj"},"content":"        return Integer.parseInt(splitBySpace[1]);","lastModifiedDate":"2021-09-10"},{"lineNumber":140,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":142,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":143,"author":{"gitId":"clementkfj"},"content":"     * Handles all steps to create a ToDoAddCommand, including checking for violations in user input.","lastModifiedDate":"2021-09-10"},{"lineNumber":144,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":145,"author":{"gitId":"clementkfj"},"content":"     * @param str The string input of the user.","lastModifiedDate":"2021-09-10"},{"lineNumber":146,"author":{"gitId":"clementkfj"},"content":"     * @param splitBySpace The String array that was split by spaces in the original parse().","lastModifiedDate":"2021-09-10"},{"lineNumber":147,"author":{"gitId":"clementkfj"},"content":"     * @return The String that contains the Description to be added to ToDoAddCommand.","lastModifiedDate":"2021-09-10"},{"lineNumber":148,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException Thrown when there is a user input violation.","lastModifiedDate":"2021-09-10"},{"lineNumber":149,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":150,"author":{"gitId":"clementkfj"},"content":"    private static String handleToDoAddCommand(String str, String[] splitBySpace) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":151,"author":{"gitId":"clementkfj"},"content":"        checkTaskLength(splitBySpace);","lastModifiedDate":"2021-09-10"},{"lineNumber":152,"author":{"gitId":"clementkfj"},"content":"        assert splitBySpace.length \u003e 1 : \"No todo specified\";","lastModifiedDate":"2021-09-07"},{"lineNumber":153,"author":{"gitId":"clementkfj"},"content":"        String description \u003d str.split(\"\\\\s+\", 2)[1];","lastModifiedDate":"2021-09-10"},{"lineNumber":154,"author":{"gitId":"clementkfj"},"content":"        checkDescriptionEmpty(description);","lastModifiedDate":"2021-09-10"},{"lineNumber":155,"author":{"gitId":"clementkfj"},"content":"        return description;","lastModifiedDate":"2021-09-10"},{"lineNumber":156,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":157,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":158,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":159,"author":{"gitId":"clementkfj"},"content":"     * Checks whether the description is empty.","lastModifiedDate":"2021-09-10"},{"lineNumber":160,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":161,"author":{"gitId":"clementkfj"},"content":"     * @param description The description to be checked whether it is empty.","lastModifiedDate":"2021-09-10"},{"lineNumber":162,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException Thrown when the description is empty.","lastModifiedDate":"2021-09-10"},{"lineNumber":163,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":164,"author":{"gitId":"clementkfj"},"content":"    private static void checkDescriptionEmpty(String description) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":165,"author":{"gitId":"clementkfj"},"content":"        if (description.equals(\"\") || description.equals(\" \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"clementkfj"},"content":"            throw new DukeException(\"Oh no! Titles cannot be empty! Please try again\");","lastModifiedDate":"2021-09-10"},{"lineNumber":167,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":168,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":169,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":170,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":171,"author":{"gitId":"clementkfj"},"content":"     * Checks whether the description length is too short.","lastModifiedDate":"2021-09-10"},{"lineNumber":172,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":173,"author":{"gitId":"clementkfj"},"content":"     * @param title The title of the item to be added.","lastModifiedDate":"2021-09-10"},{"lineNumber":174,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException Thrown when titles are seen to be empty.","lastModifiedDate":"2021-09-10"},{"lineNumber":175,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":176,"author":{"gitId":"clementkfj"},"content":"    private static void checkDescriptionLength(String title) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":177,"author":{"gitId":"clementkfj"},"content":"        if (title.length() \u003c\u003d 0) {","lastModifiedDate":"2021-09-10"},{"lineNumber":178,"author":{"gitId":"clementkfj"},"content":"            throw new DukeException(\"Oh no! Titles cannot be empty! Please try again\");","lastModifiedDate":"2021-09-10"},{"lineNumber":179,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":180,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":181,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":182,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":183,"author":{"gitId":"clementkfj"},"content":"     * Checks for the presence of the \u0027/\u0027 in the String.","lastModifiedDate":"2021-09-10"},{"lineNumber":184,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":185,"author":{"gitId":"clementkfj"},"content":"     * @param str The String that contains the user input.","lastModifiedDate":"2021-09-10"},{"lineNumber":186,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException Thrown when there is no presence of the \u0027/\u0027.","lastModifiedDate":"2021-09-10"},{"lineNumber":187,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":188,"author":{"gitId":"clementkfj"},"content":"    private static void checkSlashFormatting(String str) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":189,"author":{"gitId":"clementkfj"},"content":"        if (!str.contains(\"/\")) {","lastModifiedDate":"2021-09-10"},{"lineNumber":190,"author":{"gitId":"clementkfj"},"content":"            throw new DukeException(\"Sorry please indicate your deadline time with a \u0027/by\u0027 after your \"","lastModifiedDate":"2021-09-10"},{"lineNumber":191,"author":{"gitId":"clementkfj"},"content":"                    + \"deadline title or a \u0027/on\u0027 after your event title\");","lastModifiedDate":"2021-09-10"},{"lineNumber":192,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":193,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":194,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":195,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":196,"author":{"gitId":"clementkfj"},"content":"     * Checks whether the task length is sufficient for certain commands such as delete, done and find.","lastModifiedDate":"2021-09-10"},{"lineNumber":197,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":198,"author":{"gitId":"clementkfj"},"content":"     * @param splitBySpace The String array that was split by spacings.","lastModifiedDate":"2021-09-10"},{"lineNumber":199,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException Thrown when there is nothing for the command to do.","lastModifiedDate":"2021-09-10"},{"lineNumber":200,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":201,"author":{"gitId":"clementkfj"},"content":"    private static void checkTaskLength(String[] splitBySpace) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":202,"author":{"gitId":"clementkfj"},"content":"        if (splitBySpace.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-10"},{"lineNumber":203,"author":{"gitId":"clementkfj"},"content":"            throw new DukeException(\"Sorry please indicate a task number to update!\");","lastModifiedDate":"2021-09-10"},{"lineNumber":204,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":205,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":206,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":207,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":208,"author":{"gitId":"clementkfj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-26"},{"lineNumber":209,"author":{"gitId":"clementkfj"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":210,"author":{"gitId":"clementkfj"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":211,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":212,"author":{"gitId":"clementkfj"},"content":"        return obj instanceof Parser;","lastModifiedDate":"2021-09-07"},{"lineNumber":213,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":214,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"clementkfj":214}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":" * Storage deals with the file that stores the items in the user\u0027s local memory so that","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":" * the user can retrieve his tasks when he loads up duke.Duke in the future after exiting.","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"    private File file;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"    public File load() {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"        return file;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"     * Changes a single task in the tasklist to be in a \u0027done\u0027 status.","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"     * @param description Description of the item to be found in the taskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"     * @param cl Class of the item that will be found in the taskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"     * @param dukeData The file that is to be deleted so this new file will be written.","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"     * @return The new file that has taken the place of the old file.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"     * @throws IOException To handle the exception where file is not read.","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"    public File rewriteDone(String description, String cl, File dukeData) throws IOException {","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"        Scanner sc \u003d new Scanner(dukeData);","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"clementkfj"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"clementkfj"},"content":"        boolean isChanged \u003d false;","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"clementkfj"},"content":"        File temp \u003d new File(\"data/temp.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"clementkfj"},"content":"        FileWriter fw \u003d new FileWriter(temp, true);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"clementkfj"},"content":"        BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"clementkfj"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"clementkfj"},"content":"            String nextLine \u003d sc.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"clementkfj"},"content":"            if (nextLine.equals(\"\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"clementkfj"},"content":"                continue;","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"clementkfj"},"content":"            String[] parts \u003d nextLine.split(\"\\\\|\", 10);","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"clementkfj"},"content":"            if (!(count \u003d\u003d 0)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"clementkfj"},"content":"                bw.newLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"clementkfj"},"content":"            if (parts[2].equals(description) \u0026\u0026 parts[0].equals(cl) \u0026\u0026 !isChanged) {","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"clementkfj"},"content":"                bw.write(parts[0] + \"|1|\" + parts[2] + \"|\" + parts[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"clementkfj"},"content":"                count++;","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"clementkfj"},"content":"                isChanged \u003d true;","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"clementkfj"},"content":"                continue;","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"clementkfj"},"content":"            bw.write(nextLine);","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"clementkfj"},"content":"            count++;","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"clementkfj"},"content":"        assert count !\u003d 0 : \"Nothing has been changed\";","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"clementkfj"},"content":"        bw.flush();","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"clementkfj"},"content":"        bw.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"clementkfj"},"content":"        dukeData.delete();","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"clementkfj"},"content":"        File dukeRenewed \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"clementkfj"},"content":"        temp.renameTo(dukeRenewed);","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"clementkfj"},"content":"        return dukeRenewed;","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"clementkfj"},"content":"     * Changes the task that is specified to a status that shows that it has been done. It uses","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"clementkfj"},"content":"     * doneChanger method to complete the process.","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"clementkfj"},"content":"     * @param taskToChange The task that has been completed and requires changing of completion status.","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException An error that needs to be caught due to IOException possibly being thrown","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"clementkfj"},"content":"     *                       by FileWriter","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"clementkfj"},"content":"    public void changeDone(Task taskToChange) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"clementkfj"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"clementkfj"},"content":"            String description \u003d taskToChange.getItemName();","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"clementkfj"},"content":"            String cl \u003d \"X\";","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"clementkfj"},"content":"            if (taskToChange instanceof Todo) {","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"clementkfj"},"content":"                cl \u003d \"T\";","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"clementkfj"},"content":"            if (taskToChange instanceof Deadline) {","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"clementkfj"},"content":"                cl \u003d \"D\";","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"clementkfj"},"content":"            if (taskToChange instanceof Event) {","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"clementkfj"},"content":"                cl \u003d \"E\";","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"clementkfj"},"content":"            assert !cl.equals(\"X\") : \"Class not correct\";","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"clementkfj"},"content":"            file \u003d rewriteDone(description, cl, file);","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"clementkfj"},"content":"            assert file.getPath().equals(\"data/duke.txt\") : \"File is in data/duke.txt\";","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"clementkfj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"clementkfj"},"content":"            throw new DukeException(\"Oh oh! Something went wrong!\");","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"clementkfj"},"content":"     * Deletes a line of the task that needs to be deleted from the taskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"clementkfj"},"content":"     * @param description Description of the task to be found in the taskList.","lastModifiedDate":"2021-09-02"},{"lineNumber":105,"author":{"gitId":"clementkfj"},"content":"     * @param cl Class of the task to be found (Deadline, Event or To do).","lastModifiedDate":"2021-09-02"},{"lineNumber":106,"author":{"gitId":"clementkfj"},"content":"     * @param dukeData The original file that needs to be deleted so this new file will take it\u0027s place.","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"clementkfj"},"content":"     * @return The new file in the same directory.","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"clementkfj"},"content":"     * @throws IOException Exception thrown when the file is invalid.","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":110,"author":{"gitId":"clementkfj"},"content":"    public File deleteLine(String description, String cl, File dukeData) throws IOException {","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"clementkfj"},"content":"        Scanner sc \u003d new Scanner(dukeData);","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"clementkfj"},"content":"        boolean isDeleted \u003d false;","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"clementkfj"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"clementkfj"},"content":"        File temp \u003d new File(\"data/temp.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"clementkfj"},"content":"        FileWriter fw \u003d new FileWriter(temp, true);","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"clementkfj"},"content":"        BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"clementkfj"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"clementkfj"},"content":"            String nextLine \u003d sc.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"clementkfj"},"content":"            if (nextLine.equals(\"\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"clementkfj"},"content":"                continue;","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"clementkfj"},"content":"            String[] parts \u003d nextLine.split(\"\\\\|\", 10);","lastModifiedDate":"2021-09-02"},{"lineNumber":123,"author":{"gitId":"clementkfj"},"content":"            if (parts[2].equals(description) \u0026\u0026 parts[0].equals(cl) \u0026\u0026 !isDeleted) {","lastModifiedDate":"2021-09-16"},{"lineNumber":124,"author":{"gitId":"clementkfj"},"content":"                isDeleted \u003d true;","lastModifiedDate":"2021-09-16"},{"lineNumber":125,"author":{"gitId":"clementkfj"},"content":"                continue;","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"clementkfj"},"content":"            if (!(count \u003d\u003d 0)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"clementkfj"},"content":"                bw.newLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"clementkfj"},"content":"            bw.write(nextLine);","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"clementkfj"},"content":"            count++;","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"clementkfj"},"content":"        bw.flush();","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"clementkfj"},"content":"        bw.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"clementkfj"},"content":"        dukeData.delete();","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"clementkfj"},"content":"        File dukeRenewed \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"clementkfj"},"content":"        temp.renameTo(dukeRenewed);","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"clementkfj"},"content":"        return dukeRenewed;","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":142,"author":{"gitId":"clementkfj"},"content":"     * Deletes a specified task from the local memory using the method deleteLine","lastModifiedDate":"2021-09-16"},{"lineNumber":143,"author":{"gitId":"clementkfj"},"content":"     * function.","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"clementkfj"},"content":"     * @param toDelete The task that is to be deleted.","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException An error that needs to be caught due to IOException possibly being thrown","lastModifiedDate":"2021-08-27"},{"lineNumber":147,"author":{"gitId":"clementkfj"},"content":"     *                       by FileWriter","lastModifiedDate":"2021-08-27"},{"lineNumber":148,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":149,"author":{"gitId":"clementkfj"},"content":"    public void deleteFromFile(Task toDelete) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"clementkfj"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"clementkfj"},"content":"            String description \u003d toDelete.getItemName();","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"clementkfj"},"content":"            String cl \u003d \"X\";","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"clementkfj"},"content":"            if (toDelete instanceof Todo) {","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"clementkfj"},"content":"                cl \u003d \"T\";","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"clementkfj"},"content":"            if (toDelete instanceof Deadline) {","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"clementkfj"},"content":"                cl \u003d \"D\";","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"clementkfj"},"content":"            if (toDelete instanceof Event) {","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"clementkfj"},"content":"                cl \u003d \"E\";","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"clementkfj"},"content":"            assert !cl.equals(\"X\") : \"Class given is wrong\";","lastModifiedDate":"2021-09-07"},{"lineNumber":163,"author":{"gitId":"clementkfj"},"content":"            file \u003d deleteLine(description, cl, file);","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"clementkfj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"clementkfj"},"content":"            throw new DukeException(\"Oh oh! Something went wrong!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":167,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":168,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":169,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":170,"author":{"gitId":"clementkfj"},"content":"     * Writes new tasks to be added into the local memory due to any AddCommand being used.","lastModifiedDate":"2021-08-27"},{"lineNumber":171,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":172,"author":{"gitId":"clementkfj"},"content":"     * @param type the type of task to be added (Deadline, To do or Event).","lastModifiedDate":"2021-08-27"},{"lineNumber":173,"author":{"gitId":"clementkfj"},"content":"     * @param description The user\u0027s description of the task to be added.","lastModifiedDate":"2021-08-27"},{"lineNumber":174,"author":{"gitId":"clementkfj"},"content":"     * @param time The time for the task to be completed or for the task to begin(Only applicable for","lastModifiedDate":"2021-08-27"},{"lineNumber":175,"author":{"gitId":"clementkfj"},"content":"     *             Event and Deadline).","lastModifiedDate":"2021-08-27"},{"lineNumber":176,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException An error that needs to be caught due to IOException possibly being thrown","lastModifiedDate":"2021-08-27"},{"lineNumber":177,"author":{"gitId":"clementkfj"},"content":"     *                       by FileWriter","lastModifiedDate":"2021-08-27"},{"lineNumber":178,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":179,"author":{"gitId":"clementkfj"},"content":"    public void addToText(String type, String description, String time) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":180,"author":{"gitId":"clementkfj"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":181,"author":{"gitId":"clementkfj"},"content":"            FileWriter fw \u003d new FileWriter(file, true);","lastModifiedDate":"2021-08-26"},{"lineNumber":182,"author":{"gitId":"clementkfj"},"content":"            BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2021-08-26"},{"lineNumber":183,"author":{"gitId":"clementkfj"},"content":"            bw.newLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":184,"author":{"gitId":"clementkfj"},"content":"            bw.write(type + \"|0|\" + description + \"|\" + time);","lastModifiedDate":"2021-08-26"},{"lineNumber":185,"author":{"gitId":"clementkfj"},"content":"            bw.flush();","lastModifiedDate":"2021-08-26"},{"lineNumber":186,"author":{"gitId":"clementkfj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":187,"author":{"gitId":"clementkfj"},"content":"            throw new DukeException(\"Oh oh! Something went wrong!\");","lastModifiedDate":"2021-09-05"},{"lineNumber":188,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":189,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":190,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":191,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":192,"author":{"gitId":"clementkfj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-26"},{"lineNumber":193,"author":{"gitId":"clementkfj"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":194,"author":{"gitId":"clementkfj"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":195,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":196,"author":{"gitId":"clementkfj"},"content":"        if (!(obj instanceof Storage)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":197,"author":{"gitId":"clementkfj"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":198,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":199,"author":{"gitId":"clementkfj"},"content":"        Storage other \u003d (Storage) obj;","lastModifiedDate":"2021-08-26"},{"lineNumber":200,"author":{"gitId":"clementkfj"},"content":"        return this.file.equals(other.file);","lastModifiedDate":"2021-08-26"},{"lineNumber":201,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":202,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"clementkfj":202}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":" * A list that is created when the program starts running. The list is generated","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":" * at first from the local memory and later on can be modified while the program is","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":" * running.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"    private ArrayList\u003cTask\u003e xs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"     * Initialises the file from specified file path. If file cannot be found, it throws an error.","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"     * @param file The file that is to be copied into the list xs.","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException If file is not found.","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"    public TaskList(File file) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"            fileCopy(file);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"            throw new DukeException(\"Error, file cannot be found, creating new destination\");","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"clementkfj"},"content":"     * To initialise a new data/duke.txt since the user does not have one.","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"clementkfj"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"clementkfj"},"content":"        File data \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"clementkfj"},"content":"        File directory \u003d new File(\"data\");","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"clementkfj"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"clementkfj"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"clementkfj"},"content":"                directory.mkdir();","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"clementkfj"},"content":"            if (!data.exists()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"clementkfj"},"content":"                assert directory.exists() : \"Directory does not exist\";","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"clementkfj"},"content":"                data.createNewFile();","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"clementkfj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"clementkfj"},"content":"            System.err.println(e);","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"clementkfj"},"content":"    public TaskList(ArrayList\u003cTask\u003e xs) {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"clementkfj"},"content":"        this.xs \u003d xs;","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"clementkfj"},"content":"     * Formats the date and time to match what the program requires.","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"clementkfj"},"content":"     * @param stringDate The date input by the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"clementkfj"},"content":"     * @return A LocalDateTime object that was created from the formatted date.","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"clementkfj"},"content":"    public LocalDateTime dateFormatting(String stringDate) {","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"clementkfj"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"clementkfj"},"content":"        LocalDateTime localDate \u003d LocalDateTime.parse(stringDate, dateTimeFormatter);","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"clementkfj"},"content":"        return localDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"clementkfj"},"content":"     * A method that copies the list that is stored in the local file when the program starts running","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"clementkfj"},"content":"     * so that it is stored in the list in TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"clementkfj"},"content":"     * @param dukeData The file that resides in the user\u0027s local memory.","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException An exception thrown as Scanner requires a FileNotFoundException to be handled.","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"clementkfj"},"content":"    public void fileCopy(File dukeData) throws FileNotFoundException {","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"clementkfj"},"content":"        Scanner fileScanner \u003d new Scanner(dukeData);","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"clementkfj"},"content":"        while (fileScanner.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"clementkfj"},"content":"            String s \u003d fileScanner.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"clementkfj"},"content":"            if (s.equals(\"\") || s.equals((\" \"))) {","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"clementkfj"},"content":"                continue;","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"clementkfj"},"content":"            String[] parts \u003d s.split(\"\\\\|\", 5);","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"clementkfj"},"content":"            if (parts[0].equals(\"D\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"clementkfj"},"content":"                Deadline dl \u003d new Deadline(parts[2], dateFormatting(parts[3]));","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"clementkfj"},"content":"                dl.changeIsDone(parts[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"clementkfj"},"content":"                xs.add(dl);","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"clementkfj"},"content":"            } else if (parts[0].equals(\"T\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"clementkfj"},"content":"                Todo td \u003d new Todo(parts[2]);","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"clementkfj"},"content":"                td.changeIsDone(parts[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"clementkfj"},"content":"                xs.add(td);","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"clementkfj"},"content":"            } else if (parts[0].equals(\"E\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"clementkfj"},"content":"                Event e \u003d new Event(parts[2], dateFormatting(parts[3]));","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"clementkfj"},"content":"                e.changeIsDone(parts[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"clementkfj"},"content":"                xs.add(e);","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"clementkfj"},"content":"        fileScanner.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"clementkfj"},"content":"     * A method that prints a list of tasks that the user currently has in his list.","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"clementkfj"},"content":"     * @return A boolean that states whether all tasks in the list have been completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException A message thrown as there are no items that currently are in the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"clementkfj"},"content":"    public String printItems() throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"clementkfj"},"content":"        StringBuilder toPrint \u003d new StringBuilder(\"You have \" + xs.size() + \" tasks in your current list.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"clementkfj"},"content":"        if (xs.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"clementkfj"},"content":"            throw new DukeException(\"There are no items in the list!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"clementkfj"},"content":"        for (int i \u003d 0; i \u003c xs.size(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"clementkfj"},"content":"            toPrint.append(\"\\n\").append(i + 1).append(\": \").append(xs.get(i));","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":122,"author":{"gitId":"clementkfj"},"content":"        return toPrint.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"clementkfj"},"content":"     * A method that changes the task completion status to \u0027done\u0027 while returning the task so Storage and","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"clementkfj"},"content":"     * Ui can perform other actions with regards to the task to be changed.","lastModifiedDate":"2021-08-27"},{"lineNumber":128,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":129,"author":{"gitId":"clementkfj"},"content":"     * @param startOfString An integer that tells us the item number to change in the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":130,"author":{"gitId":"clementkfj"},"content":"     * @return The task that has been modified so that other parts can use it to change.","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException A thrown exception as the number exceeds the total number of tasks or is negative.","lastModifiedDate":"2021-08-27"},{"lineNumber":132,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":133,"author":{"gitId":"clementkfj"},"content":"    public Task retrieveTask(int startOfString) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"clementkfj"},"content":"        if (startOfString \u003e xs.size() || startOfString \u003c 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"clementkfj"},"content":"            throw new DukeException(\"Uh oh! Item \" + startOfString + \" does not seem to exist!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":136,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":137,"author":{"gitId":"clementkfj"},"content":"        Task taskToChange \u003d xs.get(startOfString - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":138,"author":{"gitId":"clementkfj"},"content":"        taskToChange.changeIsDone(\"1\");","lastModifiedDate":"2021-09-07"},{"lineNumber":139,"author":{"gitId":"clementkfj"},"content":"        return taskToChange;","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":143,"author":{"gitId":"clementkfj"},"content":"     * A method that deletes the task from the current list of tasks while returning the task so Storage and","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"clementkfj"},"content":"     * Ui can perform other ractions with regards to the task to be changed.","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"clementkfj"},"content":"     * @param startOfString An integer that tells us the item number so we can delete it.","lastModifiedDate":"2021-08-27"},{"lineNumber":147,"author":{"gitId":"clementkfj"},"content":"     * @return The task that has been deleted so other functions can be done with regards to deleting the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":148,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException A thrown exception as the number exceeds the total number of tasks or is negative.","lastModifiedDate":"2021-08-27"},{"lineNumber":149,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":150,"author":{"gitId":"clementkfj"},"content":"    public Task deleteTask(int startOfString) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"clementkfj"},"content":"        if (startOfString \u003e xs.size() || startOfString \u003c 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"clementkfj"},"content":"            throw new DukeException(\"Uh oh! Item \" + startOfString + \" does not seem to exist!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"clementkfj"},"content":"        Task taskToDelete \u003d xs.get(startOfString - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"clementkfj"},"content":"        xs.remove(startOfString - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"clementkfj"},"content":"        return taskToDelete;","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":160,"author":{"gitId":"clementkfj"},"content":"     * A method adds a task to the list of tasks the user currently has.","lastModifiedDate":"2021-08-27"},{"lineNumber":161,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":162,"author":{"gitId":"clementkfj"},"content":"     * @param type The type of task that is to be added (Deadline, Event or To do).","lastModifiedDate":"2021-08-27"},{"lineNumber":163,"author":{"gitId":"clementkfj"},"content":"     * @param description The description of the task the user gave.","lastModifiedDate":"2021-08-27"},{"lineNumber":164,"author":{"gitId":"clementkfj"},"content":"     * @param time The time which the task is to be completed(Deadline) or when the task will begin(Event).","lastModifiedDate":"2021-08-27"},{"lineNumber":165,"author":{"gitId":"clementkfj"},"content":"     * @return An integer that tells us how many items are currently on the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":166,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-27"},{"lineNumber":167,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":168,"author":{"gitId":"clementkfj"},"content":"    public int addToList(String type, String description, String time) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":169,"author":{"gitId":"clementkfj"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"clementkfj"},"content":"            LocalDateTime ld \u003d LocalDateTime.now();","lastModifiedDate":"2021-08-26"},{"lineNumber":171,"author":{"gitId":"clementkfj"},"content":"            if (!(time.equals(\"NA\"))) {","lastModifiedDate":"2021-08-26"},{"lineNumber":172,"author":{"gitId":"clementkfj"},"content":"                ld \u003d dateFormatting(time);","lastModifiedDate":"2021-08-26"},{"lineNumber":173,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":174,"author":{"gitId":"clementkfj"},"content":"            if (ld.compareTo(LocalDateTime.now()) \u003c 0 \u0026\u0026 (type.equals(\"D\") || type.equals(\"E\"))) {","lastModifiedDate":"2021-08-26"},{"lineNumber":175,"author":{"gitId":"clementkfj"},"content":"                throw new DukeException(\"Please key in a date that\u0027s not in the past!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":176,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":177,"author":{"gitId":"clementkfj"},"content":"            Task toAdd;","lastModifiedDate":"2021-08-26"},{"lineNumber":178,"author":{"gitId":"clementkfj"},"content":"            if (type.equals(\"D\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":179,"author":{"gitId":"clementkfj"},"content":"                toAdd \u003d new Deadline(description, ld);","lastModifiedDate":"2021-08-26"},{"lineNumber":180,"author":{"gitId":"clementkfj"},"content":"            } else if (type.equals(\"E\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":181,"author":{"gitId":"clementkfj"},"content":"                toAdd \u003d new Event(description, ld);","lastModifiedDate":"2021-08-26"},{"lineNumber":182,"author":{"gitId":"clementkfj"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":183,"author":{"gitId":"clementkfj"},"content":"                toAdd \u003d new Todo(description);","lastModifiedDate":"2021-08-26"},{"lineNumber":184,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":185,"author":{"gitId":"clementkfj"},"content":"            xs.add(toAdd);","lastModifiedDate":"2021-08-26"},{"lineNumber":186,"author":{"gitId":"clementkfj"},"content":"            return xs.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":187,"author":{"gitId":"clementkfj"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":188,"author":{"gitId":"clementkfj"},"content":"            throw new DukeException(\"Oh oh! Please follow the format strictly and key in a suitable date!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":189,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":190,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":191,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":192,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":193,"author":{"gitId":"clementkfj"},"content":"     * Finds tasks that contains such a keyword typed in by the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":194,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":195,"author":{"gitId":"clementkfj"},"content":"     * @param keyWords The user input that will be searched for to obtain tasks that have such words.","lastModifiedDate":"2021-09-02"},{"lineNumber":196,"author":{"gitId":"clementkfj"},"content":"     * @return The String to print with regards to all the similar tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":197,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":198,"author":{"gitId":"clementkfj"},"content":"    public String findSimilarTasks(String keyWords) {","lastModifiedDate":"2021-09-05"},{"lineNumber":199,"author":{"gitId":"clementkfj"},"content":"        StringBuilder toPrint;","lastModifiedDate":"2021-09-07"},{"lineNumber":200,"author":{"gitId":"clementkfj"},"content":"        toPrint \u003d new StringBuilder((\"Here are the matching tasks in your list:\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":201,"author":{"gitId":"clementkfj"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-27"},{"lineNumber":202,"author":{"gitId":"clementkfj"},"content":"        for (Task task : xs) {","lastModifiedDate":"2021-08-27"},{"lineNumber":203,"author":{"gitId":"clementkfj"},"content":"            if (!task.getItemName().contains(keyWords)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":204,"author":{"gitId":"clementkfj"},"content":"                continue;","lastModifiedDate":"2021-09-07"},{"lineNumber":205,"author":{"gitId":"clementkfj"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":206,"author":{"gitId":"clementkfj"},"content":"            toPrint.append(\"\\n\").append(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":207,"author":{"gitId":"clementkfj"},"content":"            count++;","lastModifiedDate":"2021-09-07"},{"lineNumber":208,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":209,"author":{"gitId":"clementkfj"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":210,"author":{"gitId":"clementkfj"},"content":"            toPrint.append(\"\\nSorry! There does not seem to be any matching tasks!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":211,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":212,"author":{"gitId":"clementkfj"},"content":"        return toPrint.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":213,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":214,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":215,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":216,"author":{"gitId":"clementkfj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-26"},{"lineNumber":217,"author":{"gitId":"clementkfj"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":218,"author":{"gitId":"clementkfj"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":219,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":220,"author":{"gitId":"clementkfj"},"content":"        if (!(obj instanceof TaskList)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":221,"author":{"gitId":"clementkfj"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":222,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":223,"author":{"gitId":"clementkfj"},"content":"        TaskList other \u003d (TaskList) obj;","lastModifiedDate":"2021-08-26"},{"lineNumber":224,"author":{"gitId":"clementkfj"},"content":"        return this.xs.equals(other.xs);","lastModifiedDate":"2021-08-26"},{"lineNumber":225,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":226,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"clementkfj":226}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":" * Ui deals with the user interactions where it outputs a message based on what","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":" * which Command was given by the Parser.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"    public Ui() {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"     * The message that first greets the user when the program starts.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"     * @return Welcome message.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"    public String welcomeMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"        return (\"Hello I\u0027m your friendly task-planning chatbot duke.Duke!\\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"                + \"To enter a deadline, please type in this format: \u0027deadline {title of item} \"","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"                + \"/by d/mm/yyyy hh:mm\u0027\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"                + \"To enter an event, please type in this format: \u0027event {title of item} /on d/mm/yyyy hh:mm\u0027\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"                + \"To enter a todo, please type in this format: \u0027todo {title of item}\u0027\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"                + \"type help to know more commands available in this bot!\");","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"     * The message that is shown when the user first uses duke.Duke since a local path has not been","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"     * created.","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"clementkfj"},"content":"     * @return Loading Error message.","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"clementkfj"},"content":"    public String showLoadingError() {","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"clementkfj"},"content":"        return (\"Creating new folder since path does not exist!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"clementkfj"},"content":"     * This method provides an avenue for the user to input their command so that the program","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"clementkfj"},"content":"     * can carry out different actions.","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"clementkfj"},"content":"     * @return a String that consists of everything the user inputted.","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"clementkfj"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"clementkfj"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"clementkfj"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"clementkfj"},"content":"     * Outputs the error message given by the exception thrown.","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"clementkfj"},"content":"     * @param errorMessage The message that is stored in the error thrown.","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"clementkfj"},"content":"     * @return The error message.","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"clementkfj"},"content":"    public String showError(String errorMessage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"clementkfj"},"content":"        return errorMessage;","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"clementkfj"},"content":"     * A method that prints the final goodbye message when the program exits.","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"clementkfj"},"content":"     * @return The goodbye message.","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"clementkfj"},"content":"    public String byeMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"clementkfj"},"content":"        return \"Bye! Please visit me again!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"clementkfj"},"content":"     * A message that is printed when the user marks one of his tasks as \u0027done\u0027.","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"clementkfj"},"content":"     * @param taskToChange The task that has been changed to \u0027done\u0027.","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"clementkfj"},"content":"     * @return Message that tells us it is marked as done.","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"clementkfj"},"content":"    public String markAsDone(Task taskToChange) {","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"clementkfj"},"content":"        return (\"Great job! I\u0027ve marked the following as done:\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"clementkfj"},"content":"                + taskToChange);","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"clementkfj"},"content":"     * A message that is printed when a task has been deleted from the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"clementkfj"},"content":"     * @param toDelete The task that has been deleted.","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"clementkfj"},"content":"     * @return The deleted message.","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"clementkfj"},"content":"    public String markAsDeleted(Task toDelete) {","lastModifiedDate":"2021-09-02"},{"lineNumber":94,"author":{"gitId":"clementkfj"},"content":"        return (\"Note: I\u0027ve removed the following task from your list:\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"clementkfj"},"content":"                + toDelete);","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"clementkfj"},"content":"     * Formats the date and time to what the program wants.","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"clementkfj"},"content":"     * @param stringDate The user inputted date and time.","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"clementkfj"},"content":"     * @return A LocalDateTime object that contains information that the user inputted.","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"clementkfj"},"content":"    public LocalDateTime dateFormatting(String stringDate) {","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"clementkfj"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"clementkfj"},"content":"        return LocalDateTime.parse(stringDate, dateTimeFormatter);","lastModifiedDate":"2021-09-07"},{"lineNumber":107,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"clementkfj"},"content":"     * A message that is printed that states what task has been added to the list as well as the current","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"clementkfj"},"content":"     * number of tasks that are on the list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"clementkfj"},"content":"     * @param totalTasks The total number of tasks in the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"clementkfj"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"clementkfj"},"content":"     * @param time The time which the task is to be completed(Deadline) or to begin(Event).","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"clementkfj"},"content":"     * @param type The type of task that has been added (Deadline, Event or To do).","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"clementkfj"},"content":"     * @return The message that shows after adding task.","lastModifiedDate":"2021-09-02"},{"lineNumber":118,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"clementkfj"},"content":"    public String addingTask(int totalTasks, String description, String time, String type) {","lastModifiedDate":"2021-09-02"},{"lineNumber":120,"author":{"gitId":"clementkfj"},"content":"        Task toAdd;","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"clementkfj"},"content":"        if (type.equals(\"D\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"clementkfj"},"content":"            toAdd \u003d new Deadline(description, dateFormatting(time));","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"clementkfj"},"content":"        } else if (type.equals(\"E\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"clementkfj"},"content":"            toAdd \u003d new Event(description, dateFormatting(time));","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"clementkfj"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"clementkfj"},"content":"            toAdd \u003d new Todo(description);","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"clementkfj"},"content":"        return (\"Understood! The following task has been added:\\n\" + \" \" + toAdd","lastModifiedDate":"2021-09-07"},{"lineNumber":129,"author":{"gitId":"clementkfj"},"content":"                + \"\\nYou have \" + totalTasks + \" \" + (totalTasks \u003d\u003d 1 ? \"task\" : \"tasks\")","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"clementkfj"},"content":"                + \" in your current list\");","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"clementkfj"},"content":"     * A message printed out containing the list of commands that are not to add a deadline, event or to do","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"clementkfj"},"content":"     * that the user may not know exists and their functions.","lastModifiedDate":"2021-08-27"},{"lineNumber":136,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":137,"author":{"gitId":"clementkfj"},"content":"     * @return The helpful message.","lastModifiedDate":"2021-09-02"},{"lineNumber":138,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"clementkfj"},"content":"    public String helpMessage() {","lastModifiedDate":"2021-09-02"},{"lineNumber":140,"author":{"gitId":"clementkfj"},"content":"        return (\"The following commands are compatible with our task-planning chatbot!\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":141,"author":{"gitId":"clementkfj"},"content":"                + \"list(or l for short):\" + \"\\nprovides a list of items in your task list.\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":142,"author":{"gitId":"clementkfj"},"content":"                + \"done {number}:\" + \"\\nticks the task with that number as done!\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":143,"author":{"gitId":"clementkfj"},"content":"                + \"delete(or del for short) {number}:\\n\" + \"deletes the task with that number off the list.\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":144,"author":{"gitId":"clementkfj"},"content":"                + \"bye:\\n\" + \"ends the program.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"clementkfj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"clementkfj"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"clementkfj"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"clementkfj"},"content":"        return obj instanceof Ui;","lastModifiedDate":"2021-09-07"},{"lineNumber":153,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"clementkfj":154}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":" * Represents a command that adds an item into the task list from the user\u0027s input","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"abstract class AddCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"     * Returns false since an addition command should not trigger the program to","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"     * exit.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"     * @return boolean that has value false since it should not exit the program.","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"        return obj instanceof AddCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"clementkfj":26}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":" * A generic interface that gives the backbone of the commands that user can input to the","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":" * program.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"public interface Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"     * Executes the current command and activates the Tasklist, Ui and Storage objects to","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"     * perform certain actions based on the command given.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"     * @param taskList Tasklist that contains an Arraylist of agendas on the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"     * @param ui Ui that outputs something based on the command given.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"     * @param storage Storage that changes the list stored in data/duke.txt based on the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException Deals with any errors that rises due to the user\u0027s input.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"    String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"     * A method that checks whether the current command will cause the program to exit or not.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"     * @return a boolean that prompts the program whether to exit.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"    boolean isExit();","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"clementkfj":31}},{"path":"src/main/java/duke/command/DeadlineAddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":" * A command that adds a deadline task to the current list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"public class DeadlineAddCommand extends AddCommand {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"    private String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"    private String time;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"     * Stores a description and time of the task to be dealt with later.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"     * @param time The time of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"    public DeadlineAddCommand(String description, String time) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"     * This method adds the deadline to the task list, stores the deadline into the storage and outputs","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"     * the current number of tasks the user has in his task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"     * @param taskList Tasklist that contains an Arraylist of agendas on the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"     * @param ui Ui that outputs something based on the command given.","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"     * @param storage Storage that changes the list stored in data/duke.txt based on the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"     * @return The message that states that Deadline has been added.","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException catches an error when input is wrong.","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"        String toPrint;","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"clementkfj"},"content":"        int totalTasks \u003d taskList.addToList(\"D\", description, time);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"clementkfj"},"content":"        storage.addToText(\"D\", description, time);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"clementkfj"},"content":"        toPrint \u003d ui.addingTask(totalTasks, description, time, \"D\");","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"clementkfj"},"content":"        return toPrint;","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"clementkfj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"clementkfj"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"clementkfj"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"clementkfj"},"content":"        if (!(obj instanceof DeadlineAddCommand)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"clementkfj"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"clementkfj"},"content":"        DeadlineAddCommand other \u003d (DeadlineAddCommand) obj;","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"clementkfj"},"content":"        return this.description.equals(other.description) \u0026\u0026 this.time.equals(other.time);","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"clementkfj":57}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":" * A command that deletes a current task from the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"    private int startOfString;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"    public DeleteCommand(int startOfString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"        this.startOfString \u003d startOfString;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"     * Executes a command to the task list to delete the current task. Removes the task from the memory","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"     * in storage, and outputs what task has been deleted from the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"     * @param taskList Tasklist that contains an Arraylist of agendas on the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"     * @param ui Ui that outputs something based on the command given.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"     * @param storage Storage that changes the list stored in data/duke.txt based on the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"     * @return A message that tells the user that task has been deleted.","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException catches an error where someone inputs something wrong.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"        Task taskToDelete \u003d taskList.deleteTask(startOfString);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"        storage.deleteFromFile(taskToDelete);","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"        return ui.markAsDeleted(taskToDelete);","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"     * A method that checks whether the current command will cause the program to exit or not.","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"clementkfj"},"content":"     * @return a boolean that prompts the program whether to exit.","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"clementkfj"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"clementkfj"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"clementkfj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"clementkfj"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"clementkfj"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"clementkfj"},"content":"        if (!(obj instanceof DeleteCommand)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"clementkfj"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"clementkfj"},"content":"        DeleteCommand other \u003d (DeleteCommand) obj;","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"clementkfj"},"content":"        return startOfString \u003d\u003d other.startOfString;","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"clementkfj":58}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":" * A command that changes the selected task status to \u0027done\u0027.","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"public class DoneCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"    private int startOfString;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"    public DoneCommand(int startOfString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"        this.startOfString \u003d startOfString;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"     * Executes a command that changes the task in the list to done as well as change the item status to","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"     * \u0027done\u0027 in storage. Ui will output the task that has been changed to done afterwards.","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"     * @param taskList Tasklist that contains an Arraylist of agendas on the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"     * @param ui Ui that outputs something based on the command given.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"     * @param storage Storage that changes the list stored in data/duke.txt based on the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"     * @return A message that says that a task has been marked as done.","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException catches an error when there is an error in input.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"        Task taskToChange \u003d taskList.retrieveTask(startOfString);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"        storage.changeDone(taskToChange);","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"        return ui.markAsDone(taskToChange);","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"     * A method that checks whether the current command will cause the program to exit or not.","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"clementkfj"},"content":"     * @return a boolean that prompts the program whether to exit.","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"clementkfj"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"clementkfj"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"clementkfj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"clementkfj"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"clementkfj"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"clementkfj"},"content":"        if (!(obj instanceof DoneCommand)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"clementkfj"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"clementkfj"},"content":"        DoneCommand other \u003d (DoneCommand) obj;","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"clementkfj"},"content":"        return startOfString \u003d\u003d other.startOfString;","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"clementkfj":58}},{"path":"src/main/java/duke/command/EventAddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":" * A command that adds Event to the task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"public class EventAddCommand extends AddCommand {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"    private String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"    private String time;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"     * Adding a description and a time to the Command to be used in the future.","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"     * @param time The time of the task.","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"    public EventAddCommand(String description, String time) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"     * Executes a command to add keyed in event to the task list as well as memory. Ui will output","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"     * a message stating the total number of tasks in the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"     * @param taskList Tasklist that contains an Arraylist of agendas on the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"     * @param ui Ui that outputs something based on the command given.","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"     * @param storage Storage that changes the list stored in data/duke.txt based on the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"     * @return A message that says that an event has been successfully added.","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException catches errors in user input.","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"        int totalTasks \u003d taskList.addToList(\"E\", description, time);","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"clementkfj"},"content":"        storage.addToText(\"E\", description, time);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"clementkfj"},"content":"        return ui.addingTask(totalTasks, description, time, \"E\");","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"clementkfj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"clementkfj"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"clementkfj"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"clementkfj"},"content":"        if (!(obj instanceof EventAddCommand)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"clementkfj"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"clementkfj"},"content":"        EventAddCommand other \u003d (EventAddCommand) obj;","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"clementkfj"},"content":"        return this.description.equals(other.description) \u0026\u0026 this.time.equals(other.time);","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"clementkfj":55}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":" * A command that tells the program to exit.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"     * Executes a command to the Ui side to output a goodbye message and closes the program.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"     * @param taskList Tasklist that contains an Arraylist of agendas on the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"     * @param ui Ui that outputs something based on the command given.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"     * @param storage Storage that changes the list stored in data/duke.txt based on the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"     * @return A message that prints goodbye to the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"        return ui.byeMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"     * A method that causes the program to exit since this is ExitCommand.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"     * @return a boolean that prompts the program whether to exit.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"        return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"clementkfj"},"content":"        return obj instanceof ExitCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"clementkfj":42}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"    private String keyWords;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"    public FindCommand(String keyWords) {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"        this.keyWords \u003d keyWords;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"     * Executes a command to find similar tasks that have the same name as the keywords given.","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"     * @param taskList Tasklist that contains an Arraylist of agendas on the list.","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"     * @param ui Ui that outputs something based on the command given.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"     * @param storage Storage that changes the list stored in data/duke.txt based on the command.","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"     * @return A messsage that includes all tasks that match the given keywords.","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException An exception thrown if nothing is found.","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"        return taskList.findSimilarTasks(keyWords);","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"     * A method that causes the program not to exit.","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"     * @return a boolean that tells the program it is not exiting.","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"        return false;","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"clementkfj":39}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":" * A command that creates a list of helpful commands so the user can understand more.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"public class HelpCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"     * Executes a command to Ui to print out a message containing helpful information for available","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"     * commands.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"     * @param taskList Tasklist that contains an Arraylist of agendas on the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"     * @param ui Ui that outputs something based on the command given.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"     * @param storage Storage that changes the list stored in data/duke.txt based on the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"        return ui.helpMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"     * A method that checks whether the current command will cause the program to exit or not.","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"     * @return a boolean that prompts the program whether to exit.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"clementkfj"},"content":"        return obj instanceof HelpCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"clementkfj":42}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":" * A command that outputs a list of items that are in the user\u0027s task list.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"     * Method executes a command that asks TaskList to print out a list of items in the Arraylist","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"     * and ui will print out a line if all the tasks have been completed in TaskList.","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"     * @param taskList Tasklist that contains an Arraylist of agendas on the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"     * @param ui Ui that outputs something based on the command given.","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"     * @param storage Storage that changes the list stored in data/duke.txt based on the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"     * @return The list of items in your taskList.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException throws an exception that catches error in user input.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"        return taskList.printItems();","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"     * A method that checks whether the current command will cause the program to exit or not.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"     * @return a boolean that prompts the program whether to exit.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"clementkfj"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"clementkfj"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"clementkfj"},"content":"        return obj instanceof ListCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"clementkfj":45}},{"path":"src/main/java/duke/command/TodoAddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":" * A command that adds a To do item to the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"public class TodoAddCommand extends AddCommand {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"    private String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"    public TodoAddCommand(String description) {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"     * Executes a command that adds a to do item to TaskList and Storage, and prints a message from the Ui","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"     * that updates how many tasks are currently in your list of tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"     * @param taskList Tasklist that contains an Arraylist of agendas on the list.","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"     * @param ui Ui that outputs something based on the command given.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"     * @param storage Storage that changes the list stored in data/duke.txt based on the command.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"     * @return A message that tells the user that they have added a Todo.","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"     * @throws DukeException throws an exception for user input error.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"        String toPrint;","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"        int totalTasks \u003d taskList.addToList(\"T\", description, \"NA\");","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"        storage.addToText(\"T\", description, \"NA\");","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"        toPrint \u003d ui.addingTask(totalTasks, description, \"NA\", \"T\");","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"        return toPrint;","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"clementkfj"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"clementkfj"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"clementkfj"},"content":"        if (!(obj instanceof TodoAddCommand)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"clementkfj"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"clementkfj"},"content":"        TodoAddCommand other \u003d (TodoAddCommand) obj;","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"clementkfj"},"content":"        return this.description.equals(other.description);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"clementkfj":49}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":" * Deadline is an extension of task, which includes an endTime specified by the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"    private String endTime;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"     * Initialises a deadline","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"     * @param str The description of the deadline.","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"     * @param endTime The ending time of the deadline.","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"    public Deadline(String str, LocalDateTime endTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"        super(str, endTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"        DateTimeFormatter dateOnly \u003d DateTimeFormatter.ofPattern(\"MMM dd, yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"        this.endTime \u003d dateOnly.format(endTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + endTime + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"        if (!super.equals(obj)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"        if (!(obj instanceof Deadline)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"clementkfj"},"content":"        Deadline other \u003d (Deadline) obj;","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"clementkfj"},"content":"        return this.endTime.equals(other.endTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"clementkfj":44}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":" * Event is an extension of Task, and includes a start time for the event when the user specifies it.","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"    private String startTime;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"     * Initialises an Event.","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"     * @param str String that tells us the description.","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"     * @param startTime The starting time of the event.","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"    public Event(String str, LocalDateTime startTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"        super(str, startTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"        DateTimeFormatter dateOnly \u003d DateTimeFormatter.ofPattern(\"MMM d, yyyy HH:mm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"        this.startTime \u003d dateOnly.format(startTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"        return \"[E]\" + super.toString() + \" (on: \" + startTime + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"        if (!super.equals(obj)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"        if (!(obj instanceof Event)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"clementkfj"},"content":"        Event other \u003d (Event) obj;","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"clementkfj"},"content":"        return this.startTime.equals(other.startTime);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"clementkfj":44}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":" * A task is an item written by the user and consists of the name of the task,","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":" * whether it is done or not and the time in which it needs to be done by(when applicable).","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"    private String itemName;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"    public Task(String str) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"        itemName \u003d str;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"     * Initialises a Task.","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"     * @param str String that tells us the task description.","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"     * @param dateTime the Date that the task is happening.","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"    public Task(String str, LocalDateTime dateTime) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"        itemName \u003d str;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"     * Returns the task title when needed.","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"     * @return the task title.","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"    public String getItemName() {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"        return itemName;","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"clementkfj"},"content":"     * Checks whether the task is completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"clementkfj"},"content":"     * @return the task completion status.","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"clementkfj"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"clementkfj"},"content":"        return isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"clementkfj"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"clementkfj"},"content":"     * Changes the completion status of the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"clementkfj"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"clementkfj"},"content":"     * @param doneStatus Changes the completion status to true if doneStatus is 1.","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"clementkfj"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"clementkfj"},"content":"    public void changeIsDone(String doneStatus) {","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"clementkfj"},"content":"        if (doneStatus.equals(\"1\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"clementkfj"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"clementkfj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"clementkfj"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + itemName;","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"clementkfj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"clementkfj"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"clementkfj"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"clementkfj"},"content":"        if (!(obj instanceof Task)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"clementkfj"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"clementkfj"},"content":"        Task other \u003d (Task) obj;","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"clementkfj"},"content":"        boolean isItemNameEqual \u003d this.itemName.equals(other.itemName);","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"clementkfj"},"content":"        boolean isDateTimeEqual \u003d this.dateTime.equals(other.dateTime);","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"clementkfj"},"content":"        boolean isDoneEqual \u003d this.isDone \u003d\u003d other.isDone;","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"clementkfj"},"content":"        return isItemNameEqual \u0026\u0026 isDateTimeEqual \u0026\u0026 isDoneEqual;","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"clementkfj":79}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":" * To do is an extension of Task which allows it to have it\u0027s own unique toString method.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"    public Todo(String str) {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"        super(str);","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"        if (!(super.equals(obj))) {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"            return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"        if (!(obj instanceof Todo)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"            return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"        return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"clementkfj":30}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"\u003cfx:root","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"        alignment\u003d\"TOP_RIGHT\"","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"        maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"        maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"        prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"        type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"        xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"        \u003cLabel","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"                fx:id\u003d\"dialog\"","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"                text\u003d\"Label\"","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"                wrapText\u003d\"true\"","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"        /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"        \u003cImageView","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"                fx:id\u003d\"displayPicture\"","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"                fitHeight\u003d\"70.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"                fitWidth\u003d\"70.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"                pickOnBounds\u003d\"true\"","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"                preserveRatio\u003d\"true\"","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"        /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"        \u003cInsets bottom\u003d\"15.0\" top\u003d\"15.0\" left\u003d\"8.0\" right\u003d\"8.0\" /\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"clementkfj":34}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"\u003cAnchorPane","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"        maxHeight\u003d\"-Infinity\"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"        maxWidth\u003d\"-Infinity\"","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"        minHeight\u003d\"-Infinity\"","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"        minWidth\u003d\"-Infinity\"","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"        prefHeight\u003d\"600.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"        prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"        xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"        fx:controller\u003d\"duke.MainWindow\"","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"        \u003cTextField","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"                fx:id\u003d\"userInput\"","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"                prefWidth\u003d\"324.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"                AnchorPane.bottomAnchor\u003d\"1.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"        /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"        \u003cButton","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"                fx:id\u003d\"sendButton\"","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"                layoutX\u003d\"324.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"                layoutY\u003d\"558.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"clementkfj"},"content":"                mnemonicParsing\u003d\"false\"","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"clementkfj"},"content":"                onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"clementkfj"},"content":"                prefHeight\u003d\"41.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"clementkfj"},"content":"                prefWidth\u003d\"76.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"clementkfj"},"content":"                text\u003d\"Send\"","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"clementkfj"},"content":"        /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"clementkfj"},"content":"        \u003cScrollPane","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"clementkfj"},"content":"                fx:id\u003d\"scrollPane\"","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"clementkfj"},"content":"                hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"clementkfj"},"content":"                hvalue\u003d\"1.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"clementkfj"},"content":"                prefHeight\u003d\"557.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"clementkfj"},"content":"                prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"clementkfj"},"content":"                vvalue\u003d\"1.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"clementkfj"},"content":"        \u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"clementkfj"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"clementkfj"},"content":"                \u003cVBox","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"clementkfj"},"content":"                        fx:id\u003d\"dialogContainer\"","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"clementkfj"},"content":"                        prefHeight\u003d\"552.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"clementkfj"},"content":"                        prefWidth\u003d\"388.0\"","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"clementkfj"},"content":"                /\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"clementkfj"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"clementkfj"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"clementkfj"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"clementkfj"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"clementkfj":56}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"class ParserTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"    void parse() {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"            assertEquals(new ExitCommand(), Parser.parse(\"bye\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"clementkfj":21}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"class TaskListTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"clementkfj"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"clementkfj"},"content":"    void dateFormatting() {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"clementkfj"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"clementkfj"},"content":"        assertEquals(LocalDateTime.of(1999, 07, 06, 02, 00), taskList.dateFormatting(\"06/07/1999 02:00\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"clementkfj"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"clementkfj"},"content":"    void addToList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"clementkfj"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"clementkfj"},"content":"            ArrayList\u003cTask\u003e xs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"clementkfj"},"content":"            ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"clementkfj"},"content":"            lst.add(new Todo(\"Test JUnit\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"clementkfj"},"content":"            TaskList taskList \u003d new TaskList(xs);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"clementkfj"},"content":"            assertEquals(lst.size(), taskList.addToList(\"T\", \"Test JUnit\", \"NA\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"clementkfj"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"clementkfj"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"clementkfj"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"clementkfj":32}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"clementkfj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"clementkfj"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"clementkfj"},"content":"class UiTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"clementkfj"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"clementkfj"},"content":"    void byeMessage() {","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"clementkfj"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"clementkfj"},"content":"        assertEquals(\"Bye! Please visit me again!\", ui.byeMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"clementkfj"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"clementkfj"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"clementkfj":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"clementkfj"},"content":"event soccer with friends /at Monday 4:50pm","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"clementkfj"},"content":"todo go to heaven","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"clementkfj"},"content":"deadline CS2103T IP /by Thursday 2359","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"clementkfj"},"content":"done 2","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"clementkfj":4}}]
