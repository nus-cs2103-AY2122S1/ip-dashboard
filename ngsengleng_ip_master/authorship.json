[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"ngsengleng"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"ngsengleng"},"content":"    configFile \u003d rootProject.file(\"${rootDir}/config/checkstyle/checkstyle.xml\")","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ngsengleng":18,"-":45}},{"path":"data/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"[T]|[]|asda","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"[T]|[]|asdasd","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"[E]|[]|fish fish|2001-02-10","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"[E]|[]|fish head|2000-01-01","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"[T]|[]|smile","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"[T]|[]|hihi","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"[T]|[]|asdas","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"[T]|[]|asdas","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"ngsengleng":8}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"### Feature-Add Todo","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"Adds a todo item to the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"### Feature-Add Event","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"Adds an event to the task list containing task name and the date of the event.","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"### Feature-Add Deadline","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"Adds a deadline to the task list containing the task name and the date of the deadline.","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"### Feature-List items","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"Lists all the tasks currently in the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"### Feature-Mark item as complete","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"Marks an item on the task list as completed.","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"### Feature-Find task(s) using a keyword","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"Returns a list of task names that match the given keyword.","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"ngsengleng"},"content":"### Feature-Delete an item","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"ngsengleng"},"content":"Deletes an item from the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"ngsengleng"},"content":"### Feature-Save the task list offline","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"ngsengleng"},"content":"Stores current items in a task list into a text file for offline storage.","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"ngsengleng"},"content":"### `todo` - Add a todo to task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"ngsengleng"},"content":"The todo command adds a todo task to the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"ngsengleng"},"content":"`todo (task name)`","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"ngsengleng"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"ngsengleng"},"content":"The task name is added to the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"ngsengleng"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"ngsengleng"},"content":"[T]|[]|some task","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"ngsengleng"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"ngsengleng"},"content":"### `event` - Add an event to task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"ngsengleng"},"content":"The event command adds an event task to the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"ngsengleng"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"ngsengleng"},"content":"`todo (event name) \\at yyyy-mm-dd`","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"ngsengleng"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"ngsengleng"},"content":"The event name is added to the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"ngsengleng"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"ngsengleng"},"content":"[E]|[]|some task (at: 2003-03-01)","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"ngsengleng"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"ngsengleng"},"content":"### `deadline` - Add a deadline to task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"ngsengleng"},"content":"The deadline command adds a deadline task to the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"ngsengleng"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"ngsengleng"},"content":"`deadline (deadline name) \\by yyyy-mm-dd`","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"ngsengleng"},"content":"The deadline name is added to the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"ngsengleng"},"content":"[D]|[]|some task (by: 2001-02-01)","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"ngsengleng"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"ngsengleng"},"content":"### `items` - List all items on the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"ngsengleng"},"content":"List all the items in the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"ngsengleng"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"ngsengleng"},"content":"`items`","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"ngsengleng"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"ngsengleng"},"content":"Displays a list of all tasks in the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"ngsengleng"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"ngsengleng"},"content":"1. [T]|[]|some task","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"ngsengleng"},"content":"2. [T]|[]|some task","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"ngsengleng"},"content":"3. [T]|[]|some task","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"ngsengleng"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"ngsengleng"},"content":"### `completed` - Mark an item as completed.","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"ngsengleng"},"content":"Marks the specified task as completed.","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"ngsengleng"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"ngsengleng"},"content":"`completed (index)`","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"ngsengleng"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"ngsengleng"},"content":"Displays the completed task as a confirmation.","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"ngsengleng"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"ngsengleng"},"content":"You have successfully completed task:","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"ngsengleng"},"content":"[T]|[x]|some task","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"ngsengleng"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"ngsengleng"},"content":"### `delete` - Delete a task from the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"ngsengleng"},"content":"Delete a task specified by the index from the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"ngsengleng"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"ngsengleng"},"content":"`delete (index)`","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":130,"author":{"gitId":"ngsengleng"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":131,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":132,"author":{"gitId":"ngsengleng"},"content":"Displays the deleted task as a confirmation.","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"ngsengleng"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"ngsengleng"},"content":"[D]|[]|some task (by: 2001-02-01)","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"ngsengleng"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":136,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":137,"author":{"gitId":"ngsengleng"},"content":"### `find` - Find a task(s) from the task list","lastModifiedDate":"2021-09-15"},{"lineNumber":138,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":139,"author":{"gitId":"ngsengleng"},"content":"Find all tasks that match a keyword from the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":141,"author":{"gitId":"ngsengleng"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":142,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":143,"author":{"gitId":"ngsengleng"},"content":"`find (keyword)`","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":145,"author":{"gitId":"ngsengleng"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":146,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":147,"author":{"gitId":"ngsengleng"},"content":"Displays all tasks with matching keyword.","lastModifiedDate":"2021-09-15"},{"lineNumber":148,"author":{"gitId":"ngsengleng"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":149,"author":{"gitId":"ngsengleng"},"content":"[D]|[]|some task (by: 2001-02-01)","lastModifiedDate":"2021-09-15"},{"lineNumber":150,"author":{"gitId":"ngsengleng"},"content":"[D]|[]|some task (by: 2001-02-01)","lastModifiedDate":"2021-09-15"},{"lineNumber":151,"author":{"gitId":"ngsengleng"},"content":"[D]|[]|some task (by: 2001-02-01)","lastModifiedDate":"2021-09-15"},{"lineNumber":152,"author":{"gitId":"ngsengleng"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":153,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":154,"author":{"gitId":"ngsengleng"},"content":"### `bye` - Save the task list offline","lastModifiedDate":"2021-09-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":156,"author":{"gitId":"ngsengleng"},"content":"Saves all tasks offline into a text document.","lastModifiedDate":"2021-09-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":160,"author":{"gitId":"ngsengleng"},"content":"`bye`","lastModifiedDate":"2021-09-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":164,"author":{"gitId":"ngsengleng"},"content":"Displays a confirmation after saving to a text document.","lastModifiedDate":"2021-09-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":167,"author":{"gitId":"ngsengleng"},"content":"Your data has been successfully saved!","lastModifiedDate":"2021-09-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"ngsengleng":139,"-":29}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":" * A class that extends the Task class, containing information about deadlines.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"     * Creates a Deadline object.","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"     * @param description User input of deadline to be added.","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"     * @param date User input of date of deadline.","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"    public Deadline(String description, String date) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"            parseDate(date);","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"        } catch (NumberFormatException | DateTimeException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"the event date has to be in format: \\nyyyy-mm-dd\");","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"        String deadlineMarker \u003d \"[D]\";","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"ngsengleng"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"ngsengleng"},"content":"            return deadlineMarker + \"|\" + hasCross + \"|\" + item + \"|\" + date;","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"ngsengleng"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"ngsengleng"},"content":"            return deadlineMarker + \"|\" + hasNoCross + \"|\" + item + \"|\" + date;","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ngsengleng":35}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"ngsengleng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"ngsengleng"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"ngsengleng"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"ngsengleng"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"ngsengleng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"ngsengleng"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"ngsengleng"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"ngsengleng"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"ngsengleng"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"ngsengleng"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"ngsengleng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"ngsengleng"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"ngsengleng"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"ngsengleng"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"ngsengleng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"ngsengleng"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"ngsengleng"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"ngsengleng"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"ngsengleng"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"ngsengleng"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ngsengleng":60}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":" * This class contains inner methods for initializing and running the Duke bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"    private Tasklist listOfItems;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"    private final Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"    private final InputParser parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"     * Creates a new Duke object and instantiates Storage, Ui and an input parser.","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"    public Duke() {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"        String filepath \u003d \"data/Duke.txt\";","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"        listOfItems \u003d new Tasklist();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"        parser \u003d new InputParser();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"        Path path \u003d Paths.get(System.getProperty(\"user.dir\"), filepath);","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ngsengleng"},"content":"            if (Files.notExists(path)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"ngsengleng"},"content":"                File f \u003d new File(path.toString());","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"ngsengleng"},"content":"                f.getParentFile().mkdirs();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"ngsengleng"},"content":"                f.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"ngsengleng"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"ngsengleng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"ngsengleng"},"content":"            getResponse(\"An error occurred when opening the file. Try rerunning Duke again.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"ngsengleng"},"content":"        storage \u003d new Storage(path);","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"ngsengleng"},"content":"        listOfItems \u003d storage.load();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"ngsengleng"},"content":"     * Marks an item as done on the task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ngsengleng"},"content":"     * @param input Gui input from the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"ngsengleng"},"content":"     * @return String confirmation of task being successfully completed.","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"ngsengleng"},"content":"    private String markAsDone(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"ngsengleng"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"ngsengleng"},"content":"            String[] keywords \u003d input.split(\" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"ngsengleng"},"content":"            Integer idx \u003d keywords.length \u003e 1 ? Integer.parseInt(keywords[1]) : -1;","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"ngsengleng"},"content":"            Task task \u003d listOfItems.getTask(idx);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"ngsengleng"},"content":"            task.setDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"ngsengleng"},"content":"            String completionMessage \u003d String.format(\"You have successfully completed task %s:\\n\", keywords[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"ngsengleng"},"content":"            return completionMessage + task;","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"ngsengleng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"your index cannot be found in the task list!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"ngsengleng"},"content":"     * Adds a todo item to the list.","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"ngsengleng"},"content":"     * @param input Gui input from the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"ngsengleng"},"content":"     * @return String confirmation of task being successfully added.","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"ngsengleng"},"content":"     * @throws DukeException when input format is wrong.","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"ngsengleng"},"content":"    private String addAsTodo(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"ngsengleng"},"content":"        // split input into command and text","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"ngsengleng"},"content":"        String[] elements \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"ngsengleng"},"content":"        if (elements.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"you need to describe the todo in format:\\n todo (description)!\");","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"ngsengleng"},"content":"        String textDescription \u003d elements[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"ngsengleng"},"content":"        Task todo \u003d new Todo(textDescription);","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"ngsengleng"},"content":"        listOfItems.addTask(todo);","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"ngsengleng"},"content":"        return ui.printAdditionConfirmation(todo, listOfItems);","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"ngsengleng"},"content":"     * Adds an event item to the list.","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"ngsengleng"},"content":"     * @param input Gui input from the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"ngsengleng"},"content":"     * @return String confirmation of task being successfully added.","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"ngsengleng"},"content":"     * @throws DukeException when input format is wrong.","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"ngsengleng"},"content":"    private String addAsEvent(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"ngsengleng"},"content":"        String[] keywords \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"ngsengleng"},"content":"        if (keywords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"you need to describe your event to me in format:\\n event (description)!\");","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"ngsengleng"},"content":"        // split input into command and text","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"ngsengleng"},"content":"        String[] elements \u003d keywords[1].split(\" /at \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"ngsengleng"},"content":"        if (elements.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"you need to tell me the time in format:\\n (task) /at (time)!\");","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"ngsengleng"},"content":"        String time \u003d elements[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"ngsengleng"},"content":"        String textDescription \u003d elements[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"ngsengleng"},"content":"        Task event \u003d new Event(textDescription, time);","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"ngsengleng"},"content":"        listOfItems.addTask(event);","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"ngsengleng"},"content":"        return ui.printAdditionConfirmation(event, listOfItems);","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"ngsengleng"},"content":"     * Adds a deadline item to the list.","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"ngsengleng"},"content":"     * @param input Gui input from the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"ngsengleng"},"content":"     * @return String confirmation of task being successfully added.","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"ngsengleng"},"content":"     * @throws DukeException when input format is wrong.","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"ngsengleng"},"content":"    private String addAsDeadline(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":112,"author":{"gitId":"ngsengleng"},"content":"        String[] keywords \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"ngsengleng"},"content":"        if (keywords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"you need to describe your deadline to me in format:\\n deadline (description)!\");","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"ngsengleng"},"content":"        String[] elements \u003d keywords[1].split(\" /by \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"ngsengleng"},"content":"        if (elements.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"you need to tell me the time in format:\\n (task) /by (time)!\");","lastModifiedDate":"2021-09-14"},{"lineNumber":119,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"ngsengleng"},"content":"        String time \u003d elements[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"ngsengleng"},"content":"        String textDescription \u003d elements[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"ngsengleng"},"content":"        Task deadline \u003d new Deadline(textDescription, time);","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"ngsengleng"},"content":"        listOfItems.addTask(deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"ngsengleng"},"content":"        return ui.printAdditionConfirmation(deadline, listOfItems);","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"ngsengleng"},"content":"     * Deletes an item from the list by passing the index of the task to be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"ngsengleng"},"content":"     * @param input Command line input from the user to be parsed.","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"ngsengleng"},"content":"     * @return String confirmation of task being successfully deleted.","lastModifiedDate":"2021-09-01"},{"lineNumber":132,"author":{"gitId":"ngsengleng"},"content":"     * @throws DukeException Throws an exception if index is not on the list or with wrong input.","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"ngsengleng"},"content":"    private String deleteItem(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":135,"author":{"gitId":"ngsengleng"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"ngsengleng"},"content":"            Integer idx \u003d Integer.parseInt(parser.getDescription(input));","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"ngsengleng"},"content":"            Task item \u003d listOfItems.getTask(idx);","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"ngsengleng"},"content":"            listOfItems.removeTask(idx);","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"ngsengleng"},"content":"            return ui.printDeletionConfirmation(item, listOfItems);","lastModifiedDate":"2021-09-01"},{"lineNumber":140,"author":{"gitId":"ngsengleng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":141,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"you need to choose a number from the list in the form: delete (list index)!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"ngsengleng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":143,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"you need to pick an item from within the list!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":144,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":145,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":146,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":147,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"ngsengleng"},"content":"     * Displays a list of items on the command line that contain the keyword entered by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"ngsengleng"},"content":"     * @param input Command line input from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"ngsengleng"},"content":"     * @return String list of items on the task list.","lastModifiedDate":"2021-09-02"},{"lineNumber":152,"author":{"gitId":"ngsengleng"},"content":"     * @throws DukeException Throws an exception if no keyword was entered or if no tasks match the keyword given.","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"ngsengleng"},"content":"    private String findItems(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":155,"author":{"gitId":"ngsengleng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"ngsengleng"},"content":"            String keyword \u003d parser.getDescription(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"ngsengleng"},"content":"            Tasklist validItems \u003d listOfItems.findAllBy(keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"ngsengleng"},"content":"            return ui.listToPrintableString(validItems);","lastModifiedDate":"2021-09-01"},{"lineNumber":159,"author":{"gitId":"ngsengleng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"please input a keyword in the format:\\n[find] (keyword)\");","lastModifiedDate":"2021-09-14"},{"lineNumber":161,"author":{"gitId":"ngsengleng"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"no tasks match your given keyword!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":165,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":167,"author":{"gitId":"ngsengleng"},"content":"     * Handles invalid commands from the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":168,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":169,"author":{"gitId":"ngsengleng"},"content":"     * @throws DukeException Throws an exception when a wrong input is given on the command line.","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":171,"author":{"gitId":"ngsengleng"},"content":"    private void markAsInvalid(String input) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":172,"author":{"gitId":"ngsengleng"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":173,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"you need to type something!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":174,"author":{"gitId":"ngsengleng"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":175,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"your command is invalid!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":176,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":177,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":179,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":180,"author":{"gitId":"ngsengleng"},"content":"     * Handles the user\u0027s input and determines which command should be run.","lastModifiedDate":"2021-08-17"},{"lineNumber":181,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":182,"author":{"gitId":"ngsengleng"},"content":"     * @param input Gui input from the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":183,"author":{"gitId":"ngsengleng"},"content":"     * @return String response from the user\u0027s input.","lastModifiedDate":"2021-09-01"},{"lineNumber":184,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":185,"author":{"gitId":"ngsengleng"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":186,"author":{"gitId":"ngsengleng"},"content":"        String command \u003d parser.getCommand(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":187,"author":{"gitId":"ngsengleng"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":188,"author":{"gitId":"ngsengleng"},"content":"            switch(command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":189,"author":{"gitId":"ngsengleng"},"content":"            case \"items\":","lastModifiedDate":"2021-08-17"},{"lineNumber":190,"author":{"gitId":"ngsengleng"},"content":"                return ui.listToPrintableString(listOfItems);","lastModifiedDate":"2021-09-01"},{"lineNumber":191,"author":{"gitId":"ngsengleng"},"content":"            case \"completed\":","lastModifiedDate":"2021-08-17"},{"lineNumber":192,"author":{"gitId":"ngsengleng"},"content":"                return markAsDone(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":193,"author":{"gitId":"ngsengleng"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-18"},{"lineNumber":194,"author":{"gitId":"ngsengleng"},"content":"                return addAsTodo(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":195,"author":{"gitId":"ngsengleng"},"content":"            case \"event\":","lastModifiedDate":"2021-08-18"},{"lineNumber":196,"author":{"gitId":"ngsengleng"},"content":"                return addAsEvent(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":197,"author":{"gitId":"ngsengleng"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-18"},{"lineNumber":198,"author":{"gitId":"ngsengleng"},"content":"                return addAsDeadline(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":199,"author":{"gitId":"ngsengleng"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-19"},{"lineNumber":200,"author":{"gitId":"ngsengleng"},"content":"                return deleteItem(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":201,"author":{"gitId":"ngsengleng"},"content":"            case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":202,"author":{"gitId":"ngsengleng"},"content":"                return findItems(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":203,"author":{"gitId":"ngsengleng"},"content":"            case \"bye\":","lastModifiedDate":"2021-09-02"},{"lineNumber":204,"author":{"gitId":"ngsengleng"},"content":"                storage.save(listOfItems);","lastModifiedDate":"2021-09-02"},{"lineNumber":205,"author":{"gitId":"ngsengleng"},"content":"                return \"your data has been successfully saved!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":206,"author":{"gitId":"ngsengleng"},"content":"            case \"help\":","lastModifiedDate":"2021-09-08"},{"lineNumber":207,"author":{"gitId":"ngsengleng"},"content":"                return new ManPage().toString();","lastModifiedDate":"2021-09-08"},{"lineNumber":208,"author":{"gitId":"ngsengleng"},"content":"            default:","lastModifiedDate":"2021-08-17"},{"lineNumber":209,"author":{"gitId":"ngsengleng"},"content":"                markAsInvalid(input);","lastModifiedDate":"2021-08-18"},{"lineNumber":210,"author":{"gitId":"ngsengleng"},"content":"                break;","lastModifiedDate":"2021-08-17"},{"lineNumber":211,"author":{"gitId":"ngsengleng"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":212,"author":{"gitId":"ngsengleng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":213,"author":{"gitId":"ngsengleng"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":214,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":215,"author":{"gitId":"ngsengleng"},"content":"        return \"something\";","lastModifiedDate":"2021-09-01"},{"lineNumber":216,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ngsengleng":215,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":" * This class contains the exceptions for the Duke bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"    private static final String preMessage \u003d \"Sorry, \";","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"        super(preMessage + errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ngsengleng":11}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":" * This class extends the Task class, and contains information about events.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"     * Creates an Event object.","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"     * @param description User input for event to be added.","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"     * @param date User input for date to be associated with task.","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"    public Event(String description, String date) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"            parseDate(date);","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"        } catch (NumberFormatException | DateTimeException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"the event date has to be in format: \\nyyyy-mm-dd.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"the dates are invalid.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"ngsengleng"},"content":"        String eventMarker \u003d \"[E]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"ngsengleng"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"ngsengleng"},"content":"            return eventMarker + \"|\" + hasCross + \"|\" + item + \"|\" + date;","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"ngsengleng"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"ngsengleng"},"content":"            return eventMarker + \"|\" + hasNoCross + \"|\" + item + \"|\" + date;","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ngsengleng":37}},{"path":"src/main/java/duke/FileParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":" * This class parses the savefile for the Duke bot and returns a working Tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"public class FileParser {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"    public FileParser() {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"     * Takes in a string as an input and returns a task to be added to the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"     * @param input A line read from the save file in string format.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"     * @return A Task object to be added to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"     * @throws DukeException Throws an exception when an error is encountered when parsing the line from file.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"    public Task parse(String input) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"            String[] args \u003d input.split(\"\\\\|\");","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"            String taskType \u003d args[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"            Boolean isCompleted \u003d args[1].contains(\"X\");","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"            String taskDescription \u003d args[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"            String datetime \u003d args.length \u003e 3 ? args[3] : \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"            Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"            switch(taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"            case \"[E]\":","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"                task \u003d new Event(taskDescription, datetime);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ngsengleng"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ngsengleng"},"content":"            case \"[D]\":","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"ngsengleng"},"content":"                task \u003d new Deadline(taskDescription, datetime);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ngsengleng"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"ngsengleng"},"content":"            case \"[T]\":","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"ngsengleng"},"content":"                task \u003d new Todo(taskDescription);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ngsengleng"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ngsengleng"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ngsengleng"},"content":"                throw new DukeException(\"a line could not be read from the savefile or was read incorrectly. \"","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"ngsengleng"},"content":"                        + \"An empty list will be used instead.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"ngsengleng"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ngsengleng"},"content":"            if (isCompleted) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ngsengleng"},"content":"                task.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ngsengleng"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"ngsengleng"},"content":"            return task;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"ngsengleng"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"a line was saved incorrectly. An empty list will be used instead.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ngsengleng":53}},{"path":"src/main/java/duke/InputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":" * This class parses user input from the command line.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"public class InputParser {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"    public InputParser() {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"     * Returns the command keyword from the user\u0027s input.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"     * @param input Command line input from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"     * @return The command given by the user in string format.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"    public String getCommand(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"        return input.split(\" \")[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"     * Returns the String literal of the user\u0027s input describing the task to be added.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"     * @param input Command line input from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"     * @return The subsequent string of words after the keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"    public String getDescription(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"        return input.split(\" \", 2)[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ngsengleng":30}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ngsengleng":11}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ngsengleng":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/wheatly.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/glados.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"ngsengleng"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"ngsengleng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"ngsengleng"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"ngsengleng"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"ngsengleng"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"ngsengleng"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"ngsengleng"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"ngsengleng"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"ngsengleng"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"ngsengleng"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"ngsengleng"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"ngsengleng"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"ngsengleng"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"ngsengleng"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"ngsengleng"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ngsengleng":51}},{"path":"src/main/java/duke/ManPage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"import java.util.List;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"public class ManPage {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"    // items, completed, todo, event, deadline, delete, find, bye","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"    private final List\u003cString\u003e listOfCommands \u003d new ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"            \"items: Returns the list of tasks in the tasklist\\n\",","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"            \"completed: Marks a specified task as complete. \\n[format: completed \u003cindex\u003e]\\n\",","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"            \"todo: Adds a todo task to the task list. \\n[format: todo \u003ctask name\u003e]\\n\",","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"            \"event: Adds an event task to the task list.\\n[format: event \u003ctask name\u003e \\\\at \u003cyyyy-mm-dd\u003e]\\n\",","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"            \"deadline: Adds a deadline task to the task list. \\n[format: deadline \u003ctask name\u003e \\\\by \u003cyyyy-mm-dd\u003e]\\n\",","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"            \"delete: Deletes a task from the task list. \\n[format: delete \u003cindex\u003e\\n\",","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"            \"find: Returns all tasks with the keyword in their description. \\n[format: find \u003ckeyword\u003e]\\n\",","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"            \"bye: Saves the current items in the task list to file. \\n[format: bye]\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"            ));","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"    public ManPage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"    public String toString() {","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"        return String.join(\"############################\\n\", listOfCommands);","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ngsengleng":28}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":" * This class encapsulates reading and writing of the savefile for the Duke bot.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"    private final File saveFile;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"    private final FileParser parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"    private final Path filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"     * Creates a Storage object.","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"     * @param filePath File path to read saved data from.","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"    public Storage(Path filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"        saveFile \u003d new File(filePath.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"        parser \u003d new FileParser();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ngsengleng"},"content":"     * Loads data from savefile.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"ngsengleng"},"content":"     * Starts the session with an empty tasklist if there was an error found.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"ngsengleng"},"content":"     * @return A Tasklist object containing all the information from the save file as Task objects.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"ngsengleng"},"content":"     * @throws DukeException Throws an exception if the file could not be read or no file was found.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ngsengleng"},"content":"    public Tasklist load() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"ngsengleng"},"content":"        Tasklist taskList \u003d new Tasklist();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"ngsengleng"},"content":"        assert(saveFile !\u003d null);","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"ngsengleng"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"ngsengleng"},"content":"            Scanner s \u003d new Scanner(saveFile);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ngsengleng"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ngsengleng"},"content":"                taskList.addTask(parser.parse(s.nextLine()));","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"ngsengleng"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ngsengleng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"There was no savefile found. Starting session with an empty list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"ngsengleng"},"content":"        return taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"ngsengleng"},"content":"     * Accepts the tasklist and writes to file.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"ngsengleng"},"content":"     * @param taskList The Tasklist object in the current user\u0027s session.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"ngsengleng"},"content":"     * @throws DukeException Throws an exception if an error occurs while writing to file.","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"ngsengleng"},"content":"    public void save(Tasklist taskList) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"ngsengleng"},"content":"        assert(filePath !\u003d null);","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"ngsengleng"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"ngsengleng"},"content":"            String writableData \u003d taskList.toWritable();","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"ngsengleng"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.filePath.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"ngsengleng"},"content":"            fileWriter.write(writableData);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"ngsengleng"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"ngsengleng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"your data could not be saved.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ngsengleng":68}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":" * This class contains methods for storing information about the various tasks found in a Tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"    protected String item;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"    protected String hasCross \u003d \"[X]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"    protected String hasNoCross \u003d \"[]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"     * Creates a new Task object and instantiates its associated attributes.","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"     * @param input User input read from the GUI.","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"    public Task(String input) {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"        item \u003d input;","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"     * Sets a task in the tasklist to completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ngsengleng"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"ngsengleng"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"ngsengleng"},"content":"     * Saves the string input of the date into LocalDate format.","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"ngsengleng"},"content":"     * @param date String input by user.","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"ngsengleng"},"content":"    protected void parseDate(String date) {","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"ngsengleng"},"content":"        String[] dateStrings \u003d date.split(\"-\");","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"ngsengleng"},"content":"        int[] dateArgs \u003d Arrays.stream(dateStrings).mapToInt(Integer::parseInt).toArray();","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"ngsengleng"},"content":"        this.date \u003d LocalDate.of(dateArgs[0], dateArgs[1], dateArgs[2]);","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"ngsengleng"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"ngsengleng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"ngsengleng"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"ngsengleng"},"content":"            return hasCross + \" \" + item;","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"ngsengleng"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"ngsengleng"},"content":"            return hasNoCross + \" \" + item;","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ngsengleng":51}},{"path":"src/main/java/duke/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"import java.util.ListIterator;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":" * This class contains methods for manipulating items found in a Duke bot\u0027s tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"public class Tasklist {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"    private final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"    public Tasklist() {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"     * Creates a new Tasklist object instantiated with Task objects stored.","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"     * @param tasks Task objects to be stored into the new object.","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"    public Tasklist(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"        for (Task t: tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"            this.tasks.add(t);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"     * Returns the current number of Tasks in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"ngsengleng"},"content":"     * @return Number of Tasks in the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"ngsengleng"},"content":"    public int size() {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"ngsengleng"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"ngsengleng"},"content":"     * Retrieves a Task from the one-based index task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"ngsengleng"},"content":"     * getTask(2) will return the second Task in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"ngsengleng"},"content":"     * @param idx The position of the Task to be retrieved.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"ngsengleng"},"content":"     * @return The Task object requested by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"ngsengleng"},"content":"     * @throws IndexOutOfBoundsException Throws an exception if index given does not exist in the current task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"ngsengleng"},"content":"    public Task getTask(int idx) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"ngsengleng"},"content":"        int i \u003d idx - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"ngsengleng"},"content":"        return tasks.get(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"ngsengleng"},"content":"     * Removes a Task from the one-based index task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"ngsengleng"},"content":"     * removeTask(2) will remove the second Task in the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"ngsengleng"},"content":"     * @param idx The position of the Task to be removed.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"ngsengleng"},"content":"     * @return The Task object removed from the task list by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"ngsengleng"},"content":"     * @throws IndexOutOfBoundsException Throws an exception if index given does not exist in the current task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"ngsengleng"},"content":"    public Task removeTask(int idx) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"ngsengleng"},"content":"        int i \u003d idx - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"ngsengleng"},"content":"        return tasks.remove(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"ngsengleng"},"content":"     * Adds a Task to the current task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"ngsengleng"},"content":"     * @param t Task passed by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"ngsengleng"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"ngsengleng"},"content":"        tasks.add(t);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"ngsengleng"},"content":"     * Returns a Tasklist containing all the items matching the given keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"ngsengleng"},"content":"     * @param keyword String keyword given by the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"ngsengleng"},"content":"     * @return A Tasklist containing all valid entries from the main list of items.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"ngsengleng"},"content":"    public Tasklist findAllBy(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"ngsengleng"},"content":"        Tasklist t \u003d new Tasklist(tasks.stream().filter(task -\u003e task.toString().contains(keyword))","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"ngsengleng"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"ngsengleng"},"content":"        if (t.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"ngsengleng"},"content":"            return null;","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"ngsengleng"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"ngsengleng"},"content":"            return t;","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"ngsengleng"},"content":"     * Returns the Tasklist in a file-writable String format.","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"ngsengleng"},"content":"     * @return Concatenated string of all Tasks in the Tasklist.","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"ngsengleng"},"content":"    public String toWritable() {","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"ngsengleng"},"content":"        return tasks.stream().map(task -\u003e task.toString() + \"\\n\").collect(Collectors.joining());","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"ngsengleng"},"content":"     * Returns an enumerated Tasklist.","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"ngsengleng"},"content":"     * @return A ListIterator object to be displayed.","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"ngsengleng"},"content":"    public ListIterator\u003cTask\u003e toIterable() {","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"ngsengleng"},"content":"        return tasks.listIterator();","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ngsengleng":102}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":" * This class extends the Task class and contains information about the todos.","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"        String todoMarker \u003d \"[T]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"            return todoMarker + \"|\" + hasCross + \"|\" + item;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"            return todoMarker + \"|\" + hasNoCross + \"|\" + item;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ngsengleng":21}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"import java.util.ListIterator;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":" * This class contains methods for printing information from the Tasklist to the command line.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"    public Ui() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"     * Returns a list that has been converted to a displayable string on the GUI.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"     * @param elements The list of elements to be converted.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"     * @return A list that has been converted to a string.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"    public String listToPrintableString(Tasklist elements) {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"        ListIterator\u003cTask\u003e it \u003d elements.toIterable();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"        if (elements.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"            return \"You have no items in your list. Add some with [todo], [deadline] or [event]!\";","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"            String concatString \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"            while (it.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"                Integer number \u003d it.nextIndex() + 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"                concatString \u003d concatString + number + \". \" + it.next() + \"\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ngsengleng"},"content":"            return concatString;","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"ngsengleng"},"content":"     * Returns a confirmation that a task has been added.","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"ngsengleng"},"content":"     * @param task Task that was added to the task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"ngsengleng"},"content":"     * @param listOfItems Total number of tasks in the task list currently.","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"ngsengleng"},"content":"     * @return String confirmation to be displayed on the GUI.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"ngsengleng"},"content":"    public String printAdditionConfirmation(Task task, Tasklist listOfItems) {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"ngsengleng"},"content":"        String confirmationMessage \u003d \"You have successfully added an item:\\n\" + task + \"\\nto the list.\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"ngsengleng"},"content":"        String numberOfItems \u003d String.format(\"There %s %s %s in the list right now\",","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"ngsengleng"},"content":"                listOfItems.size() !\u003d 1 ? \"are\" : \"is\",","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"ngsengleng"},"content":"                listOfItems.size(),","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"ngsengleng"},"content":"                listOfItems.size() !\u003d 1 ? \"items\" : \"item\");","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"ngsengleng"},"content":"        return confirmationMessage + numberOfItems;","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"ngsengleng"},"content":"     * Returns a confirmation that a task has been deleted.","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"ngsengleng"},"content":"     * @param task Task that was deleted from the task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"ngsengleng"},"content":"     * @param listOfItems Total number of tasks in the task list currently.","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"ngsengleng"},"content":"     * @return String confirmation to be displayed on the GUI.","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"ngsengleng"},"content":"    public String printDeletionConfirmation(Task task, Tasklist listOfItems) {","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"ngsengleng"},"content":"        String confirmationMessage \u003d \"You have successfully deleted an item:\\n\" + task + \"\\nfrom the list.\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"ngsengleng"},"content":"        String numberOfItems \u003d String.format(\"There %s %s %s in the list right now\",","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"ngsengleng"},"content":"                listOfItems.size() !\u003d 1 ? \"are\" : \"is\",","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"ngsengleng"},"content":"                listOfItems.size(),","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"ngsengleng"},"content":"                listOfItems.size() !\u003d 1 ? \"items\" : \"item\");","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"ngsengleng"},"content":"        return confirmationMessage + numberOfItems;","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ngsengleng":65}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"      \u003cTextFlow\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"              \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" /\u003e","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"      \u003c/TextFlow\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ngsengleng":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ngsengleng":20}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"        assertEquals(\"[D]|[]|buy food|2011-01-01\",","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"                new Deadline(\"buy food\", \"2011-01-01\").toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ngsengleng":13}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"public class EventTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"        assertEquals(\"[E]|[]|buy food|2011-01-01\",","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"                new Event(\"buy food\", \"2011-01-01\").toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ngsengleng":13}},{"path":"src/test/java/duke/FileParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"public class FileParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"    public void readLineFromFile_stringFromFile_correctEventReturned() {","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"        FileParser f \u003d new FileParser();","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"        assertEquals(\"[E]|[]|buy food|2011-01-01\", f.parse(\"[E]|[]|buy food|2011-01-01\").toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"    public void readLineFromFile_stringFromFile_correctDeadlineReturned() {","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"        FileParser f \u003d new FileParser();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"        assertEquals(\"[D]|[]|buy food|2011-01-01\", f.parse(\"[D]|[]|buy food|2011-01-01\").toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"    public void readLineFromFile_stringFromFile_correctTodoReturned() {","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"        FileParser f \u003d new FileParser();","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"        assertEquals(\"[T]|[]|buy food\", f.parse(\"[T]|[]|buy food\").toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"    public void readLineFromFile_incorrectStringFromFile_exceptionThrown() {","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"        FileParser f \u003d new FileParser();","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"            assertEquals(\"[T]|[]|buy food\", f.parse(\"ss|dd\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ngsengleng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"ngsengleng"},"content":"            assertEquals(\"Sorry, a line was saved incorrectly. An empty list will be used instead.\",","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"ngsengleng"},"content":"                    e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ngsengleng":34}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"        assertEquals(\"[] buy food\", new Task(\"buy food\").toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"    public void markCompleteTask_userInput_success() {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"        Task t \u003d new Task(\"buy food\");","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"        t.setDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"        assertEquals(\"[X] buy food\", t.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ngsengleng":21}},{"path":"text-ui-test/data/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"[E]|[]|buy food|1999-01-01","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"[D]|[]|submit assignment|1999-01-01","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ngsengleng":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"items","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"event buy food /at 1999-01-01","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"todo get home","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"deadline submit assignment /by 1999-01-01","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"items","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"completed 2","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"items","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"items","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"event get food","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"deadline buy food","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ngsengleng":15}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"#delete previous savefile","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"if [ -e \"./data/Duke.txt\" ]","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"then","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"    rm ./data/Duke.txt","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"fi","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"if ! javac -cp ../src/main/java -Xlint:unchecked -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ngsengleng":7,"-":37}}]
