[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"    public Deadline(String description, String date) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"            int[] dateArr \u003d Arrays.stream(date.split(\"-\")).mapToInt(Integer::parseInt).toArray();","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"            this.date \u003d LocalDate.of(dateArr[0], dateArr[1], dateArr[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"        } catch (NumberFormatException | DateTimeException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"the event date has to be in format yyyy-mm-dd\");","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"        String deadlineMarker \u003d \"[D]\";","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"            return deadlineMarker + \"|\" + hasCross + \"|\" + item + \"|\" + date.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"            return deadlineMarker + \"|\" + hasNoCross + \"|\" + item + \"|\" + date.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ngsengleng":31}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"import java.util.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"    private static final String END_OF_CONVERSATION \u003d \"bye\";","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"    private static List\u003cTask\u003e listOfItems \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"    private static final String SEPARATOR \u003d \"########################\";","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"    private static final Path FILE_PATH \u003d Paths.get(System.getProperty(\"user.dir\"), \"data/Duke.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"    private static Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"     * Beautifies text output by wrapping it around a border.","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"     * @param input","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"    private static void outputWrapper(String input) {","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"        System.out.println(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"     * Beautifies list of items by wrapping it around a border.","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"     * @param elements","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"ngsengleng"},"content":"    private static void outputWrapper(List elements) {","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"ngsengleng"},"content":"        ListIterator it \u003d elements.listIterator();","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"ngsengleng"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"ngsengleng"},"content":"        if (elements.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"ngsengleng"},"content":"            System.out.println(\"You have no items in your list. Add some with [todo], [deadline] or [event]!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"ngsengleng"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"ngsengleng"},"content":"            while (it.hasNext()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"ngsengleng"},"content":"                Integer number \u003d it.nextIndex() + 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"ngsengleng"},"content":"                System.out.println(number + \". \" + it.next());","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"ngsengleng"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"ngsengleng"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"ngsengleng"},"content":"     * Marks an item on the list as completed.","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"ngsengleng"},"content":"     * @param input","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"ngsengleng"},"content":"    private static void markAsDone(String input) {","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"ngsengleng"},"content":"        String[] keywords \u003d input.split(\" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"ngsengleng"},"content":"        String command \u003d keywords[0];","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"ngsengleng"},"content":"        Integer idx \u003d keywords.length \u003e 1 ? Integer.parseInt(keywords[1]) - 1 : -1;","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"ngsengleng"},"content":"        Task task \u003d listOfItems.get(idx);","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"ngsengleng"},"content":"        task.setDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"ngsengleng"},"content":"        String completionMessage \u003d String.format(\"You have successfully completed task %s:\\n\", keywords[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"ngsengleng"},"content":"        outputWrapper(completionMessage + task);","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"ngsengleng"},"content":"     * Prints the confirmation message for any item added to list.","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"ngsengleng"},"content":"     * @param task","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"ngsengleng"},"content":"    private static void printAdditionConfirmation(Task task) {","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"ngsengleng"},"content":"        String confirmationMessage \u003d \"You have successfully added an item:\\n\" + task + \"\\nto the list.\\n\";","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"ngsengleng"},"content":"        String numberOfItems \u003d String.format(\"There %s %s %s in the list right now\",","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"ngsengleng"},"content":"                listOfItems.size() !\u003d 1 ? \"are\" : \"is\",","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"ngsengleng"},"content":"                listOfItems.size(),","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"ngsengleng"},"content":"                listOfItems.size() !\u003d 1 ? \"items\" : \"item\");","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"ngsengleng"},"content":"        outputWrapper(confirmationMessage + numberOfItems);","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"ngsengleng"},"content":"     * Prints the confirmations message for any item deleted from the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"ngsengleng"},"content":"     * @param task","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"ngsengleng"},"content":"    private static void printDeletionConfirmation(Task task) {","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"ngsengleng"},"content":"        String confirmationMessage \u003d \"You have successfully deleted an item:\\n\" + task + \"\\nfrom the list.\\n\";","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"ngsengleng"},"content":"        String numberOfItems \u003d String.format(\"There %s %s %s in the list right now\",","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"ngsengleng"},"content":"                listOfItems.size() !\u003d 1 ? \"are\" : \"is\",","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"ngsengleng"},"content":"                listOfItems.size(),","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"ngsengleng"},"content":"                listOfItems.size() !\u003d 1 ? \"items\" : \"item\");","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"ngsengleng"},"content":"        outputWrapper(confirmationMessage + numberOfItems);","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"ngsengleng"},"content":"     * Adds an item to the list as todo.","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"ngsengleng"},"content":"     * @param input","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"ngsengleng"},"content":"    private static void markAsTodo(String input) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"ngsengleng"},"content":"        // split input into command and text","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"ngsengleng"},"content":"        String[] elements \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"ngsengleng"},"content":"        if (elements.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"you need to describe the todo in format: todo (description)!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"ngsengleng"},"content":"        String textDescription \u003d elements[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"ngsengleng"},"content":"        Task todo \u003d new Todo(textDescription);","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"ngsengleng"},"content":"        listOfItems.add(todo);","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"ngsengleng"},"content":"        printAdditionConfirmation(todo);","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"ngsengleng"},"content":"     * Adds an item to the list as an event.","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"ngsengleng"},"content":"     * @param input","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"ngsengleng"},"content":"    private static void markAsEvent(String input) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"ngsengleng"},"content":"        String[] keywords \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"ngsengleng"},"content":"        if (keywords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"you need to describe your event to me in format: event (description)!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"ngsengleng"},"content":"        // split input into command and text","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"ngsengleng"},"content":"        String[] elements \u003d keywords[1].split(\" /at \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"ngsengleng"},"content":"        if (elements.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"you need to tell me the time in format: (task) /at (time)!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"ngsengleng"},"content":"        String time \u003d elements[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"ngsengleng"},"content":"        String textDescription \u003d elements[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"ngsengleng"},"content":"        Task event \u003d new Event(textDescription, time);","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"ngsengleng"},"content":"        listOfItems.add(event);","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"ngsengleng"},"content":"        printAdditionConfirmation(event);","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"ngsengleng"},"content":"     * Adds an item to the list as deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"ngsengleng"},"content":"     * @param input","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"ngsengleng"},"content":"    private static void markAsDeadline(String input) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"ngsengleng"},"content":"        String[] keywords \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"ngsengleng"},"content":"        if (keywords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"you need to describe your deadline to me in format: deadline (description)!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":136,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"ngsengleng"},"content":"        String[] elements \u003d keywords[1].split(\" /by \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"ngsengleng"},"content":"        if (elements.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"you need to tell me the time in format: (task) /by (time)!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"ngsengleng"},"content":"        String time \u003d elements[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":142,"author":{"gitId":"ngsengleng"},"content":"        String textDescription \u003d elements[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"ngsengleng"},"content":"        Task deadline \u003d new Deadline(textDescription, time);","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"ngsengleng"},"content":"        listOfItems.add(deadline);","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"ngsengleng"},"content":"        printAdditionConfirmation(deadline);","lastModifiedDate":"2021-08-19"},{"lineNumber":146,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":147,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"ngsengleng"},"content":"     * Deletes an item from the list by passing the index of the task to be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"ngsengleng"},"content":"     * @param input","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"ngsengleng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"ngsengleng"},"content":"    private static void deleteItem(String input) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":155,"author":{"gitId":"ngsengleng"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":156,"author":{"gitId":"ngsengleng"},"content":"            Integer idx \u003d Integer.parseInt(input.split(\" \", 2)[1]) - 1;","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"ngsengleng"},"content":"            Task item \u003d listOfItems.get(idx);","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"ngsengleng"},"content":"            listOfItems.remove(item);","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"ngsengleng"},"content":"            printDeletionConfirmation(item);","lastModifiedDate":"2021-08-19"},{"lineNumber":160,"author":{"gitId":"ngsengleng"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":161,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"you need to choose a number from the list in the form: delete (list index)!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":162,"author":{"gitId":"ngsengleng"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":163,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"you need to pick an item from within the list!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":164,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":165,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":166,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":167,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":168,"author":{"gitId":"ngsengleng"},"content":"     * Handles invalid commands from the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":169,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"ngsengleng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-18"},{"lineNumber":171,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":172,"author":{"gitId":"ngsengleng"},"content":"    private static void markAsInvalid(String input) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":173,"author":{"gitId":"ngsengleng"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":174,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"you need to type something!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":175,"author":{"gitId":"ngsengleng"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":176,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"your command is invalid!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":177,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":179,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":180,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":181,"author":{"gitId":"ngsengleng"},"content":"     * Handles the user\u0027s input and determines which command should be run.","lastModifiedDate":"2021-08-17"},{"lineNumber":182,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":183,"author":{"gitId":"ngsengleng"},"content":"     * @param input","lastModifiedDate":"2021-08-17"},{"lineNumber":184,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":185,"author":{"gitId":"ngsengleng"},"content":"    private static void handleInput(String input) {","lastModifiedDate":"2021-08-17"},{"lineNumber":186,"author":{"gitId":"ngsengleng"},"content":"        String command \u003d input.split(\" \")[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":187,"author":{"gitId":"ngsengleng"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":188,"author":{"gitId":"ngsengleng"},"content":"            switch(command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":189,"author":{"gitId":"ngsengleng"},"content":"                case \"items\":","lastModifiedDate":"2021-08-17"},{"lineNumber":190,"author":{"gitId":"ngsengleng"},"content":"                    outputWrapper(listOfItems);","lastModifiedDate":"2021-08-17"},{"lineNumber":191,"author":{"gitId":"ngsengleng"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":192,"author":{"gitId":"ngsengleng"},"content":"                case \"completed\":","lastModifiedDate":"2021-08-17"},{"lineNumber":193,"author":{"gitId":"ngsengleng"},"content":"                    markAsDone(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":194,"author":{"gitId":"ngsengleng"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":195,"author":{"gitId":"ngsengleng"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-18"},{"lineNumber":196,"author":{"gitId":"ngsengleng"},"content":"                    markAsTodo(input);","lastModifiedDate":"2021-08-18"},{"lineNumber":197,"author":{"gitId":"ngsengleng"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":198,"author":{"gitId":"ngsengleng"},"content":"                case \"event\":","lastModifiedDate":"2021-08-18"},{"lineNumber":199,"author":{"gitId":"ngsengleng"},"content":"                    markAsEvent(input);","lastModifiedDate":"2021-08-18"},{"lineNumber":200,"author":{"gitId":"ngsengleng"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":201,"author":{"gitId":"ngsengleng"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-18"},{"lineNumber":202,"author":{"gitId":"ngsengleng"},"content":"                    markAsDeadline(input);","lastModifiedDate":"2021-08-18"},{"lineNumber":203,"author":{"gitId":"ngsengleng"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":204,"author":{"gitId":"ngsengleng"},"content":"                case \"delete\":","lastModifiedDate":"2021-08-19"},{"lineNumber":205,"author":{"gitId":"ngsengleng"},"content":"                    deleteItem(input);","lastModifiedDate":"2021-08-19"},{"lineNumber":206,"author":{"gitId":"ngsengleng"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":207,"author":{"gitId":"ngsengleng"},"content":"                default:","lastModifiedDate":"2021-08-17"},{"lineNumber":208,"author":{"gitId":"ngsengleng"},"content":"                    markAsInvalid(input);","lastModifiedDate":"2021-08-18"},{"lineNumber":209,"author":{"gitId":"ngsengleng"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":210,"author":{"gitId":"ngsengleng"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":211,"author":{"gitId":"ngsengleng"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":212,"author":{"gitId":"ngsengleng"},"content":"            outputWrapper(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":213,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":214,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":215,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":216,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":217,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":218,"author":{"gitId":"ngsengleng"},"content":"     * Starts the current session for the bot.","lastModifiedDate":"2021-08-17"},{"lineNumber":219,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":220,"author":{"gitId":"ngsengleng"},"content":"    private static void startBot()  {","lastModifiedDate":"2021-08-17"},{"lineNumber":221,"author":{"gitId":"ngsengleng"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":222,"author":{"gitId":"ngsengleng"},"content":"            if (Files.notExists(FILE_PATH)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":223,"author":{"gitId":"ngsengleng"},"content":"                File f \u003d new File(FILE_PATH.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":224,"author":{"gitId":"ngsengleng"},"content":"                f.getParentFile().mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"ngsengleng"},"content":"                f.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":226,"author":{"gitId":"ngsengleng"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":227,"author":{"gitId":"ngsengleng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":228,"author":{"gitId":"ngsengleng"},"content":"            System.out.println(\"An error occurred when opening the file. Try rerunning Duke again.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":229,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":230,"author":{"gitId":"ngsengleng"},"content":"        storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2021-08-24"},{"lineNumber":231,"author":{"gitId":"ngsengleng"},"content":"        listOfItems \u003d storage.load();","lastModifiedDate":"2021-08-24"},{"lineNumber":232,"author":{"gitId":"ngsengleng"},"content":"        Scanner i \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":233,"author":{"gitId":"ngsengleng"},"content":"        String input \u003d i.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":234,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":235,"author":{"gitId":"ngsengleng"},"content":"        while (!input.equals(END_OF_CONVERSATION)) {","lastModifiedDate":"2021-08-17"},{"lineNumber":236,"author":{"gitId":"ngsengleng"},"content":"            handleInput(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":237,"author":{"gitId":"ngsengleng"},"content":"            input \u003d i.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":238,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":239,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":240,"author":{"gitId":"ngsengleng"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":241,"author":{"gitId":"ngsengleng"},"content":"            storage.save(listOfItems);","lastModifiedDate":"2021-08-24"},{"lineNumber":242,"author":{"gitId":"ngsengleng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":243,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":244,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":245,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":246,"author":{"gitId":"ngsengleng"},"content":"        outputWrapper(\"Thanks for using me. See you again soon!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":247,"author":{"gitId":"ngsengleng"},"content":"        i.close();","lastModifiedDate":"2021-08-17"},{"lineNumber":248,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":249,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":250,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":251,"author":{"gitId":"ngsengleng"},"content":"     * Echos input of the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":252,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":253,"author":{"gitId":"ngsengleng"},"content":"    private static void echoInput() {","lastModifiedDate":"2021-08-17"},{"lineNumber":254,"author":{"gitId":"ngsengleng"},"content":"        Scanner i \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":255,"author":{"gitId":"ngsengleng"},"content":"        String input \u003d i.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":256,"author":{"gitId":"ngsengleng"},"content":"        while (!input.equals(END_OF_CONVERSATION)) {","lastModifiedDate":"2021-08-17"},{"lineNumber":257,"author":{"gitId":"ngsengleng"},"content":"            outputWrapper(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":258,"author":{"gitId":"ngsengleng"},"content":"            input \u003d i.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":259,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":260,"author":{"gitId":"ngsengleng"},"content":"        outputWrapper(\"Thanks for using me. See you again soon!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":261,"author":{"gitId":"ngsengleng"},"content":"        i.close();","lastModifiedDate":"2021-08-17"},{"lineNumber":262,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":264,"author":{"gitId":"ngsengleng"},"content":"        System.out.println(\"Hello this is Jeeves, your personal chatbot. What can i do you for today?\");","lastModifiedDate":"2021-08-17"},{"lineNumber":265,"author":{"gitId":"ngsengleng"},"content":"        startBot();","lastModifiedDate":"2021-08-17"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ngsengleng":263,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"public class DukeException extends RuntimeException{","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"    private static final String preMessage \u003d \"Sorry, \";","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"        super(preMessage + errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ngsengleng":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"    public Event(String description, String date) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"            int[] dateArr \u003d Arrays.stream(date.split(\"-\")).mapToInt(Integer::parseInt).toArray();","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"            this.date \u003d LocalDate.of(dateArr[0], dateArr[1], dateArr[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"        } catch (NumberFormatException | DateTimeException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"the event date has to be in format yyyy-mm-dd\");","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"        String eventMarker \u003d \"[E]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"        String timestamp \u003d String.format(\"(at: %s)\", date.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"            return eventMarker + \"|\" + hasCross + \"|\" + item + \"|\" + date.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"            return eventMarker + \"|\" + hasNoCross + \"|\" + item + \"|\" + date.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ngsengleng":30}},{"path":"src/main/java/FileParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"public class FileParser {","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"    public FileParser() {","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"     * Takes in a string as an input and returns a task to be added to the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"     * @param input","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"     * @return","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"    public Task parse(String input) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"        String[] args \u003d input.split(\"\\\\|\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"        String taskType \u003d args[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"        Boolean isCompleted \u003d args[1].contains(\"X\");","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"        String taskDescription \u003d args[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"        String datetime \u003d args.length \u003e 3 ? args[3] : \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"        Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"        switch(taskType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"        case \"[E]\":","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"            task \u003d new Event(taskDescription, datetime);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"        case \"[D]\":","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"            task \u003d new Deadline(taskDescription, datetime);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"        case \"[T]\":","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"            task \u003d new Todo(taskDescription);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ngsengleng"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ngsengleng"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"A line could not be read from the savefile. An empty list will be used instead.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"ngsengleng"},"content":"        if (isCompleted) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ngsengleng"},"content":"            task.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"ngsengleng"},"content":"        return task;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ngsengleng":42}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"    private final File saveFile;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"    private final FileParser parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"    private final Path filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"    public Storage(Path filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"        saveFile \u003d new File(filePath.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"        parser \u003d new FileParser();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"     * Loads data from savefile.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"     * Starts the session with an empty tasklist if there was an error found.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"     * @return","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ngsengleng"},"content":"    public List\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ngsengleng"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"ngsengleng"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ngsengleng"},"content":"            Scanner s \u003d new Scanner(saveFile);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"ngsengleng"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"ngsengleng"},"content":"                taskList.add(parser.parse(s.nextLine()));","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ngsengleng"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ngsengleng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ngsengleng"},"content":"            throw new DukeException(\"There was no savefile found. Starting session with an empty list.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ngsengleng"},"content":"        return taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ngsengleng"},"content":"     * Accepts the tasklist and writes to file.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ngsengleng"},"content":"     * Throws an exception if an error occurs.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"ngsengleng"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"ngsengleng"},"content":"     * @param taskList","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"ngsengleng"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"ngsengleng"},"content":"    public void save(List\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"ngsengleng"},"content":"        String writableData \u003d taskList.stream().map(task -\u003e task.toString() + \"\\n\").collect(Collectors.joining());","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"ngsengleng"},"content":"        FileWriter fileWriter \u003d new FileWriter(this.filePath.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"ngsengleng"},"content":"        fileWriter.write(writableData);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"ngsengleng"},"content":"        fileWriter.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ngsengleng":55}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"    protected String item;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"    protected String hasCross \u003d \"[X]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"    protected String hasNoCross \u003d \"[]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"    public Task(String input) {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"        item \u003d input;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"     * Sets task in tasklist to done.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"ngsengleng"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"            return hasCross + \" \" + item;","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"ngsengleng"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"ngsengleng"},"content":"            return hasNoCross + \" \" + item;","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ngsengleng":27}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"        String todoMarker \u003d \"[T]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"            return todoMarker + \"|\" + hasCross + \"|\" + item;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"            return todoMarker + \"|\" + hasNoCross + \"|\" + item;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ngsengleng":16}},{"path":"text-ui-test/data/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"[E]|[]|buy food|1999-01-01","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"[D]|[]|submit assignment|1999-01-01","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ngsengleng":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ngsengleng"},"content":"items","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"ngsengleng"},"content":"event buy food /at 1999-01-01","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ngsengleng"},"content":"todo get home","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ngsengleng"},"content":"deadline submit assignment /by 1999-01-01","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ngsengleng"},"content":"items","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ngsengleng"},"content":"completed 2","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ngsengleng"},"content":"items","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ngsengleng"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ngsengleng"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ngsengleng"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"ngsengleng"},"content":"items","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"ngsengleng"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ngsengleng"},"content":"event get food","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ngsengleng"},"content":"deadline buy food","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ngsengleng":15}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"ngsengleng"},"content":"#delete previous savefile","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ngsengleng"},"content":"if [ -e \"./data/Duke.txt\" ]","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ngsengleng"},"content":"then","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ngsengleng"},"content":"    rm ./data/Duke.txt","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ngsengleng"},"content":"fi","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ngsengleng"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"ngsengleng"},"content":"if ! javac -cp ../src/main/java -Xlint:unchecked -d ../bin ../src/main/java/*.java","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ngsengleng":7,"-":37}}]
