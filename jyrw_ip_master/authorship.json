[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":" * Represents Duke, a text-based Java chatbot that helps to","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":" * keep track of various tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":" * @author Joshua Yong","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"     * @param filePath The file path of the text file to be used for storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"     *                 The data in the file will be read and Duke will be initialized","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"     *                 with task information from the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"     *                 If the file does not exist or if the data in the file is corrupted,","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"     *                 Duke will be initialized without prior task information and the file","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"     *                 will be reset.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jyrw"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"jyrw"},"content":"            System.out.println(e.getMessage() + \"\\nStarting Duke without saved tasks...\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jyrw"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jyrw"},"content":"     * Starts the chatbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jyrw"},"content":"    private void start() {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jyrw"},"content":"        ui.hello();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jyrw"},"content":"        String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jyrw"},"content":"        Parser parser \u003d new Parser(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jyrw"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jyrw"},"content":"            try {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"jyrw"},"content":"                ui.printMessage(parser.parse(userInput));","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jyrw"},"content":"                storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jyrw"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jyrw"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jyrw"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"jyrw"},"content":"            userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"jyrw"},"content":"        ui.goodbye();","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jyrw"},"content":"     * The entry point of the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jyrw"},"content":"     * @param args Command line arguments (currently not used).","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jyrw"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"jyrw"},"content":"        new Duke(\"./data/duke.txt\").start();","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jyrw":62,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":" * Represents a DukeException, which is a subtype of Exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":" * Encapsulates numerous errors which could occur during runtime","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":" * due to invalid user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":" * @author Joshua Yong","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"     * @param message The error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jyrw":21}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":" * Represents the text parser for Duke. When parsing a user input, the parser","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":" * also handles the updating of the associated TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":" * @author Joshua Yong","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"    // The TaskList which the Parser updates","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"     * @param tasks The TaskList to be updated during parsing.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jyrw"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jyrw"},"content":"     * Parses the user input String, updating the associated TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jyrw"},"content":"     * Also returns an appropriate String to be displayed to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jyrw"},"content":"     * @param userInput The String inputted by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jyrw"},"content":"     * @return A String to be displayed to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jyrw"},"content":"     * @throws DukeException if the user input is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jyrw"},"content":"    public String parse(String userInput) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jyrw"},"content":"        String[] inputStringArray \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jyrw"},"content":"        String firstWord \u003d inputStringArray[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jyrw"},"content":"        if (inputStringArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jyrw"},"content":"            switch (firstWord) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jyrw"},"content":"            case \"list\":","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jyrw"},"content":"                return tasks.getAllTasksString();","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"jyrw"},"content":"            case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jyrw"},"content":"                // Fallthrough","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jyrw"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jyrw"},"content":"                throw new DukeException(\"Please specify a task number.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jyrw"},"content":"            case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"jyrw"},"content":"                throw new DukeException(\"Please specify a keyword.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"jyrw"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jyrw"},"content":"                // Fallthrough","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jyrw"},"content":"            case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jyrw"},"content":"                // Fallthrough","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jyrw"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jyrw"},"content":"                throw new DukeException(\"Please specify the task info.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jyrw"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jyrw"},"content":"                throw new DukeException(\"Sorry, I don\u0027t know what that means.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jyrw"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jyrw"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jyrw"},"content":"            switch (firstWord) {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"jyrw"},"content":"            case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"jyrw"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"jyrw"},"content":"                    int taskIndex \u003d Integer.parseInt(inputStringArray[1]) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"jyrw"},"content":"                    tasks.setTaskAsDone(taskIndex);","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"jyrw"},"content":"                    return \"Nice! I\u0027ve marked this task as done:\\n \"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"jyrw"},"content":"                            + tasks.getTask(taskIndex).toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"jyrw"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"jyrw"},"content":"                    throw new DukeException(\"Please specify a valid task number.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jyrw"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jyrw"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"jyrw"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"jyrw"},"content":"                    int taskIndex \u003d Integer.parseInt(inputStringArray[1]) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"jyrw"},"content":"                    Task deletedTask \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"jyrw"},"content":"                    tasks.deleteTask(taskIndex);","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"jyrw"},"content":"                    return \"Noted. I\u0027ve removed this task:\\n \"","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"jyrw"},"content":"                            + deletedTask.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"jyrw"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"jyrw"},"content":"                    throw new DukeException(\"Please specify a valid task number.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"jyrw"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"jyrw"},"content":"            case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"jyrw"},"content":"                return tasks.getMatchingTasksString(inputStringArray[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"jyrw"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"jyrw"},"content":"                String[] deadlineInfo \u003d inputStringArray[1].split(\" /by \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"jyrw"},"content":"                if (deadlineInfo.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"jyrw"},"content":"                    throw new DukeException(\"Please enter a valid deadline format.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"jyrw"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"jyrw"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"jyrw"},"content":"                    DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"ddMMyy\");","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"jyrw"},"content":"                    LocalDate by \u003d LocalDate.parse(deadlineInfo[1], dateFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"jyrw"},"content":"                    Task newDeadline \u003d new Deadline(deadlineInfo[0], by);","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"jyrw"},"content":"                    tasks.addTask(newDeadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"jyrw"},"content":"                    return \"Got it. I\u0027ve added this task:\\n \"","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"jyrw"},"content":"                            + newDeadline.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"jyrw"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"jyrw"},"content":"                    throw new DukeException(\"Please enter a valid date.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"jyrw"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"jyrw"},"content":"            case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"jyrw"},"content":"                String[] eventInfo \u003d inputStringArray[1].split(\" /at \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"jyrw"},"content":"                if (eventInfo.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"jyrw"},"content":"                    throw new DukeException(\"Please enter a valid event format.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"jyrw"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"jyrw"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"jyrw"},"content":"                    DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"ddMMyy HHmm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"jyrw"},"content":"                    LocalDateTime at \u003d LocalDateTime.parse(eventInfo[1], dateTimeFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"jyrw"},"content":"                    Task newEvent \u003d new Event(eventInfo[0], at);","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"jyrw"},"content":"                    tasks.addTask(newEvent);","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"jyrw"},"content":"                    return \"Got it. I\u0027ve added this task:\\n \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"jyrw"},"content":"                            newEvent.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"jyrw"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"jyrw"},"content":"                    throw new DukeException(\"Please enter a valid date.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"jyrw"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"jyrw"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"jyrw"},"content":"                Task newToDo \u003d new ToDo(inputStringArray[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"jyrw"},"content":"                tasks.addTask(newToDo);","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"jyrw"},"content":"                return \"Got it. I\u0027ve added this task:\\n \" +","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"jyrw"},"content":"                        newToDo.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"jyrw"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"jyrw"},"content":"                throw new DukeException(\"Sorry, I don\u0027t know what that means.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"jyrw"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jyrw":127}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":" * Representation of a storage file which can be read from and written to.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":" * @author Joshua Yong","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"    private String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jyrw"},"content":"     * @param filePath The file path of the file to be used.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jyrw"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jyrw"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jyrw"},"content":"     * Parses the associated file, returning a collection of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jyrw"},"content":"     * @return An ArrayList of Tasks corresponding to the data in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jyrw"},"content":"     * @throws DukeException if the file is formatted incorrectly or cannot be found","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jyrw"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jyrw"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jyrw"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jyrw"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jyrw"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jyrw"},"content":"            String line \u003d br.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jyrw"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jyrw"},"content":"                Task newTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jyrw"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jyrw"},"content":"                    String taskInfo \u003d line.substring(7);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jyrw"},"content":"                    switch (line.charAt(1)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jyrw"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jyrw"},"content":"                        String[] deadlineInfo \u003d taskInfo.split(\" \\\\| by: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jyrw"},"content":"                        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"EEE dd MMM yyyy\");","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jyrw"},"content":"                        LocalDate by \u003d LocalDate.parse(deadlineInfo[1], dateFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jyrw"},"content":"                        newTask \u003d new Deadline(deadlineInfo[0], by);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jyrw"},"content":"                        break;","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jyrw"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jyrw"},"content":"                        String[] eventInfo \u003d taskInfo.split(\" \\\\| at: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jyrw"},"content":"                        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"EEE dd MMM yyyy HH:mma\");","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jyrw"},"content":"                        LocalDateTime at \u003d LocalDateTime.parse(eventInfo[1], dateTimeFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jyrw"},"content":"                        newTask \u003d new Event(eventInfo[0], at);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jyrw"},"content":"                        break;","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jyrw"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"jyrw"},"content":"                        newTask \u003d new ToDo(taskInfo);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"jyrw"},"content":"                        break;","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"jyrw"},"content":"                    default:","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"jyrw"},"content":"                        throw new DukeException(\"Error: Data is formatted incorrectly in storage file.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"jyrw"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"jyrw"},"content":"                } catch (IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"jyrw"},"content":"                    throw new DukeException(\"Error: Data is formatted incorrectly in storage file.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"jyrw"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jyrw"},"content":"                if (line.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jyrw"},"content":"                    newTask.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"jyrw"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"jyrw"},"content":"                tasks.add(newTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"jyrw"},"content":"                line \u003d br.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"jyrw"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"jyrw"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"jyrw"},"content":"            throw new DukeException(\"Error: The specified file path for storage cannot be resolved.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"jyrw"},"content":"        return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"jyrw"},"content":"     * Writes task data to the associated file.","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"jyrw"},"content":"     * @param tasks The given TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"jyrw"},"content":"    public void save(TaskList tasks) { // TODO: Tidy this","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"jyrw"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"jyrw"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"jyrw"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"jyrw"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"jyrw"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"jyrw"},"content":"            int taskCount \u003d tasks.getSize();","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"jyrw"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"jyrw"},"content":"                fw.write( tasks.getTask(i).toString() + System.lineSeparator());","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"jyrw"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"jyrw"},"content":"            fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"jyrw"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"jyrw"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jyrw":106}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":" * Represents a list of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":" * @author Joshua Yong","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"     * Overloaded class constructor which initializes the TaskList with existing tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"     * @param tasks An ArrayList of tasks to be stored in the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jyrw"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jyrw"},"content":"        return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jyrw"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jyrw"},"content":"        return tasks.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jyrw"},"content":"    public void setTaskAsDone(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jyrw"},"content":"        tasks.get(i).setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jyrw"},"content":"    public void deleteTask(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jyrw"},"content":"        tasks.remove(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jyrw"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jyrw"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jyrw"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jyrw"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jyrw"},"content":"    public String getAllTasksString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"jyrw"},"content":"        StringBuilder result \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"jyrw"},"content":"        int taskCount \u003d tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"jyrw"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"jyrw"},"content":"            result.append(\"\\n\" + (i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"jyrw"},"content":"        return result.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"jyrw"},"content":"    public String getMatchingTasksString(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"jyrw"},"content":"        ArrayList\u003cTask\u003e matchingTaskList \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"jyrw"},"content":"        matchingTaskList.removeIf(task -\u003e !task.getDescription().contains(keyword));","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"jyrw"},"content":"        StringBuilder result \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"jyrw"},"content":"        int taskCount \u003d matchingTaskList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"jyrw"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"jyrw"},"content":"            result.append(\"\\n\" + (i + 1) + \". \" + matchingTaskList.get(i).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"jyrw"},"content":"        return result.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jyrw":76}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":" * Representation of the user interface of Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":" * @author Joshua Yong","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"     * Prints the welcome message.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"    public void hello() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"     * Prints the given message.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jyrw"},"content":"     * @param message The given message.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jyrw"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jyrw"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jyrw"},"content":"     * Returns the user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jyrw"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jyrw"},"content":"     * @return The user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jyrw"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jyrw"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jyrw"},"content":"     * Prints the farewell message.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jyrw"},"content":"    public void goodbye() {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jyrw"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jyrw":53}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":" * Represents a deadline which is a subtype of Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":" * A deadline encapsulates an additional LocalDate","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":" * which represents the date of the deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":" * @author Joshua Yong","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"     * @param description The given deadline description.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"     * @param by The deadline date.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"     * Outputs this deadline as a String.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jyrw"},"content":"     * @return String representation of the deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jyrw"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"jyrw"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"jyrw"},"content":"        DateTimeFormatter printFormat \u003d DateTimeFormatter.ofPattern(\"EEE dd MMM yyyy\");","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"jyrw"},"content":"        return \"[D]\" + super.toString() + \" | by: \" + by.format(printFormat);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"jyrw":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":" * Represents an event which is a subtype of Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":" * An event encapsulates an additional LocalDateTime","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":" * which represents the timing of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":" * @author Joshua Yong","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"     * @param description The given event description.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"     * @param at The timing of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jyrw"},"content":"     * Outputs this event as a String.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jyrw"},"content":"     * @return String representation of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jyrw"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"jyrw"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"jyrw"},"content":"        DateTimeFormatter printFormat \u003d DateTimeFormatter.ofPattern(\"EEE dd MMM yyyy hh:mma\");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jyrw"},"content":"        return \"[E]\" + super.toString() + \" | at: \" + at.format(printFormat);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"jyrw":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":" * Represents a task which encapsulates a description","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":" * and a boolean flag indicating if the task is complete.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":" * @author Joshua Yong","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"     * @param description The given task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"     * Outputs this task as a String.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"jyrw"},"content":"        String statusIcon \u003d this.isDone ? \"[X]\" : \"[ ]\"; // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"jyrw"},"content":"        return statusIcon + \" \" + description;","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jyrw"},"content":"     * Sets the isDone boolean flag of the task to true.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jyrw"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"jyrw"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"jyrw"},"content":"     * Gets the description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"jyrw"},"content":"     * @return Description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"jyrw"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"jyrw"},"content":"        return this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"jyrw":49}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":" * Represents a todo which is a subtype of Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":" * @author Joshua Yong","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"     * Outputs this todo as a String.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"     * @return String representation of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"jyrw":29}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":"class TaskTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"    public void stringConversion_undoneTask_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"        assertEquals(\"[ ] taskDescription\", new Task(\"taskDescription\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"    public void stringConversion_doneTask_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"        Task task \u003d new Task(\"taskDescription\");","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"        task.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"        assertEquals(\"[X] taskDescription\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"    public void setDone_undoneTask_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"        Task task \u003d new Task(\"taskDescription\");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"        task.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"        assertTrue(task.isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jyrw":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"list asdf","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"done 0","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":"done 999","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":"done asdf","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":"delete 0","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"delete 999","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"delete asdf","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"deadline ip","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"deadline ip /by Friday","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"event Dinner","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"event Dinner /at Thursday 1900-2000","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"todo study","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"delete 4","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"asdf","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"bye asdf","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"jyrw"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jyrw":30}}]
