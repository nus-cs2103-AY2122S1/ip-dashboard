[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jyrw":15,"-":46}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"jyrw"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"jyrw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"jyrw"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"jyrw"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"jyrw"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"jyrw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"jyrw"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"jyrw"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"jyrw"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"jyrw"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"jyrw"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"jyrw"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"jyrw"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"jyrw"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"jyrw"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"jyrw"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"jyrw"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"jyrw"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"jyrw"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"jyrw"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"jyrw"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"jyrw":63}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":" * Represents Duke, a text-based Java chatbot that helps to","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":" * keep track of various tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":" * @author Joshua Yong","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"    private static final String STORAGE_FILE_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"    public Duke() {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"        this.storage \u003d new Storage(STORAGE_FILE_PATH);","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"            System.out.println(e.getMessage() + \"\\nStarting Duke without saved tasks...\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jyrw"},"content":"     * Gets the appropriate response to be shown to the user given a user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"jyrw"},"content":"     * @param input The user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"jyrw"},"content":"     * @return The response to be shown to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jyrw"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"jyrw"},"content":"        Parser parser \u003d new Parser(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jyrw"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"jyrw"},"content":"            System.exit(0);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"jyrw"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"jyrw"},"content":"            String response \u003d parser.parse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"jyrw"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jyrw"},"content":"            return response;","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"jyrw"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jyrw"},"content":"            return e.getMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"jyrw"},"content":"    public String getUpcomingDeadlinesString() {","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"jyrw"},"content":"        return tasks.getUpcomingTasksString();","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jyrw"},"content":"     * The entry point of the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jyrw"},"content":"     * @param args Command line arguments (currently not used).","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jyrw"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"jyrw"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jyrw":61,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":" * Represents a DukeException, which is a subtype of Exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":" * Encapsulates numerous errors which could occur during runtime","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":" * due to invalid user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":" * @author Joshua Yong","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"     * @param message The error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jyrw":21}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"        assert stage !\u003d null : \"Primary stage is not initialized\";","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().displayGreeting();","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().displayUpcomingTasks();","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"jyrw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"jyrw"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"jyrw":37}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"jyrw"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"jyrw"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"jyrw"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"jyrw"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"jyrw"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"jyrw"},"content":"     * Creates a dialog box containing the greeting message and appends it to the dialog container.","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"jyrw"},"content":"    public void displayGreeting() {","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"jyrw"},"content":"        dialogContainer.getChildren()","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"jyrw"},"content":"                .add(DialogBox.getDukeDialog(\"Hello! I\u0027m Duke.\\nWhat can I do for you?\", dukeImage));","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"jyrw"},"content":"    public void displayUpcomingTasks() {","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"jyrw"},"content":"        dialogContainer.getChildren()","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"jyrw"},"content":"                .add(DialogBox.getDukeDialog(duke.getUpcomingDeadlinesString(), dukeImage));","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"jyrw"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"jyrw"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"jyrw"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"jyrw"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"jyrw"},"content":"        assert userInput !\u003d null : \"Text field is not initialized\";","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"jyrw"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"jyrw"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"jyrw"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"jyrw"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"jyrw"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"jyrw"},"content":"        );","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"jyrw"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"jyrw":68}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":" * Represents the text parser for Duke. When parsing a user input, the parser","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":" * also handles the updating of the associated TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":" * @author Joshua Yong","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"    private static String dateTimeFormat \u003d \"ddMMyy HHmm\";","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"    private static String dateFormat \u003d \"ddMMyy\";","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"     * The TaskList which the Parser updates.","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jyrw"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jyrw"},"content":"     * @param tasks The TaskList to be updated during parsing.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jyrw"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jyrw"},"content":"        assert tasks !\u003d null : \"taskList is not initialized\";","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"jyrw"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jyrw"},"content":"     * Parses the user input String, updating the associated TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jyrw"},"content":"     * Also returns an appropriate String to be displayed to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jyrw"},"content":"     * @param userInput The String inputted by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jyrw"},"content":"     * @return A String to be displayed to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jyrw"},"content":"     * @throws DukeException If the user input is invalid.","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jyrw"},"content":"    public String parse(String userInput) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jyrw"},"content":"        String[] inputStringArray \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jyrw"},"content":"        String firstWord \u003d inputStringArray[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jyrw"},"content":"        if (inputStringArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jyrw"},"content":"            switch (firstWord) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jyrw"},"content":"            case \"list\":","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jyrw"},"content":"                return tasks.getAllTasksString();","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"jyrw"},"content":"            case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jyrw"},"content":"                // Fallthrough","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jyrw"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jyrw"},"content":"                throw new DukeException(\"Please specify a task number.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jyrw"},"content":"            case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"jyrw"},"content":"                throw new DukeException(\"Please specify a keyword.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"jyrw"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jyrw"},"content":"                // Fallthrough","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jyrw"},"content":"            case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jyrw"},"content":"                // Fallthrough","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jyrw"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"jyrw"},"content":"                throw new DukeException(\"Please specify the task info.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"jyrw"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"jyrw"},"content":"                throw new DukeException(\"Sorry, I don\u0027t know what that means.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"jyrw"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"jyrw"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"jyrw"},"content":"            switch (firstWord) {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"jyrw"},"content":"            case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"jyrw"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jyrw"},"content":"                    int taskIndex \u003d Integer.parseInt(inputStringArray[1]) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jyrw"},"content":"                    tasks.setTaskAsDone(taskIndex);","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"jyrw"},"content":"                    return \"Nice! I\u0027ve marked this task as done:\\n \"","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"jyrw"},"content":"                            + tasks.getTask(taskIndex).toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"jyrw"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"jyrw"},"content":"                    throw new DukeException(\"Please specify a valid task number.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"jyrw"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"jyrw"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"jyrw"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"jyrw"},"content":"                    int taskIndex \u003d Integer.parseInt(inputStringArray[1]) - 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"jyrw"},"content":"                    Task deletedTask \u003d tasks.getTask(taskIndex);","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"jyrw"},"content":"                    tasks.deleteTask(taskIndex);","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"jyrw"},"content":"                    return \"Noted. I\u0027ve deleted this task:\\n \" + deletedTask.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"jyrw"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"jyrw"},"content":"                    throw new DukeException(\"Please specify a valid task number.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"jyrw"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"jyrw"},"content":"            case \"find\":","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"jyrw"},"content":"                return tasks.getMatchingTasksString(inputStringArray[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"jyrw"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"jyrw"},"content":"                Deadline newDeadline \u003d createDeadline(inputStringArray[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"jyrw"},"content":"                tasks.addTask(newDeadline);","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"jyrw"},"content":"                return \"Got it. I\u0027ve added this task:\\n \" + newDeadline.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"jyrw"},"content":"            case \"event\":","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"jyrw"},"content":"                Event newEvent \u003d createEvent(inputStringArray[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"jyrw"},"content":"                tasks.addTask(newEvent);","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"jyrw"},"content":"                return \"Got it. I\u0027ve added this task:\\n \" + newEvent.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"jyrw"},"content":"            case \"todo\":","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"jyrw"},"content":"                Task newToDo \u003d new ToDo(inputStringArray[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"jyrw"},"content":"                tasks.addTask(newToDo);","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"jyrw"},"content":"                return \"Got it. I\u0027ve added this task:\\n \" + newToDo.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":103,"author":{"gitId":"jyrw"},"content":"            default:","lastModifiedDate":"2021-09-07"},{"lineNumber":104,"author":{"gitId":"jyrw"},"content":"                throw new DukeException(\"Sorry, I don\u0027t know what that means.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":105,"author":{"gitId":"jyrw"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":106,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":107,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":108,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"jyrw"},"content":"    private Deadline createDeadline(String taskInfo) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"jyrw"},"content":"        String[] deadlineInfo \u003d taskInfo.split(\" /by \", 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"jyrw"},"content":"        if (deadlineInfo.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"jyrw"},"content":"            throw new DukeException(\"Please enter a valid deadline format.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"jyrw"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"jyrw"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(dateFormat);","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"jyrw"},"content":"            LocalDate by \u003d LocalDate.parse(deadlineInfo[1], dateFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"jyrw"},"content":"            Deadline newDeadline \u003d new Deadline(deadlineInfo[0], by);","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"jyrw"},"content":"            return newDeadline;","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"jyrw"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"jyrw"},"content":"            throw new DukeException(\"Please enter a valid date with format \" + dateFormat + \".\");","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"jyrw"},"content":"    private Event createEvent(String taskInfo) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"jyrw"},"content":"        String[] eventInfo \u003d taskInfo.split(\" /at \", 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"jyrw"},"content":"        if (eventInfo.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"jyrw"},"content":"            throw new DukeException(\"Please enter a valid event format.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":131,"author":{"gitId":"jyrw"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"jyrw"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(dateFormat);","lastModifiedDate":"2021-09-07"},{"lineNumber":133,"author":{"gitId":"jyrw"},"content":"            LocalDateTime at \u003d LocalDateTime.parse(eventInfo[1], dateTimeFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"jyrw"},"content":"            Event newEvent \u003d new Event(eventInfo[0], at);","lastModifiedDate":"2021-09-07"},{"lineNumber":135,"author":{"gitId":"jyrw"},"content":"            return newEvent;","lastModifiedDate":"2021-09-07"},{"lineNumber":136,"author":{"gitId":"jyrw"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"jyrw"},"content":"            throw new DukeException(\"Please enter a valid date with format \" + dateFormat + \".\");","lastModifiedDate":"2021-09-07"},{"lineNumber":138,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":141,"author":{"gitId":"jyrw"},"content":"    private ToDo createToDo(String taskInfo) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":142,"author":{"gitId":"jyrw"},"content":"        ToDo newToDo \u003d new ToDo(taskInfo);","lastModifiedDate":"2021-09-07"},{"lineNumber":143,"author":{"gitId":"jyrw"},"content":"        return newToDo;","lastModifiedDate":"2021-09-07"},{"lineNumber":144,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jyrw":146}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":" * Representation of a storage file which can be read from and written to.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":" * @author Joshua Yong","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"    private String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jyrw"},"content":"     * @param filePath The file path of the file to be used.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jyrw"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jyrw"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jyrw"},"content":"     * Parses the associated file, returning a collection of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"jyrw"},"content":"     * @return An ArrayList of Tasks corresponding to the data in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jyrw"},"content":"     * @throws DukeException If the file is formatted incorrectly or cannot be found","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jyrw"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jyrw"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jyrw"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jyrw"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jyrw"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jyrw"},"content":"            String line \u003d br.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jyrw"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jyrw"},"content":"                Task newTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jyrw"},"content":"                try {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jyrw"},"content":"                    String taskInfo \u003d line.substring(7);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jyrw"},"content":"                    switch (line.charAt(1)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jyrw"},"content":"                    case \u0027D\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jyrw"},"content":"                        String[] deadlineInfo \u003d taskInfo.split(\" \\\\| by: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jyrw"},"content":"                        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"EEE dd MMM yyyy\");","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jyrw"},"content":"                        LocalDate by \u003d LocalDate.parse(deadlineInfo[1], dateFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jyrw"},"content":"                        newTask \u003d new Deadline(deadlineInfo[0], by);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jyrw"},"content":"                        break;","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jyrw"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jyrw"},"content":"                        String[] eventInfo \u003d taskInfo.split(\" \\\\| at: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jyrw"},"content":"                        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"EEE dd MMM yyyy HH:mma\");","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jyrw"},"content":"                        LocalDateTime at \u003d LocalDateTime.parse(eventInfo[1], dateTimeFormatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jyrw"},"content":"                        newTask \u003d new Event(eventInfo[0], at);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jyrw"},"content":"                        break;","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"jyrw"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"jyrw"},"content":"                        newTask \u003d new ToDo(taskInfo);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"jyrw"},"content":"                        break;","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"jyrw"},"content":"                    default:","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"jyrw"},"content":"                        throw new DukeException(\"Error: Data is formatted incorrectly in storage file.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"jyrw"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"jyrw"},"content":"                } catch (IndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"jyrw"},"content":"                    throw new DukeException(\"Error: Data is formatted incorrectly in storage file.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jyrw"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jyrw"},"content":"                if (line.charAt(4) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"jyrw"},"content":"                    newTask.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"jyrw"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"jyrw"},"content":"                tasks.add(newTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"jyrw"},"content":"                line \u003d br.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"jyrw"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"jyrw"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"jyrw"},"content":"            throw new DukeException(\"Error: The specified file path for storage cannot be resolved.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"jyrw"},"content":"        return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"jyrw"},"content":"     * Writes task data to the associated file.","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"jyrw"},"content":"     * @param tasks The given TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"jyrw"},"content":"    public void save(TaskList tasks) { // TODO: Tidy this","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"jyrw"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"jyrw"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"jyrw"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"jyrw"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"jyrw"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"jyrw"},"content":"            int taskCount \u003d tasks.getSize();","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"jyrw"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"jyrw"},"content":"                fw.write(tasks.getTask(i).toString() + System.lineSeparator());","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"jyrw"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"jyrw"},"content":"            fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"jyrw"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"jyrw"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jyrw":107}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":" * Represents a list of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":" * @author Joshua Yong","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"     * Overloaded class constructor which initializes the TaskList with existing tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"     * @param tasks An ArrayList of tasks to be stored in the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jyrw"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jyrw"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jyrw"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jyrw"},"content":"        return tasks.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"jyrw"},"content":"     * Sets the specified task from the TaskList as done.","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"jyrw"},"content":"     * @param i Index of the Task to be set as done.","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"jyrw"},"content":"    public void setTaskAsDone(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jyrw"},"content":"        tasks.get(i).setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"jyrw"},"content":"     * Removes the specified task from the TaskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"jyrw"},"content":"     * @param i Index of the Task to be removed.","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"jyrw"},"content":"    public void deleteTask(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jyrw"},"content":"        tasks.remove(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"jyrw"},"content":"     * Adds the given task to the TaskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"jyrw"},"content":"     * @param task The Task to be added.","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"jyrw"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jyrw"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"jyrw"},"content":"     * Returns the size of the TaskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"jyrw"},"content":"     * @return The size of the TaskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"jyrw"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"jyrw"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"jyrw"},"content":"     * Returns a formatted String of all tasks in the TaskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"jyrw"},"content":"     * The String contains all Tasks in the TaskList with their task number.","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"jyrw"},"content":"     * @return A formatted String representation of the TaskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"jyrw"},"content":"    public String getAllTasksString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"jyrw"},"content":"        StringBuilder result \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"jyrw"},"content":"        int taskCount \u003d tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"jyrw"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"jyrw"},"content":"            result.append(\"\\n\" + (i + 1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"jyrw"},"content":"        return result.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"jyrw"},"content":"     * Returns a formatted String of all tasks in the TaskList matching a given keyword.","lastModifiedDate":"2021-09-09"},{"lineNumber":91,"author":{"gitId":"jyrw"},"content":"     * The String contains all Tasks in the TaskList with numbering.","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"jyrw"},"content":"     * @param keyword The keyword which is filtered for.","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"jyrw"},"content":"     * @return A formatted String representation of the matching Tasks in the TaskList.","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"jyrw"},"content":"    public String getMatchingTasksString(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"jyrw"},"content":"        ArrayList\u003cTask\u003e matchingTaskList \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"jyrw"},"content":"        matchingTaskList.removeIf(task -\u003e !task.getDescription().contains(keyword));","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"jyrw"},"content":"        StringBuilder result \u003d new StringBuilder(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-09"},{"lineNumber":100,"author":{"gitId":"jyrw"},"content":"        int taskCount \u003d matchingTaskList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"jyrw"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"jyrw"},"content":"            result.append(\"\\n\" + (i + 1) + \". \" + matchingTaskList.get(i).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"jyrw"},"content":"        return result.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":108,"author":{"gitId":"jyrw"},"content":"     * Returns a formatted String of all Deadlines in the TaskList which","lastModifiedDate":"2021-09-09"},{"lineNumber":109,"author":{"gitId":"jyrw"},"content":"     * \u003cul\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":110,"author":{"gitId":"jyrw"},"content":"     *     \u003cli\u003eare not done, and\u003c/li\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":111,"author":{"gitId":"jyrw"},"content":"     *     \u003cli\u003e are due within 1 week of the current date.\u003c/li\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":112,"author":{"gitId":"jyrw"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2021-09-09"},{"lineNumber":113,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":114,"author":{"gitId":"jyrw"},"content":"     * @return A formatted String representation of upcoming incomplete Deadlines.","lastModifiedDate":"2021-09-09"},{"lineNumber":115,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":116,"author":{"gitId":"jyrw"},"content":"    public String getUpcomingTasksString() {","lastModifiedDate":"2021-09-09"},{"lineNumber":117,"author":{"gitId":"jyrw"},"content":"        ArrayList\u003cTask\u003e upcomingTaskList \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-09-09"},{"lineNumber":118,"author":{"gitId":"jyrw"},"content":"        upcomingTaskList.removeIf(task -\u003e {","lastModifiedDate":"2021-09-09"},{"lineNumber":119,"author":{"gitId":"jyrw"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2021-09-09"},{"lineNumber":120,"author":{"gitId":"jyrw"},"content":"                Deadline currDeadline \u003d (Deadline) task;","lastModifiedDate":"2021-09-09"},{"lineNumber":121,"author":{"gitId":"jyrw"},"content":"                return currDeadline.getDone() || currDeadline.getBy().isAfter(LocalDate.now().plusWeeks(1));","lastModifiedDate":"2021-09-09"},{"lineNumber":122,"author":{"gitId":"jyrw"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":123,"author":{"gitId":"jyrw"},"content":"            return true;","lastModifiedDate":"2021-09-09"},{"lineNumber":124,"author":{"gitId":"jyrw"},"content":"        });","lastModifiedDate":"2021-09-09"},{"lineNumber":125,"author":{"gitId":"jyrw"},"content":"        StringBuilder result \u003d new StringBuilder(\"Here are your upcoming deadlines:\");","lastModifiedDate":"2021-09-09"},{"lineNumber":126,"author":{"gitId":"jyrw"},"content":"        int taskCount \u003d upcomingTaskList.size();","lastModifiedDate":"2021-09-09"},{"lineNumber":127,"author":{"gitId":"jyrw"},"content":"        for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2021-09-09"},{"lineNumber":128,"author":{"gitId":"jyrw"},"content":"            result.append(\"\\n\" + (i + 1) + \". \" + upcomingTaskList.get(i).toString());","lastModifiedDate":"2021-09-09"},{"lineNumber":129,"author":{"gitId":"jyrw"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":130,"author":{"gitId":"jyrw"},"content":"        return result.toString();","lastModifiedDate":"2021-09-09"},{"lineNumber":131,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":132,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":133,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jyrw":133}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":" * Represents a deadline which is a subtype of Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":" * A deadline encapsulates an additional LocalDate","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":" * which represents the date of the deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":" * @author Joshua Yong","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"     * @param description The given deadline description.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"     * @param by The deadline date.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"        return by;","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jyrw"},"content":"     * Outputs this deadline as a String.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jyrw"},"content":"     * @return String representation of the deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jyrw"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"jyrw"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"jyrw"},"content":"        DateTimeFormatter printFormat \u003d DateTimeFormatter.ofPattern(\"EEE dd MMM yyyy\");","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"jyrw"},"content":"        return \"[D]\" + super.toString() + \" | by: \" + by.format(printFormat);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"jyrw":43}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":" * Represents an event which is a subtype of Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":" * An event encapsulates an additional LocalDateTime","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":" * which represents the timing of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":" * @author Joshua Yong","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"     * @param description The given event description.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"     * @param at The timing of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jyrw"},"content":"     * Outputs this event as a String.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jyrw"},"content":"     * @return String representation of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jyrw"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"jyrw"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"jyrw"},"content":"        DateTimeFormatter printFormat \u003d DateTimeFormatter.ofPattern(\"EEE dd MMM yyyy hh:mma\");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jyrw"},"content":"        return \"[E]\" + super.toString() + \" | at: \" + at.format(printFormat);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"jyrw":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":" * Represents a task which encapsulates a description","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":" * and a boolean flag indicating if the task is complete.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":" * @author Joshua Yong","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"     * @param description The given Task description.","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"     * Outputs this task as a String.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"     * @return String representation of the Task.","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"jyrw"},"content":"        String statusIcon \u003d this.isDone ? \"[X]\" : \"[ ]\"; // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"jyrw"},"content":"        return statusIcon + \" \" + description;","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jyrw"},"content":"     * Sets the isDone boolean flag of the Task to true.","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jyrw"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"jyrw"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"jyrw"},"content":"     * Gets the done status of the Task.","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"jyrw"},"content":"    public boolean getDone() {","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"jyrw"},"content":"        return isDone;","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"jyrw"},"content":"     * Gets the description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"jyrw"},"content":"     * @return Description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"jyrw"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"jyrw"},"content":"        return this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"jyrw":56}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":" * Represents a todo which is a subtype of Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":" * @author Joshua Yong","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"     * Outputs this todo as a String.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"     * @return String representation of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"jyrw":29}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"jyrw":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"jyrw":19}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":"class TaskTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"    public void stringConversion_undoneTask_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"        assertEquals(\"[ ] taskDescription\", new Task(\"taskDescription\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"    public void stringConversion_doneTask_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"        Task task \u003d new Task(\"taskDescription\");","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"        task.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"        assertEquals(\"[X] taskDescription\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"    public void setDone_undoneTask_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"        Task task \u003d new Task(\"taskDescription\");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"        task.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"        assertTrue(task.isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jyrw":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jyrw"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"jyrw"},"content":"list asdf","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"jyrw"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"jyrw"},"content":"done 0","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"jyrw"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"jyrw"},"content":"done 999","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"jyrw"},"content":"done asdf","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"jyrw"},"content":"delete","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"jyrw"},"content":"delete 0","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"jyrw"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"jyrw"},"content":"delete 999","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"jyrw"},"content":"delete asdf","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"jyrw"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"jyrw"},"content":"deadline ip","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"jyrw"},"content":"deadline ip /by Friday","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"jyrw"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"jyrw"},"content":"event Dinner","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"jyrw"},"content":"event Dinner /at Thursday 1900-2000","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"jyrw"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"jyrw"},"content":"todo study","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"jyrw"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"jyrw"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"jyrw"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"jyrw"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"jyrw"},"content":"delete 4","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"jyrw"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"jyrw"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"jyrw"},"content":"asdf","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"jyrw"},"content":"bye asdf","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"jyrw"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jyrw":30}}]
