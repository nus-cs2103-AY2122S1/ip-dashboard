[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"# javaFx.gui.Main project template","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"3. After that, locate the `src/main/java/javaFx.gui.Main.java` file, right-click it, and choose `Run javaFx.gui.Main.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"idgrr":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"//    id \u0027\u0027 +","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"//            \u0027\u0027 +","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"//            \u0027\u0027 +","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"//            \u0027\u0027 +","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"//            \u0027\u0027 +","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"//            \u0027checkstyle\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"//javafx {","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"//    version \u003d \"11.0.2\"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"//    modules \u003d [ \u0027javafx.controls\u0027 ]","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"//}","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"//checkstyle {","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"//    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"//}","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"idgrr":31,"-":41}},{"path":"data/savedOutput.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"T T task 1","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"T F task 2","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"T T task 3","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"T T task 4","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"T F task 5","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"idgrr":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"# TaskMan User Guide","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"TaskMan is your one-stop-shop for all your task management! TaskMan tracks your various types of task and compiles it in a neat list for your convinience. Make TaskMan your personalised *TASK MAN*ager today!","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"## Quick Navigation","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"* [Quick Setup](#quick-setup)","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"* [Features](#features)","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"* [Usage](#usage)","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"    * [Adding a task to do :`todo`](#adding-a-task-to-do-todo)","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"    * [Adding a task with a deadline: `deadline`](#adding-a-task-with-a-deadline-deadline)","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"    * [Adding an event: `event`](#adding-an-event-event)","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"    * [Looking at all the task being tracked: `list`](#looking-at-all-the-task-being-tracked-list)","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"    * [Finding task using keyword: `find`](#finding-task-using-keyword-find)","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"    * [Mark task as complete: `done`](#mark-task-as-complete-done)","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"    * [Remove a task: `delete`](#remove-a-task-delete)","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"    * [Viewing help : `help`](#viewing-help--help)","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"*  [Exiting the application: `bye`](#exiting-the-application-bye)","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"## Quick Setup","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"    1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"    2. Using the Command Line, run the command java -jar duke.jar (i.e., run the command in the same folder as the jar file)","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"Successfully opening TaskMan would lead you to a window like this","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"![SuccessStartup](Ui.png)","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"** Common Errors **","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"1. Please ensure that Java 11 or above is installed. You may download the lastest version [here](#https://www.oracle.com/java/technologies/downloads/)","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"## Features","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"Listed below is a short description of what TaskMan can do as a task manager","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"### Types of tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"- [_Todo:_](#adding-a-task-to-do-todo) a simple task with a short description","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"- [_Event:_](#adding-an-event-event) a Event **date** that you want to keep track of","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"- [_Deadline:_](#adding-a-task-with-a-deadline-deadline) a Deadline that you want to keep track of","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"### Set status of task","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"- [_Done Status:_](#mark-task-as-complete-done) After task completion, task may be set as done","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"### Other useful features","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"- [_Delete:_](#remove-a-task-delete) Deleting a task if you dont want to keep track of it anymore","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"- [_List:_](#looking-at-all-the-task-being-tracked-list) A list of all the tasks being tracked","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"- [_Find:_](#finding-task-using-keyword-find) Finding a task based on a keyword in its description","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"### Adding a task to do :`todo`","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"A task with a description. You may use either the **Command Line Format** or the given **GUI button**","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"Command Line Format: `todo [description]`","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"GUI Button:","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"1. Click the `+` button on the top right ","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"2. Select `todo` under **Tasktype**","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"3. Add your task description under **Description**","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"Expected output for both methods:","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":" Got it, I\u0027ve added this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"  [T][] description","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":" Now you have x task in the list","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"_*x refers to the number of task in the list_","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"**Troubleshoot common errors:**","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"1. Missing Description, TaskMan requires a description to be attached to all task","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"###Adding a task with a deadline: `deadline`","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"A task with a day to be set as a deadline. You may use either the **Command Line Format** or the given **GUI button**","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"Command Line Format:  ","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"`deadline [description] /by [YYYY-MM-DD] [Time in 24 Hour Format]`","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"idgrr"},"content":"GUI Button:","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"idgrr"},"content":"1. Click the `+` button on the top right","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"idgrr"},"content":"2. Select `deadline` under **Tasktype**","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"idgrr"},"content":"3. Add your task description under **Description**","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"idgrr"},"content":"4. Pressing `add task`","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"idgrr"},"content":"5. Add your date in `YYYY-MM-DD` ","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"idgrr"},"content":"6. Add your time in `24 hour format`","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"idgrr"},"content":"Example: \u0027deadline description /by 2021-09-14 1200\u0027 ","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"idgrr"},"content":"Expected output for both methods:","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"idgrr"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"idgrr"},"content":" Got it, I\u0027ve added this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"idgrr"},"content":"  [D][] description (by: Sep 14 2021 1200 hrs)","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"idgrr"},"content":" Now you have x task in the list","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"idgrr"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"idgrr"},"content":"_*x refers to the number of task in the list_","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"idgrr"},"content":"**Troubleshoot common errors:**","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"idgrr"},"content":"1. Missing Description, TaskMan requires a description to be attached to all task","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"idgrr"},"content":"2. Missing/Wrong date input. Requires YYYY-MM-DD.","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"idgrr"},"content":"3. Missing/Wrong Time input. Requires time to be in 24 hour format (0000 to 2359)","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"idgrr"},"content":"###Adding an event: `event`","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"idgrr"},"content":"A task with a day to be set as an Event. ","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"idgrr"},"content":"You may use either the **Command Line Format** or the given **GUI button**","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"idgrr"},"content":"Command Line Format:  ","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"idgrr"},"content":"`event [description] /at [YYYY-MM-DD] [Time in 24 Hour Format]`","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"idgrr"},"content":"GUI Button:","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"idgrr"},"content":"1. Click the `+` button on the top right","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"idgrr"},"content":"2. Select `event` under **Tasktype**","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"idgrr"},"content":"3. Add your task description under **Description**","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"idgrr"},"content":"4. Pressing `add task`","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"idgrr"},"content":"5. Add your date in `YYYY-MM-DD`","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"idgrr"},"content":"6. Add your time in `24 hour format`","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"idgrr"},"content":"Example: \u0027event description /at 2021-09-14 1200\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"idgrr"},"content":"Expected output for both methods:","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"idgrr"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"idgrr"},"content":" Got it, I\u0027ve added this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"idgrr"},"content":"  [E][] description (by: Sep 14 2021 1200 hrs)","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"idgrr"},"content":" Now you have x task in the list","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"idgrr"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":130,"author":{"gitId":"idgrr"},"content":"_*x refers to the number of task in the list_","lastModifiedDate":"2021-09-15"},{"lineNumber":131,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":132,"author":{"gitId":"idgrr"},"content":"**Troubleshoot common errors:**","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"idgrr"},"content":"1. Missing Description, TaskMan requires a description to be attached to all task","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"idgrr"},"content":"2. Missing/Wrong date input. Requires YYYY-MM-DD","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"idgrr"},"content":"3. Missing/Wrong Time input. Requires time to be in 24 hour format (0000 to 2359)","lastModifiedDate":"2021-09-15"},{"lineNumber":136,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":137,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":138,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":139,"author":{"gitId":"idgrr"},"content":"### Looking at all the task being tracked: `list`","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"idgrr"},"content":"Get a list of all the task being tracked. ","lastModifiedDate":"2021-09-15"},{"lineNumber":141,"author":{"gitId":"idgrr"},"content":"You may use either the **Command Line Format** or the given **GUI button**","lastModifiedDate":"2021-09-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":143,"author":{"gitId":"idgrr"},"content":"Command Line Format: `list`","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":145,"author":{"gitId":"idgrr"},"content":"GUI Button:","lastModifiedDate":"2021-09-15"},{"lineNumber":146,"author":{"gitId":"idgrr"},"content":"1. Click the ![picture](list.png) button on the top left","lastModifiedDate":"2021-09-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":148,"author":{"gitId":"idgrr"},"content":"Expected output for both methods if the list is populated:","lastModifiedDate":"2021-09-15"},{"lineNumber":149,"author":{"gitId":"idgrr"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":150,"author":{"gitId":"idgrr"},"content":" 1. [task1 details here]","lastModifiedDate":"2021-09-15"},{"lineNumber":151,"author":{"gitId":"idgrr"},"content":" 2. [task2 details here]","lastModifiedDate":"2021-09-15"},{"lineNumber":152,"author":{"gitId":"idgrr"},"content":" ...","lastModifiedDate":"2021-09-15"},{"lineNumber":153,"author":{"gitId":"idgrr"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":154,"author":{"gitId":"idgrr"},"content":"Expected output for both methods if the list is not populated:","lastModifiedDate":"2021-09-15"},{"lineNumber":155,"author":{"gitId":"idgrr"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":156,"author":{"gitId":"idgrr"},"content":"Im sorry, the list seems to be empty","lastModifiedDate":"2021-09-15"},{"lineNumber":157,"author":{"gitId":"idgrr"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":158,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":159,"author":{"gitId":"idgrr"},"content":"**Troubleshoot common errors:**","lastModifiedDate":"2021-09-15"},{"lineNumber":160,"author":{"gitId":"idgrr"},"content":"1. Adding something else after `list` in the Command Line. This will invalidate the command","lastModifiedDate":"2021-09-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":162,"author":{"gitId":"idgrr"},"content":"### Finding task using keyword: `find`","lastModifiedDate":"2021-09-15"},{"lineNumber":163,"author":{"gitId":"idgrr"},"content":"Find a task based keyword description . ","lastModifiedDate":"2021-09-15"},{"lineNumber":164,"author":{"gitId":"idgrr"},"content":"You only have the Command Line for this feature. **_GUI option coming soon_**","lastModifiedDate":"2021-09-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"idgrr"},"content":"Command Line Format: `find [keyword/s]`","lastModifiedDate":"2021-09-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":168,"author":{"gitId":"idgrr"},"content":"Expected output:","lastModifiedDate":"2021-09-15"},{"lineNumber":169,"author":{"gitId":"idgrr"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":170,"author":{"gitId":"idgrr"},"content":" Here are the tasks with the keyword : [keyword/s]","lastModifiedDate":"2021-09-15"},{"lineNumber":171,"author":{"gitId":"idgrr"},"content":" x. [taskx details here]","lastModifiedDate":"2021-09-15"},{"lineNumber":172,"author":{"gitId":"idgrr"},"content":" ...","lastModifiedDate":"2021-09-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":174,"author":{"gitId":"idgrr"},"content":"_*x refers to the task position in the whole list._  ","lastModifiedDate":"2021-09-15"},{"lineNumber":175,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":176,"author":{"gitId":"idgrr"},"content":"**Troubleshoot common errors:**","lastModifiedDate":"2021-09-15"},{"lineNumber":177,"author":{"gitId":"idgrr"},"content":"1. No spacing between `find` and `[keywords]`. TaskMan would not recognize it as a command","lastModifiedDate":"2021-09-15"},{"lineNumber":178,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":179,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":180,"author":{"gitId":"idgrr"},"content":"### Mark task as complete: `done`","lastModifiedDate":"2021-09-15"},{"lineNumber":181,"author":{"gitId":"idgrr"},"content":"Marks a task as complete. You only have the Command Line for this feature. **_GUI option coming soon_**","lastModifiedDate":"2021-09-15"},{"lineNumber":182,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":183,"author":{"gitId":"idgrr"},"content":"Command Line Format: `done [task position in list]`","lastModifiedDate":"2021-09-15"},{"lineNumber":184,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":185,"author":{"gitId":"idgrr"},"content":"Expected output:","lastModifiedDate":"2021-09-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":187,"author":{"gitId":"idgrr"},"content":" Nice! ive marked this task as done:","lastModifiedDate":"2021-09-15"},{"lineNumber":188,"author":{"gitId":"idgrr"},"content":" x. [taskx details here]","lastModifiedDate":"2021-09-15"},{"lineNumber":189,"author":{"gitId":"idgrr"},"content":" ...","lastModifiedDate":"2021-09-15"},{"lineNumber":190,"author":{"gitId":"idgrr"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":191,"author":{"gitId":"idgrr"},"content":"_*Note, to find `[task position in list]` , user may use either [find](#finding-task-using-keyword-find) or ","lastModifiedDate":"2021-09-15"},{"lineNumber":192,"author":{"gitId":"idgrr"},"content":"[list](#looking-at-all-the-task-being-tracked-list)_","lastModifiedDate":"2021-09-15"},{"lineNumber":193,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":194,"author":{"gitId":"idgrr"},"content":"**Troubleshoot common errors:**","lastModifiedDate":"2021-09-15"},{"lineNumber":195,"author":{"gitId":"idgrr"},"content":"1. Invalid Task number. Task position may be invalid due to","lastModifiedDate":"2021-09-15"},{"lineNumber":196,"author":{"gitId":"idgrr"},"content":"    1. Number is out of bounds (Negative or larger than list size)","lastModifiedDate":"2021-09-15"},{"lineNumber":197,"author":{"gitId":"idgrr"},"content":"    2. task position is not in **NUMERICAL** form","lastModifiedDate":"2021-09-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":201,"author":{"gitId":"idgrr"},"content":"### Remove a task: `delete`","lastModifiedDate":"2021-09-15"},{"lineNumber":202,"author":{"gitId":"idgrr"},"content":"Delete a task. You only have the Command Line for this feature. **_GUI option coming soon_**","lastModifiedDate":"2021-09-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":204,"author":{"gitId":"idgrr"},"content":"Command Line Format: `delete [task position in list]`","lastModifiedDate":"2021-09-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":206,"author":{"gitId":"idgrr"},"content":"Expected output:","lastModifiedDate":"2021-09-15"},{"lineNumber":207,"author":{"gitId":"idgrr"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":208,"author":{"gitId":"idgrr"},"content":" Noted. Ive removed this task: ","lastModifiedDate":"2021-09-15"},{"lineNumber":209,"author":{"gitId":"idgrr"},"content":"  [taskx details here]","lastModifiedDate":"2021-09-15"},{"lineNumber":210,"author":{"gitId":"idgrr"},"content":" Now you have x tasks in the list","lastModifiedDate":"2021-09-15"},{"lineNumber":211,"author":{"gitId":"idgrr"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":212,"author":{"gitId":"idgrr"},"content":"_*x refers to the number of task in the list_","lastModifiedDate":"2021-09-15"},{"lineNumber":213,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":214,"author":{"gitId":"idgrr"},"content":"**Troubleshoot common errors:**","lastModifiedDate":"2021-09-15"},{"lineNumber":215,"author":{"gitId":"idgrr"},"content":"1. Invalid Task number. Task position may be invalid due to","lastModifiedDate":"2021-09-15"},{"lineNumber":216,"author":{"gitId":"idgrr"},"content":"    1. Number is out of bounds (Negative or larger than list size)","lastModifiedDate":"2021-09-15"},{"lineNumber":217,"author":{"gitId":"idgrr"},"content":"    2. task position is not in **NUMERICAL** form","lastModifiedDate":"2021-09-15"},{"lineNumber":218,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":219,"author":{"gitId":"idgrr"},"content":"###Viewing help : `help`","lastModifiedDate":"2021-09-15"},{"lineNumber":220,"author":{"gitId":"idgrr"},"content":"A quick way to access instructions for Command Line Commands","lastModifiedDate":"2021-09-15"},{"lineNumber":221,"author":{"gitId":"idgrr"},"content":"A task with a description. You may use either the **Command Line Format** or the given **GUI button**","lastModifiedDate":"2021-09-15"},{"lineNumber":222,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":223,"author":{"gitId":"idgrr"},"content":"Command Line Format: `help`","lastModifiedDate":"2021-09-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":225,"author":{"gitId":"idgrr"},"content":"GUI Button:","lastModifiedDate":"2021-09-15"},{"lineNumber":226,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":227,"author":{"gitId":"idgrr"},"content":"1. Click the `?` button on the top right","lastModifiedDate":"2021-09-15"},{"lineNumber":228,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":229,"author":{"gitId":"idgrr"},"content":"Expected Output:","lastModifiedDate":"2021-09-15"},{"lineNumber":230,"author":{"gitId":"idgrr"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":231,"author":{"gitId":"idgrr"},"content":" Here is a quick guide on the Command line Commands:","lastModifiedDate":"2021-09-15"},{"lineNumber":232,"author":{"gitId":"idgrr"},"content":" ----------------------------------------------","lastModifiedDate":"2021-09-15"},{"lineNumber":233,"author":{"gitId":"idgrr"},"content":" Viewing help : help","lastModifiedDate":"2021-09-15"},{"lineNumber":234,"author":{"gitId":"idgrr"},"content":" ----------------------------------------------","lastModifiedDate":"2021-09-15"},{"lineNumber":235,"author":{"gitId":"idgrr"},"content":" List all task : list","lastModifiedDate":"2021-09-15"},{"lineNumber":236,"author":{"gitId":"idgrr"},"content":" ----------------------------------------------","lastModifiedDate":"2021-09-15"},{"lineNumber":237,"author":{"gitId":"idgrr"},"content":" Add task: todo [task details]","lastModifiedDate":"2021-09-15"},{"lineNumber":238,"author":{"gitId":"idgrr"},"content":" ----------------------------------------------","lastModifiedDate":"2021-09-15"},{"lineNumber":239,"author":{"gitId":"idgrr"},"content":" Add deadline : deadline [details] /by ","lastModifiedDate":"2021-09-15"},{"lineNumber":240,"author":{"gitId":"idgrr"},"content":" [YYYY-MM-DD] [24-hour] ","lastModifiedDate":"2021-09-15"},{"lineNumber":241,"author":{"gitId":"idgrr"},"content":" ----------------------------------------------","lastModifiedDate":"2021-09-15"},{"lineNumber":242,"author":{"gitId":"idgrr"},"content":" Adding a event : event [task details] /at ","lastModifiedDate":"2021-09-15"},{"lineNumber":243,"author":{"gitId":"idgrr"},"content":" [YYYY-MM-DD] [24-hour]","lastModifiedDate":"2021-09-15"},{"lineNumber":244,"author":{"gitId":"idgrr"},"content":" ----------------------------------------------","lastModifiedDate":"2021-09-15"},{"lineNumber":245,"author":{"gitId":"idgrr"},"content":" Completing a task: done [task list position]","lastModifiedDate":"2021-09-15"},{"lineNumber":246,"author":{"gitId":"idgrr"},"content":" ----------------------------------------------","lastModifiedDate":"2021-09-15"},{"lineNumber":247,"author":{"gitId":"idgrr"},"content":" Search task by keyword: find [keyword] ","lastModifiedDate":"2021-09-15"},{"lineNumber":248,"author":{"gitId":"idgrr"},"content":" ----------------------------------------------","lastModifiedDate":"2021-09-15"},{"lineNumber":249,"author":{"gitId":"idgrr"},"content":" Deleting a person : delete [task list position]","lastModifiedDate":"2021-09-15"},{"lineNumber":250,"author":{"gitId":"idgrr"},"content":" ----------------------------------------------","lastModifiedDate":"2021-09-15"},{"lineNumber":251,"author":{"gitId":"idgrr"},"content":" Exiting the program : bye\";","lastModifiedDate":"2021-09-15"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":253,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":254,"author":{"gitId":"idgrr"},"content":"###Exiting the application `bye`","lastModifiedDate":"2021-09-15"},{"lineNumber":255,"author":{"gitId":"idgrr"},"content":"There are two ways to close the application.","lastModifiedDate":"2021-09-15"},{"lineNumber":256,"author":{"gitId":"idgrr"},"content":"Either a Command Line or simply closing `x` on the top right","lastModifiedDate":"2021-09-15"},{"lineNumber":257,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":258,"author":{"gitId":"idgrr"},"content":"Format: `bye`","lastModifiedDate":"2021-09-15"},{"lineNumber":259,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":260,"author":{"gitId":"idgrr"},"content":"Expected Output:","lastModifiedDate":"2021-09-15"},{"lineNumber":261,"author":{"gitId":"idgrr"},"content":"```aidl","lastModifiedDate":"2021-09-15"},{"lineNumber":262,"author":{"gitId":"idgrr"},"content":" Bye! Hope to see you soon","lastModifiedDate":"2021-09-15"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":264,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":265,"author":{"gitId":"idgrr"},"content":"*Note, these are the only two ways to ensure that all previous commands are properly saved. ","lastModifiedDate":"2021-09-15"},{"lineNumber":266,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":267,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":268,"author":{"gitId":"idgrr"},"content":"## Reporting an Issue","lastModifiedDate":"2021-09-15"},{"lineNumber":269,"author":{"gitId":"idgrr"},"content":"If there are any bugs found, do kindly file report with a screenshot and a short description of ","lastModifiedDate":"2021-09-15"},{"lineNumber":270,"author":{"gitId":"idgrr"},"content":"the encountered bug.","lastModifiedDate":"2021-09-15"},{"lineNumber":271,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":272,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":273,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":274,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":275,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":276,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"idgrr":249,"-":27}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import duke.util.*;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":" *fw duke.Duke class","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"public class Duke {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"    private final Storage storage \u003d new StorageTxt(\"./data\");","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"    private final Parser parser \u003d new Parser(storage, taskList);","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"    private boolean isBye;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"     * Basic Constructor","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"    public Duke(){","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"        parser.loadTask();","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"     * Saves the tasklist during a closure event","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"    public void saveOnClosed() {","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"            this.storage.saveUpdateTask(taskList);","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"     * duke program that prints in commandLine","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"    private void textProcess() {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"        while (!isBye) {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"            String input \u003d scan.nextLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"                Command c \u003d parser.parse(input);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"                System.out.println(c.exec());","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"                isBye \u003d c.checkIsBye();","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"            }","lastModifiedDate":"2021-08-14"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"     * duke program that passes output to the GUI","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"    public String guiProcess(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"            Command c \u003d parser.parse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"            output \u003d c.exec();","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"            isBye \u003d c.checkIsBye();","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"            return e.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"        return output;","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"     * checks if the","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"idgrr"},"content":"    public boolean checkIsBye() {","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"idgrr"},"content":"        return this.isBye;","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"idgrr"},"content":"     * Main program Duke in commandline output mode","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"idgrr"},"content":"     * @param args","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"idgrr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-14"},{"lineNumber":89,"author":{"gitId":"idgrr"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"idgrr"},"content":"        duke.textProcess();","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"idgrr":91,"-":2}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import duke.taskTypes.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":" * Command that adds task into tasklist","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"    private final String taskDetails;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"    private final String addType;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"     * Basic Constructor","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"     * @param storage StorageTxt object to save","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"     * @param taskList Tasklist to add task to","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"     * @param taskDetails User input","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"     * @param addType","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"    public AddCommand(Storage storage, TaskList taskList, String taskDetails, String addType){","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"        super(storage, taskList, false);","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"        this.taskDetails \u003d taskDetails;","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"        this.addType \u003d addType;","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"     * Executes a set of instructions to add a task into list and storage","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"     * @return String success message","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"    public String exec() throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"        switch (addType) {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"            Task deadline \u003d taskList.deadline(taskDetails);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"            storage.saveAddedTask(deadline);","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"            return successfullyAddedTask(deadline);","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"            // returns success message after adding deadline","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"            Task todo \u003d taskList.todo(taskDetails);","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"            storage.saveAddedTask(todo);","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"            return successfullyAddedTask(todo);","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"            // returns success message after adding task","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"        case \"event\":","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"            Task event \u003d taskList.event(taskDetails);","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"            storage.saveAddedTask(event);","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"            return successfullyAddedTask(event);","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"            // returns success message after adding event","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"        return \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"     * Returns a string success message","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"     * @param task","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"    private String successfullyAddedTask(Task task) {","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"        String taskDetails \u003d task.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"        int task_left \u003d taskList.taskLeft();","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"        return successMessage(taskDetails, task_left);","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"     * Formats a success message","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"     * @param taskDetails","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"     * @param task_left","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"idgrr"},"content":"    private String successMessage(String taskDetails, int task_left) {","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"idgrr"},"content":"        return \"Got it. I\u0027ve added this task:\\n \" + taskDetails +  \"\\nNow you have \"","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"idgrr"},"content":"                + task_left + \" tasks in the list.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"idgrr":83}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":" * Command that duke executes to end the the program","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"    private final String exitMessage \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"     * Basic Constructor","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"     * @param storage StorageTxt object to save","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"     * @param taskList Tasklist to add task to","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"    public ByeCommand(Storage storage, TaskList taskList){","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"        super(storage, taskList, true);","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"     * Executes a set of instructions to close the application","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"     * @return String success message","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"    public String exec() throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"        return exitMessage;","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"idgrr":34}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":" * Command abstract class that contains basic structure of a command","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"    protected final Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"    protected final TaskList taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"    protected boolean isBye;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"     * Basic Constructor","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"     * @param storage StorageTxt object to save","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"     * @param taskList Tasklist to add task to","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"     * @param isBye boolean to check whether to end the program","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"    public Command(Storage storage, TaskList taskList, boolean isBye) {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"        this.isBye \u003d isBye;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"     * Checks command closes the application","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"    public boolean checkIsBye() {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"        return this.isBye;","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"     * Abstract method that is to be defined in subclasses of Command","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"     * @return boolean To indicate whether to keep looking for the next user input","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"    public abstract String exec() throws DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"idgrr":45}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import duke.taskTypes.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":" * Command that deletes task from tasklist","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"    private final String taskNumber;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"     * Basic Constructor","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"     * @param storage StorageTxt object to save","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"     * @param taskList Tasklist to add task to","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"     * @param taskNumber contains the string that describes which task to be deleted","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"    public DeleteCommand(Storage storage, TaskList taskList, String taskNumber) {","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"        super(storage, taskList, false);","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"     * Executes a set of instructions to delete a task from list and storage","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"     * @return String success message","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"    public String exec() throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"        Task deletedTask \u003d taskList.delete(taskNumber);","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"        storage.saveUpdateTask(taskList);","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"        return successfullyDeletedTask(deletedTask);","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"     * Returns a string success message","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"     * @param task","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"    private String successfullyDeletedTask(Task task) {","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"        String taskDetails \u003d task.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"        int taskLeft \u003d taskList.taskLeft();","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"        return successMessage(taskDetails, taskLeft);","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"     * Formats a successful delete message","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"     * @return String successful delete message","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"    private String successMessage(String taskDetails, int taskLeft) {","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"        return \"Noted. I\u0027ve removed this task:\\n \" + taskDetails","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"                + \"\\nNow you have \" + taskLeft + \" tasks \" + \"in the list.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"idgrr":61}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import duke.taskTypes.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":" * Command that sets the task as done","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"    private final String taskChosen;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"    private final String successMessage \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"     * Basic Constructor","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"     * @param storage Storage object to save","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"     * @param taskList Tasklist to add task to","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"     * @param taskChosen contains the string that describes which task to be declared done","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"    public DoneCommand(Storage storage, TaskList taskList, String taskChosen) {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"        super(storage, taskList, false);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"        this.taskChosen \u003d taskChosen;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"     * Executes a set of instructions to set a task as done","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"     * @return String success message","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"    public String exec() throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"        Task doneTask \u003d taskList.done(taskChosen);","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"        storage.saveUpdateTask(taskList);","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"        return successfullyCompletedTask(doneTask);","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"     * Formats the done success message","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"     * @param task","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"    private String successfullyCompletedTask(Task task) {","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"        String taskDetails \u003d task.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"        return successMessage + taskDetails;","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"idgrr":52}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.command;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":" * Command that looks through tasklist to find task that contains a keyword","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"    private final String key;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"    private final String successFindMessage \u003d \"Here are the tasks with the keyword : \";","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"     * Basic constructor of find command instance","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"     * @param storage","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"     * @param taskList","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"     * @param key","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"    public FindCommand(Storage storage, TaskList taskList, String key) {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"        super(storage, taskList, false);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"        this.key \u003d key;","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"     * Executes a set of instructions to find a task based on keyword","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"     * @return String message","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"    public String exec() throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"        String keysFound \u003d taskList.find(key);","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"        if (keysFound.equals(\"\")){","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"            return \"Sorry, there is no task with keyword: \" + key ;","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"        return successFindMessage + key +\"\\n\" + keysFound;","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"idgrr":44}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.command;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":" * Command that contains details when user inputs Bye","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"public class HelpCommand extends Command{","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"    private final String divider \u003d \"----------------------------------------------\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"    private final String helpMessage \u003d \"Here is a quick guide on the Command line Commands: \\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"            + divider + \"Viewing help : help \\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"            + divider + \"List all task : list \\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"            + divider + \"Add task: todo [task details] \\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"            + divider + \"Add deadline : deadline [details] /by [YYYY-MM-DD] [24-hour] \\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"            + divider + \"Adding a event : event [task details] /at [YYYY-MM-DD] [24-hour] \\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"            + divider + \"Completing a task: done [task list position]\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"            + divider + \"Search task by keyword: find [keyword] \\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"            + divider + \"Deleting a person : delete [task list position] \\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"            + divider + \"Exiting the program : bye\";","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"     * Basic Constructor","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"     * @param storage Storage object to save","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"     * @param taskList Tasklist to add task to","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"    public HelpCommand(Storage storage, TaskList taskList){","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"        super(storage, taskList, false);","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"     * Executes a set of instructions to get a guide on to how to use the application","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"     * @return String help message","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"    public String exec() throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"        return helpMessage;","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"idgrr":45}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":" * Command that list out all the task based on input order","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"public class ListCommand  extends Command{","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"     * Basic Constructor","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"     * @param storage StorageTxt object to save","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"     * @param taskList Tasklist to add task to","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"    public ListCommand(Storage storage, TaskList taskList){","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"        super(storage, taskList, false);","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"     * Executes a set of instructions to get a list of all the task in the list","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"     * @return String list of all the task","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"    public String exec() throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"        return taskList.getList();","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"idgrr":33}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.exception;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":" * Exception that is thrown when user inputs something invalid in general","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"    private String errorDetails;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"     * Basic Constructor","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"     * @param errorDetails Explanation as to why error occurred","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"    public DukeException(String errorDetails){","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"        super();","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"        this.errorDetails \u003d errorDetails;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"     * Overrides the toString() of DukeException so that it would only pass the error details","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"    public String toString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"        return this.errorDetails + \" Please try again\";","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"idgrr":26}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.exception;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":" * Exception that is thrown when user inputs missing description","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"     * Basic Constructor","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"     * @param errorDetails Exception that is thrown when user inputs missing description","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"    public EmptyDescriptionException(String errorDetails) {","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"        super(errorDetails);","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"idgrr":16}},{"path":"src/main/java/duke/exception/EmptyTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.exception;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":" * Exception that is thrown when user inputs missing time","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"public class EmptyTimeException extends DukeException{","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"     * Basic Constructor","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"     * @param errorDetails Exception that is thrown when user inputs missing time","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"    public EmptyTimeException (String errorDetails) {","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"        super(errorDetails);","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"idgrr":16}},{"path":"src/main/java/duke/exception/FileNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.exception;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":" * Exception that is thrown when filepath does not contain file","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"public class FileNotFoundException extends DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"     * Basic Constructor","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"     * @param errorDetails Exception that is thrown when filepath does not contain file","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"    public FileNotFoundException(String errorDetails) {","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"        super(errorDetails);","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"idgrr":16}},{"path":"src/main/java/duke/exception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.exception;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":" * Exception that is thrown when user inputs invalid date","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"public class InvalidDateException extends DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"     * Basic Constructor","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"     * @param errorDetails Exception that is thrown when user inputs invalid date","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"    public InvalidDateException(String errorDetails) {","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"        super(errorDetails);","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"idgrr":16}},{"path":"src/main/java/duke/exception/InvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.exception;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":" * Exception to display error made by using in regards to format in general","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"public class InvalidFormatException extends DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"     * Basic Constructor","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"     * @param errorDetails Exception to display error made by using in regards to format in general","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"    public InvalidFormatException(String errorDetails){","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"        super(errorDetails);","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"idgrr":16}},{"path":"src/main/java/duke/exception/InvalidTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.exception;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":" * Exception that is thrown when user inputs invalid time","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"public class InvalidTimeException extends DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"     * Basic Constructor","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"     * @param errorDetails Exception that is thrown when user inputs invalid time","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"    public InvalidTimeException(String errorDetails) {","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"        super(errorDetails);","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"idgrr":16}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.gui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"import javafx.scene.transform.Rotate;","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":" * Controller for dialogBox","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"// Solution adapted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"    @FXML","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"    private Text dialog;","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"     * DialogBox is placeholder for output messages","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"     * @param text details of the speech","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"     * @param speakerImage display picture of the current speaker","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"     * @param isDukeSpeaking check whether user or duke speaking","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"    private DialogBox(String text, Image speakerImage, boolean isDukeSpeaking) {","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"        alignDialogBoxBasedOnSpeaker(isDukeSpeaking);","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"        circleCropDisplayPicture(speakerImage);","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"        displayPicture.setImage(speakerImage);","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"        displayPicture.setRotationAxis(Rotate.Y_AXIS);","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"        displayPicture.setRotate(180);","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"     * Realigns the box formatting based on whether user or program is currently speaking","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"     * @param isDukeSpeaking","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"    private void alignDialogBoxBasedOnSpeaker(boolean isDukeSpeaking) {","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"        if (isDukeSpeaking) {","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"            dialog.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"            dialog.setTextAlignment(TextAlignment.RIGHT);","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"     * Crops the image into a circle crop","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"     * @param speakerImage","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"idgrr"},"content":"    private void circleCropDisplayPicture(Image speakerImage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"idgrr"},"content":"        Rectangle crop \u003d createCircleCrop();","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"idgrr"},"content":"        displayPicture.setClip(crop);","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"idgrr"},"content":"        displayPicture.setImage(speakerImage);","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"idgrr"},"content":"     * Create cicle crop","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"idgrr"},"content":"     * @return rectangle crop","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"idgrr"},"content":"    private Rectangle createCircleCrop() {","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"idgrr"},"content":"        double pictureWidth \u003d displayPicture.getFitWidth();","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"idgrr"},"content":"        double pictureHeight \u003d displayPicture.getFitHeight();","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"idgrr"},"content":"        Rectangle rectangle \u003d new Rectangle(pictureWidth, pictureHeight);","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"idgrr"},"content":"        rectangle.setArcHeight(pictureHeight);","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"idgrr"},"content":"        rectangle.setArcWidth(pictureWidth);","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"idgrr"},"content":"        return rectangle;","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"idgrr"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"idgrr"},"content":"    private void flipDialogBoxContentAlignment() {","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"idgrr"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"idgrr"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"idgrr"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"idgrr"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"idgrr"},"content":"     * Static method that returns a user style message","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":111,"author":{"gitId":"idgrr"},"content":"     * @param text","lastModifiedDate":"2021-09-03"},{"lineNumber":112,"author":{"gitId":"idgrr"},"content":"     * @param img","lastModifiedDate":"2021-09-03"},{"lineNumber":113,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-03"},{"lineNumber":114,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":115,"author":{"gitId":"idgrr"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"idgrr"},"content":"        return new DialogBox(text, img, false);","lastModifiedDate":"2021-09-01"},{"lineNumber":117,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":119,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":120,"author":{"gitId":"idgrr"},"content":"     * Static method that returns a duke style message","lastModifiedDate":"2021-09-03"},{"lineNumber":121,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":122,"author":{"gitId":"idgrr"},"content":"     * @param text","lastModifiedDate":"2021-09-03"},{"lineNumber":123,"author":{"gitId":"idgrr"},"content":"     * @param img","lastModifiedDate":"2021-09-03"},{"lineNumber":124,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-03"},{"lineNumber":125,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":126,"author":{"gitId":"idgrr"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"idgrr"},"content":"        var dialogBox \u003d new DialogBox(text, img, true);","lastModifiedDate":"2021-09-07"},{"lineNumber":128,"author":{"gitId":"idgrr"},"content":"        dialogBox.flipDialogBoxContentAlignment();","lastModifiedDate":"2021-09-11"},{"lineNumber":129,"author":{"gitId":"idgrr"},"content":"        return dialogBox;","lastModifiedDate":"2021-09-07"},{"lineNumber":130,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":131,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":132,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"idgrr":132}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.gui;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":" * Application launcher.","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"// Solution adapted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"public class Launcher {","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"     * Application entry point","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"     * @param args not used","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"idgrr":18}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.gui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":" * Main Stage of the application","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"// Solution adapted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"     * Method to start the application","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"     * @param primaryStage","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"     * @throws Exception","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"            setPrimaryScene(primaryStage);","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"            setupMainWindow();","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"            primaryStage.setOnHiding( event -\u003e  setupCloseEvent());","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"            primaryStage.show();","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"     * Setting up primary stage with anchorpane scene","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"     * @param primaryStage","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"    private void setPrimaryScene(Stage primaryStage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"            primaryStage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"            exception.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"     * Setting up Main window controller","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"    private void setupMainWindow() {","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"        fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"        fxmlLoader.\u003cMainWindow\u003egetController().setScrollPane();","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"     * Setting up a save command whenever stage closes","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"    private void setupCloseEvent() {","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"        System.out.println(\"Closing Stage\");","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"        duke.saveOnClosed();","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"idgrr":65}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.gui;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"import javafx.scene.control.*;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"import javafx.util.Callback;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"import java.util.concurrent.CompletableFuture;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":" * Main Window","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"// Solution adapted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"     * Settiing the Duke within main window","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"     * @param d Duke","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"        this.duke \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"     * Set the auto scroll functionality","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"    public void setScrollPane () {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"        dialogContainer.heightProperty()","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"                .addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"        dialogContainer.autosize();","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"        userInput.setPromptText(\"Say Something to TaskMan\");","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"     * Startup message","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"        String welcomeMessage \u003d \"Hello! I am TaskMan.\\nWhat can I do for you?\";","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"        this.dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"                DialogBox.getDukeDialog(welcomeMessage, dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"     * Handles when user either press enter or enter bay","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"     * @throws InterruptedException","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"idgrr"},"content":"    private void handleUserInput() throws InterruptedException {","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"idgrr"},"content":"        String userStringInput \u003d this.userInput.getText();","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"idgrr"},"content":"        String dukeStringResponse \u003d duke.guiProcess(userStringInput);","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"idgrr"},"content":"        addUserDukeResponseIntoContainer(userStringInput, dukeStringResponse);","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"idgrr"},"content":"        checkExit();","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"idgrr"},"content":"     * Add user and duke response into dialog container","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"idgrr"},"content":"     * @param userStringInput user input","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"idgrr"},"content":"     * @param dukeStringInput  duke response to user input","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"idgrr"},"content":"     * @throws InterruptedException exception when error with delay","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"idgrr"},"content":"    private void addUserDukeResponseIntoContainer(String userStringInput,","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"idgrr"},"content":"                                                  String dukeStringInput) throws InterruptedException {","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"idgrr"},"content":"        this.dialogContainer.getChildren().add(DialogBox.getUserDialog(userStringInput, userImage));","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"idgrr"},"content":"        Thread.sleep(200);","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"idgrr"},"content":"        this.dialogContainer.getChildren().add(DialogBox.getDukeDialog(dukeStringInput, dukeImage));","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"idgrr"},"content":"        this.userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"idgrr"},"content":"     * Handles when User pressed the + button","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"idgrr"},"content":"     * @throws InterruptedException","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"idgrr"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"idgrr"},"content":"    private void handleAddEvent() throws InterruptedException {","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"idgrr"},"content":"        String userStringInput \u003d popupDialogAddNewTask();","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"idgrr"},"content":"        String dukeStringResponse \u003d duke.guiProcess(userStringInput);","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"idgrr"},"content":"        addUserDukeResponseIntoContainer(userStringInput, dukeStringResponse);","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"idgrr"},"content":"     * Creates a popup to add a new task","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"idgrr"},"content":"     * @return String containing task details from the popup","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"idgrr"},"content":"    private String popupDialogAddNewTask(){","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"idgrr"},"content":"        Dialog\u003cString\u003e dialog \u003d new Dialog\u003c\u003e();","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"idgrr"},"content":"        setupDialogTaskTypeDescription(dialog);","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"idgrr"},"content":"        Optional\u003cString\u003e result \u003d dialog.showAndWait();","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"idgrr"},"content":"        if (result.isPresent()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"idgrr"},"content":"            return result.get();","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"idgrr"},"content":"        return \"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"idgrr"},"content":"     * Settings of the popup to add new task","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":130,"author":{"gitId":"idgrr"},"content":"     * @param dialog user input","lastModifiedDate":"2021-09-15"},{"lineNumber":131,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":132,"author":{"gitId":"idgrr"},"content":"    private void setupDialogTaskTypeDescription (Dialog dialog) {","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"idgrr"},"content":"        dialog.setTitle(\"Adding New Event\");","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"idgrr"},"content":"        dialog.setHeaderText(\"Please enter details of new task \\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"idgrr"},"content":"                + \"press Okay (or click title bar \u0027X\u0027 for cancel).\");","lastModifiedDate":"2021-09-15"},{"lineNumber":136,"author":{"gitId":"idgrr"},"content":"        dialog.setResizable(true);","lastModifiedDate":"2021-09-15"},{"lineNumber":137,"author":{"gitId":"idgrr"},"content":"        Label taskTypeLabel \u003d new Label(\"TaskType: \");","lastModifiedDate":"2021-09-15"},{"lineNumber":138,"author":{"gitId":"idgrr"},"content":"        Label descriptionLabel \u003d new Label(\"Description: \");","lastModifiedDate":"2021-09-15"},{"lineNumber":139,"author":{"gitId":"idgrr"},"content":"        ComboBox taskTypeDropDownOption \u003d new ComboBox();","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"idgrr"},"content":"        taskTypeDropDownOption.getItems().addAll(\"event\", \"deadline\", \"todo\");","lastModifiedDate":"2021-09-15"},{"lineNumber":141,"author":{"gitId":"idgrr"},"content":"        TextField descriptionText \u003d new TextField();","lastModifiedDate":"2021-09-15"},{"lineNumber":142,"author":{"gitId":"idgrr"},"content":"        GridPane grid \u003d new GridPane();","lastModifiedDate":"2021-09-15"},{"lineNumber":143,"author":{"gitId":"idgrr"},"content":"        grid.setPadding(new Insets(20, 10, 10, 10));","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"idgrr"},"content":"        grid.setHgap(10);","lastModifiedDate":"2021-09-15"},{"lineNumber":145,"author":{"gitId":"idgrr"},"content":"        grid.setVgap(10);","lastModifiedDate":"2021-09-15"},{"lineNumber":146,"author":{"gitId":"idgrr"},"content":"        grid.add(taskTypeLabel, 1, 1);","lastModifiedDate":"2021-09-15"},{"lineNumber":147,"author":{"gitId":"idgrr"},"content":"        grid.add(taskTypeDropDownOption, 2, 1);","lastModifiedDate":"2021-09-15"},{"lineNumber":148,"author":{"gitId":"idgrr"},"content":"        grid.add(descriptionLabel, 1, 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":149,"author":{"gitId":"idgrr"},"content":"        grid.add(descriptionText, 2, 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":150,"author":{"gitId":"idgrr"},"content":"        dialog.getDialogPane().setContent(grid);","lastModifiedDate":"2021-09-15"},{"lineNumber":151,"author":{"gitId":"idgrr"},"content":"        ButtonType buttonTypeOk \u003d new ButtonType(\"Add Task\", ButtonBar.ButtonData.OK_DONE);","lastModifiedDate":"2021-09-15"},{"lineNumber":152,"author":{"gitId":"idgrr"},"content":"        dialog.getDialogPane().getButtonTypes().add(buttonTypeOk);","lastModifiedDate":"2021-09-15"},{"lineNumber":153,"author":{"gitId":"idgrr"},"content":"        dialog.setResultConverter(dialogButtonPressTaskTypeDescription(buttonTypeOk, taskTypeDropDownOption, descriptionText));","lastModifiedDate":"2021-09-15"},{"lineNumber":154,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":155,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":156,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":157,"author":{"gitId":"idgrr"},"content":"     * Creates a popup to get additional date and time details for new task","lastModifiedDate":"2021-09-15"},{"lineNumber":158,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":159,"author":{"gitId":"idgrr"},"content":"     * @param taskType type of task","lastModifiedDate":"2021-09-15"},{"lineNumber":160,"author":{"gitId":"idgrr"},"content":"     * @return String containing task details from the popup","lastModifiedDate":"2021-09-15"},{"lineNumber":161,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":162,"author":{"gitId":"idgrr"},"content":"    private String popupDialogDateTime(String taskType) {","lastModifiedDate":"2021-09-15"},{"lineNumber":163,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":164,"author":{"gitId":"idgrr"},"content":"        Dialog\u003cString\u003e dialog \u003d new Dialog\u003c\u003e();","lastModifiedDate":"2021-09-15"},{"lineNumber":165,"author":{"gitId":"idgrr"},"content":"        setupDialogDateTime(dialog, taskType);","lastModifiedDate":"2021-09-15"},{"lineNumber":166,"author":{"gitId":"idgrr"},"content":"        Optional\u003cString\u003e result \u003d dialog.showAndWait();","lastModifiedDate":"2021-09-15"},{"lineNumber":167,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":168,"author":{"gitId":"idgrr"},"content":"        if (result.isPresent()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":169,"author":{"gitId":"idgrr"},"content":"            return result.get();","lastModifiedDate":"2021-09-15"},{"lineNumber":170,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":171,"author":{"gitId":"idgrr"},"content":"        return \"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":172,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":173,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":174,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":175,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":176,"author":{"gitId":"idgrr"},"content":"     * Settings of the popup to get additional date and time task details","lastModifiedDate":"2021-09-15"},{"lineNumber":177,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":178,"author":{"gitId":"idgrr"},"content":"     * @param dialog","lastModifiedDate":"2021-09-15"},{"lineNumber":179,"author":{"gitId":"idgrr"},"content":"     * @param taskType","lastModifiedDate":"2021-09-15"},{"lineNumber":180,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":181,"author":{"gitId":"idgrr"},"content":"    private void setupDialogDateTime(Dialog dialog, String taskType) {","lastModifiedDate":"2021-09-15"},{"lineNumber":182,"author":{"gitId":"idgrr"},"content":"        dialog.setTitle(\"Add time\");","lastModifiedDate":"2021-09-15"},{"lineNumber":183,"author":{"gitId":"idgrr"},"content":"        dialog.setHeaderText(\"This is a custom dialog. Enter info and \\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":184,"author":{"gitId":"idgrr"},"content":"                \"press Okay (or click title bar \u0027X\u0027 for cancel).\");","lastModifiedDate":"2021-09-15"},{"lineNumber":185,"author":{"gitId":"idgrr"},"content":"        dialog.setResizable(true);","lastModifiedDate":"2021-09-15"},{"lineNumber":186,"author":{"gitId":"idgrr"},"content":"        TextField date \u003d new TextField();","lastModifiedDate":"2021-09-15"},{"lineNumber":187,"author":{"gitId":"idgrr"},"content":"        TextField timee \u003d new TextField();","lastModifiedDate":"2021-09-15"},{"lineNumber":188,"author":{"gitId":"idgrr"},"content":"        GridPane grid \u003d new GridPane();","lastModifiedDate":"2021-09-15"},{"lineNumber":189,"author":{"gitId":"idgrr"},"content":"        grid.setPadding(new Insets(10, 10, 10, 10));","lastModifiedDate":"2021-09-15"},{"lineNumber":190,"author":{"gitId":"idgrr"},"content":"        grid.setHgap(10);","lastModifiedDate":"2021-09-15"},{"lineNumber":191,"author":{"gitId":"idgrr"},"content":"        grid.setVgap(10);","lastModifiedDate":"2021-09-15"},{"lineNumber":192,"author":{"gitId":"idgrr"},"content":"        Label label1 \u003d new Label(\"Date: \");","lastModifiedDate":"2021-09-15"},{"lineNumber":193,"author":{"gitId":"idgrr"},"content":"        Label label2 \u003d new Label(\"YYYY-MM-DD format\");","lastModifiedDate":"2021-09-15"},{"lineNumber":194,"author":{"gitId":"idgrr"},"content":"        Label label3 \u003d new Label(\"Time: \");","lastModifiedDate":"2021-09-15"},{"lineNumber":195,"author":{"gitId":"idgrr"},"content":"        Label label4 \u003d new Label(\"24 hour format\");","lastModifiedDate":"2021-09-15"},{"lineNumber":196,"author":{"gitId":"idgrr"},"content":"        grid.add(label1, 1, 1);","lastModifiedDate":"2021-09-15"},{"lineNumber":197,"author":{"gitId":"idgrr"},"content":"        grid.add(date, 2, 1);","lastModifiedDate":"2021-09-15"},{"lineNumber":198,"author":{"gitId":"idgrr"},"content":"        grid.add(label2, 3,1);","lastModifiedDate":"2021-09-15"},{"lineNumber":199,"author":{"gitId":"idgrr"},"content":"        grid.add(label3, 1, 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":200,"author":{"gitId":"idgrr"},"content":"        grid.add(timee, 2, 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":201,"author":{"gitId":"idgrr"},"content":"        grid.add(label4, 3,2);","lastModifiedDate":"2021-09-15"},{"lineNumber":202,"author":{"gitId":"idgrr"},"content":"        dialog.getDialogPane().setContent(grid);","lastModifiedDate":"2021-09-15"},{"lineNumber":203,"author":{"gitId":"idgrr"},"content":"        ButtonType buttonTypeOk \u003d new ButtonType(\"Okay\", ButtonBar.ButtonData.OK_DONE);","lastModifiedDate":"2021-09-15"},{"lineNumber":204,"author":{"gitId":"idgrr"},"content":"        dialog.getDialogPane().getButtonTypes().add(buttonTypeOk);","lastModifiedDate":"2021-09-15"},{"lineNumber":205,"author":{"gitId":"idgrr"},"content":"        dialog.setResultConverter(","lastModifiedDate":"2021-09-15"},{"lineNumber":206,"author":{"gitId":"idgrr"},"content":"                dialogButtonPressDateTime(buttonTypeOk, date, timee , taskType)","lastModifiedDate":"2021-09-15"},{"lineNumber":207,"author":{"gitId":"idgrr"},"content":"        );","lastModifiedDate":"2021-09-15"},{"lineNumber":208,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":209,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":210,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":211,"author":{"gitId":"idgrr"},"content":"     * Allow dialog to return the task details inside the dialog box","lastModifiedDate":"2021-09-15"},{"lineNumber":212,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":213,"author":{"gitId":"idgrr"},"content":"     * @param buttonTypeOk button","lastModifiedDate":"2021-09-15"},{"lineNumber":214,"author":{"gitId":"idgrr"},"content":"     * @param taskType task type to set","lastModifiedDate":"2021-09-15"},{"lineNumber":215,"author":{"gitId":"idgrr"},"content":"     * @param description task description to set","lastModifiedDate":"2021-09-15"},{"lineNumber":216,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-15"},{"lineNumber":217,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":218,"author":{"gitId":"idgrr"},"content":"    //Solution below adapted from https://examples.javacodegeeks","lastModifiedDate":"2021-09-15"},{"lineNumber":219,"author":{"gitId":"idgrr"},"content":"    // .com/desktop-java/javafx/dialog-javafx/javafx-dialog-example/","lastModifiedDate":"2021-09-15"},{"lineNumber":220,"author":{"gitId":"idgrr"},"content":"    public Callback\u003cButtonType, String\u003e dialogButtonPressTaskTypeDescription(","lastModifiedDate":"2021-09-15"},{"lineNumber":221,"author":{"gitId":"idgrr"},"content":"            ButtonType buttonTypeOk,","lastModifiedDate":"2021-09-15"},{"lineNumber":222,"author":{"gitId":"idgrr"},"content":"            ComboBox taskType, TextField description) {","lastModifiedDate":"2021-09-15"},{"lineNumber":223,"author":{"gitId":"idgrr"},"content":"        return new Callback\u003cButtonType, String\u003e() {","lastModifiedDate":"2021-09-15"},{"lineNumber":224,"author":{"gitId":"idgrr"},"content":"            @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":225,"author":{"gitId":"idgrr"},"content":"            public String call(ButtonType b) {","lastModifiedDate":"2021-09-15"},{"lineNumber":226,"author":{"gitId":"idgrr"},"content":"                if (b \u003d\u003d buttonTypeOk) {","lastModifiedDate":"2021-09-15"},{"lineNumber":227,"author":{"gitId":"idgrr"},"content":"                    boolean ifNeedDate \u003d checkIfNeedDate((String) taskType.getValue());","lastModifiedDate":"2021-09-15"},{"lineNumber":228,"author":{"gitId":"idgrr"},"content":"                    if (ifNeedDate){","lastModifiedDate":"2021-09-15"},{"lineNumber":229,"author":{"gitId":"idgrr"},"content":"                        String dateTime \u003d popupDialogDateTime((String) taskType.getValue());","lastModifiedDate":"2021-09-15"},{"lineNumber":230,"author":{"gitId":"idgrr"},"content":"                        return taskType.getValue() + \" \" + description.getText()  + dateTime;","lastModifiedDate":"2021-09-15"},{"lineNumber":231,"author":{"gitId":"idgrr"},"content":"                    }","lastModifiedDate":"2021-09-15"},{"lineNumber":232,"author":{"gitId":"idgrr"},"content":"                    return taskType.getValue() + \" \" + description.getText();","lastModifiedDate":"2021-09-15"},{"lineNumber":233,"author":{"gitId":"idgrr"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":234,"author":{"gitId":"idgrr"},"content":"                return \"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":235,"author":{"gitId":"idgrr"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":236,"author":{"gitId":"idgrr"},"content":"        };","lastModifiedDate":"2021-09-15"},{"lineNumber":237,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":238,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":239,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":240,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":241,"author":{"gitId":"idgrr"},"content":"     * Allow dialog to return the date and time details inside the dialog box","lastModifiedDate":"2021-09-15"},{"lineNumber":242,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":243,"author":{"gitId":"idgrr"},"content":"     * @param buttonTypeOk button","lastModifiedDate":"2021-09-15"},{"lineNumber":244,"author":{"gitId":"idgrr"},"content":"     * @param date date to set","lastModifiedDate":"2021-09-15"},{"lineNumber":245,"author":{"gitId":"idgrr"},"content":"     * @param time time to set","lastModifiedDate":"2021-09-15"},{"lineNumber":246,"author":{"gitId":"idgrr"},"content":"     * @param taskType task type","lastModifiedDate":"2021-09-15"},{"lineNumber":247,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-15"},{"lineNumber":248,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":249,"author":{"gitId":"idgrr"},"content":"    //Solution below adapted from","lastModifiedDate":"2021-09-15"},{"lineNumber":250,"author":{"gitId":"idgrr"},"content":"    // https://examples.javacodegeeks.com/desktop-java/javafx/dialog-javafx/javafx-dialog-example/","lastModifiedDate":"2021-09-15"},{"lineNumber":251,"author":{"gitId":"idgrr"},"content":"    public Callback\u003cButtonType, String\u003e dialogButtonPressDateTime(","lastModifiedDate":"2021-09-15"},{"lineNumber":252,"author":{"gitId":"idgrr"},"content":"            ButtonType buttonTypeOk,","lastModifiedDate":"2021-09-15"},{"lineNumber":253,"author":{"gitId":"idgrr"},"content":"            TextField date, TextField time, String taskType) {","lastModifiedDate":"2021-09-15"},{"lineNumber":254,"author":{"gitId":"idgrr"},"content":"        return new Callback\u003cButtonType, String\u003e() {","lastModifiedDate":"2021-09-15"},{"lineNumber":255,"author":{"gitId":"idgrr"},"content":"            @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":256,"author":{"gitId":"idgrr"},"content":"            public String call(ButtonType b) {","lastModifiedDate":"2021-09-15"},{"lineNumber":257,"author":{"gitId":"idgrr"},"content":"                if (b \u003d\u003d buttonTypeOk \u0026\u0026 taskType.equals(\"event\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":258,"author":{"gitId":"idgrr"},"content":"                    return \" /at \" + date.getText() + \" \" + time.getText();","lastModifiedDate":"2021-09-15"},{"lineNumber":259,"author":{"gitId":"idgrr"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":260,"author":{"gitId":"idgrr"},"content":"                if (b \u003d\u003d buttonTypeOk \u0026\u0026 taskType.equals(\"deadline\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":261,"author":{"gitId":"idgrr"},"content":"                    return \" /by \" + date.getText() + \" \" + time.getText();","lastModifiedDate":"2021-09-15"},{"lineNumber":262,"author":{"gitId":"idgrr"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":263,"author":{"gitId":"idgrr"},"content":"                return \"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":264,"author":{"gitId":"idgrr"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":265,"author":{"gitId":"idgrr"},"content":"        };","lastModifiedDate":"2021-09-15"},{"lineNumber":266,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":267,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":268,"author":{"gitId":"idgrr"},"content":"    private boolean checkIfNeedDate (String taskType) {","lastModifiedDate":"2021-09-15"},{"lineNumber":269,"author":{"gitId":"idgrr"},"content":"        return (taskType.equals(\"event\") || taskType.equals(\"deadline\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":270,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":271,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":272,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":273,"author":{"gitId":"idgrr"},"content":"     * Check whether to continue duke operations","lastModifiedDate":"2021-09-07"},{"lineNumber":274,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":275,"author":{"gitId":"idgrr"},"content":"    private void checkExit() {","lastModifiedDate":"2021-09-07"},{"lineNumber":276,"author":{"gitId":"idgrr"},"content":"        if (duke.checkIsBye()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":277,"author":{"gitId":"idgrr"},"content":"            CompletableFuture.delayedExecutor(1, TimeUnit.SECONDS).execute(Platform::exit);","lastModifiedDate":"2021-09-01"},{"lineNumber":278,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":279,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":280,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":281,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":282,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":283,"author":{"gitId":"idgrr"},"content":"     * Handles when tasklist button pressed","lastModifiedDate":"2021-09-07"},{"lineNumber":284,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":285,"author":{"gitId":"idgrr"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":286,"author":{"gitId":"idgrr"},"content":"    private void handleGetList() throws InterruptedException {","lastModifiedDate":"2021-09-15"},{"lineNumber":287,"author":{"gitId":"idgrr"},"content":"        String getList \u003d \"list\";","lastModifiedDate":"2021-09-02"},{"lineNumber":288,"author":{"gitId":"idgrr"},"content":"        String response \u003d duke.guiProcess(getList);","lastModifiedDate":"2021-09-02"},{"lineNumber":289,"author":{"gitId":"idgrr"},"content":"        HBox list \u003d DialogBox.getDukeDialog(response, dukeImage);","lastModifiedDate":"2021-09-10"},{"lineNumber":290,"author":{"gitId":"idgrr"},"content":"        list.setMinWidth(scrollPane.getWidth());","lastModifiedDate":"2021-09-10"},{"lineNumber":291,"author":{"gitId":"idgrr"},"content":"        addUserDukeResponseIntoContainer(getList, response);","lastModifiedDate":"2021-09-15"},{"lineNumber":292,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":293,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":294,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":295,"author":{"gitId":"idgrr"},"content":"     * Handles when help button pressed","lastModifiedDate":"2021-09-07"},{"lineNumber":296,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":297,"author":{"gitId":"idgrr"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":298,"author":{"gitId":"idgrr"},"content":"    private void handleGetHelp() throws InterruptedException {","lastModifiedDate":"2021-09-15"},{"lineNumber":299,"author":{"gitId":"idgrr"},"content":"        String getHelp \u003d \"help\";","lastModifiedDate":"2021-09-15"},{"lineNumber":300,"author":{"gitId":"idgrr"},"content":"        String response \u003d duke.guiProcess(getHelp);","lastModifiedDate":"2021-09-15"},{"lineNumber":301,"author":{"gitId":"idgrr"},"content":"        addUserDukeResponseIntoContainer(getHelp, response);","lastModifiedDate":"2021-09-15"},{"lineNumber":302,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":303,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":304,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":305,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"idgrr":305}},{"path":"src/main/java/duke/taskTypes/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.taskTypes;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import duke.exception.EmptyTimeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import duke.exception.InvalidFormatException;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"import java.util.List;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":" * Deadline Task class that sets description of task, date, time","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"    // Constructor","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"     * Deadline Constructor, main method that formats input and sets details of deadline","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"     * @param input string from the user","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"    public Deadline(String input, boolean isDone) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"        super(isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"        List\u003cString\u003e formattedInput \u003d formatInput(input);","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"        boolean isMissingDescriptionTimestamp \u003d formattedInput.size() \u003d\u003d 0;","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"        boolean isMissingTimestamp \u003d formattedInput.size() \u003d\u003d 1;","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"        if (isMissingDescriptionTimestamp) {","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"            throw new InvalidFormatException(\"Missing description and timestamp\");","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"        if (isMissingTimestamp) {","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"            throw new EmptyTimeException(\"Invalid timestamp format\");","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"        setTaskDetails(getTaskType(), formattedInput);","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"    // Deadline format Methods;","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"     * Formats the input into 2 parts : taskDetails, date together with time","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"     * @param input user input","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"     * @return list","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"    private List\u003cString\u003e formatInput(String input) {","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"        return Pattern.compile(\"/by\")","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"                .splitAsStream(input)","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"                .map(String::trim)","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-09-09"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"     * Returns string containing the task type of deadline","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"     * @return String","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"    private String getTaskType() {","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"        return \"D\";","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"    // methods that returns formatted string for saving / displaying","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"     * Returns a string to be displayed to user","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"     * @return String containing details of the task","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"        return super.toString() + \" (by: \" + super.getFormatDate() + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"idgrr"},"content":"     * Returns a string that describes the instance for saving in  a TXT file","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"idgrr"},"content":"     * @return String containing details of the task","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"idgrr"},"content":"    public String saveTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"idgrr"},"content":"        return super.saveTask() + \" /by \" + super.getSaveDate();","lastModifiedDate":"2021-09-09"},{"lineNumber":87,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"idgrr"},"content":"     * Returns a string that describes the instance for saving in a CSV file","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"idgrr"},"content":"    public String saveTaskCsv() {","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"idgrr"},"content":"        return super.saveTaskCsv() + \",/by,\" + super.getSaveDateCsv();","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"idgrr":98}},{"path":"src/main/java/duke/taskTypes/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.taskTypes;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import duke.exception.EmptyTimeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import duke.exception.InvalidFormatException;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import java.util.List;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":" * Event Task class that sets description of task, date, time","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"    // Constructor","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"     * Takes in a string and splits msg into based on /at pattern. Set the eventType and time of the instance","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"     * @param input string from the user","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"    public Event(String input, boolean isDone) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"        super(isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"        List\u003cString\u003e formattedInput \u003d formatInput(input);","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"        boolean isMissingDescriptionTimestamp \u003d formattedInput.size() \u003d\u003d 0;","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"        boolean isMissingTimestamp \u003d formattedInput.size() \u003d\u003d 1;","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"        if (isMissingDescriptionTimestamp) {","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"            throw new InvalidFormatException(\"Missing description and timestamp\");","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"        if (isMissingTimestamp) {","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"            throw new EmptyTimeException(\"Invalid timestamp format\");","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"        super.setTaskDetails(getTaskType(), formattedInput);","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"    // Event format methods","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"     * Formats the input into 2 parts : taskDetails, date together with time","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"     * @param input user input","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"     * @return list","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"    private List\u003cString\u003e formatInput (String input) {","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"        return Pattern.compile(\"/at\")","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"                .splitAsStream(input)","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"                .map(String::trim)","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-09-09"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"     * Returns string containing the task type of event","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"     * @return String","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"    private String getTaskType() {","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"        return \"E\";","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"    // methods that returns formatted string for saving / displaying","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"     * Returns a string to be displayed to user","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"     * @return String containing details of the task","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"        return super.toString() + \" (at: \" + super.getFormatDate() + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":80,"author":{"gitId":"idgrr"},"content":"     * Returns a string that describes the instance for saving in  a TXT file","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":82,"author":{"gitId":"idgrr"},"content":"     * @return String containing details of the task","lastModifiedDate":"2021-09-09"},{"lineNumber":83,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":84,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"idgrr"},"content":"    public String saveTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"idgrr"},"content":"        return super.saveTask() + \" /at \" + super.getSaveDate();","lastModifiedDate":"2021-09-09"},{"lineNumber":87,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"idgrr"},"content":"     * Returns a string that describes the instance for saving in  a CSV file","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"idgrr"},"content":"     * @return String containing details of the task","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"idgrr"},"content":"    public String saveTaskCsv() {","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"idgrr"},"content":"        return super.saveTaskCsv() + \",/at,\" + super.getSaveDateCsv();","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"idgrr":98}},{"path":"src/main/java/duke/taskTypes/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.taskTypes;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.exception.*;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"import java.util.List;","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":" * Task class that sets description of task, date, time","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"public class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"    protected String taskType;","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"    protected String description;","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"    protected int time;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"    // Constructors","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"     * Basic constructor for task (used during subclass instance)","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"    public Task(boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"        setState(isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"     * Empty task constructor","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"     * @return Task empty task","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"    public static Task empty(){","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"        return new Task(false);","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"    // Reformats user input before setting Task details methods","lastModifiedDate":"2021-09-09"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"        // taskDetails refers to taskType, description, date and time","lastModifiedDate":"2021-09-09"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"    protected void setTaskDetails(String type, List\u003cString\u003e formattedInput) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"        setTaskType(type);","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"        setDescription(retrieveTaskDescription(formattedInput));","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"        setDateTime(retrieveDateTimeDetails(formattedInput));","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"    private void setTaskType(String input){","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"        this.taskType \u003d input;","lastModifiedDate":"2021-09-09"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"    protected void setDescription(String input){","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"        this.description \u003d input;","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"    protected void setDateTime(String input) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"        if (input \u003d\u003d null){","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"            this.date \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"            this.time \u003d -1;","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"            return;","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"            String[] formattedDateTime \u003d formatDateTime(input);","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"            setDate(formattedDateTime);","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"            setTime(formattedDateTime);","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"            throw new InvalidDateException(\"Wrong date format(use YYYY-MM-DD)\");","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"            throw new EmptyTimeException(\"Missing time\");","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"    private void setDate(String[] formattedDateTime) throws DateTimeParseException {","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"        this.date \u003d LocalDate.parse(formattedDateTime[0]);","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"    private void setTime(String[] formattedDateTime) throws InvalidTimeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"        int hoursMins \u003d Integer.parseInt(formattedDateTime[1]);","lastModifiedDate":"2021-09-09"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"        check24HourFormat(hoursMins);","lastModifiedDate":"2021-09-09"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"        this.time \u003d hoursMins;","lastModifiedDate":"2021-09-09"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":77,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":78,"author":{"gitId":"idgrr"},"content":"     * Retrieves task description from the formatted user input","lastModifiedDate":"2021-09-09"},{"lineNumber":79,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":80,"author":{"gitId":"idgrr"},"content":"     * @param formattedInput","lastModifiedDate":"2021-09-09"},{"lineNumber":81,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-09"},{"lineNumber":82,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-09"},{"lineNumber":83,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":84,"author":{"gitId":"idgrr"},"content":"    private String retrieveTaskDescription(List\u003cString\u003e formattedInput) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":85,"author":{"gitId":"idgrr"},"content":"        String taskDetails \u003d formattedInput.get(0);","lastModifiedDate":"2021-09-09"},{"lineNumber":86,"author":{"gitId":"idgrr"},"content":"        if (taskDetails.equals(\"\")){","lastModifiedDate":"2021-09-09"},{"lineNumber":87,"author":{"gitId":"idgrr"},"content":"            throw new EmptyDescriptionException(\"\\nMissing description\");","lastModifiedDate":"2021-09-09"},{"lineNumber":88,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":89,"author":{"gitId":"idgrr"},"content":"        return taskDetails;","lastModifiedDate":"2021-09-09"},{"lineNumber":90,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":91,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":92,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":93,"author":{"gitId":"idgrr"},"content":"     * Retrieves date and time from the formatted user input","lastModifiedDate":"2021-09-09"},{"lineNumber":94,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":95,"author":{"gitId":"idgrr"},"content":"     * @param formattedInput","lastModifiedDate":"2021-09-09"},{"lineNumber":96,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-09"},{"lineNumber":97,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":98,"author":{"gitId":"idgrr"},"content":"    private String retrieveDateTimeDetails(List\u003cString\u003e formattedInput) {","lastModifiedDate":"2021-09-09"},{"lineNumber":99,"author":{"gitId":"idgrr"},"content":"        return formattedInput.get(1);","lastModifiedDate":"2021-09-09"},{"lineNumber":100,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":103,"author":{"gitId":"idgrr"},"content":"     * Seperates string into date and time","lastModifiedDate":"2021-09-09"},{"lineNumber":104,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":105,"author":{"gitId":"idgrr"},"content":"     * @param input user input","lastModifiedDate":"2021-09-09"},{"lineNumber":106,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-09"},{"lineNumber":107,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":108,"author":{"gitId":"idgrr"},"content":"    private String[] formatDateTime(String input) {","lastModifiedDate":"2021-09-09"},{"lineNumber":109,"author":{"gitId":"idgrr"},"content":"        return input.trim().split(\" \");","lastModifiedDate":"2021-09-09"},{"lineNumber":110,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":111,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":113,"author":{"gitId":"idgrr"},"content":"     * Ensures that the given time is in 24 hour format","lastModifiedDate":"2021-09-09"},{"lineNumber":114,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":115,"author":{"gitId":"idgrr"},"content":"     * @param hoursMins hours and mins","lastModifiedDate":"2021-09-09"},{"lineNumber":116,"author":{"gitId":"idgrr"},"content":"     * @throws InvalidTimeException","lastModifiedDate":"2021-09-09"},{"lineNumber":117,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":118,"author":{"gitId":"idgrr"},"content":"    private void check24HourFormat (int hoursMins) throws InvalidTimeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":119,"author":{"gitId":"idgrr"},"content":"        if (!(hoursMins \u003c2400 \u0026\u0026 hoursMins \u003e 0 \u0026\u0026 hoursMins%100 \u003c60)) {","lastModifiedDate":"2021-09-09"},{"lineNumber":120,"author":{"gitId":"idgrr"},"content":"            throw new InvalidTimeException(\"Invalid time format (use 24hr format)\");","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":123,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":124,"author":{"gitId":"idgrr"},"content":"    // Setter and getters","lastModifiedDate":"2021-09-09"},{"lineNumber":125,"author":{"gitId":"idgrr"},"content":"    private void setState(boolean isDone) {","lastModifiedDate":"2021-09-09"},{"lineNumber":126,"author":{"gitId":"idgrr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-09"},{"lineNumber":127,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":128,"author":{"gitId":"idgrr"},"content":"    public Task setDone(){","lastModifiedDate":"2021-08-15"},{"lineNumber":129,"author":{"gitId":"idgrr"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":130,"author":{"gitId":"idgrr"},"content":"        return this;","lastModifiedDate":"2021-08-15"},{"lineNumber":131,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":132,"author":{"gitId":"idgrr"},"content":"    protected String getSaveDate() {","lastModifiedDate":"2021-09-09"},{"lineNumber":133,"author":{"gitId":"idgrr"},"content":"        return this.date.toString() + \" \" + this.time;","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"idgrr"},"content":"    protected String getSaveDateCsv() {","lastModifiedDate":"2021-09-10"},{"lineNumber":136,"author":{"gitId":"idgrr"},"content":"        return this.date.toString() + \",\" + this.time;","lastModifiedDate":"2021-09-10"},{"lineNumber":137,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":138,"author":{"gitId":"idgrr"},"content":"    protected String getFormatDate() {","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"idgrr"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + this.time + \" hrs\";","lastModifiedDate":"2021-09-09"},{"lineNumber":140,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"idgrr"},"content":"    public String getDescription(){","lastModifiedDate":"2021-08-27"},{"lineNumber":142,"author":{"gitId":"idgrr"},"content":"        return this.description;","lastModifiedDate":"2021-08-27"},{"lineNumber":143,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"idgrr"},"content":"    // methods that returns formatted string for saving / displaying","lastModifiedDate":"2021-09-09"},{"lineNumber":146,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":147,"author":{"gitId":"idgrr"},"content":"     * Returns a string to be displayed to user","lastModifiedDate":"2021-09-15"},{"lineNumber":148,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":149,"author":{"gitId":"idgrr"},"content":"     * @return String containing details of the task","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":151,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":152,"author":{"gitId":"idgrr"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":153,"author":{"gitId":"idgrr"},"content":"        String state \u003d isDone ? \"[X] \" : \"[ ] \";","lastModifiedDate":"2021-08-15"},{"lineNumber":154,"author":{"gitId":"idgrr"},"content":"        String eventType \u003d \"[\" + this.taskType + \"]\";","lastModifiedDate":"2021-09-09"},{"lineNumber":155,"author":{"gitId":"idgrr"},"content":"        return eventType + state + this.description;","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":159,"author":{"gitId":"idgrr"},"content":"     * Returns a string that describes the instance for saving","lastModifiedDate":"2021-08-27"},{"lineNumber":160,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":161,"author":{"gitId":"idgrr"},"content":"     * @return String containing details of the task","lastModifiedDate":"2021-08-27"},{"lineNumber":162,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":163,"author":{"gitId":"idgrr"},"content":"    public String saveTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"idgrr"},"content":"        String state \u003d isDone ? \"T\" : \"F\";","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"idgrr"},"content":"        return taskType + \" \" + state + \" \" + description;","lastModifiedDate":"2021-09-09"},{"lineNumber":166,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":167,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":168,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":169,"author":{"gitId":"idgrr"},"content":"     * Returns a string that describes the instance for saving in  a CSV file","lastModifiedDate":"2021-09-15"},{"lineNumber":170,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":171,"author":{"gitId":"idgrr"},"content":"     * @return String containing details of the task","lastModifiedDate":"2021-09-15"},{"lineNumber":172,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":173,"author":{"gitId":"idgrr"},"content":"    public String saveTaskCsv() {","lastModifiedDate":"2021-09-10"},{"lineNumber":174,"author":{"gitId":"idgrr"},"content":"        String state \u003d isDone ? \"T\" : \"F\";","lastModifiedDate":"2021-09-10"},{"lineNumber":175,"author":{"gitId":"idgrr"},"content":"        return taskType + \",\" + state + \",\" + description;","lastModifiedDate":"2021-09-10"},{"lineNumber":176,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":177,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-15"},{"lineNumber":178,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"idgrr":178}},{"path":"src/main/java/duke/taskTypes/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.taskTypes;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import duke.exception.InvalidFormatException;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import java.util.List;","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":" * Task class that sets description of task, date, time","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"    // Constructor","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"     * Takes in a string Set the eventType and description of the instance","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"     * @param input","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"    public Todo(String input, boolean isDone) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"        super(isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"        List\u003cString\u003e formattedInput \u003d formatInput(input);","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"        super.setTaskDetails(getTaskType(), formattedInput);","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"    // toDoo format method","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"    private String getTaskType() {","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"        return \"T\";","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"     * Formats the input into 2 parts : taskDetails, empty date time","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"     * @param input user input","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"     * @return list","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"    private List\u003cString\u003e formatInput(String input) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"        checkIfHaveTimeIncluded(input.trim());","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"        return Arrays.asList(input.trim(), getEmptyTime());","lastModifiedDate":"2021-09-09"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"     * Returns empty date time placeholder","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"    private String getEmptyTime() {","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"        return null;","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"     * Check if time format mistakenly placed","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"     * @param input","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"    private void checkIfHaveTimeIncluded(String input) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"        String[] userInputArray \u003d input.split(\" \");","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"        for (String word : userInputArray) {","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"            if (word.equals(\"/by\")) {","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"                throw new InvalidFormatException(\"todo does not have /by\");","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"            if (word.equals(\"/at\")) {","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"                throw new InvalidFormatException(\"todo does not have /at\");","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"    // Start methods that returns formatted string for saving / displaying","lastModifiedDate":"2021-09-09"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"     * Returns a string to be displayed to user","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"idgrr"},"content":"     * @return String containing details of the task","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"idgrr"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"idgrr"},"content":"        return super.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"idgrr"},"content":"     * Returns a string that describes the instance for saving in  a CSV file","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"idgrr"},"content":"     * @return String containing details of the task","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"idgrr"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"idgrr"},"content":"    public String saveTaskCsv() {","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"idgrr"},"content":"        String state \u003d isDone ? \"T\" : \"F\";","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"idgrr"},"content":"        return taskType + \",\" + state + \",\" + description + \",,,\";","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"idgrr":94}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.util;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":" * Parser deals with making sense of the user input. Creates and returns a command object","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":" * with all the stored information","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"     * Basic constructor for Parser","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"     * @param storage storage object","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"     * @param taskList tasklist object","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"    public Parser(Storage storage, TaskList taskList) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"        this.storage\u003d storage;","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"     * Loads the previous state stored in the storageTxt into tasklist","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"    public void loadTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"            List\u003cString\u003e prevState \u003d storage.loadSaved();","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"            taskList.insertPast(prevState);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"            System.out.println(e.toString() + \"\\nPlease try again\" );","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"     * Interprets the input and returns the appropriate command","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"     * @param input user input","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"     * @return command returns command based on the user input","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException for any errors caused","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"    public Command parse(String input) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"        String[] parsedInput \u003d input.trim().split(\" \", 2);","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"            switch (parsedInput[0]) {","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-14"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"                return new ByeCommand(storage, taskList);","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"                // collection of commands to be executed when \"bye\" is detected","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"            case \"list\":","lastModifiedDate":"2021-08-14"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"                return new ListCommand(storage, taskList);","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"                // collection of commands to be executed when \"list\" is detected","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"            case \"done\":","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"                return new DoneCommand(storage, taskList, parsedInput[1]);","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"                // collection of commands to be executed when \"done\" is detected","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"                return new AddCommand(storage, taskList, parsedInput[1], \"deadline\");","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"                // collection of commands to be executed when \"deadline\" is detected","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"                return new AddCommand(storage, taskList, parsedInput[1], \"todo\");","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"                // collection of commands to be executed","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"            case \"event\":","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"                return new AddCommand(storage, taskList, parsedInput[1], \"event\");","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"                // collection of commands to be executed when \"event\" is detected","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"idgrr"},"content":"                return new DeleteCommand(storage, taskList, parsedInput[1]);","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"idgrr"},"content":"                // collection of commands to be executed when \"delete\" is detected","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"idgrr"},"content":"            case \"find\":","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"idgrr"},"content":"                return new FindCommand(storage, taskList, parsedInput[1]);","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"idgrr"},"content":"                // collection of commands to be executed when \"find\" is detected","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"idgrr"},"content":"            case \"help\":","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"idgrr"},"content":"                return new HelpCommand(storage, taskList);","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"idgrr"},"content":"                // collection of commands to be executed when \"help\" is detected","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"idgrr"},"content":"            default:","lastModifiedDate":"2021-08-14"},{"lineNumber":86,"author":{"gitId":"idgrr"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"idgrr"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"idgrr"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"idgrr"},"content":"            throw new DukeException(\"Sorry I can\u0027t understand what you\u0027ve inputted. :(\");","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"idgrr"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"idgrr"},"content":"            throw new DukeException(\"Missing info after action\");","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":93,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"idgrr":94}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.util;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import duke.taskTypes.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"public interface Storage {","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"    List\u003cString\u003e loadSaved() throws DukeException;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"    void saveAddedTask(Task task) throws DukeException;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"    void saveUpdateTask(TaskList taskList) throws DukeException;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"idgrr":12}},{"path":"src/main/java/duke/util/StorageCsv.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.util;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import duke.exception.FileNotFoundException;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import duke.taskTypes.Task;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"import java.io.File;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"import java.util.List;","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"public class StorageCsv implements Storage {","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"    private File csvFile;","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"    private final static String COMMA_DELIMITER \u003d \",\";","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"    private final static int NUMBER_CSV_COLUMN \u003d 6;","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"    private final static String HEADER \u003d \"Task Type,Done,Description,Splitter,Date,Time\";","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"     * Constructor for StorageTxt and sets the file that contains previous state","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"     * @param filePath File location that contains text file containing previous state","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException Thrown when file does not exist","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"    public StorageCsv(String filePath) {","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"        File dir \u003d new File(filePath);","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"        dir.mkdirs();","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"        File csvFile \u003d new File(filePath + \"/csvFile.csv\");","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"        if (!csvFile.exists()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"            try{","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"                csvFile.createNewFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"        this.csvFile \u003d csvFile;","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"     * Reads and returns a list of previous task","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"    public List\u003cString\u003e loadSaved() throws DukeException{","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"        List\u003cString\u003e pastCommand \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"            Scanner scanner \u003d new Scanner(csvFile);","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"            if (scanner.hasNextLine()){","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"                scanner.nextLine();","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"                List\u003cString\u003e fields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"                try (Scanner rowScanner \u003d new Scanner(line)) {","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"                    rowScanner.useDelimiter(COMMA_DELIMITER);","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"                    while (rowScanner.hasNext()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"                        fields.add(rowScanner.next());","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"                    }","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"                }","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"                pastCommand.add(convertCsvRowToTaskDetails(fields));","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"            throw new FileNotFoundException(\"Invalid FilePath\");","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"        return pastCommand;","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"idgrr"},"content":"     * Converts csv row format to task details format","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"idgrr"},"content":"     * @param rowDetails","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"idgrr"},"content":"    public String convertCsvRowToTaskDetails(List\u003cString\u003e rowDetails) {","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"idgrr"},"content":"        String row \u003d \"\";","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"idgrr"},"content":"        for (String k : rowDetails) {","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"idgrr"},"content":"            row \u003d row + \" \" + k;","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"idgrr"},"content":"        return  row.trim();","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"idgrr"},"content":"     * Saves newly added task into storageTxt","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"idgrr"},"content":"     * @param task Newly added task","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException Thrown when file does not exist","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"idgrr"},"content":"    public void saveAddedTask(Task task) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"idgrr"},"content":"        String msg \u003d task.saveTaskCsv();","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"idgrr"},"content":"            FileWriter fileWriter \u003d new FileWriter(csvFile, true);","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"idgrr"},"content":"            fileWriter.write(msg);","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"idgrr"},"content":"            fileWriter.write(System.lineSeparator());","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"idgrr"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"idgrr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"idgrr"},"content":"            throw new FileNotFoundException(\"Invalid FilePath\");","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":109,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":111,"author":{"gitId":"idgrr"},"content":"     * Updates and saves the state of the changed task","lastModifiedDate":"2021-09-10"},{"lineNumber":112,"author":{"gitId":"idgrr"},"content":"     * @param taskList current state","lastModifiedDate":"2021-09-10"},{"lineNumber":113,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException Thrown when file does not exist","lastModifiedDate":"2021-09-10"},{"lineNumber":114,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":115,"author":{"gitId":"idgrr"},"content":"    public void saveUpdateTask(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":116,"author":{"gitId":"idgrr"},"content":"        String[] currentState \u003d taskList.saveStateCsv();","lastModifiedDate":"2021-09-10"},{"lineNumber":117,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":118,"author":{"gitId":"idgrr"},"content":"            // Deletes past history","lastModifiedDate":"2021-09-11"},{"lineNumber":119,"author":{"gitId":"idgrr"},"content":"            FileWriter fileWriter \u003d new FileWriter(csvFile,false);","lastModifiedDate":"2021-09-11"},{"lineNumber":120,"author":{"gitId":"idgrr"},"content":"            fileWriter.write(System.lineSeparator());","lastModifiedDate":"2021-09-11"},{"lineNumber":121,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":122,"author":{"gitId":"idgrr"},"content":"            // Updates the history with current state of taskList","lastModifiedDate":"2021-09-11"},{"lineNumber":123,"author":{"gitId":"idgrr"},"content":"            fileWriter \u003d new FileWriter(csvFile, true);","lastModifiedDate":"2021-09-11"},{"lineNumber":124,"author":{"gitId":"idgrr"},"content":"            fileWriter.write(HEADER);","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"idgrr"},"content":"            fileWriter.write(System.lineSeparator());","lastModifiedDate":"2021-09-10"},{"lineNumber":126,"author":{"gitId":"idgrr"},"content":"            for( String msg : currentState){","lastModifiedDate":"2021-09-10"},{"lineNumber":127,"author":{"gitId":"idgrr"},"content":"                fileWriter.write(msg);","lastModifiedDate":"2021-09-10"},{"lineNumber":128,"author":{"gitId":"idgrr"},"content":"                fileWriter.write(System.lineSeparator());","lastModifiedDate":"2021-09-10"},{"lineNumber":129,"author":{"gitId":"idgrr"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":130,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":131,"author":{"gitId":"idgrr"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-10"},{"lineNumber":132,"author":{"gitId":"idgrr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":133,"author":{"gitId":"idgrr"},"content":"            throw new FileNotFoundException(\"Invalid FilePath\");","lastModifiedDate":"2021-09-10"},{"lineNumber":134,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":135,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":136,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":137,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"idgrr":137}},{"path":"src/main/java/duke/util/StorageTxt.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.util;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import duke.exception.FileNotFoundException;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import duke.taskTypes.Task;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"import java.io.File;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"import java.util.List;","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"public class StorageTxt implements Storage {","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"    private File savedOutput;","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"     * Constructor for StorageTxt and sets the file that contains previous state","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"     * @param filePath File location that contains text file containing previous state","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException Thrown when file does not exist","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"    public StorageTxt(String filePath) {","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"        File dir \u003d new File(filePath);","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"        dir.mkdirs();","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"        File savedOutput \u003d new File(filePath + \"/savedOutput.txt\");","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"        if (!savedOutput.exists()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"            try{","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"                savedOutput.createNewFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"        this.savedOutput \u003d savedOutput;","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"     * Reads and returns a list of previous task","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"     * @return List of String read from the file","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"    public List\u003cString\u003e loadSaved() throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"        List\u003cString\u003e pastCommand \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"            Scanner scan \u003d new Scanner(savedOutput);","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"            while (scan.hasNext()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"                pastCommand.add(scan.nextLine());","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"            throw new FileNotFoundException(\"Invalid FilePath\");","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"        return pastCommand;","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"     * Saves newly added task into storageTxt","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"     * @param task Newly added task","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException Thrown when file does not exist","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"    public void saveAddedTask(Task task) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"        String msg \u003d task.saveTask();","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"            FileWriter fileWriter \u003d new FileWriter(savedOutput, true);","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"            fileWriter.write(msg);","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"            fileWriter.write(System.lineSeparator());","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"            throw new FileNotFoundException(\"Invalid FilePath\");","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"idgrr"},"content":"     * Updates and saves the state of the changed task","lastModifiedDate":"2021-09-10"},{"lineNumber":82,"author":{"gitId":"idgrr"},"content":"     * @param taskList current state","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException Thrown when file does not exist","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"idgrr"},"content":"    public void saveUpdateTask(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"idgrr"},"content":"        String[] currentState \u003d taskList.saveState();","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"idgrr"},"content":"            // Reset the file","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"idgrr"},"content":"            FileWriter fileWriter \u003d new FileWriter(savedOutput);","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"idgrr"},"content":"            fileWriter.write(\"\");","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"idgrr"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"idgrr"},"content":"            // Update with the new State","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"idgrr"},"content":"            fileWriter \u003d new FileWriter(savedOutput, true);","lastModifiedDate":"2021-09-10"},{"lineNumber":95,"author":{"gitId":"idgrr"},"content":"            for( String msg : currentState){","lastModifiedDate":"2021-09-10"},{"lineNumber":96,"author":{"gitId":"idgrr"},"content":"                fileWriter.write(msg);","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"idgrr"},"content":"                fileWriter.write(System.lineSeparator());","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"idgrr"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"idgrr"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"idgrr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"idgrr"},"content":"            throw new FileNotFoundException(\"Invalid FilePath\");","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"idgrr":105}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.util;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import duke.exception.InvalidFormatException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import duke.taskTypes.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import duke.taskTypes.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"import duke.taskTypes.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"import duke.taskTypes.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"import java.util.Collection;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"import java.util.LinkedHashMap;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"import java.util.List;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":" * contains the task list that has operations to add/delete tasks in the list","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"    private final LinkedHashMap\u003cString, Task\u003e mapper;","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"    private int listLen;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"     * Basic constructor for Task list","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"    public TaskList(){","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"        mapper \u003d new LinkedHashMap\u003c\u003e();","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"        listLen \u003d 0;","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"     * Insert Past state from storageTxt into current tasklist","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"     * @param pastTaskLists List of past task details found in the storageTxt","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"    public void insertPast(List\u003cString\u003e pastTaskLists) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"        Iterator\u003cString\u003e look \u003d pastTaskLists.iterator();","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"        while (look.hasNext()){","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"            String[] formattedTask \u003d look.next().split(\" \", 3);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"            assert formattedTask.length \u003d\u003d 3;","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"            boolean isDone \u003d (formattedTask[1].equals(\"T\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"            Task pastTask \u003d Task.empty();","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"            switch (formattedTask[0]) {","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"                case \"T\" :","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"                    pastTask \u003d new Todo(formattedTask[2], isDone );","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"                case \"E\" :","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"                    pastTask \u003d new Event(formattedTask[2], isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"                case \"D\" :","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"                    pastTask \u003d new Deadline(formattedTask[2], isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"            mapper.put(pastTask.getDescription(), pastTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"     * Identify, Search and Modify the isDone status of task based on the getStorage printed msg","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"     * @param input tajes in the input from user","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"     * @return String that contains the done success msg","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"idgrr"},"content":"     * @throws InvalidFormatException when user input does not conform to the standard","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"idgrr"},"content":"    public Task done (String input) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"idgrr"},"content":"            int list_no \u003d Integer.parseInt(input.trim()); //possible NumberFormatException","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"idgrr"},"content":"            Collection\u003cTask\u003e values \u003d mapper.values();","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"idgrr"},"content":"            Task second \u003d values.stream().skip(list_no-1).findFirst().orElse(null); // possible for task to be null","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"idgrr"},"content":"            String key \u003d second.getDescription();","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"idgrr"},"content":"            mapper.put(key, mapper.get(key).setDone());","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"idgrr"},"content":"            return mapper.get(key);","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"idgrr"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"idgrr"},"content":"            throw new InvalidFormatException(\"The list position you\u0027ve inputted is in an invalid format.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"idgrr"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"idgrr"},"content":"            throw new InvalidFormatException(\"The number inputted cannot be found in the list\");","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"idgrr"},"content":"     * Identify, Search and Delete task from task list based on the position of list","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"idgrr"},"content":"     * @param input contains the position of which task to delete","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"idgrr"},"content":"     * @return Task returns deleted task","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"idgrr"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"idgrr"},"content":"    public Task delete(String input) throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"idgrr"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"idgrr"},"content":"            int list_no \u003d Integer.parseInt(input.trim());","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"idgrr"},"content":"            Collection\u003cTask\u003e values \u003d mapper.values();","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"idgrr"},"content":"            Task deleted \u003d values.stream().skip(list_no-1).findFirst().orElse(null); // possible for task to be null","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"idgrr"},"content":"            String key \u003d deleted.getDescription();","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"idgrr"},"content":"            mapper.remove(key);","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"idgrr"},"content":"            return deleted;","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"idgrr"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"idgrr"},"content":"            throw new InvalidFormatException(\"The list position you\u0027ve inputted is in an invalid format.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"idgrr"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"idgrr"},"content":"            throw new InvalidFormatException(\"The number inputted cannot be found in the list\");","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":108,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":109,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"idgrr"},"content":"     * Creates a task instance, adds to storageTxt and prints a success msg","lastModifiedDate":"2021-09-10"},{"lineNumber":111,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"idgrr"},"content":"     * @param input takes in the input from user","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"idgrr"},"content":"     * @return Task returns newly created task","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"idgrr"},"content":"    public Task todo (String input) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"idgrr"},"content":"        Todo todo \u003d new Todo(input, false);","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"idgrr"},"content":"        mapper.put(todo.getDescription(), todo);","lastModifiedDate":"2021-08-15"},{"lineNumber":118,"author":{"gitId":"idgrr"},"content":"        return todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":120,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"idgrr"},"content":"     * Creates a task instance, adds to storageTxt and prints a success msg","lastModifiedDate":"2021-09-10"},{"lineNumber":123,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":124,"author":{"gitId":"idgrr"},"content":"     * @param input tajes in the input from user","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"idgrr"},"content":"     * @return Task returns newly created task","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"idgrr"},"content":"    public Task deadline (String input) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"idgrr"},"content":"        Deadline deadline \u003d new Deadline(input, false);","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"idgrr"},"content":"        mapper.put(deadline.getDescription(), deadline);","lastModifiedDate":"2021-08-15"},{"lineNumber":130,"author":{"gitId":"idgrr"},"content":"        return deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":132,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"idgrr"},"content":"     * Creates a task instance, adds to storageTxt and prints a success msg","lastModifiedDate":"2021-09-10"},{"lineNumber":134,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"idgrr"},"content":"     * @param input tajes in the input from user","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"idgrr"},"content":"     * @return Task returns newly created task","lastModifiedDate":"2021-08-27"},{"lineNumber":137,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"idgrr"},"content":"    public Task event (String input) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"idgrr"},"content":"        Event event \u003d new Event(input, false);","lastModifiedDate":"2021-08-26"},{"lineNumber":140,"author":{"gitId":"idgrr"},"content":"        mapper.put(event.getDescription(), event);","lastModifiedDate":"2021-08-15"},{"lineNumber":141,"author":{"gitId":"idgrr"},"content":"        return event;","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":143,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":144,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":145,"author":{"gitId":"idgrr"},"content":"     * Returns the number of task in the list ( does not matter if its done or not )","lastModifiedDate":"2021-08-17"},{"lineNumber":146,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":147,"author":{"gitId":"idgrr"},"content":"     * @return int returns the current list size","lastModifiedDate":"2021-08-17"},{"lineNumber":148,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":149,"author":{"gitId":"idgrr"},"content":"    public int taskLeft() {","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"idgrr"},"content":"        return mapper.size();","lastModifiedDate":"2021-08-15"},{"lineNumber":151,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":152,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":153,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":154,"author":{"gitId":"idgrr"},"content":"     * Details of the task and list them in insertion order","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":156,"author":{"gitId":"idgrr"},"content":"     * @return String array that contains the details","lastModifiedDate":"2021-08-27"},{"lineNumber":157,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":158,"author":{"gitId":"idgrr"},"content":"    public String getList() {","lastModifiedDate":"2021-09-01"},{"lineNumber":159,"author":{"gitId":"idgrr"},"content":"        if (mapper.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"idgrr"},"content":"            return \"Im sorry, the list seems to be empty\";","lastModifiedDate":"2021-09-15"},{"lineNumber":161,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"idgrr"},"content":"        Collection\u003cTask\u003e values \u003d mapper.values();","lastModifiedDate":"2021-08-15"},{"lineNumber":163,"author":{"gitId":"idgrr"},"content":"        Iterator\u003cTask\u003e look \u003d values.iterator();","lastModifiedDate":"2021-08-15"},{"lineNumber":164,"author":{"gitId":"idgrr"},"content":"        String check \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":165,"author":{"gitId":"idgrr"},"content":"        int pos \u003d 0;","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"idgrr"},"content":"        while (look.hasNext()){","lastModifiedDate":"2021-08-15"},{"lineNumber":167,"author":{"gitId":"idgrr"},"content":"            String listPos \u003d pos+1 + \". \";","lastModifiedDate":"2021-08-26"},{"lineNumber":168,"author":{"gitId":"idgrr"},"content":"            check \u003d check + listPos + look.next().toString() +\"\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":169,"author":{"gitId":"idgrr"},"content":"            pos++;","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":171,"author":{"gitId":"idgrr"},"content":"        return check;","lastModifiedDate":"2021-08-17"},{"lineNumber":172,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":173,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":174,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":175,"author":{"gitId":"idgrr"},"content":"     * Find a task with description that contains the keyword","lastModifiedDate":"2021-09-15"},{"lineNumber":176,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":177,"author":{"gitId":"idgrr"},"content":"     * @param key","lastModifiedDate":"2021-09-15"},{"lineNumber":178,"author":{"gitId":"idgrr"},"content":"     * @return","lastModifiedDate":"2021-09-15"},{"lineNumber":179,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":180,"author":{"gitId":"idgrr"},"content":"    public String find(String key) {","lastModifiedDate":"2021-09-01"},{"lineNumber":181,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":182,"author":{"gitId":"idgrr"},"content":"        Collection\u003cTask\u003e values \u003d mapper.values();","lastModifiedDate":"2021-09-01"},{"lineNumber":183,"author":{"gitId":"idgrr"},"content":"        Iterator\u003cTask\u003e look \u003d values.iterator();","lastModifiedDate":"2021-09-01"},{"lineNumber":184,"author":{"gitId":"idgrr"},"content":"        String keyFound \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":185,"author":{"gitId":"idgrr"},"content":"        Pattern p \u003d Pattern.compile(key);","lastModifiedDate":"2021-09-01"},{"lineNumber":186,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":187,"author":{"gitId":"idgrr"},"content":"        int pos \u003d 1;","lastModifiedDate":"2021-09-01"},{"lineNumber":188,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":189,"author":{"gitId":"idgrr"},"content":"        while (look.hasNext()){","lastModifiedDate":"2021-09-01"},{"lineNumber":190,"author":{"gitId":"idgrr"},"content":"            Task curr \u003d look.next();","lastModifiedDate":"2021-09-01"},{"lineNumber":191,"author":{"gitId":"idgrr"},"content":"            Matcher m \u003d p.matcher(curr.getDescription());","lastModifiedDate":"2021-09-01"},{"lineNumber":192,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":193,"author":{"gitId":"idgrr"},"content":"            if (m.find()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":194,"author":{"gitId":"idgrr"},"content":"                String taskDisplay \u003d pos + \". \" + curr.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":195,"author":{"gitId":"idgrr"},"content":"                keyFound \u003d keyFound + taskDisplay + \"\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":196,"author":{"gitId":"idgrr"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":197,"author":{"gitId":"idgrr"},"content":"            pos++;","lastModifiedDate":"2021-09-01"},{"lineNumber":198,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":199,"author":{"gitId":"idgrr"},"content":"        return keyFound;","lastModifiedDate":"2021-09-01"},{"lineNumber":200,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":201,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":202,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":203,"author":{"gitId":"idgrr"},"content":"     * Returns the details on the current state as a string array to be saved in a TXT file","lastModifiedDate":"2021-09-15"},{"lineNumber":204,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":205,"author":{"gitId":"idgrr"},"content":"     * @return String[] Array of sring that contains descrptions of state","lastModifiedDate":"2021-08-27"},{"lineNumber":206,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":207,"author":{"gitId":"idgrr"},"content":"    public String[] saveState() {","lastModifiedDate":"2021-08-26"},{"lineNumber":208,"author":{"gitId":"idgrr"},"content":"        if (mapper.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":209,"author":{"gitId":"idgrr"},"content":"            return new String[]{};","lastModifiedDate":"2021-08-26"},{"lineNumber":210,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":211,"author":{"gitId":"idgrr"},"content":"        Collection\u003cTask\u003e values \u003d mapper.values();","lastModifiedDate":"2021-08-26"},{"lineNumber":212,"author":{"gitId":"idgrr"},"content":"        Iterator\u003cTask\u003e look \u003d values.iterator();","lastModifiedDate":"2021-08-26"},{"lineNumber":213,"author":{"gitId":"idgrr"},"content":"        String[] check \u003d new String[mapper.size()];;","lastModifiedDate":"2021-08-26"},{"lineNumber":214,"author":{"gitId":"idgrr"},"content":"        for (int pos \u003d 0; pos \u003c mapper.size(); pos++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":215,"author":{"gitId":"idgrr"},"content":"            check[pos] \u003d look.next().saveTask();","lastModifiedDate":"2021-08-26"},{"lineNumber":216,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":217,"author":{"gitId":"idgrr"},"content":"        return check;","lastModifiedDate":"2021-08-26"},{"lineNumber":218,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":219,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":220,"author":{"gitId":"idgrr"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":221,"author":{"gitId":"idgrr"},"content":"     * Returns the details on the current state as a string array to be saved in a CSV file","lastModifiedDate":"2021-09-15"},{"lineNumber":222,"author":{"gitId":"idgrr"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":223,"author":{"gitId":"idgrr"},"content":"     * @return String[] Array of sring that contains descrptions of state","lastModifiedDate":"2021-09-15"},{"lineNumber":224,"author":{"gitId":"idgrr"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":225,"author":{"gitId":"idgrr"},"content":"    public String[] saveStateCsv() {","lastModifiedDate":"2021-09-10"},{"lineNumber":226,"author":{"gitId":"idgrr"},"content":"        if (mapper.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-10"},{"lineNumber":227,"author":{"gitId":"idgrr"},"content":"            return new String[]{};","lastModifiedDate":"2021-09-10"},{"lineNumber":228,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":229,"author":{"gitId":"idgrr"},"content":"        Collection\u003cTask\u003e values \u003d mapper.values();","lastModifiedDate":"2021-09-10"},{"lineNumber":230,"author":{"gitId":"idgrr"},"content":"        Iterator\u003cTask\u003e look \u003d values.iterator();","lastModifiedDate":"2021-09-10"},{"lineNumber":231,"author":{"gitId":"idgrr"},"content":"        String[] check \u003d new String[mapper.size()];;","lastModifiedDate":"2021-09-10"},{"lineNumber":232,"author":{"gitId":"idgrr"},"content":"        for (int pos \u003d 0; pos \u003c mapper.size(); pos++) {","lastModifiedDate":"2021-09-10"},{"lineNumber":233,"author":{"gitId":"idgrr"},"content":"            check[pos] \u003d look.next().saveTaskCsv();","lastModifiedDate":"2021-09-10"},{"lineNumber":234,"author":{"gitId":"idgrr"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":235,"author":{"gitId":"idgrr"},"content":"        return check;","lastModifiedDate":"2021-09-10"},{"lineNumber":236,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":237,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"idgrr":237}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"502.0\" prefHeight\u003d\"93.0\" prefWidth\u003d\"544.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"        \u003cText fx:id\u003d\"dialog\" text\u003d\"Label\" wrappingWidth\u003d\"400\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"            \u003cFont size\u003d\"18.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"         \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"69.0\" fitWidth\u003d\"69.0\" nodeOrientation\u003d\"RIGHT_TO_LEFT\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"         \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"idgrr":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"\u003c?import javafx.scene.effect.DropShadow?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"1001.0\" prefWidth\u003d\"548.0\" style\u003d\"-fx-background-color: #334553;\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"      \u003cAnchorPane layoutX\u003d\"17.0\" layoutY\u003d\"14.0\" prefHeight\u003d\"65.0\" prefWidth\u003d\"513.0\" style\u003d\"-fx-background-color: #7ba4e9;\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"            \u003cDropShadow blurType\u003d\"GAUSSIAN\" radius\u003d\"21.8625\" width\u003d\"68.45\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"         \u003c/effect\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"            \u003cImageView fitHeight\u003d\"47.0\" fitWidth\u003d\"47.0\" layoutX\u003d\"452.0\" layoutY\u003d\"9.0\" onMousePressed\u003d\"#handleAddEvent\" opacity\u003d\"0.5\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"               \u003cimage\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"                  \u003cImage url\u003d\"@../images/add.png\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"               \u003c/image\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"            \u003cImageView fitHeight\u003d\"41.0\" fitWidth\u003d\"76.0\" layoutX\u003d\"14.0\" layoutY\u003d\"12.0\" onMousePressed\u003d\"#handleGetList\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"               \u003cimage\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"                  \u003cImage url\u003d\"@../images/tasklist.png\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"               \u003c/image\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"            \u003cImageView fitHeight\u003d\"47.0\" fitWidth\u003d\"47.0\" layoutX\u003d\"390.0\" layoutY\u003d\"9.0\" onMousePressed\u003d\"#handleGetHelp\" opacity\u003d\"0.5\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"               \u003cimage\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"                  \u003cImage url\u003d\"@../images/1828940.png\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"               \u003c/image\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"            \u003cText layoutX\u003d\"67.0\" layoutY\u003d\"40.0\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"TaskMan - The task Manager\" wrappingWidth\u003d\"264.13671875\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"               \u003cfont\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"                  \u003cFont size\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"               \u003c/font\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"            \u003c/Text\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"         \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"      \u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"        \u003cTextField fx:id\u003d\"userInput\" alignment\u003d\"TOP_LEFT\" layoutX\u003d\"18.0\" layoutY\u003d\"932.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"47.0\" prefWidth\u003d\"430.0\" promptText\u003d\"Say Something to Duke\" AnchorPane.bottomAnchor\u003d\"22.0\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"            \u003cDropShadow /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"         \u003c/effect\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"            \u003cFont size\u003d\"18.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"455.0\" layoutY\u003d\"935.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"            \u003cDropShadow /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"         \u003c/effect\u003e\u003c/Button\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"17.0\" layoutY\u003d\"88.0\" prefHeight\u003d\"825.0\" prefWidth\u003d\"513.0\" style\u003d\"-fx-background-color: #8794ac;\" vbarPolicy\u003d\"NEVER\" vvalue\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"17.0\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"         \u003ceffect\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"            \u003cDropShadow /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"         \u003c/effect\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"         \u003ccontent\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"825.0\" prefWidth\u003d\"511.0\" style\u003d\"-fx-background-color: #c5d8e1;\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"         \u003c/content\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"idgrr":63}},{"path":"src/test/java/duke/stubs/StorageCsvStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.stubs;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.util.StorageCsv;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"public class StorageCsvStub extends StorageCsv {","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"    public StorageCsvStub() {","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"        super(\"src/test/java/testResources\");","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"idgrr":10}},{"path":"src/test/java/duke/stubs/StorageTxtStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.stubs;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.util.StorageTxt;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"public class StorageTxtStub extends StorageTxt {","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"    public StorageTxtStub() {","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"        super(\"src/test/java/testResources\");","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"idgrr":11}},{"path":"src/test/java/duke/stubs/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.stubs;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"public class TaskListStub extends TaskList {","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"    public TaskListStub() {","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"        super();","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"idgrr":11}},{"path":"src/test/java/duke/taskTypes/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.taskTypes;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"import duke.exception.EmptyTimeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"import duke.exception.InvalidFormatException;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"import duke.exception.InvalidDateException;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"import duke.exception.InvalidTimeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"import duke.taskTypes.Deadline;","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":" * Deadline test class","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"class DeadlineTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"    public void deadlineToString_validStringInput_stringReturned() throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"        Assertions.assertEquals(","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"                \"[D][ ] dead1 (by: Sep 9 2019 1900 hrs)\",","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"                new Deadline(\"dead1 /by 2019-09-09 1900\", false).toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"    public void deadlineSaveTask_validStringInput_stringReturned() throws DukeException {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"        assertEquals(","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"                \"D F dead1 /by 2019-09-09 1900\",","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"                new Deadline(\"dead1 /by 2019-09-09 1900\", false).saveTask());","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"    public void deadlineSaveTaskCsv_validStringInput_stringReturned() throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"        assertEquals(","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"                \"D,F,dead1,/by,2019-09-09,1900\",","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"                new Deadline(\"dead1 /by 2019-09-09 1900\", false).saveTaskCsv());","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"    public void deadlineStringInput_invalidDateInput_invalidDateExceptionThrown() {","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"        assertThrows(InvalidDateException.class, () -\u003e new Deadline(\"dead1 /by 20-20-2019 1900\", false)) ;","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"    public void deadlineStringInput_invalidTimeInput_invalidTimeExceptionThrown() {","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"        assertThrows(InvalidTimeException.class, () -\u003e new Deadline(\"dead1 /by 2019-09-09 2500\", false)) ;","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"    public void deadlineStringInput_missingTimeInput_emptyDescriptionExceptionThrown() {","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e new Deadline(\" /by 2019-09-09 1900\", false)) ;","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"    public void deadlineStringInput_missingTimeInput_emptyTimeExceptionThrown() {","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"        assertThrows(EmptyTimeException.class, () -\u003e new Deadline(\"dead1 /by 2019-09-09\", false)) ;","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"idgrr"},"content":"    public void deadlineStringInput_missingTimeInput_invalidFormatExceptionThrown() {","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"idgrr"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e new Deadline(\"/by\", false)) ;","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"idgrr":69}},{"path":"src/test/java/duke/taskTypes/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.taskTypes;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.exception.*;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import duke.taskTypes.Event;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":" * Deadline test class","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"class EventTest {","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"    public void eventToString_validStringInput_stringReturned() throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"        Assertions.assertEquals(","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"                \"[E][ ] event1 (at: Sep 9 2019 1900 hrs)\",","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"                new Event(\"event1 /at 2019-09-09 1900\", false).toString());","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"    public void deadlineSaveTask_validStringInput_stringReturned() throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"        assertEquals(","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"                \"E F event1 /at 2019-09-09 1900\",","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"                new Event(\"event1 /at 2019-09-09 1900\", false).saveTask());","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"    public void deadlineSaveTaskCsv_validStringInput_stringReturned() throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"        assertEquals(","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"                \"E,F,event1,/at,2019-09-09,1900\",","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"                new Event(\"event1 /at 2019-09-09 1900\", false).saveTaskCsv());","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"idgrr"},"content":"    public void deadlineStringInput_invalidDateInput_invalidDateExceptionThrown() {","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"idgrr"},"content":"        assertThrows(InvalidDateException.class, () -\u003e new Event(\"event1 /at 20-20-2019 1900\", false)) ;","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"idgrr"},"content":"    public void deadlineStringInput_invalidTimeInput_invalidTimeExceptionThrown() {","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"idgrr"},"content":"        assertThrows(InvalidTimeException.class, () -\u003e new Event(\"event1 /at 2019-09-09 2500\", false)) ;","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"idgrr"},"content":"    public void deadlineStringInput_missingTimeInput_emptyDescriptionExceptionThrown() {","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"idgrr"},"content":"        assertThrows(EmptyDescriptionException.class, () -\u003e new Event(\" /at 2019-09-09 1900\", false)) ;","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"idgrr"},"content":"    public void deadlineStringInput_missingTimeInput_emptyTimeExceptionThrown() {","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"idgrr"},"content":"        assertThrows(EmptyTimeException.class, () -\u003e new Event(\"event1 /at 2019-09-09\", false)) ;","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"idgrr"},"content":"    public void deadlineStringInput_missingTimeInput_invalidFormatExceptionThrown() {","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"idgrr"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e new Event(\"/at\", false)) ;","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"idgrr":65}},{"path":"src/test/java/duke/taskTypes/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"package duke.taskTypes;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":"import duke.exception.*;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"import duke.taskTypes.Event;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"import duke.taskTypes.Todo;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"/**","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":" * Deadline test class","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":" */","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"class TodoTest {","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"    public void todoToString_validStringInput_stringReturned() throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"        Assertions.assertEquals(","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"                \"[T][ ] todo1\",","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"                new Todo(\"todo1\", false).toString());","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"    public void todoToString_invalidInputHasDeadline_InvalidFormatException() {","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"idgrr"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e new Todo(\"todo2 /by\", false)) ;","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"idgrr"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"idgrr"},"content":"    public void todoToString_invalidInputHasEvent_InvalidFormatException() {","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"idgrr"},"content":"        assertThrows(InvalidFormatException.class, () -\u003e new Todo(\"todo1 /at\", false)) ;","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"idgrr"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"idgrr"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"idgrr"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"idgrr":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"idgrr"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"idgrr"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"idgrr"},"content":" ","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"idgrr"},"content":"done one","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"idgrr"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"idgrr"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"idgrr"},"content":"to do","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"idgrr"},"content":"todo task 1","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"idgrr"},"content":"todo task 2","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"idgrr"},"content":"todo task 3","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"idgrr"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"idgrr"},"content":"todo 123456789123456789123456789123456789123456789123456789123456789","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"idgrr"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"idgrr"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"idgrr"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"idgrr"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"idgrr"},"content":"event event at /at tonight","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"event event by /by tonight","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"idgrr"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"idgrr"},"content":"deadline dead at /at tonight","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"idgrr"},"content":"deadline dead by /by tonight","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"idgrr"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"idgrr"},"content":"done 5","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"idgrr"},"content":"done 6","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"idgrr"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"idgrr"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"idgrr":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"idgrr"},"content":"java -classpath ..\\bin javaFx.gui.Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"idgrr":1,"-":20}}]
