[{"path":"Duke/data/allTasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"T | 0 | test","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"asherhy":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"import java.util.Scanner;  // Import the Scanner class","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":" * Entry point of Duke Chatbot.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":" * @author Wang Hong Yong","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"    private Scanner myObj;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"     * Constructor for the Parser class.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"    public Duke() {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"        this.myObj \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"     * Initialises duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"     * @param args arguments supplied by the user at program launch.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"asherhy"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"asherhy"},"content":"        duke.run();","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"asherhy"},"content":"     * Runs duke until termination.","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"asherhy"},"content":"    public void run(){","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"asherhy"},"content":"        Ui.printWelcomeMsg();","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"asherhy"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"asherhy"},"content":"        String command \u003d myObj.nextLine();  // Read user input","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"asherhy"},"content":"        while (!command.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"asherhy"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"asherhy"},"content":"                parser.parse(command);","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"asherhy"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"asherhy"},"content":"                Ui.prettify(e.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"asherhy"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"asherhy"},"content":"            command \u003d myObj.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"asherhy"},"content":"        if (command.toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"asherhy"},"content":"            Ui.printGoodbyeMsg();","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"asherhy":52,"-":4}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":" * Class that encapsulates the \"Bye\" Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":" * @author Wang Hong Yong","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"     * Constructor for ByeCommand.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"     * @param tasklist Task handler that handles the operation.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"    public ByeCommand(TaskList tasklist){","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"        super(tasklist);","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"     * Executes the \"Bye\" Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"    public void execute(){","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"        Ui.printGoodbyeMsg();","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"asherhy":31}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":" * Class that represents an executable command.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":" * @author Wang Hong Yong","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"    protected TaskList taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"     * Constructor for Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"     * @param tasklist Task handler that handles the operation.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"    public Command(TaskList tasklist) {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"        this.taskList \u003d tasklist;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"     * Executes the Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"    public abstract void execute();","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"asherhy":26}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"import duke.data.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":" * Class that encapsulates the \"Deadline\" Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":" * @author Wang Hong Yong","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"    private String input;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"     * Constructor for DeadlineCommand.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"     * @param tasklist Task Handler that handles the operation.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"     * @param input command string to be executed.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"    public DeadlineCommand(TaskList tasklist, String input){","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"        super(tasklist);","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"     * Executes the \"Deadline\" Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"    public void execute(){","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"            if (input.length() \u003d\u003d 8) {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"asherhy"},"content":"                throw new DukeException(Ui.getEmptyDescriptionMsg(\"deadline\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"asherhy"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"            String[] infoArray \u003d input.substring(9).split(\"/by \", 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"            Deadline d \u003d new Deadline(infoArray[0], infoArray[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"asherhy"},"content":"            super.taskList.addTask(d);","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"asherhy":39}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":" * Class that encapsulates the \"Delete\" Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":" * @author Wang Hong Yong","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"    private String input;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"     * @param tasklist Task Handler that handles the operation.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"     * @param input command string to be executed.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"    public DeleteCommand(TaskList tasklist, String input){","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"        super(tasklist);","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"     * Executes the \"Delete\" Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"    public void execute(){","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"        if (input.length() \u003d\u003d 6) {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"            throw new DukeException(Ui.getEmptyDescriptionMsg(\"delete\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"asherhy"},"content":"        super.taskList.removeTask(Integer.parseInt(input.substring(7)));","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"asherhy":35}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":" * Class that encapsulates the \"Done\" Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":" * @author Wang Hong Yong","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"    private String input;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"     * @param tasklist Task Handler that handles the operation.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"     * @param input command string to be executed.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"    public DoneCommand(TaskList tasklist, String input){","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"        super(tasklist);","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"     * Executes the \"Done\" Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"    public void execute(){","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"        if (input.length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"            throw new DukeException(Ui.getEmptyDescriptionMsg(\"done\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"asherhy"},"content":"        taskList.markTaskAsDone(Integer.parseInt(input.substring(5)));","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"asherhy":35}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"import duke.data.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":" * Class that encapsulates the \"Event\" Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":" * @author Wang Hong Yong","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"    private String input;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"     * Constructor for EventCommand.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"     * @param tasklist Task Handler that handles the operation.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"     * @param input command string to be executed.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"    public EventCommand(TaskList tasklist, String input){","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"        super(tasklist);","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"     * Executes the \"Event\" Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"    public void execute(){","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"        if (input.length() \u003d\u003d 5) {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"asherhy"},"content":"            throw new DukeException(Ui.getEmptyDescriptionMsg(\"event\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"        String[] infoArray \u003d input.substring(6).split(\"/at \", 2);","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"        Event e \u003d new Event(infoArray[0], infoArray[1]);","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"asherhy"},"content":"        taskList.addTask(e);","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"asherhy":38}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"import duke.data.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"    private String input;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"    public FindCommand(TaskList tasklist, String input){","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"        super(tasklist);","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"    public void execute(){","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"        if (input.length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"            throw new DukeException(Ui.getEmptyDescriptionMsg(\"find\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"        String wordToFind \u003d input.substring(5);","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"        taskList.findTask(wordToFind);","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"asherhy":23}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":" * Class that encapsulates the \"List\" Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":" * @author Wang Hong Yong","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"     * Constructor for EventCommand.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"     * @param tasklist Task Handler that handles the operation.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"    public ListCommand(TaskList tasklist){","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"        super(tasklist);","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"     * Executes the \"List\" Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"    public void execute(){","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"        super.taskList.listTasks();","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"asherhy":27}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"import duke.data.task.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":" * Class that encapsulates the \"Todo\" Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":" * @author Wang Hong Yong","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"    private String input;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"     * Constructor for EventCommand.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"     * @param tasklist Task Handler that handles the operation.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"     * @param input command string to be executed.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"    public TodoCommand(TaskList tasklist, String input){","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"        super(tasklist);","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"     * Executes the \"Todo\" Command.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"    public void execute(){","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"        if (input.length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"asherhy"},"content":"            throw new DukeException(Ui.getEmptyDescriptionMsg(\"todo\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"        Todo t \u003d new Todo(input.substring(5));","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"        taskList.addTask(t);","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"asherhy":38}},{"path":"src/main/java/duke/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.data;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"import duke.data.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":" * Class that contains the tasklist and handles all tasklist operations.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":" * @author Wang Hong Yong","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"public class TaskList {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"     * Constructor for the TaskList class.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"     * @param list Tasklist.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"     * @param storage storage for duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"    public TaskList(ArrayList\u003cTask\u003e list, Storage storage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"     * Adds a task to the tasklist.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"asherhy"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"asherhy"},"content":"        list.add(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"asherhy"},"content":"        Ui.printAddMsg(task.toString(), getTotalTasks());","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"asherhy"},"content":"        this.writeFile(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"asherhy"},"content":"     * Deletes the task at the given task index.","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"asherhy"},"content":"     * @param taskNum Task index of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"asherhy"},"content":"    public void removeTask(int taskNum) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"asherhy"},"content":"        if (taskNum \u003c 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"asherhy"},"content":"            throw new DukeException(\"negative item\");","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"asherhy"},"content":"        } else if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"asherhy"},"content":"            throw new DukeException(\"no task found\");","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"asherhy"},"content":"        } else if (taskNum \u003e list.size()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"asherhy"},"content":"            throw new DukeException(\"no such task\");","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"asherhy"},"content":"        Task item \u003d list.remove(taskNum - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"asherhy"},"content":"        Ui.printRemoveMsg(item.toString(), getTotalTasks());","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"asherhy"},"content":"        this.updateFile();","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"asherhy"},"content":"     * Marks the task at the given task index as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"asherhy"},"content":"     * @param taskNum Task index of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"asherhy"},"content":"    public void markTaskAsDone(int taskNum) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"asherhy"},"content":"        if (taskNum \u003c 1) {","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"asherhy"},"content":"            throw new DukeException(\"negative item\");","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"asherhy"},"content":"        } else if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"asherhy"},"content":"            throw new DukeException(\"no task found\");","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"asherhy"},"content":"        } else if (taskNum \u003e list.size()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"asherhy"},"content":"            throw new DukeException(\"no such task\");","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"asherhy"},"content":"        Task item \u003d list.get(taskNum - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"asherhy"},"content":"        item.markAsDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"asherhy"},"content":"        this.updateFile();","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"asherhy"},"content":"        Ui.printTaskDone(item.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"asherhy"},"content":"     * Returns number of undone task.","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"asherhy"},"content":"     * @return A int representing total undone task.","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"asherhy"},"content":"    private int getUndoneTasks() {","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"asherhy"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"asherhy"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"asherhy"},"content":"            if (!task.isDone()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"asherhy"},"content":"                count++;","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"asherhy"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"asherhy"},"content":"        return count;","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"asherhy"},"content":"     * Returns number of total task.","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"asherhy"},"content":"     * @return A int representing total task.","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"asherhy"},"content":"    private int getTotalTasks() {","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"asherhy"},"content":"        return list.size();","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"asherhy"},"content":"    public void findTask(String wordToFind) {","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"asherhy"},"content":"        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"asherhy"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"asherhy"},"content":"        for (Task t: list) {","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"asherhy"},"content":"            if (t.toString().contains(wordToFind)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"asherhy"},"content":"                tasks.add(String.format(\"    %d.%s\", (index), t.toString()) + System.lineSeparator());","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"asherhy"},"content":"                index++;","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"asherhy"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"asherhy"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"asherhy"},"content":"            Ui.printNoSuchTaskMsg();","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"asherhy"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"asherhy"},"content":"            String msg \u003d \"     Here are the matching tasks in your list:\" + System.lineSeparator();","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"asherhy"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"asherhy"},"content":"                msg +\u003d String.format(\"    %d.%s\", (i + 1), tasks.get(i).toString()) + System.lineSeparator();","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"asherhy"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"asherhy"},"content":"            Ui.prettify(msg);","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"asherhy"},"content":"    public void listTasks() throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"asherhy"},"content":"        String msg \u003d \"    Here are the tasks in your list:\" + System.lineSeparator();","lastModifiedDate":"2021-08-29"},{"lineNumber":130,"author":{"gitId":"asherhy"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"asherhy"},"content":"            msg +\u003d String.format(\"    %d.%s\", (i + 1), list.get(i).toString()) + System.lineSeparator();","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"asherhy"},"content":"        Ui.prettify(msg);","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":135,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":136,"author":{"gitId":"asherhy"},"content":"    public void updateFile() throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":137,"author":{"gitId":"asherhy"},"content":"        storage.updateFile(list);","lastModifiedDate":"2021-08-29"},{"lineNumber":138,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":139,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":140,"author":{"gitId":"asherhy"},"content":"    public void writeFile(Task t) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":141,"author":{"gitId":"asherhy"},"content":"        storage.writeFile(t);","lastModifiedDate":"2021-08-29"},{"lineNumber":142,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":143,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"asherhy":143}},{"path":"src/main/java/duke/data/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.data.exception;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":" * Class that notifies an error that Duke encounters.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":" * @author Wang Hong Yong","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"public class DukeException extends RuntimeException{","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"     * @param errorMessage should contain relevant information on the failed execution(s).","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"asherhy":19}},{"path":"src/main/java/duke/data/messages/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.data.messages;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":" * Class that encapsulates all user-visible messages.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":" * @author Wang Hong Yong","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"public class Messages {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_WELCOME_1 \u003d \"Hello! I\u0027m Duke\";","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_WELCOME_2 \u003d \"What can I do for you?\";","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_EMPTY_DEADLINE \u003d \"The description and timing of a deadline\" +","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"            \" cannot be empty.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_EMPTY_TODO \u003d  \"The description of a todo cannot be empty.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_EMPTY_EVENT \u003d \"The description and timing of a event cannot be empty.\" +","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"            \" cannot be empty.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_EMPTY_DELETE \u003d \"There must be something to be deleted.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_EMPTY_DONE \u003d \"There must be something to be completed.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_EMPTY_FIND \u003d \"Please give some input in order to find.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_INPUT_UNKNOWN \u003d \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_IO_ERR \u003d \"IOException\";","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_ADD \u003d \"     Got it. I\u0027ve added this task:\";","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_TASKS_LEFT \u003d \"     Now you have %d tasks in the list.\";","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_REMOVE \u003d \"     Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_DONE \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"    public static final String MESSAGE_NO_TASKS_FOUND \u003d \"OOPS!!! I could not find any tasks with that word :-(\";","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"asherhy":31}},{"path":"src/main/java/duke/data/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.data.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import duke.data.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"import java.lang.Exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":" * Class that represents a Deadline task.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":" * @author Wang Hong Yong","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"    private final String by;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"     * @param by Date the task is due.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"        this.by \u003d parseStringToDate(by);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"asherhy"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"asherhy"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"asherhy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"asherhy"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"asherhy"},"content":"     * Formats the deadline task to the desirable format.","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"asherhy"},"content":"     * @return A string representing the deadline task in the desirable format.","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"asherhy"},"content":"    public String formatToWrite() {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"asherhy"},"content":"        return String.format(\"D | %s | %s\", super.formatToWrite(), this.by);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"asherhy"},"content":"     * Formats the due date to the desirable format.","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"asherhy"},"content":"     * @param dateTime Input date format.","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"asherhy"},"content":"     * @return A string representing the date in the desirable format.","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"asherhy"},"content":"    public String parseStringToDate(String dateTime){","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"asherhy"},"content":"        DateTimeFormatter sourceFormat;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"asherhy"},"content":"        DateTimeFormatter targetFormat;","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"asherhy"},"content":"        String convertedTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"asherhy"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"asherhy"},"content":"            if (dateTime.split(\"\\\\s+\").length \u003d\u003d 2) {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"asherhy"},"content":"                sourceFormat \u003d DateTimeFormatter.ofPattern(\"uuuu-MM-dd HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"asherhy"},"content":"                targetFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd uuuu hh:mm a\", Locale.ENGLISH);","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"asherhy"},"content":"                convertedTime \u003d LocalDateTime.parse(dateTime, sourceFormat)","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"asherhy"},"content":"                        .format(targetFormat);","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"asherhy"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"asherhy"},"content":"                sourceFormat \u003d DateTimeFormatter.ofPattern(\"uuuu-MM-dd\");","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"asherhy"},"content":"                targetFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd uuuu\", Locale.ENGLISH);","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"asherhy"},"content":"                convertedTime \u003d LocalDate.parse(dateTime, sourceFormat)","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"asherhy"},"content":"                        .format(targetFormat);","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"asherhy"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"asherhy"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"asherhy"},"content":"            Ui.prettify(e.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"asherhy"},"content":"            return dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"asherhy"},"content":"        return convertedTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"asherhy":80}},{"path":"src/main/java/duke/data/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.data.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":" * Class that represents an Event task.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":" * @author Wang Hong Yong","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"    protected String at;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"     * Constructor for Event class.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"     * @param at Date of the event.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"     * Returns the string representation of the Event task.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"     * Formats the event task to the desirable format.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"asherhy"},"content":"     * @return A string representing the event task in the desirable format.","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"asherhy"},"content":"    public String formatToWrite() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"asherhy"},"content":"        return String.format(\"E | %s | %s\", super.formatToWrite(), this.at);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"asherhy":41}},{"path":"src/main/java/duke/data/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.data.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":" * Class that represents a task.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":" * @author Wang Hong Yong","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"    protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"     * Constructor for Task class.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"     * Retrieves the done status of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"     * @return string representation of the done status of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"     * Marks task as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"asherhy"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"asherhy"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"asherhy"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"asherhy"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"asherhy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"asherhy"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"asherhy"},"content":"     * Formats the task to the desirable format.","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"asherhy"},"content":"     * @return A string representing the task in the desirable format.","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"asherhy"},"content":"    public String formatToWrite() {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"asherhy"},"content":"        return String.format(\"%d | %s\", (this.isDone ? 1 : 0), this.description);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"asherhy"},"content":"     * Returns the boolean representation of the completion of task.","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"asherhy"},"content":"     * @return boolean representation of the task completion.","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"asherhy"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"asherhy"},"content":"        return isDone;","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"asherhy":64}},{"path":"src/main/java/duke/data/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.data.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import duke.data.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":" * Class that represents a To Do task.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":" * @author Wang Hong Yong","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"     * Constructor for ToDo class.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"     * Returns the string representation of the To Do task.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"asherhy"},"content":"     * Formats the event task to the desirable format.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"     * @return A string representing the event task in the desirable format.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"asherhy"},"content":"    public String formatToWrite() {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"asherhy"},"content":"        return String.format(\"T | %s\", super.formatToWrite());","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"asherhy":39}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.parser;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"import duke.data.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"import duke.command.*;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":" * Class that makes sense of the user commands to Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":" * @author Wang Hong Yong","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"public class Parser {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"     * Constructor for the Parser class.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"    public Parser() {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"        this.list \u003d storage.loadFile();","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"        this.taskList \u003d new TaskList(list, storage);","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"asherhy"},"content":"     * Parses command and runs.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"     * @param input String representing the command.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"asherhy"},"content":"    public void parse(String input) throws DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"asherhy"},"content":"        String commandInput \u003d input.split(\"\\\\s+\")[0];","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"asherhy"},"content":"        Command command;","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"asherhy"},"content":"        switch (commandInput) {","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"asherhy"},"content":"        case \"list\":","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"asherhy"},"content":"            command \u003d new ListCommand(taskList);","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"asherhy"},"content":"            command.execute();","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"asherhy"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"asherhy"},"content":"        case \"done\":","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"asherhy"},"content":"            command \u003d new DoneCommand(taskList, input);","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"asherhy"},"content":"            command.execute();","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"asherhy"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"asherhy"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"asherhy"},"content":"            command \u003d new TodoCommand(taskList, input);","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"asherhy"},"content":"            command.execute();","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"asherhy"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"asherhy"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"asherhy"},"content":"            command \u003d new DeadlineCommand(taskList, input);","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"asherhy"},"content":"            command.execute();","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"asherhy"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"asherhy"},"content":"        case \"event\":","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"asherhy"},"content":"            command \u003d new EventCommand(taskList, input);","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"asherhy"},"content":"            command.execute();","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"asherhy"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"asherhy"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"asherhy"},"content":"            command \u003d new DeleteCommand(taskList, input);","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"asherhy"},"content":"            command.execute();","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"asherhy"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"asherhy"},"content":"        case \"find\":","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"asherhy"},"content":"            command \u003d new FindCommand(taskList, input);","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"asherhy"},"content":"            command.execute();","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"asherhy"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"asherhy"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"asherhy"},"content":"            command \u003d new ByeCommand(taskList);","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"asherhy"},"content":"            command.execute();","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"asherhy"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"asherhy"},"content":"        default:","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"asherhy"},"content":"            throw new DukeException(Ui.getUnknownInputMsg());","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"asherhy":77}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"import duke.data.task.*;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"import duke.data.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":" * Class that deals with loading tasks from the file and updating tasks in the file.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":" * @author Wang Hong Yong","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"public class Storage {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"    private static final String FILE_NAME \u003d \"./data/allTasks.txt\";","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"    private static final File file \u003d new File(FILE_NAME);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"     * Loads the tasks from the file.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"     * @return An arraylist of the tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"     * @throws DukeException if the tasks cannot be loaded.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"    public static ArrayList\u003cTask\u003e loadFile() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"asherhy"},"content":"            ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"asherhy"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"                loadedTasks.add(formatToRead(sc.nextLine()));","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"asherhy"},"content":"            return loadedTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"asherhy"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"asherhy"},"content":"            createFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"asherhy"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"asherhy"},"content":"     * Create the file according to the tasklist.","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"asherhy"},"content":"    private static void createFile() {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"asherhy"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"asherhy"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"asherhy"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"asherhy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"asherhy"},"content":"            Ui.printCreateDirectoryErr();","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"asherhy"},"content":"     * Writes the file according to the tasklist.","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"asherhy"},"content":"     * @param task String representatio of all tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"asherhy"},"content":"     * @throws DukeException if unexpected error is encountered.","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"asherhy"},"content":"    public static void writeFile(Task task) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"asherhy"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"asherhy"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILE_NAME, true);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"asherhy"},"content":"            fileWriter.write(task.formatToWrite() + System.lineSeparator());","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"asherhy"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"asherhy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"asherhy"},"content":"            throw new DukeException(Ui.getIoMsg());","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"asherhy"},"content":"     * Updates the file according to the tasklist.","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"asherhy"},"content":"     * @param tasks String representatio of all tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"asherhy"},"content":"     * @throws DukeException if unexpected error is encountered.","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"asherhy"},"content":"    public static void updateFile(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"asherhy"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"asherhy"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILE_NAME);","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"asherhy"},"content":"            for (Task t: tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"asherhy"},"content":"                fileWriter.write(t.formatToWrite() + System.lineSeparator());","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"asherhy"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"asherhy"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"asherhy"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"asherhy"},"content":"            throw new DukeException(Ui.getIoMsg());","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"asherhy"},"content":"     * Returns a task that corresponds with the string description of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"asherhy"},"content":"     * @param s String representation of the task to be returned.","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"asherhy"},"content":"     * @return A task that corresponds with the string description of the task.","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"asherhy"},"content":"     * @throws DukeException if task cannot be identified.","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"asherhy"},"content":"    private static Task formatToRead(String s) throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"asherhy"},"content":"        String[] info \u003d s.split(\" \\\\| \");","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"asherhy"},"content":"        Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"asherhy"},"content":"        switch (info[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"asherhy"},"content":"        case \"D\":","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"asherhy"},"content":"            task \u003d new Deadline(info[2], info[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"asherhy"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"asherhy"},"content":"        case \"E\":","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"asherhy"},"content":"            task \u003d new Event(info[2], info[3]);","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"asherhy"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"asherhy"},"content":"        case \"T\":","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"asherhy"},"content":"            task \u003d new Todo(info[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"asherhy"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"asherhy"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"asherhy"},"content":"            throw new DukeException(\"Error unknown value: \" + info[0]);","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"asherhy"},"content":"        if (info[1].equals(\"1\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"asherhy"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"asherhy"},"content":"        return task;","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"asherhy":118}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import duke.data.messages.Messages;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":" * Class that deals with interactions with the user of Duke.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":" *","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":" * @author Wang Hong Yong","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"public class Ui {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"    private static final String TAB \u003d \"  \";","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"    public static void prettify(String message){","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"asherhy"},"content":"        System.out.println(TAB + DIVIDER);","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"asherhy"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"asherhy"},"content":"        System.out.println(TAB + DIVIDER);","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"asherhy"},"content":"     * Welcomes the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"asherhy"},"content":"    public static void printWelcomeMsg() {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"asherhy"},"content":"        String message \u003d  TAB + TAB + Messages.MESSAGE_WELCOME_1 + LS + TAB + TAB + Messages.MESSAGE_WELCOME_2;","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"asherhy"},"content":"        prettify(message);","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"asherhy"},"content":"     * Says bye the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"asherhy"},"content":"    public static void printGoodbyeMsg() {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"asherhy"},"content":"        prettify(Messages.MESSAGE_GOODBYE);","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"asherhy"},"content":"     * Informs the user that they have inputted an empty task.","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"asherhy"},"content":"     * @param type Type of task input.","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"asherhy"},"content":"     * @return The error message to the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"asherhy"},"content":"    public static String getEmptyDescriptionMsg(String type) {","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"asherhy"},"content":"        String errorMsg \u003d TAB + TAB + \"☹ OOPS!!! \";","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"asherhy"},"content":"        switch(type) {","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"asherhy"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"asherhy"},"content":"            errorMsg +\u003d Messages.MESSAGE_EMPTY_TODO;","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"asherhy"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"asherhy"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"asherhy"},"content":"            errorMsg +\u003d Messages.MESSAGE_EMPTY_DEADLINE;","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"asherhy"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"asherhy"},"content":"        case \"event\":","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"asherhy"},"content":"            errorMsg +\u003d Messages.MESSAGE_EMPTY_EVENT;","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"asherhy"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"asherhy"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"asherhy"},"content":"            errorMsg +\u003d Messages.MESSAGE_EMPTY_DELETE;","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"asherhy"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"asherhy"},"content":"        case \"done\":","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"asherhy"},"content":"            errorMsg +\u003d Messages.MESSAGE_EMPTY_DONE;","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"asherhy"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"asherhy"},"content":"        case \"find\":","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"asherhy"},"content":"            errorMsg +\u003d Messages.MESSAGE_EMPTY_FIND;","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"asherhy"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"asherhy"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"asherhy"},"content":"        return errorMsg;","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"asherhy"},"content":"     * Informs the user that they have inputted unknown command.","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"asherhy"},"content":"     * @return The error message to the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"asherhy"},"content":"    public static String getUnknownInputMsg() {","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"asherhy"},"content":"        return TAB + TAB + Messages.MESSAGE_INPUT_UNKNOWN;","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"asherhy"},"content":"     * Informs the user that it failed to create directory.","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"asherhy"},"content":"    public static void printCreateDirectoryErr() {","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"asherhy"},"content":"        System.err.println(\"IOException: unable to create directory\");","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"asherhy"},"content":"     * Informs the user that they have encountered IOException.","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"asherhy"},"content":"     * @return The error IOException message to the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"asherhy"},"content":"    public static String getIoMsg(){","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"asherhy"},"content":"        return Messages.MESSAGE_IO_ERR;","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"asherhy"},"content":"     * Informs the user that task has been added.","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"asherhy"},"content":"     * @param task String representing task","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"asherhy"},"content":"     * @param num Integer representing number of tasks left","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"asherhy"},"content":"    public static void printAddMsg(String task, Integer num) {","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"asherhy"},"content":"        String msg \u003d Messages.MESSAGE_ADD + LS + TAB + TAB + TAB + task + LS +","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"asherhy"},"content":"                String.format(Messages.MESSAGE_TASKS_LEFT, num);","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"asherhy"},"content":"        prettify(msg);","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"asherhy"},"content":"     * Informs the user that task has been removed.","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"asherhy"},"content":"     * @param task String representing task","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"asherhy"},"content":"     * @param num Integer representing number of tasks left","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"asherhy"},"content":"    public static void printNoSuchTaskMsg() {","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"asherhy"},"content":"        prettify(Messages.MESSAGE_NO_TASKS_FOUND);","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"asherhy"},"content":"    public static void printRemoveMsg(String task, Integer num) {","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"asherhy"},"content":"        String msg \u003d Messages.MESSAGE_REMOVE + LS + TAB + TAB + TAB + task + LS +","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"asherhy"},"content":"                String.format(Messages.MESSAGE_TASKS_LEFT, num);","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"asherhy"},"content":"        prettify(msg);","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"asherhy"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"asherhy"},"content":"     * Informs the user that task has been marked as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"asherhy"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"asherhy"},"content":"     * @param task String representing task","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"asherhy"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"asherhy"},"content":"    public static void printTaskDone(String task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"asherhy"},"content":"        String msg \u003d TAB + Messages.MESSAGE_DONE + LS + TAB + TAB + task;","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"asherhy"},"content":"        prettify(msg);","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"asherhy":129}},{"path":"src/test/java/duke/data/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.data.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"    public void isDone_success(){","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"        Task todo \u003d new Todo(\"read book\");","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"        assertEquals(false, todo.isDone());","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"        todo.markAsDone();","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"        assertEquals(true, todo.isDone());","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"asherhy":14}},{"path":"src/test/java/duke/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"package duke.ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"public class UiTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"    public void ioMsgTest_success() {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"        assertEquals(\"IOException\", Ui.getIoMsg());","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"asherhy"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"asherhy"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"asherhy"},"content":"    public void unknownInputMsgTest_success() {","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"asherhy"},"content":"        assertEquals(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" ,Ui.getUnknownInputMsg());","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"asherhy"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"asherhy"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"asherhy":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"asherhy"},"content":"todo read book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"asherhy"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"asherhy"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"asherhy"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"asherhy"},"content":"event project meeting /at Monday 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"asherhy"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"asherhy"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"asherhy"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"asherhy"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"asherhy"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"asherhy":10}}]
