[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"nguyiyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"nguyiyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"nguyiyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"nguyiyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"nguyiyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"nguyiyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"nguyiyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"nguyiyang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"nguyiyang"},"content":"    mainClassName \u003d \"lania.Lania\"","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nguyiyang":15,"-":45}},{"path":"src/main/java/lania/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"import javafx.scene.paint.Paint;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"//@@author nguyiyang-reused","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(String l, Image image) {","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DialogBox userDialogBox \u003d new DialogBox(l, image);","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userDialogBox.setDialogBoxBackgroundColor(\"#ff9191\");","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userDialogBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static DialogBox getLaniaDialog(String l, Image image) {","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DialogBox laniaDialogBox \u003d new DialogBox(l, image);","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        laniaDialogBox.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        laniaDialogBox.setDialogBoxBackgroundColor(\"#ffe591\");","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return laniaDialogBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setDialogBoxBackgroundColor(String hexValue) {","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.setBackground(new Background(new BackgroundFill(Paint.valueOf(hexValue), null, null)));","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"nguyiyang":18,"-":49}},{"path":"src/main/java/lania/Lania.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":"import lania.command.Command;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"import lania.exception.LaniaException;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"import lania.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":" * Represents the chatbot Lania that helps manage your tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"public class Lania {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":"    /** Contains the task list */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"nguyiyang"},"content":"    /**  Deals with interactions with the user */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nguyiyang"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nguyiyang"},"content":"    /** Deals with loading tasks from the file and saving tasks in the file */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nguyiyang"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nguyiyang"},"content":"    /** Deals with making sense of the user command */","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"nguyiyang"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nguyiyang"},"content":"    public Lania() {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"nguyiyang"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"nguyiyang"},"content":"        storage \u003d new Storage(\"data/lania.txt\");","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"nguyiyang"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"nguyiyang"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"nguyiyang"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"nguyiyang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"nguyiyang"},"content":"            ui.showError();","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"nguyiyang"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"nguyiyang"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"nguyiyang"},"content":"     * Constructor for the Lania object.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nguyiyang"},"content":"     * @param filePath The location of the file in which data is stored","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nguyiyang"},"content":"    public Lania(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"nguyiyang"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"nguyiyang"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nguyiyang"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"nguyiyang"},"content":"     * Main part of the program. First, it tries to load the file","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"nguyiyang"},"content":"     * if it exists and display its contents. It then copies the","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"nguyiyang"},"content":"     * contents over into a TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"nguyiyang"},"content":"     * After greeting the user, the","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"nguyiyang"},"content":"     * program continuously waits for input unless the command \u0027bye\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"nguyiyang"},"content":"     * is given which closes exits the program.","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"nguyiyang"},"content":"    public void run() {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"nguyiyang"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"nguyiyang"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"nguyiyang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"nguyiyang"},"content":"            ui.showError();","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"nguyiyang"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"nguyiyang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"nguyiyang"},"content":"        ui.showListMessage(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"nguyiyang"},"content":"        ui.showGreetingMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"nguyiyang"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"nguyiyang"},"content":"        Scanner s \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"nguyiyang"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"nguyiyang"},"content":"            try {","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"nguyiyang"},"content":"                String input \u003d s.nextLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"nguyiyang"},"content":"                Command c \u003d parser.parse(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"nguyiyang"},"content":"                c.execute(tasks, storage, ui);","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"nguyiyang"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"nguyiyang"},"content":"            } catch (LaniaException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"nguyiyang"},"content":"                ui.showLaniaException(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"nguyiyang"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"nguyiyang"},"content":"                ui.showDateTimeException();","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"nguyiyang"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"nguyiyang"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"nguyiyang"},"content":"        s.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"nguyiyang"},"content":"     * Lania object is created and starts running.","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"nguyiyang"},"content":"     * @param args The command line arguments. Not required here.","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"nguyiyang"},"content":"     **/","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"nguyiyang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"nguyiyang"},"content":"        Lania lania \u003d new Lania(\"data/lania.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"nguyiyang"},"content":"        Launcher.main(args);","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nguyiyang":92,"-":2}},{"path":"src/main/java/lania/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"nguyiyang":12}},{"path":"src/main/java/lania/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"import lania.task.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"//@@author nguyiyang-reused","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A GUI for Lania using FXML.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Storage storage \u003d new Storage(\"data/lania.txt\");","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setLania(tasks, ui, storage, parser);","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            stage.show();","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"nguyiyang":11,"-":29}},{"path":"src/main/java/lania/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"import lania.command.Command;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"import lania.command.ExitCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"import lania.exception.LaniaException;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"import lania.task.TaskList;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"//@@author nguyiyang-reused","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"//Reused from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Image laniaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Lania.png\"));","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setLania(TaskList tasks, Ui ui, Storage storage, Parser parser) {","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Lania\u0027s reply and then appends them to","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Command c \u003d parser.parse(userInput.getText());","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            String laniaText \u003d c.execute(tasks, storage, ui);","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            if (c instanceof ExitCommand) {","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                Platform.exit();","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                    DialogBox.getLaniaDialog(laniaText, laniaImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            );","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (LaniaException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                    DialogBox.getLaniaDialog(ui.showLaniaException(e), laniaImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            );","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                    DialogBox.getLaniaDialog(ui.showDateTimeException(), laniaImage)","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            );","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"nguyiyang":17,"-":70}},{"path":"src/main/java/lania/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"import lania.command.AddCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"import lania.command.Command;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"import lania.command.CompleteCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"import lania.command.DeleteCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"import lania.command.ExitCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":"import lania.command.FindCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"import lania.command.ListCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"import lania.exception.LaniaEmptyDescriptionException;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"import lania.exception.LaniaException;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"import lania.task.Deadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"import lania.task.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"import lania.task.Todo;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":" * This class deals with making sense of the user command","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":" * by parsing the given string.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nguyiyang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nguyiyang"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"nguyiyang"},"content":"     * Decides which command to execute based on the given input.","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"nguyiyang"},"content":"     * @param fullCommand The input given by user.","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"nguyiyang"},"content":"     * @return The type of command to be executed.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"nguyiyang"},"content":"    public Command parse(String fullCommand) throws LaniaException {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"nguyiyang"},"content":"        String firstCommand \u003d parseCommand(fullCommand);","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"nguyiyang"},"content":"        if (firstCommand.equals(\"bye\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"nguyiyang"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"nguyiyang"},"content":"        } else if (firstCommand.equals(\"list\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"nguyiyang"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"nguyiyang"},"content":"        } else if (firstCommand.equals(\"find\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"nguyiyang"},"content":"            return new FindCommand(parseTaskDescription(fullCommand));","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"nguyiyang"},"content":"        } else if (firstCommand.equals(\"done\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"nguyiyang"},"content":"            return new CompleteCommand(getIndex(fullCommand));","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"nguyiyang"},"content":"        } else if (firstCommand.equals(\"delete\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"nguyiyang"},"content":"            return new DeleteCommand(getIndex(fullCommand));","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"nguyiyang"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"nguyiyang"},"content":"            if (firstCommand.equals(\"todo\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"nguyiyang"},"content":"                return new AddCommand(new Todo(parseTaskDescription(fullCommand)));","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"nguyiyang"},"content":"            } else if (firstCommand.equals(\"deadline\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"nguyiyang"},"content":"                String taskDescription \u003d parseTaskDescription(fullCommand);","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"nguyiyang"},"content":"                String[] task \u003d parseDeadline(taskDescription);","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"nguyiyang"},"content":"                return new AddCommand(new Deadline(task[0], task[1]));","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"nguyiyang"},"content":"            } else if (firstCommand.equals(\"event\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"nguyiyang"},"content":"                String taskDescription \u003d parseTaskDescription(fullCommand);","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"nguyiyang"},"content":"                String[] task \u003d parseEvent(taskDescription);","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"nguyiyang"},"content":"                return new AddCommand(new Event(task[0], task[1]));","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"nguyiyang"},"content":"            } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"nguyiyang"},"content":"                throw new LaniaException(\"Sorry, but Lania does not know what that means.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"nguyiyang"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"nguyiyang"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"nguyiyang"},"content":"     * Checks the first word of the given input.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"nguyiyang"},"content":"     * @param command The command given to the Lania.","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"nguyiyang"},"content":"     * @return The first word of the given input.","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"nguyiyang"},"content":"    public String parseCommand(String command) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"nguyiyang"},"content":"        String[] split \u003d command.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"nguyiyang"},"content":"        return split[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"nguyiyang"},"content":"     * Checks the description of the given task,","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"nguyiyang"},"content":"     * provided that the type of task is specified.","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"nguyiyang"},"content":"     * @param command The command given to the Lania.","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"nguyiyang"},"content":"     * @return The description of the given task.","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"nguyiyang"},"content":"     * @throws LaniaEmptyDescriptionException If the task description is not given.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"nguyiyang"},"content":"    public String parseTaskDescription(String command) throws LaniaEmptyDescriptionException {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"nguyiyang"},"content":"        String[] split \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"nguyiyang"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"nguyiyang"},"content":"            throw new LaniaEmptyDescriptionException(split[0]);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"nguyiyang"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"nguyiyang"},"content":"            return split[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"nguyiyang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"nguyiyang"},"content":"     * Checks if the user input deadline is accompanied with the date and time.","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"nguyiyang"},"content":"     * @param command The command given to the Lania.","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"nguyiyang"},"content":"     * @return An array of strings containing the task description and its date and time.","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"nguyiyang"},"content":"     * @throws LaniaEmptyDescriptionException If the date and time is not provided.","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"nguyiyang"},"content":"    public String[] parseDeadline(String command) throws LaniaEmptyDescriptionException {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"nguyiyang"},"content":"        String[] split \u003d command.split(\" /by \");","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"nguyiyang"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"nguyiyang"},"content":"            throw new LaniaEmptyDescriptionException(\"date/time\");","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"nguyiyang"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"nguyiyang"},"content":"            return split;","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"nguyiyang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"nguyiyang"},"content":"     * Similar to parseDeadline, except it works for Event tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"nguyiyang"},"content":"     * @param command The command given to the Lania.","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"nguyiyang"},"content":"     * @return An array of strings containing the task description and its date and time.","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"nguyiyang"},"content":"     * @throws LaniaEmptyDescriptionException If the date and time is not provided.","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"nguyiyang"},"content":"    public String[] parseEvent(String command) throws LaniaEmptyDescriptionException {","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"nguyiyang"},"content":"        String[] split \u003d command.split(\" /at \");","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"nguyiyang"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"nguyiyang"},"content":"            throw new LaniaEmptyDescriptionException(\"date/time\");","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"nguyiyang"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"nguyiyang"},"content":"            return split;","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"nguyiyang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"nguyiyang"},"content":"     * Gets the index of the task that the user wants to","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"nguyiyang"},"content":"     * perform an operation on.","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"nguyiyang"},"content":"     * @param command The command given to the Lania.","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"nguyiyang"},"content":"     * @return The index of a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"nguyiyang"},"content":"    public int getIndex(String command) {","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"nguyiyang"},"content":"        String[] split \u003d command.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"nguyiyang"},"content":"        return Integer.parseInt(split[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"nguyiyang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nguyiyang":128}},{"path":"src/main/java/lania/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"import lania.task.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"import lania.task.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"import lania.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"import lania.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"import lania.task.Todo;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":" * This class deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nguyiyang"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nguyiyang"},"content":"    /** Represents the path of the file to be retrieved or written. */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nguyiyang"},"content":"    private String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nguyiyang"},"content":"     * Constructor for the storage class.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nguyiyang"},"content":"     * @param filePath The path of the file to write or read from.","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nguyiyang"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nguyiyang"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nguyiyang"},"content":"     * This method reads the file if it exists and stores the data","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nguyiyang"},"content":"     * into a TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"nguyiyang"},"content":"     * @return The TaskList containing the tasks specified in the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"nguyiyang"},"content":"     * @throws  IOException If the directory of file cannot be found.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nguyiyang"},"content":"    public TaskList load() throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nguyiyang"},"content":"        Files.createDirectories(Paths.get(\"data/\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nguyiyang"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nguyiyang"},"content":"        if (f.createNewFile()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"nguyiyang"},"content":"            return new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"nguyiyang"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nguyiyang"},"content":"            TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"nguyiyang"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"nguyiyang"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"nguyiyang"},"content":"                String next \u003d s.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"nguyiyang"},"content":"                String[] split \u003d next.split(\"\\\\|\", 4);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"nguyiyang"},"content":"                Task t;","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"nguyiyang"},"content":"                if (split[0].equals(\"T\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"nguyiyang"},"content":"                    t \u003d new Todo(split[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"nguyiyang"},"content":"                } else if (split[0].equals(\"D\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"nguyiyang"},"content":"                    t \u003d new Deadline(split[2], split[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"nguyiyang"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"nguyiyang"},"content":"                    t \u003d new Event(split[2], split[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"nguyiyang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"nguyiyang"},"content":"                if (split[1].equals(\"X\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"nguyiyang"},"content":"                    t.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"nguyiyang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"nguyiyang"},"content":"                tasks.update(t);","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"nguyiyang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"nguyiyang"},"content":"            s.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"nguyiyang"},"content":"            return tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"nguyiyang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"nguyiyang"},"content":"     * Rewrites the entire file with given tasks,","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"nguyiyang"},"content":"     * line by line using the appendToFile method.","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"nguyiyang"},"content":"     * @param tasks The user\u0027s TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"nguyiyang"},"content":"     * @throws IOException If unable to append to file.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"nguyiyang"},"content":"    public void save(TaskList tasks) throws IOException {","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"nguyiyang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"nguyiyang"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"nguyiyang"},"content":"            appendToFile(filePath, task.getStringFormat(), i);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"nguyiyang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"nguyiyang"},"content":"     * Writes if it is the first task, and appends if otherwise","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"nguyiyang"},"content":"     * so that the entire file can be rewritten.","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"nguyiyang"},"content":"     * @param filePath The location of the file to write to.","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"nguyiyang"},"content":"     * @param textToAppend The text that needs to be added.","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"nguyiyang"},"content":"     * @param i Checks whether it is the first task.","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"nguyiyang"},"content":"     * @throws IOException If the program cannot create or write to the file indicated.","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"nguyiyang"},"content":"    private void appendToFile(String filePath, String textToAppend, int i) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"nguyiyang"},"content":"        FileWriter fw \u003d new FileWriter(filePath, i !\u003d 0);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"nguyiyang"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"nguyiyang"},"content":"        fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"nguyiyang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nguyiyang":97}},{"path":"src/main/java/lania/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"import lania.exception.LaniaException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"import lania.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"import lania.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":" * This class deals with interactions with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"     * Displays a message when the user adds a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"     * @param tasks The resulting TaskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"     * @param task The task that has been added.","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":"     * @return The message displayed to user concatenated as a string.","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nguyiyang"},"content":"    public String showUpdateMessage(TaskList tasks, Task task) {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"nguyiyang"},"content":"        String message \u003d \"Lania has added: \";","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"nguyiyang"},"content":"        message \u003d message + \"\\n\" + task.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"nguyiyang"},"content":"        message \u003d message + \"\\n\" + \"Great! Now you have \"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"nguyiyang"},"content":"                + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in your list.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"nguyiyang"},"content":"        System.out.println(\"Lania has added: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nguyiyang"},"content":"        System.out.println(task);","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"nguyiyang"},"content":"        System.out.println(\"Great! Now you have \"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nguyiyang"},"content":"                + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in your list.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"nguyiyang"},"content":"        return message;","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"nguyiyang"},"content":"     * Displays a greeting message.","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"nguyiyang"},"content":"     * @return The message displayed to user concatenated as a string.","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"nguyiyang"},"content":"    public String showGreetingMessage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"nguyiyang"},"content":"        String message \u003d \"Hello I am Lania! How may Lania be of assistance?\" + \"\\n\" + \"Enter \u0027bye\u0027 to exit\";","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"nguyiyang"},"content":"        System.out.println(\"Hello I am Lania! How may Lania be of assistance?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"nguyiyang"},"content":"        System.out.println(\"Enter \u0027bye\u0027 to exit\");","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nguyiyang"},"content":"        return message;","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"nguyiyang"},"content":"     * Displays an exit message.","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"nguyiyang"},"content":"     * @return The message displayed to user concatenated as a string.","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"nguyiyang"},"content":"    public String showExitMessage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"nguyiyang"},"content":"        String message \u003d \"Bye. Lania looks forward to seeing you again!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"nguyiyang"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"nguyiyang"},"content":"        return message;","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"nguyiyang"},"content":"     * Message that displays all tasks by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"nguyiyang"},"content":"     * @param tasks The user\u0027s list of tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"nguyiyang"},"content":"     * @return The message displayed to user concatenated as a string.","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"nguyiyang"},"content":"    public String showListMessage(TaskList tasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"nguyiyang"},"content":"        String message \u003d \"You have the following task(s):\";","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"nguyiyang"},"content":"        System.out.println(\"You have the following task(s):\");","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"nguyiyang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"nguyiyang"},"content":"            message \u003d message + \"\\n\" + (i + 1) + \".\" + tasks.get(i).toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"nguyiyang"},"content":"            System.out.println(i + 1 + \".\" + tasks.get(i));","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"nguyiyang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"nguyiyang"},"content":"        return message;","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"nguyiyang"},"content":"     * Message that shows after the user completes a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"nguyiyang"},"content":"     * @param tasks The user\u0027s list of tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"nguyiyang"},"content":"     * @param i The index of the task the user has completed.","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"nguyiyang"},"content":"     * @return The message displayed to user concatenated as a string.","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"nguyiyang"},"content":"    public String showCompleteMessage(TaskList tasks, int i) {","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"nguyiyang"},"content":"        String message \u003d \"Good job! Lania has marked this task as done:\";","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"nguyiyang"},"content":"        message \u003d message + \"\\n\" + tasks.get(i).toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"nguyiyang"},"content":"        System.out.println(\"Good job! Lania has marked this task as done:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"nguyiyang"},"content":"        System.out.println(tasks.get(i));","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"nguyiyang"},"content":"        return message;","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"nguyiyang"},"content":"     * Message that shows after the user deletes a task.","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"nguyiyang"},"content":"     * @param tasks taskList Contains the user\u0027s task list.","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"nguyiyang"},"content":"     * @param task Index of the task the user has deleted.","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"nguyiyang"},"content":"     * @return The message displayed to user concatenated as a string.","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"nguyiyang"},"content":"    public String showRemoveMessage(TaskList tasks, Task task) {","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"nguyiyang"},"content":"        String message \u003d \"Ok, Lania has removed this task:\";","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"nguyiyang"},"content":"        message \u003d message + \"\\n\" + task.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"nguyiyang"},"content":"        message \u003d message + \"\\n\" + \"Great! Now you have \"","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"nguyiyang"},"content":"                + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in your list.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"nguyiyang"},"content":"        System.out.println(\"Ok, Lania has removed this task:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"nguyiyang"},"content":"        System.out.println(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"nguyiyang"},"content":"        System.out.println(\"Great! Now you have \"","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"nguyiyang"},"content":"                + tasks.size() + (tasks.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in your list.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"nguyiyang"},"content":"        return message;","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"nguyiyang"},"content":"     * Message that indicates wrong date/time format.","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"nguyiyang"},"content":"     * @return The message displayed to user as a string.","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":110,"author":{"gitId":"nguyiyang"},"content":"    public String showDateTimeException() {","lastModifiedDate":"2021-08-31"},{"lineNumber":111,"author":{"gitId":"nguyiyang"},"content":"        String message \u003d \"Lania does not understand this date/time format. Please try again\";","lastModifiedDate":"2021-08-31"},{"lineNumber":112,"author":{"gitId":"nguyiyang"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"nguyiyang"},"content":"        return message;","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":117,"author":{"gitId":"nguyiyang"},"content":"     * Message that indicates invalid command.","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":119,"author":{"gitId":"nguyiyang"},"content":"     * @return The message displayed to user as a string.","lastModifiedDate":"2021-08-31"},{"lineNumber":120,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"nguyiyang"},"content":"    public String showLaniaException(LaniaException e) {","lastModifiedDate":"2021-08-31"},{"lineNumber":122,"author":{"gitId":"nguyiyang"},"content":"        System.out.println(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"nguyiyang"},"content":"        return e.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":127,"author":{"gitId":"nguyiyang"},"content":"     * Message that indicates error loading the file.","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":129,"author":{"gitId":"nguyiyang"},"content":"     * @return The message displayed to user as a string.","lastModifiedDate":"2021-08-31"},{"lineNumber":130,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":131,"author":{"gitId":"nguyiyang"},"content":"    public String showError() {","lastModifiedDate":"2021-08-31"},{"lineNumber":132,"author":{"gitId":"nguyiyang"},"content":"        String message \u003d \"Lania encountered an error while loading the file.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":133,"author":{"gitId":"nguyiyang"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"nguyiyang"},"content":"        return message;","lastModifiedDate":"2021-08-31"},{"lineNumber":135,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"nguyiyang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nguyiyang":136}},{"path":"src/main/java/lania/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"import lania.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"import lania.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"import lania.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":"import lania.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":" * The command representing the scenario where the user","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":" * wants to add a task.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"    private Task task;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"nguyiyang"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"nguyiyang"},"content":"     * Adds the given task to the list of tasks, saves the resulting","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"nguyiyang"},"content":"     * list of tasks into hard drive and displays corresponding message.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"nguyiyang"},"content":"     * @param tasks The user\u0027s list of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"nguyiyang"},"content":"     * @param storage The object dealing with loading and storing of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"nguyiyang"},"content":"     * @param ui The object dealing with user interactions.","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"nguyiyang"},"content":"     * @return The message displayed by executing the update command.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"nguyiyang"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"nguyiyang"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"nguyiyang"},"content":"        tasks.update(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"nguyiyang"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"nguyiyang"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"nguyiyang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"nguyiyang"},"content":"            ui.showError();","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"nguyiyang"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"nguyiyang"},"content":"        return ui.showUpdateMessage(tasks, task);","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"nguyiyang"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"nguyiyang":41}},{"path":"src/main/java/lania/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"import lania.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"import lania.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"import lania.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":" * Abstract class that represents various types of commands.","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"    /** Whether the command is an exit command */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"     * Indicates whether the command is an exit command.","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":"     * @return True if the command is an ExitCommand, false if otherwise.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"nguyiyang"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"nguyiyang"},"content":"        return this.isExit;","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"nguyiyang"},"content":"     * Performs different executions depending on the type of Command.","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"nguyiyang"},"content":"     * @param tasks The user\u0027s list of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"nguyiyang"},"content":"     * @param storage The object dealing with loading and storing of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"nguyiyang"},"content":"     * @param ui The object dealing with user interactions.","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"nguyiyang"},"content":"     * @return The message displayed by executing the corresponding command.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"nguyiyang"},"content":"    public abstract String execute(TaskList tasks, Storage storage, Ui ui);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"nguyiyang"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"nguyiyang":33}},{"path":"src/main/java/lania/command/CompleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"import lania.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"import lania.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"import lania.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":" * The command representing the scenario where the user","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":" * wants to mark a task as done.","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"public class CompleteCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"    private int index;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":"    public CompleteCommand(int index) {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"nguyiyang"},"content":"     * Marks the task at the given index as done, saves the resulting","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"nguyiyang"},"content":"     * list of tasks into hard drive and displays corresponding message.","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"nguyiyang"},"content":"     * @param tasks The user\u0027s list of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"nguyiyang"},"content":"     * @param storage The object dealing with loading and storing of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"nguyiyang"},"content":"     * @param ui The object dealing with user interactions.","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"nguyiyang"},"content":"     * @return The message displayed by executing the done command.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"nguyiyang"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"nguyiyang"},"content":"    public String execute (TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"nguyiyang"},"content":"        tasks.complete(index);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"nguyiyang"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"nguyiyang"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"nguyiyang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"nguyiyang"},"content":"            ui.showError();","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"nguyiyang"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"nguyiyang"},"content":"        return ui.showCompleteMessage(tasks, index - 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"nguyiyang"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"nguyiyang":40}},{"path":"src/main/java/lania/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"import lania.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"import lania.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"import lania.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":" * The command representing the scenario where the user","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":" * wants to delete a task.","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"    private int index;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"nguyiyang"},"content":"     * Deletes the given task to the list of tasks, saves the resulting","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"nguyiyang"},"content":"     * list of tasks into hard drive and displays corresponding message.","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"nguyiyang"},"content":"     * @param tasks The user\u0027s list of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"nguyiyang"},"content":"     * @param storage The object dealing with loading and storing of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"nguyiyang"},"content":"     * @param ui The object dealing with user interactions.","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"nguyiyang"},"content":"     * @return The message displayed by executing the delete command.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"nguyiyang"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"nguyiyang"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"nguyiyang"},"content":"        String message \u003d ui.showRemoveMessage(tasks, tasks.remove(index));","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"nguyiyang"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"nguyiyang"},"content":"            storage.save(tasks);","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"nguyiyang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"nguyiyang"},"content":"            ui.showError();","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"nguyiyang"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"nguyiyang"},"content":"        return message;","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"nguyiyang"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"nguyiyang":40}},{"path":"src/main/java/lania/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"import lania.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"import lania.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"import lania.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":" * The command representing the scenario where the user","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":" * wants to exit the program.","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"     * Sets isExit to true and displays corresponding message.","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"     * @param tasks The user\u0027s list of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":"     * @param storage The object dealing with loading and storing of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":"     * @param ui The object dealing with user interactions.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"nguyiyang"},"content":"     * @return The message displayed by executing the exit command.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"nguyiyang"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"nguyiyang"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"nguyiyang"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"nguyiyang"},"content":"        return ui.showExitMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"nguyiyang"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"nguyiyang":26}},{"path":"src/main/java/lania/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"import lania.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"import lania.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"import lania.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":" * The command representing the scenario where the user","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":" * wants to find tasks matching the given input.","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"    private String keyword;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"nguyiyang"},"content":"     * Displays tasks that match the given keyword.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"nguyiyang"},"content":"     * @param tasks The user\u0027s list of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"nguyiyang"},"content":"     * @param storage The object dealing with loading and storing of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"nguyiyang"},"content":"     * @param ui The object dealing with user interactions.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"nguyiyang"},"content":"     * @return The message displayed by executing the find command.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"nguyiyang"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"nguyiyang"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"nguyiyang"},"content":"        TaskList temp \u003d tasks.find(keyword);","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"nguyiyang"},"content":"        return ui.showListMessage(temp);","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"nguyiyang"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"nguyiyang":32}},{"path":"src/main/java/lania/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"import lania.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"import lania.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"import lania.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":" * The command representing the scenario where the user","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":" * wants to view the list of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"     * Diplays the user\u0027s list of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"     * @param tasks The user\u0027s list of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":"     * @param storage The object dealing with loading and storing of tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":"     * @param ui The object dealing with user interactions.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"nguyiyang"},"content":"     * @return The message displayed by executing the list command.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"nguyiyang"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"nguyiyang"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"nguyiyang"},"content":"        return ui.showListMessage(tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"nguyiyang"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"nguyiyang":25}},{"path":"src/main/java/lania/exception/LaniaEmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":" * Represents exception handling for invalid inputs with an empty description of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"public class LaniaEmptyDescriptionException extends LaniaException {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"     * Constructor for the LaniaEmptyDescriptionException class.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"     * @param message The error message","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"    public LaniaEmptyDescriptionException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"        super(\"The description of \" + message + \" cannot be empty\");","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nguyiyang":16}},{"path":"src/main/java/lania/exception/LaniaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":" * Represents special type of exception by the Lania class to handle invalid inputs.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"public class LaniaException extends Exception {","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"     * Constructor for the LaniaException class.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"     * @param message The error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"    public LaniaException(String message) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":"     * A string representation of the exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nguyiyang"},"content":"     * @return The string representation of the exception.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nguyiyang"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"nguyiyang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"nguyiyang"},"content":"        return \"Oh no!! \" + getMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"nguyiyang"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nguyiyang":26}},{"path":"src/main/java/lania/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":" * Represents the task class with a deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"    /** Deadline of a task */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"    protected String by;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"    /** Formatted deadline of a task */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":"     * Constructor for Deadline which consists of description and deadline of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"nguyiyang"},"content":"     * @param description The name of the deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"nguyiyang"},"content":"     * @param by The eadline of the task.","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"nguyiyang"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"nguyiyang"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"nguyiyang"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"nguyiyang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nguyiyang"},"content":"        this.dateTime \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nguyiyang"},"content":"     * Converts the deadline object to a string representation.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"nguyiyang"},"content":"     * @return The string representation of the deadline object.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nguyiyang"},"content":"    public String getStringFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nguyiyang"},"content":"        return \"D|\" + this.getStatusIcon() + \"|\" + this.description + \"|\" + this.by + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"nguyiyang"},"content":"     * Another string representation of the deadline object.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nguyiyang"},"content":"     * @return A string representation of the deadline object.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nguyiyang"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"nguyiyang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"nguyiyang"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nguyiyang"},"content":"                + dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"nguyiyang"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"nguyiyang":48}},{"path":"src/main/java/lania/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":" * Represents the task class as an event.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"    /** Date and time of an event */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"    protected String at;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"    /** Formatted date and time of a task */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":"     * Constructor for Event which consists of description and time of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"nguyiyang"},"content":"     * @param description The name of the deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nguyiyang"},"content":"     * @param at The date and time of the task.","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"nguyiyang"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"nguyiyang"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"nguyiyang"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"nguyiyang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nguyiyang"},"content":"        this.dateTime \u003d LocalDateTime.parse(at, formatter);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nguyiyang"},"content":"     * Converts the event object to a string representation.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"nguyiyang"},"content":"     * @return The string representation of the event object.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nguyiyang"},"content":"    public String getStringFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nguyiyang"},"content":"        return \"E|\" + this.getStatusIcon() + \"|\" + this.description + \"|\" + this.at + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"nguyiyang"},"content":"     * Another string representation of the event object.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nguyiyang"},"content":"     * @return A string representation of the event object.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nguyiyang"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"nguyiyang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"nguyiyang"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nguyiyang"},"content":"                + dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"nguyiyang"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"nguyiyang":48}},{"path":"src/main/java/lania/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":" * Represents the task that a user has.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":"    /** String containing the name of task */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"    /** Whether the task is done */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"     * Constructor for Task which consists of a description and whether the task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"     * @param description The name of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"nguyiyang"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"nguyiyang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"nguyiyang"},"content":"     * Gets an icon representation depending on whether task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"nguyiyang"},"content":"     * @return An indicator for whether the task is done.","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"nguyiyang"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"nguyiyang"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"nguyiyang"},"content":"     * Completes a task and set its isDone to true.","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"nguyiyang"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"nguyiyang"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nguyiyang"},"content":"     * Converts the task object to a string representation","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nguyiyang"},"content":"     * to be stored in the hard disk.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nguyiyang"},"content":"     * @return A string representation of the task object.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"nguyiyang"},"content":"    public abstract String getStringFormat();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"nguyiyang"},"content":"     * Another string representation of the task object","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"nguyiyang"},"content":"     * which is displayed to the users.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"nguyiyang"},"content":"     * @return A string representation of the task object.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"nguyiyang"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"nguyiyang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"nguyiyang"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"nguyiyang"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"nguyiyang":57}},{"path":"src/main/java/lania/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":" * Represents the user\u0027s list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"    /** ArrayList collection used to contain task list */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"     * Constructor for TaskList. Initialises an empty","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"     * ArrayList of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nguyiyang"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nguyiyang"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nguyiyang"},"content":"    public void update(Task task) {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"nguyiyang"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nguyiyang"},"content":"     * Marks a task in the task list as done","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"nguyiyang"},"content":"     * with the given index.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nguyiyang"},"content":"     * @param i The index of the task to be completed.","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"nguyiyang"},"content":"    public void complete(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"nguyiyang"},"content":"        i--;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"nguyiyang"},"content":"        tasks.get(i).markAsDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nguyiyang"},"content":"     * Removes a task from the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"nguyiyang"},"content":"     * @param i Index of the task to be removed.","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"nguyiyang"},"content":"     * @return The removed task.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"nguyiyang"},"content":"    public Task remove(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"nguyiyang"},"content":"        i--;","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"nguyiyang"},"content":"        Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"nguyiyang"},"content":"        tasks.remove(i);","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"nguyiyang"},"content":"        return task;","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"nguyiyang"},"content":"     * Gets the size of the task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"nguyiyang"},"content":"     * @return The size of task list.","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"nguyiyang"},"content":"    public int size() {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"nguyiyang"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"nguyiyang"},"content":"     * Gets the task specified by the index.","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"nguyiyang"},"content":"     * @param i Index of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"nguyiyang"},"content":"     * @return The task at index i.","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"nguyiyang"},"content":"    public Task get(int i) {","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"nguyiyang"},"content":"        return tasks.get(i);","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"nguyiyang"},"content":"     * Creates a new TaskList consisting only of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"nguyiyang"},"content":"     * that matches the keyword by looping through the","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"nguyiyang"},"content":"     * current list.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"nguyiyang"},"content":"     * @param s The keyword to match.","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"nguyiyang"},"content":"     * @return The new task list with only matching tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"nguyiyang"},"content":"    public TaskList find(String s) {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"nguyiyang"},"content":"        TaskList tempTasks \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"nguyiyang"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"nguyiyang"},"content":"            if (tasks.get(i).toString().contains(s)) {","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"nguyiyang"},"content":"                tempTasks.update(tasks.get(i));","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"nguyiyang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"nguyiyang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"nguyiyang"},"content":"        return tempTasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"nguyiyang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nguyiyang":90}},{"path":"src/main/java/lania/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"package lania.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":" * Represents the task class as a todo.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"     * Constructor for Todo which consists of description.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"     * @param description The name of the todo.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":"     * Converts the todo object to a string representation.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nguyiyang"},"content":"     * @return The string representation of the todo object.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nguyiyang"},"content":"    public String getStringFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nguyiyang"},"content":"        return \"T|\" + this.getStatusIcon() + \"|\" + this.description + \"\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nguyiyang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nguyiyang"},"content":"     * Another string representation of the todo object.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nguyiyang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nguyiyang"},"content":"     * @return A string representation of the todo object.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nguyiyang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nguyiyang"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"nguyiyang"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"nguyiyang"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"nguyiyang"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"nguyiyang":35}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"nguyiyang":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"lania.MainWindow\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"nguyiyang"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"nguyiyang":19}},{"path":"src/test/java/LaniaTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"import lania.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"import lania.exception.LaniaEmptyDescriptionException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"import lania.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":"import lania.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"import lania.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"import lania.task.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"public class LaniaTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nguyiyang"},"content":"    public void taskStringConversion() {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nguyiyang"},"content":"        Task a \u003d new Todo(\"sleep\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"nguyiyang"},"content":"        Task b \u003d new Deadline(\"sleep\", \"24-08-2021 18:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nguyiyang"},"content":"        Task c \u003d new Event(\"sleep\", \"24-08-2021 18:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":"        assertEquals(a.toString(), \"[T][ ] sleep\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"nguyiyang"},"content":"        assertEquals(b.toString(), \"[D][ ] sleep (by: Aug 24 2021 6:00PM)\");","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nguyiyang"},"content":"        assertEquals(c.toString(), \"[E][ ] sleep (at: Aug 24 2021 6:00PM)\");","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nguyiyang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nguyiyang"},"content":"    public void parseTaskDescription_description_success() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nguyiyang"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"nguyiyang"},"content":"        String a \u003d \"deadline read book /by 24-08-2021 18:00\";","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"nguyiyang"},"content":"        String b \u003d \"event read book /by 24-08-2021 18:00\";","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"nguyiyang"},"content":"        String c \u003d \"todo read book\";","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"nguyiyang"},"content":"        assertEquals(parser.parseTaskDescription(a), \"read book /by 24-08-2021 18:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"nguyiyang"},"content":"        assertEquals(parser.parseTaskDescription(b), \"read book /by 24-08-2021 18:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"nguyiyang"},"content":"        assertEquals(parser.parseTaskDescription(c), \"read book\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"nguyiyang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"nguyiyang"},"content":"    public void parseTaskDescription_emptyDescription_exceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"nguyiyang"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"nguyiyang"},"content":"        String d \u003d \"todo\";","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"nguyiyang"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"nguyiyang"},"content":"            parser.parseTaskDescription(d);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nguyiyang"},"content":"        } catch (LaniaEmptyDescriptionException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nguyiyang"},"content":"            assertEquals(e.getMessage(), \"The description of todo cannot be empty\");","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nguyiyang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"nguyiyang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nguyiyang"},"content":"    public void parseEventDeadline_dateTime_success() {","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"nguyiyang"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"nguyiyang"},"content":"        String a \u003d \"read book /by 24-08-2021 18:00\";","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"nguyiyang"},"content":"        String b \u003d \"read book /at 24-08-2021 18:00\";","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"nguyiyang"},"content":"        assertEquals(parser.parseDeadline(a)[0], \"read book\");","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"nguyiyang"},"content":"        assertEquals(parser.parseDeadline(a)[1], \"24-08-2021 18:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"nguyiyang"},"content":"        assertEquals(parser.parseEvent(b)[0], \"read book\");","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"nguyiyang"},"content":"        assertEquals(parser.parseEvent(b)[1], \"24-08-2021 18:00\");","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"nguyiyang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"nguyiyang"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"nguyiyang"},"content":"    public void parseEventDeadline_emptyDateTime_exceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"nguyiyang"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"nguyiyang"},"content":"        String c \u003d \"read book\";","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"nguyiyang"},"content":"        String d \u003d \"borrow book\";","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"nguyiyang"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"nguyiyang"},"content":"            parser.parseEvent(c);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"nguyiyang"},"content":"        } catch (LaniaEmptyDescriptionException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"nguyiyang"},"content":"            assertEquals(e.getMessage(), \"The description of date/time cannot be empty\");","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"nguyiyang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"nguyiyang"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"nguyiyang"},"content":"            parser.parseDeadline(d);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"nguyiyang"},"content":"        } catch (LaniaEmptyDescriptionException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"nguyiyang"},"content":"            assertEquals(e.getMessage(), \"The description of date/time cannot be empty\");","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"nguyiyang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"nguyiyang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"nguyiyang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nguyiyang":72}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nguyiyang"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"nguyiyang"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"nguyiyang"},"content":"deadline return book /by 28-12-1999 16:00","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"nguyiyang"},"content":"event project meeting /at 31-02-2010 17:00","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"nguyiyang"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"nguyiyang"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"nguyiyang"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"nguyiyang"},"content":"blah","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"nguyiyang"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"nguyiyang"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"nguyiyang"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"nguyiyang"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"nguyiyang"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"nguyiyang":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"nguyiyang"},"content":"java -classpath ..\\bin lania.Lania \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nguyiyang":1,"-":20}}]
