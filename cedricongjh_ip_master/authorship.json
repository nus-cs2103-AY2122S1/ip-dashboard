[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"cedricongjh"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"cedricongjh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cedricongjh":17,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.Parser;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"/** The class that ties all the operations of Parser, TaskList, Storage together */","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"     * A constructor for Duke","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"     * @param filepath The file path for which the data of Duke resides","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"     * @throws IOException When Duke cannot be initialised due to failure of operating on the file","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"    public Duke(String filepath) throws IOException {","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"        assert filepath !\u003d null;","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"            storage \u003d new Storage(filepath);","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"            storage.createNewFile();","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"     * @param userInput The user\u0027s input","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"     * @return A response based on the user\u0027s input","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"            Command c \u003d Parser.parse(userInput);","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"            return c.execute(tasks, storage);","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"cedricongjh"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"cedricongjh":48,"-":2}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"/** ByeCommand class */","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"    /** Message shown to the user */","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"    public static final String BYE_MESSAGE \u003d \"Bye\";","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for a ByeCommand","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"     * @param userCommand The command the user gives","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"     * @param userArgument The argument (rest of the String after the command)","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"    public ByeCommand(String userCommand, String userArgument) {","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"        super(userCommand, userArgument);","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"     * Method to run when the command is executed","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"     * @return The bye message","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"        return BYE_MESSAGE;","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"cedricongjh":28}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"/** Abstract class which all the commands of duke inherit from */","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"    protected final String userCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"    protected final String userArgument;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"    public final static String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"    public final static String BYE_COMMAND \u003d \"bye\";","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"    public final static String DONE_COMMAND \u003d \"done\";","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"    public final static String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"    public final static String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"    public final static String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"    public final static String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"    public final static String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for a command","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"     * @param userCommand The command the user gives","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"     * @param userArgument The argument (rest of the String after the command)","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"    public Command(String userCommand, String userArgument) {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"        this.userArgument \u003d userArgument;","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"        this.userCommand \u003d userCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"    /** The operations to do on the TaskList and Storage */","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"cedricongjh":35}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.Utils;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.TaskNotFoundException;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"/** Command for deleting a task */","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for a DeleteCommand","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"     * @param userCommand The command the user gives","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"     * @param userArgument The argument (rest of the String after the command)","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"    public DeleteCommand(String userCommand, String userArgument) {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"        super(userCommand, userArgument);","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"     * Deletes the task specified by the user","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"     * @return A string of the deleted task","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"        assert userArgument !\u003d null;","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"        int indexToDelete \u003d Utils.getInputNumber(userArgument);","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"        if (indexToDelete \u003e\u003d tasks.numberOfTasks() || indexToDelete \u003c 0) {","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"        Task removedTask \u003d tasks.getTask(indexToDelete);","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"        storage.deleteTaskFromFile(indexToDelete, tasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"        tasks.removeTask(indexToDelete);","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"        String removedTaskString \u003d String.format(\"I\u0027ve removed this task:\\n%s\\n\", removedTask.toString());","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"        String tasksLeftString \u003d String.format(\"Now you have %d tasks in your list.\\n\", tasks.numberOfTasks());","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"        return removedTaskString + tasksLeftString;","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"cedricongjh":44}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.Utils;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.TaskNotFoundException;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"/** Command for marking a task as done */","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for a DoneCommand","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"     * @param userCommand The command the user gives","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"     * @param userArgument The argument (rest of the String after the command)","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"    public DoneCommand(String userCommand, String userArgument) {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"        super(userCommand, userArgument);","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"     * Marks a Task as done","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"     * @return A String of the task that was marked as done","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"     * @throws DukeException If the specified task cannot be found","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"        assert userArgument !\u003d null;","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"        int done \u003d Utils.getInputNumber(userArgument);","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"        if (done \u003e\u003d tasks.numberOfTasks() || done \u003c 0) {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"        Task doneTask \u003d tasks.getTask(done);","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"        doneTask.markAsDone();","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"        storage.editTaskFromFile(done, tasks);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"        return String.format(\"I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"                + \"%s\\n\", doneTask.toString());","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"cedricongjh":45}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.Utils;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for a FindCommand","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"     * @param userCommand The command the user gives","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"     * @param userArgument The argument (rest of the String after the command)","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"    public FindCommand(String userCommand, String userArgument) {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"        super(userCommand, userArgument);","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"     * Finds the tasks that match the user\u0027s input","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"     * @return A list of tasks that match the user\u0027s input","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"        assert userArgument !\u003d null;","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"        TaskList searchedTasks \u003d tasks.searchTasks(userArgument);","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"        if (searchedTasks.isEmpty()) {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"            return \"No matching tasks.\";","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"        return \"Here are the matching tasks.\\n\" + Utils.showTasks(searchedTasks);","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"cedricongjh":33}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.Utils;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"/** Command for listing Tasks */","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"    private static final String SORT_BY_DATE_ARGUMENT \u003d \"sortByDate\";","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"    private static final String DESCENDING_ARGUMENT \u003d \"desc\";","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for a ListCommand","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"     * @param userCommand The command the user gives","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"     * @param userArgument The argument (rest of the String after the command)","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"    public ListCommand(String userCommand, String userArgument) {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"        super(userCommand, userArgument);","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"     * @return A list of all the Tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"    public String execute(TaskList tasks, Storage storage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"            return \"Currently no tasks!\";","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"        if (userArgument.equals(\"\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"            return showTaskList(tasks);","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"        String[] userArguments \u003d userArgument.split(\" \");","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"        assert userArguments.length \u003e 0;","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"        boolean isSortedByDate \u003d userArguments[0].equals(SORT_BY_DATE_ARGUMENT);","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"        boolean isDescending \u003d false;","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"        boolean hasMoreThanOneArgument \u003d userArguments.length \u003e 1;","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"        if (hasMoreThanOneArgument) {","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"cedricongjh"},"content":"            isDescending \u003d userArguments[1].equals(DESCENDING_ARGUMENT);","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"cedricongjh"},"content":"        if (isSortedByDate) {","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"cedricongjh"},"content":"            return sortTaskListByDate(tasks, isDescending);","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"cedricongjh"},"content":"        return showTaskList(tasks);","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"cedricongjh"},"content":"    private String showTaskList(TaskList tasks) {","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"cedricongjh"},"content":"        return \"Here are your tasks:\\n\" + Utils.showTasks(tasks);","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"cedricongjh"},"content":"    private String sortTaskListByDate(TaskList tasks, boolean isDescending) {","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"cedricongjh"},"content":"        int descending \u003d isDescending ? 1 : -1;","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"cedricongjh"},"content":"        return showTaskList(tasks.sortTasks((firstTask, secondTask) -\u003e {","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"cedricongjh"},"content":"            LocalDate firstTaskDate \u003d firstTask.getDate();","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"cedricongjh"},"content":"            LocalDate secondTaskDate \u003d secondTask.getDate();","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"cedricongjh"},"content":"            if (firstTaskDate \u003d\u003d null \u0026\u0026 secondTaskDate \u003d\u003d null) {","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"cedricongjh"},"content":"                return 0;","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"cedricongjh"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"cedricongjh"},"content":"            if (firstTaskDate \u003d\u003d null) {","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"cedricongjh"},"content":"                return 1;","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"cedricongjh"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"cedricongjh"},"content":"            if (secondTaskDate \u003d\u003d null) {","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"cedricongjh"},"content":"                return -1;","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"cedricongjh"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"cedricongjh"},"content":"            return firstTaskDate.isBefore(secondTaskDate)","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"cedricongjh"},"content":"                    ? descending","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"cedricongjh"},"content":"                    : firstTaskDate.isAfter(secondTaskDate)","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"cedricongjh"},"content":"                        ? -descending","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"cedricongjh"},"content":"                        : 0;","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"cedricongjh"},"content":"        }));","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"cedricongjh":87}},{"path":"src/main/java/duke/command/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.command;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import static duke.utils.Utils.splitBetween;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.Storage;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.TaskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.TaskFormatEmptyException;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"/** Command for creating a Task */","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"public class TaskCommand extends Command {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for a TaskCommand","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"     * @param userCommand The command the user gives","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"     * @param userArgument The argument (rest of the String after the command)","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"    public TaskCommand(String userCommand, String userArgument) {","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"        super(userCommand, userArgument);","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"     * Creates a task with the type specified by the user","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"     * @return A string of the task created","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"     * @throws DukeException If the task cannot be created","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"    public String execute(TaskList tasks, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"        assert userArgument !\u003d null;","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"        if (userArgument.equals(\"\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"            throw new TaskFormatEmptyException();","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"        switch (userCommand) {","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"        case Command.TODO_COMMAND:","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"            tasks.addTask(new Todo(userArgument, false));","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"            break;","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"        case Command.DEADLINE_COMMAND:","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"            String[] deadlineInfo \u003d splitBetween(userArgument, \"/by\");","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"            tasks.addTask(new Deadline(deadlineInfo[0], deadlineInfo[1], false));","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"cedricongjh"},"content":"            break;","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"cedricongjh"},"content":"        case Command.EVENT_COMMAND:","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"cedricongjh"},"content":"            String[] eventInfo \u003d splitBetween(userArgument, \"/at\");","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"cedricongjh"},"content":"            tasks.addTask(new Event(eventInfo[0], eventInfo[1], false));","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"cedricongjh"},"content":"            break;","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"cedricongjh"},"content":"        default:","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"cedricongjh"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"cedricongjh"},"content":"        return addTask(tasks.getTask(tasks.numberOfTasks() - 1), storage, tasks);","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"cedricongjh"},"content":"    private static String addTask(Task newTask, Storage storage, TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"cedricongjh"},"content":"        storage.saveTaskToFile(newTask);","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"cedricongjh"},"content":"        String addedTask \u003d String.format(\"Got it, I\u0027ve added this task:\\n %s\\n\", newTask.toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"cedricongjh"},"content":"        String numberOfTasks \u003d String.format(\"Now you have %d tasks in your list.\\n\", tasks.numberOfTasks());","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"cedricongjh"},"content":"        return addedTask + numberOfTasks;","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"cedricongjh":64}},{"path":"src/main/java/duke/exception/CreateFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"/** Exception to be thrown when a file is unable to be created */","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"public class CreateFileException extends IOException {","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for a CreateFileException","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"    public CreateFileException() {","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"        super(\"Failed to create file, please restart the application.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"cedricongjh":14}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"/** Parent class of all the Exceptions in Duke */","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for a DukeException","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"     * @param errorMessage Error message for the Exception","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"cedricongjh":13}},{"path":"src/main/java/duke/exception/IncorrectFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"/** Exception to be thrown when a command has an incorrect format */","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"public class IncorrectFormatException extends DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for a IncorrectFormatException","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"    public IncorrectFormatException() {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"        super(\"Incorrect format for command.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"cedricongjh":12}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"/** Exception to be thrown when a command is invalid */","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for a InvalidCommandException","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"        super(\"Sorry I don\u0027t understand this command.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"cedricongjh":12}},{"path":"src/main/java/duke/exception/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.exception;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"/** Exception to be thrown when a date has the incorrect format */","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"public class InvalidDateFormatException extends DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for an InvalidDateFormatException","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"    public InvalidDateFormatException() {","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"        super(\"Invalid date format!\");","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"cedricongjh":12}},{"path":"src/main/java/duke/exception/InvalidTaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"/** Exception to be thrown when there is an invalid task type from the data file */","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"public class InvalidTaskTypeException extends DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for an InvalidTaskTypeException","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"     * @param task The String of the task that has an invalid task type","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"    public InvalidTaskTypeException(String task) {","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"        super(String.format(\"Incorrect task type for the following task in the file:\\n %s\", task));","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"cedricongjh":13}},{"path":"src/main/java/duke/exception/LoadFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"/** Exception to be thrown when tasks from the file cannot be loaded */","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"public class LoadFileException extends DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for a LoadFileException","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"    public LoadFileException() {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"        super(\"Unable to load tasks from file.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"cedricongjh":12}},{"path":"src/main/java/duke/exception/NoNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"/** Exception to be thrown when a number is expected after a command but is not present */","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"public class NoNumberException extends DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for a NoNumberException","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"    public NoNumberException() {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"        super(\"Please enter a number after the command.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"cedricongjh":12}},{"path":"src/main/java/duke/exception/NoTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"/** Exception to be thrown when a time is expected in the creation of a task but is not present */","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"public class NoTimeException extends DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for a NoTimeException","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"    public NoTimeException() {","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"        super(\"Please specify a time for the task in YYYY-MM-DD (e.g. 2021-09-14)\");","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"cedricongjh":11}},{"path":"src/main/java/duke/exception/TaskFormatEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"/** Exception to be thrown in the creation of a Task when description is not provided */","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"public class TaskFormatEmptyException extends DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for a TaskFormatEmptyException","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"    public TaskFormatEmptyException() {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"        super(\"The description of a task cannot be empty, please try again\");","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"cedricongjh":12}},{"path":"src/main/java/duke/exception/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"/** Exception to be thrown when a task cannot be found */","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"public class TaskNotFoundException extends DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for a TaskNotFoundException","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"    public TaskNotFoundException() {","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"        super(\"Task does not exist!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"cedricongjh":11}},{"path":"src/main/java/duke/exception/UpdateFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"/** Exception to be thrown when a file is unable to be updated */","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"public class UpdateFileException extends DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for an UpdateFileException","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"    public UpdateFileException() {","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"        super(\"Failed to update file. Please restart the application.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"cedricongjh":11}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.gui;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"    private final static String DUKE_DIALOG_STYLE \u003d \"-fx-background-color: #b5bcbd;\";","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"        this.cropToCircle();","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"cedricongjh"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"cedricongjh"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"cedricongjh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"cedricongjh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"cedricongjh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"cedricongjh"},"content":"        dialog.setStyle(DUKE_DIALOG_STYLE);","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"cedricongjh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"cedricongjh"},"content":"     * @param text Text to place in the DialogBox","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"cedricongjh"},"content":"     * @param img Image of the User","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"cedricongjh"},"content":"     * @return A DialogBox with the text and image","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"cedricongjh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"cedricongjh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"cedricongjh"},"content":"     * @param text Text to place in the DialogBox","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"cedricongjh"},"content":"     * @param img Image of Duke","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"cedricongjh"},"content":"     * @return A DialogBox with the text and image, flipped vertically","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"cedricongjh"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"cedricongjh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"cedricongjh"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"cedricongjh"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"cedricongjh"},"content":"     * Crops the displayPicture into a circle.","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"cedricongjh"},"content":"     * (Taken from @yourally2)","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"cedricongjh"},"content":"    private void cropToCircle() {","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"cedricongjh"},"content":"        Circle circle \u003d new Circle(displayPicture.getFitWidth() / 2, displayPicture.getFitHeight() / 2, 20);","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"cedricongjh"},"content":"        displayPicture.setClip(circle);","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"cedricongjh":87}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.gui;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"cedricongjh":12}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.gui;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"    private final static String FILE_PATH \u003d \"./data/tasks.txt\";","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"    private final static String MAIN_WINDOW_PATH \u003d \"/view/MainWindow.fxml\";","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"     * @param stage The JavaFX stage","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(MAIN_WINDOW_PATH));","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"            Duke duke \u003d new Duke(FILE_PATH);","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"cedricongjh":38}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.gui;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import static duke.command.ByeCommand.BYE_MESSAGE;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(\"Welcome\", dukeImage));","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"cedricongjh"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"cedricongjh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"cedricongjh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"cedricongjh"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"cedricongjh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"cedricongjh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"cedricongjh"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"cedricongjh"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"cedricongjh"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"cedricongjh"},"content":"        // Idea and code from alissayarmantho\u0027s issue","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"cedricongjh"},"content":"        if (response.equals(BYE_MESSAGE)) {","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"cedricongjh"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"cedricongjh":63}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"/** Deadline class that inherits from Task */","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for a Deadline","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"     * @param description Description of the deadline","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"     * @param date Date of the deadline","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"     * @param done Whether the deadline is done","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"     * @throws DukeException When the deadline cannot be created","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"    public Deadline(String description, String date, boolean done) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"        super(description, date, done);","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"     * @return String of the deadline data for saving in tasks.txt","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"    public String toFileData() {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"        return String.join(Task.STORAGE_DELIMITER, Task.DEADLINE_ALPHABET, super.toFileData(), super.dateToString());","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"     * @return String representation of the Deadline","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"        return String.format(\"%s%s (by: %s)\",","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"                super.wrapTaskAlphabet(Task.DEADLINE_ALPHABET),","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"                super.toString(),","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"                super.getDateString());","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"cedricongjh":37}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"/** Event class that inherits from Task */","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for an Event","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"     * @param description Description of the event","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"     * @param date Date of the event","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"     * @param done Whether the event is done","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"     * @throws DukeException When the event cannot be created","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"    public Event(String description, String date, boolean done) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"        super(description, date, done);","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"     * @return String of the event data for saving in tasks.txt","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"    public String toFileData() {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"        return String.join(Task.STORAGE_DELIMITER, Task.EVENT_ALPHABET, super.toFileData(), super.dateToString());","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"     * @return String representation of the Event","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"        return String.format(\"%s%s (at: %s)\",","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"                super.wrapTaskAlphabet(Task.EVENT_ALPHABET),","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"                super.toString(),","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"                super.getDateString());","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"cedricongjh":37}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.InvalidDateFormatException;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"/** Task class that makes up objects in the TaskList */","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"    private String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"    private LocalDate date \u003d null;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"    /* Alphabetical representation of the Task types */","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"    public final static String TODO_ALPHABET \u003d \"T\";","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"    public final static String DEADLINE_ALPHABET \u003d \"D\";","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"    public final static String EVENT_ALPHABET \u003d \"E\";","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"    /* String representation of whether the task is done, for saving into the .txt file */","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"    public final static String DONE_STRING \u003d \"1\";","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"    public final static String NOT_DONE_STRING \u003d \"0\";","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"    /* Index of the attributes saved in the .txt file */","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"    public final static int TASK_TYPE_INDEX \u003d 0;","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"    public final static int TASK_DONE_INDEX \u003d 1;","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"    public final static int TASK_DESCRIPTION_INDEX \u003d 2;","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"    public final static int TASK_DATE_INDEX \u003d 3;","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"    /* The delimiter between the attributes for the task in the .txt file */","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"    public final static String STORAGE_DELIMITER \u003d \",\";","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"     * A constructor for a Task","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"     * @param description The description of the Task","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"     * @param done Whether the Task is done","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"    public Task(String description, boolean done) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"cedricongjh"},"content":"     * A constructor for a Task","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"cedricongjh"},"content":"     * @param description The description of the Task","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"cedricongjh"},"content":"     * @param date The date associated with the Task","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"cedricongjh"},"content":"     * @param done Whether the task is done","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"cedricongjh"},"content":"     * @throws DukeException When the date has an incorrect format","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"cedricongjh"},"content":"    public Task(String description, String date, boolean done) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"cedricongjh"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"cedricongjh"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"cedricongjh"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"cedricongjh"},"content":"            this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"cedricongjh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"cedricongjh"},"content":"            throw new InvalidDateFormatException();","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"cedricongjh"},"content":"     * Marks the task as done","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"cedricongjh"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"cedricongjh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"cedricongjh"},"content":"    private String getDoneSymbol() {","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"cedricongjh"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"cedricongjh"},"content":"    private String getDoneString() {","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"cedricongjh"},"content":"        return isDone ? DONE_STRING : NOT_DONE_STRING;","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"cedricongjh"},"content":"     * @return String of the task data for saving in tasks.txt","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"cedricongjh"},"content":"    public String toFileData() {","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"cedricongjh"},"content":"        return String.join(STORAGE_DELIMITER, getDoneString(), description);","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"cedricongjh"},"content":"     * Gets the date of the task in the format of DD Month-Name YYYY","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"cedricongjh"},"content":"     * e.g. 1 January 2021","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"cedricongjh"},"content":"     * @return String representation of the date in the format","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"cedricongjh"},"content":"    public String getDateString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"cedricongjh"},"content":"        return this.date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"cedricongjh"},"content":"     * @return String of the date in the format of YYYY-MM-DD","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"cedricongjh"},"content":"    public String dateToString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"cedricongjh"},"content":"        return this.date.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"cedricongjh"},"content":"     * @return The LocalDate of the Task","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"cedricongjh"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"cedricongjh"},"content":"        return date;","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"cedricongjh"},"content":"     * Wraps the task alphabet in square brackets","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"cedricongjh"},"content":"     * @param alphabet Alphabetical representation of the Task","lastModifiedDate":"2021-09-07"},{"lineNumber":113,"author":{"gitId":"cedricongjh"},"content":"     * @return The alphabet wrapped in square brackets","lastModifiedDate":"2021-09-07"},{"lineNumber":114,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"cedricongjh"},"content":"    public String wrapTaskAlphabet(String alphabet) {","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"cedricongjh"},"content":"        return String.format(\"[%s]\", alphabet);","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":120,"author":{"gitId":"cedricongjh"},"content":"     * @return The String representation of the Task","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":122,"author":{"gitId":"cedricongjh"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"cedricongjh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"cedricongjh"},"content":"        return String.format(\"[%s] %s\", getDoneSymbol(), description);","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"cedricongjh":126}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for the Task","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"     * @param description Description of the Task","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"     * @param done Whether the Task is done","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"    public Todo(String description, boolean done) {","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"        super(description, done);","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"     * @return String of the task data for saving in tasks.txt","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"    public String toFileData() {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"        return String.join(Task.STORAGE_DELIMITER, Task.TODO_ALPHABET, super.toFileData());","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"     * @return String representation of the Task","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"        return super.wrapTaskAlphabet(Task.TODO_ALPHABET) + super.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"cedricongjh":29}},{"path":"src/main/java/duke/utils/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.utils;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"import duke.command.TaskCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"/** Parser class to parse a user\u0027s input */","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"     * Gets the command entered by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"     * @param userInput The string keyed in by the user","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"     * @return The first word keyed in by the user","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    public static String getUserCommand(String userInput) {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"        if (userInput.indexOf(\u0027 \u0027) \u003c\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"            return userInput;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"        return userInput.substring(0, userInput.indexOf(\u0027 \u0027));","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"     * Gets the argument entered by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"     * @param userInput The string keyed in by the user","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"     * @return The arguments entered by the user (all words after the first word)","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"    public static String getUserArgument(String userInput) {","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"        if (userInput.indexOf(\u0027 \u0027) \u003c\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"            return \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"            return userInput.substring(userInput.indexOf(\u0027 \u0027) + 1).trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"            return \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"cedricongjh"},"content":"     * Parses a user\u0027s input and returns the appropriate command for Duke to execute","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"cedricongjh"},"content":"     * @param userInput The user\u0027s String input","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"cedricongjh"},"content":"     * @return The appropriate Command to execute based on the user\u0027s input","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"cedricongjh"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"cedricongjh"},"content":"        String userCommand \u003d getUserCommand(userInput);","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"cedricongjh"},"content":"        String userArgument \u003d getUserArgument(userInput);","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"cedricongjh"},"content":"        switch (userCommand) {","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"cedricongjh"},"content":"        case Command.LIST_COMMAND:","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"cedricongjh"},"content":"            return new ListCommand(userCommand, userArgument);","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"cedricongjh"},"content":"        case Command.BYE_COMMAND:","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"cedricongjh"},"content":"            return new ByeCommand(userCommand, userArgument);","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"cedricongjh"},"content":"        case Command.DONE_COMMAND:","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"cedricongjh"},"content":"            return new DoneCommand(userCommand, userArgument);","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"cedricongjh"},"content":"        case Command.TODO_COMMAND:","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"cedricongjh"},"content":"        case Command.DEADLINE_COMMAND:","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"cedricongjh"},"content":"        case Command.EVENT_COMMAND:","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"cedricongjh"},"content":"            return new TaskCommand(userCommand, userArgument);","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"cedricongjh"},"content":"        case Command.DELETE_COMMAND:","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"cedricongjh"},"content":"            return new DeleteCommand(userCommand, userArgument);","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"cedricongjh"},"content":"        case Command.FIND_COMMAND:","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"cedricongjh"},"content":"            return new FindCommand(userCommand, userArgument);","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"cedricongjh"},"content":"        default:","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"cedricongjh"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"cedricongjh":75}},{"path":"src/main/java/duke/utils/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.utils;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.CreateFileException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.InvalidTaskTypeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.LoadFileException;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.UpdateFileException;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"/** Storage class for saving tasks to a user\u0027s file system */","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"     * Constructor for the Storage class","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"     * @param filePath The file path of the file that the Storage does operations on","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"     * Loads tasks from the specified filePath","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"     * @return An ArrayList of Tasks loaded from the file.","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"     * @throws DukeException throws exception when Tasks cannot be loaded","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"            ArrayList\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"            File taskFile \u003d new File(this.filePath);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"            if (!taskFile.createNewFile()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"                Scanner fileReader \u003d new Scanner(taskFile);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"                while (fileReader.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"                    String data \u003d fileReader.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"                    res.add(dataToTask(data));","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"cedricongjh"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"cedricongjh"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"cedricongjh"},"content":"            return res;","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"cedricongjh"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"cedricongjh"},"content":"            throw new LoadFileException();","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"cedricongjh"},"content":"     * Converts the data in the text file to a Task","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"cedricongjh"},"content":"     * @param str A line representing a task in the text file E.g. T,1,TODO1","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"cedricongjh"},"content":"     * @return A Task instance built from str","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"cedricongjh"},"content":"     * @throws DukeException When the Task cannot be built","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"cedricongjh"},"content":"    private static Task dataToTask(String str) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"cedricongjh"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"cedricongjh"},"content":"            String delimiter \u003d Task.STORAGE_DELIMITER;","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"cedricongjh"},"content":"            String[] taskArr \u003d str.split(delimiter);","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"cedricongjh"},"content":"            String taskType \u003d taskArr[Task.TASK_TYPE_INDEX];","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"cedricongjh"},"content":"            boolean isTaskDone \u003d taskArr[Task.TASK_DONE_INDEX].equals(Task.DONE_STRING);","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"cedricongjh"},"content":"            String taskDescription \u003d taskArr[Task.TASK_DESCRIPTION_INDEX];","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"cedricongjh"},"content":"            String taskDate \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"cedricongjh"},"content":"            if (taskArr.length \u003e Task.TASK_DATE_INDEX) {","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"cedricongjh"},"content":"                taskDate \u003d taskArr[Task.TASK_DATE_INDEX];","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"cedricongjh"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"cedricongjh"},"content":"            Task res;","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"cedricongjh"},"content":"            switch (taskType) {","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"cedricongjh"},"content":"            case(Task.TODO_ALPHABET):","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"cedricongjh"},"content":"                res \u003d new Todo(taskDescription, isTaskDone);","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"cedricongjh"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"cedricongjh"},"content":"            case(Task.DEADLINE_ALPHABET):","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"cedricongjh"},"content":"                res \u003d new Deadline(taskDescription, taskDate, isTaskDone);","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"cedricongjh"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"cedricongjh"},"content":"            case(Task.EVENT_ALPHABET):","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"cedricongjh"},"content":"                res \u003d new Event(taskDescription, taskDate, isTaskDone);","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"cedricongjh"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"cedricongjh"},"content":"            default:","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"cedricongjh"},"content":"                throw new InvalidTaskTypeException(str);","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"cedricongjh"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"cedricongjh"},"content":"            return res;","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"cedricongjh"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"cedricongjh"},"content":"            throw new LoadFileException();","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"cedricongjh"},"content":"     * Saves task to the text file","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"cedricongjh"},"content":"     * @param task The task to save to the file","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"cedricongjh"},"content":"     * @throws DukeException When the task cannot be saved","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":101,"author":{"gitId":"cedricongjh"},"content":"    public void saveTaskToFile(Task task) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"cedricongjh"},"content":"        saveStringToFile(task.toFileData() + \"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"cedricongjh"},"content":"     * Saves a string into the file specified by the filePath","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"cedricongjh"},"content":"     * @param str The String to be saved into the file","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"cedricongjh"},"content":"     * @throws DukeException When the String cannot be saved to the file","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"cedricongjh"},"content":"    private void saveStringToFile(String str) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"cedricongjh"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"cedricongjh"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"cedricongjh"},"content":"            fileWriter.write(str);","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"cedricongjh"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"cedricongjh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"cedricongjh"},"content":"            throw new UpdateFileException();","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":122,"author":{"gitId":"cedricongjh"},"content":"     * Deletes a task from the text file","lastModifiedDate":"2021-09-16"},{"lineNumber":123,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":124,"author":{"gitId":"cedricongjh"},"content":"     * @param taskIndex Index of the task to delete from the file","lastModifiedDate":"2021-09-16"},{"lineNumber":125,"author":{"gitId":"cedricongjh"},"content":"     * @param tasks The TaskList that the task is from","lastModifiedDate":"2021-09-16"},{"lineNumber":126,"author":{"gitId":"cedricongjh"},"content":"     * @throws DukeException When the task cannot be deleted from the file","lastModifiedDate":"2021-09-16"},{"lineNumber":127,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":128,"author":{"gitId":"cedricongjh"},"content":"    public void deleteTaskFromFile(int taskIndex, TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"cedricongjh"},"content":"        updateTaskFromFile(taskIndex, true, tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":133,"author":{"gitId":"cedricongjh"},"content":"     * Edits a task in the text file","lastModifiedDate":"2021-09-16"},{"lineNumber":134,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":135,"author":{"gitId":"cedricongjh"},"content":"     * @param taskIndex Index of the task to edit in the file","lastModifiedDate":"2021-09-16"},{"lineNumber":136,"author":{"gitId":"cedricongjh"},"content":"     * @param tasks The TaskList that the task is from","lastModifiedDate":"2021-09-16"},{"lineNumber":137,"author":{"gitId":"cedricongjh"},"content":"     * @throws DukeException When the task cannot be edited from the file","lastModifiedDate":"2021-09-16"},{"lineNumber":138,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":139,"author":{"gitId":"cedricongjh"},"content":"    public void editTaskFromFile(int taskIndex, TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"cedricongjh"},"content":"        updateTaskFromFile(taskIndex, false, tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":144,"author":{"gitId":"cedricongjh"},"content":"     * Updates (Edits or Deletes) a task in the file","lastModifiedDate":"2021-09-16"},{"lineNumber":145,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":146,"author":{"gitId":"cedricongjh"},"content":"     * @param taskIndex The index of the task to be updated","lastModifiedDate":"2021-09-16"},{"lineNumber":147,"author":{"gitId":"cedricongjh"},"content":"     * @param isDeleteTask Whether to delete the task","lastModifiedDate":"2021-09-16"},{"lineNumber":148,"author":{"gitId":"cedricongjh"},"content":"     * @param tasks The TaskList that the task is from","lastModifiedDate":"2021-09-16"},{"lineNumber":149,"author":{"gitId":"cedricongjh"},"content":"     * @throws DukeException When the file cannot be updated","lastModifiedDate":"2021-09-16"},{"lineNumber":150,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":151,"author":{"gitId":"cedricongjh"},"content":"    private void updateTaskFromFile(int taskIndex, boolean isDeleteTask, TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":152,"author":{"gitId":"cedricongjh"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"cedricongjh"},"content":"            StringBuilder newTasks \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"cedricongjh"},"content":"            File taskFile \u003d new File(filePath);","lastModifiedDate":"2021-09-06"},{"lineNumber":155,"author":{"gitId":"cedricongjh"},"content":"            Scanner fileReader \u003d new Scanner(taskFile);","lastModifiedDate":"2021-08-26"},{"lineNumber":156,"author":{"gitId":"cedricongjh"},"content":"            int index \u003d 0;","lastModifiedDate":"2021-08-26"},{"lineNumber":157,"author":{"gitId":"cedricongjh"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":158,"author":{"gitId":"cedricongjh"},"content":"                if (index !\u003d taskIndex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"cedricongjh"},"content":"                    newTasks.append(fileReader.nextLine()).append(\"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"cedricongjh"},"content":"                } else if (!isDeleteTask) {","lastModifiedDate":"2021-09-06"},{"lineNumber":161,"author":{"gitId":"cedricongjh"},"content":"                    newTasks.append(tasks.getTask(taskIndex).toFileData()).append(\"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"cedricongjh"},"content":"                    fileReader.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"cedricongjh"},"content":"                } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"cedricongjh"},"content":"                    fileReader.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"cedricongjh"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":166,"author":{"gitId":"cedricongjh"},"content":"                index +\u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":167,"author":{"gitId":"cedricongjh"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":168,"author":{"gitId":"cedricongjh"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath, false);","lastModifiedDate":"2021-09-06"},{"lineNumber":169,"author":{"gitId":"cedricongjh"},"content":"            fileWriter.write(String.valueOf(newTasks));","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"cedricongjh"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":171,"author":{"gitId":"cedricongjh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":172,"author":{"gitId":"cedricongjh"},"content":"            throw new UpdateFileException();","lastModifiedDate":"2021-09-15"},{"lineNumber":173,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":174,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":175,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":176,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":177,"author":{"gitId":"cedricongjh"},"content":"     * Creates an empty text file at the filePath specified","lastModifiedDate":"2021-09-16"},{"lineNumber":178,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":179,"author":{"gitId":"cedricongjh"},"content":"     * @throws CreateFileException When the file cannot be created","lastModifiedDate":"2021-09-16"},{"lineNumber":180,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":181,"author":{"gitId":"cedricongjh"},"content":"    public void createNewFile() throws CreateFileException {","lastModifiedDate":"2021-09-15"},{"lineNumber":182,"author":{"gitId":"cedricongjh"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":183,"author":{"gitId":"cedricongjh"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath, false);","lastModifiedDate":"2021-09-15"},{"lineNumber":184,"author":{"gitId":"cedricongjh"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":185,"author":{"gitId":"cedricongjh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":186,"author":{"gitId":"cedricongjh"},"content":"            throw new CreateFileException();","lastModifiedDate":"2021-09-15"},{"lineNumber":187,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":188,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":189,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":190,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"cedricongjh":190}},{"path":"src/main/java/duke/utils/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.utils;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"/** TaskList that handles the Tasks in Duke */","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"     * A constructor for a TaskList","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"     * @param taskList An ArrayList of Tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"     * @return Whether the taskList has no tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"     * @return The number of tasks in the taskList","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"    public int numberOfTasks() {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"        return taskList.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"     * Adds a Task into the TaskList","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"     * @param task The Task to be added into the TaskList","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"     * Gets a Task from the TaskList","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"cedricongjh"},"content":"     * @param taskIndex The Index of the Task in the TaskList","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"cedricongjh"},"content":"     * @return The Task at the index given","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"cedricongjh"},"content":"    public Task getTask(int taskIndex){","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"cedricongjh"},"content":"        return taskList.get(taskIndex);","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"cedricongjh"},"content":"     * Deletes a Task from the TaskList","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"cedricongjh"},"content":"     * @param deleteIndex The index of the Task to be deleted","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"cedricongjh"},"content":"    public void removeTask (int deleteIndex) {","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"cedricongjh"},"content":"        taskList.remove(deleteIndex);","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"cedricongjh"},"content":"     * Searches for a task in the taskList","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"cedricongjh"},"content":"     * @param searchQuery A Query String","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"cedricongjh"},"content":"     * @return Tasks that have searchQuery as a substring","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"cedricongjh"},"content":"    public TaskList searchTasks(String searchQuery) {","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"cedricongjh"},"content":"        ArrayList\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"cedricongjh"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"cedricongjh"},"content":"            if (task.toString().contains(searchQuery)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"cedricongjh"},"content":"                res.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"cedricongjh"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"cedricongjh"},"content":"        return new TaskList(res);","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"cedricongjh"},"content":"     * Sorts the TaskList","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"cedricongjh"},"content":"     * @param comparator The comparator used to compare two Tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"cedricongjh"},"content":"     * @return A sorted TaskList sorted using the comparator","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"cedricongjh"},"content":"    public TaskList sortTasks(Comparator\u003c? super Task\u003e comparator) {","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"cedricongjh"},"content":"        ArrayList\u003cTask\u003e sortedTasks \u003d new ArrayList\u003c\u003e(taskList);","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"cedricongjh"},"content":"        sortedTasks.sort(comparator);","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"cedricongjh"},"content":"        return new TaskList(sortedTasks);","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"cedricongjh":89}},{"path":"src/main/java/duke/utils/Utils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.utils;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.IncorrectFormatException;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.NoNumberException;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import duke.exception.NoTimeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"/** Utils class for methods that are useful in more than one class */","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"public class Utils {","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"     * @param str The String to be split","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"     * @param separator The String for str to be split between","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"     * @return An array of two Strings, with the first String being words before seperator,","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"     *         and second string being after the seperator. E.g. splitBetween(\"a b c\", \"b\") returns","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"     *         {\"a\", \"c\"}","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"     * @throws DukeException When the seperator cannot be found, or there is nothing after the seperator","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    public static String[] splitBetween(String str, String separator) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"        String delimiter \u003d \" \";","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"        String emptyString \u003d \"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"cedricongjh"},"content":"        StringJoiner beforeSeparator \u003d new StringJoiner(delimiter);","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"cedricongjh"},"content":"        StringJoiner afterSeparator \u003d new StringJoiner(delimiter);","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"cedricongjh"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"cedricongjh"},"content":"        boolean isAfterSeparator \u003d false;","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"cedricongjh"},"content":"        String[] strArray \u003d str.split(delimiter);","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"cedricongjh"},"content":"        while (i \u003c strArray.length) {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"cedricongjh"},"content":"            String currentString \u003d strArray[i];","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"cedricongjh"},"content":"            if (isAfterSeparator) {","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"cedricongjh"},"content":"                afterSeparator.add(currentString);","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"cedricongjh"},"content":"            } else if (currentString.equals(separator)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"cedricongjh"},"content":"                isAfterSeparator \u003d true;","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"cedricongjh"},"content":"            } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"cedricongjh"},"content":"                beforeSeparator.add(currentString);","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"cedricongjh"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"cedricongjh"},"content":"            i++;","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"cedricongjh"},"content":"        if (!isAfterSeparator) {","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"cedricongjh"},"content":"            throw new IncorrectFormatException();","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"cedricongjh"},"content":"        if (String.valueOf(afterSeparator).equals(emptyString)) {","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"cedricongjh"},"content":"            throw new NoTimeException();","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"cedricongjh"},"content":"        return new String[]{String.valueOf(beforeSeparator), String.valueOf(afterSeparator)};","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"cedricongjh"},"content":"     * @param userInput The input the user put in after an argument E.g. (\"12\")","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"cedricongjh"},"content":"     * @return An int that the user inputted","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"cedricongjh"},"content":"     * @throws DukeException If the user did not input an integer","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"cedricongjh"},"content":"    public static int getInputNumber(String userInput) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"cedricongjh"},"content":"        assert userInput !\u003d null;","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"cedricongjh"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"cedricongjh"},"content":"            return Integer.parseInt(userInput) - 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"cedricongjh"},"content":"        } catch (NumberFormatException exception) {","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"cedricongjh"},"content":"            throw new NoNumberException();","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"cedricongjh"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"cedricongjh"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"cedricongjh"},"content":"     * @param tasks A TaskList","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"cedricongjh"},"content":"     * @return A String representation of Tasks in the TaskList","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"cedricongjh"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"cedricongjh"},"content":"    public static String showTasks(TaskList tasks) {","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"cedricongjh"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"cedricongjh"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"cedricongjh"},"content":"        for (int i \u003d 0; i \u003c tasks.numberOfTasks(); i++) {","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"cedricongjh"},"content":"            res.append(String.format(\"%d. %s%n\\n\", i + 1, tasks.getTask(i)));","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"cedricongjh"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"cedricongjh"},"content":"        return res.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"cedricongjh":91}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" styleClass\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"    \u003c!-- Use of stylesheets in fxml inspired by @yourally2 --\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"        \u003cURL value\u003d\"@../css/index.css\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"cedricongjh":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" styleClass\u003d\"user-input\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" styleClass\u003d\"send-btn\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" styleClass\u003d\"background\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"    \u003c!-- Use of stylesheets in fxml inspired by @yourally2 --\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"        \u003cURL value\u003d\"@../css/index.css\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"cedricongjh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"cedricongjh":24}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import duke.utils.Parser;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"    public void testGetUserCommand() {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"        assertEquals(\"todo\", Parser.getUserCommand(\"todo blah blah\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"    public void testGetUserArgument() {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"        assertEquals(\"blah blah\", Parser.getUserArgument(\"todo blah blah\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"    public void testNoUserArgument() {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"        assertEquals(\"\", Parser.getUserArgument(\"todo \"));","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"cedricongjh":23}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"        Task task \u003d new Task(\"\", false);","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"        assertEquals(\"[X] \", task.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"cedricongjh":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cedricongjh"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"cedricongjh"},"content":"deadline return book /by 2021-08-28","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"cedricongjh"},"content":"event project meeting /at 2021-09-01","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"cedricongjh"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"cedricongjh"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"cedricongjh"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"cedricongjh"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"cedricongjh"},"content":"event volunteer work /at 2021-09-02","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"cedricongjh"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"cedricongjh"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"cedricongjh"},"content":"event work meeting","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"cedricongjh"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"cedricongjh"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"cedricongjh"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"cedricongjh"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"cedricongjh"},"content":"done a","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"cedricongjh"},"content":"delete a","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"cedricongjh"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"cedricongjh"},"content":"blahblah","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"cedricongjh"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"cedricongjh":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"cedricongjh"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"cedricongjh":1,"-":20}}]
