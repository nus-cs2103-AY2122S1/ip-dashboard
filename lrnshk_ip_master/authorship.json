[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrnshk"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"lrnshk"},"content":"import mango.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"lrnshk"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"lrnshk"},"content":" * Represents a chat-bot named Mango that keeps track of a list of tasks that the user","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lrnshk"},"content":" * can manipulate by adding, deleting, or completing.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lrnshk"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"lrnshk"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"lrnshk"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"lrnshk"},"content":"     * Constructor for a Duke chat-bot.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"lrnshk"},"content":"     * @param filePath The path for the file that will contain the list of tasks tracked by the chatbot.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"lrnshk"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"lrnshk"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"lrnshk"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"lrnshk"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"lrnshk"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"lrnshk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"lrnshk"},"content":"            ui.showLoadingError(new DukeException(e.getMessage()));","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"lrnshk"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"lrnshk"},"content":"     * Executes the functionality of the chat-bot.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"lrnshk"},"content":"    public void run() {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"lrnshk"},"content":"        ui.greet();","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"lrnshk"},"content":"        Parser.parse(this.tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"lrnshk"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"lrnshk"},"content":"            storage.save(this.tasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"lrnshk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"lrnshk"},"content":"            System.out.println(\"Error encountered when saving data: \" + e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"lrnshk"},"content":"        ui.exit();","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"lrnshk"},"content":"        new Duke(\"data/mango.txt\").run();","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"lrnshk":46,"-":4}},{"path":"src/main/java/mango/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrnshk"},"content":"package mango;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"lrnshk"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lrnshk"},"content":"     * Constructor for a DukeException.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lrnshk"},"content":"     * @param message The error message.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"lrnshk"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"        super(message);","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"lrnshk"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"lrnshk":13}},{"path":"src/main/java/mango/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrnshk"},"content":"package mango;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"lrnshk"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"lrnshk"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lrnshk"},"content":" * Represents a parser that makes sense of the user\u0027s commands by looking for keywords in the input.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lrnshk"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lrnshk"},"content":"public class Parser {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"     * Parses user input through the Scanner, and manipulates the list of tasks according to the commands.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"lrnshk"},"content":"    public static void parse(TaskList tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"lrnshk"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"lrnshk"},"content":"        String str;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"lrnshk"},"content":"        while (!(str \u003d sc.nextLine()).equals(\"bye\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"lrnshk"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"lrnshk"},"content":"                if (str.equals(\"list\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"lrnshk"},"content":"                    tasks.printList();","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"lrnshk"},"content":"                } else if (str.contains(\"done\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"lrnshk"},"content":"                    tasks.complete(Character.getNumericValue(str.charAt(5)));","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"lrnshk"},"content":"                } else if (str.contains(\"delete\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"lrnshk"},"content":"                    tasks.delete(Character.getNumericValue(str.charAt(7)));","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"lrnshk"},"content":"                } else if (str.contains(\"find\")){","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"lrnshk"},"content":"                    tasks.find(str.split(\" \", 2)[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"lrnshk"},"content":"                } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"lrnshk"},"content":"                    tasks.add(str);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"lrnshk"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"lrnshk"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"lrnshk"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"lrnshk"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"lrnshk"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"lrnshk":35}},{"path":"src/main/java/mango/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrnshk"},"content":"package mango;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"lrnshk"},"content":"import mango.task.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"lrnshk"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"lrnshk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"lrnshk"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lrnshk"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"lrnshk"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"import java.nio.file.StandardCopyOption;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"lrnshk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"lrnshk"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"lrnshk"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"lrnshk"},"content":" * Represents a storage space that saves and loads data from the hard disk.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"lrnshk"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"lrnshk"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"lrnshk"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"lrnshk"},"content":"     * Constructor for a Storage.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"lrnshk"},"content":"     * @param filePath The path for the file that will be saved to and loaded from.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"lrnshk"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"lrnshk"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"lrnshk"},"content":"     * Reads the file, interprets and loads the task list data into an ArrayList of Task objects.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"lrnshk"},"content":"     * @return The ArrayList containing all the Tasks that correspond to the data in the file.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"lrnshk"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"lrnshk"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"lrnshk"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"lrnshk"},"content":"        if (!f.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"lrnshk"},"content":"            File directory \u003d new File(f.getParent());","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"lrnshk"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"lrnshk"},"content":"                directory.mkdirs();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"lrnshk"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"lrnshk"},"content":"            f.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"lrnshk"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"lrnshk"},"content":"            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"lrnshk"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"lrnshk"},"content":"                String[] task \u003d s.nextLine().split(\":\", 4);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"lrnshk"},"content":"                Task toAdd;","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"lrnshk"},"content":"                switch (task[0]) {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"lrnshk"},"content":"                case \"D\":","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"lrnshk"},"content":"                    toAdd \u003d new Deadline(task[2], task[3], task[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"lrnshk"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"lrnshk"},"content":"                case \"E\":","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"lrnshk"},"content":"                    toAdd \u003d new Event(task[2], task[3], task[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"lrnshk"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"lrnshk"},"content":"                case \"T\":","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"lrnshk"},"content":"                    toAdd \u003d new Todo(task[2], task[1]);","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"lrnshk"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"lrnshk"},"content":"                default:","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"lrnshk"},"content":"                    throw new IllegalStateException(\"Unexpected value: \" + task[0]);","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"lrnshk"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"lrnshk"},"content":"                list.add(toAdd);","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"lrnshk"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"lrnshk"},"content":"        return list;","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"lrnshk"},"content":"     * Saves the Tasks in the task list to the file.","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"lrnshk"},"content":"     * @param list The task list to be saved","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"lrnshk"},"content":"     * @throws IOException If the FileWriter cannot locate the temporary file allocated.","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"lrnshk"},"content":"    public void save(TaskList list) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"lrnshk"},"content":"        String tempFilePath \u003d \"temp/mango.txt\";","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"lrnshk"},"content":"        File f \u003d new File(tempFilePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"lrnshk"},"content":"        File directory \u003d new File(f.getParent());","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"lrnshk"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"lrnshk"},"content":"            directory.mkdirs();","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"lrnshk"},"content":"        f.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"lrnshk"},"content":"        FileWriter fw \u003d new FileWriter(tempFilePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"lrnshk"},"content":"        for (Task t : list.getList()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"lrnshk"},"content":"            fw.write(t.save());","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"lrnshk"},"content":"        fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"lrnshk"},"content":"        Files.copy(Paths.get(tempFilePath), Paths.get(this.filePath), StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"lrnshk"},"content":"        Files.delete(Paths.get(tempFilePath));","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"lrnshk"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"lrnshk":97}},{"path":"src/main/java/mango/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrnshk"},"content":"package mango;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"lrnshk"},"content":"import mango.task.*;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"lrnshk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lrnshk"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lrnshk"},"content":" * Represents a list of tasks that can be manipulated. A \u003ccode\u003eTaskList\u003c/code\u003e corresponds to","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lrnshk"},"content":" * an ArrayList of \u003ccode\u003eTask\u003c/code\u003e objects.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lrnshk"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"lrnshk"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"lrnshk"},"content":"    private int listIndex \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"lrnshk"},"content":"     * Constructor for a TaskList.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"lrnshk"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"lrnshk"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"lrnshk"},"content":"     * Constructor for a TaskList, initialised with a list of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"lrnshk"},"content":"     * @param tasks An ArrayList of Task objects.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"lrnshk"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"lrnshk"},"content":"        this.list \u003d tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"lrnshk"},"content":"        this.listIndex \u003d tasks.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"lrnshk"},"content":"     * Returns the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"lrnshk"},"content":"     * @return The task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"lrnshk"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"lrnshk"},"content":"        return this.list;","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"lrnshk"},"content":"     * Interprets an input string into its corresponding Task object and adds it to the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"lrnshk"},"content":"     * Prints a confirmation that the Task is added, and the new total number of tasks in the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"lrnshk"},"content":"     * @param str The input string that contains the user\u0027s command.","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"lrnshk"},"content":"     * @throws DukeException If the input string does not make sense.","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"lrnshk"},"content":"    public void add(String str) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"lrnshk"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"lrnshk"},"content":"        String[] arr1 \u003d str.split(\" \", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"lrnshk"},"content":"        String type \u003d arr1[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"lrnshk"},"content":"        String desc;","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"lrnshk"},"content":"        String date;","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"lrnshk"},"content":"        String[] arr2;","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"lrnshk"},"content":"        switch (type) {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"lrnshk"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"lrnshk"},"content":"            if (Todo.isValid(arr1)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"lrnshk"},"content":"                desc \u003d arr1[1];","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"lrnshk"},"content":"                newTask \u003d new Todo(desc);","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"lrnshk"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"lrnshk"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"lrnshk"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"lrnshk"},"content":"            if (Deadline.isValid(arr1)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"lrnshk"},"content":"                arr2 \u003d arr1[1].split(\" /\", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"lrnshk"},"content":"                desc \u003d arr2[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"lrnshk"},"content":"                date \u003d arr2[1].substring(3);","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"lrnshk"},"content":"                newTask \u003d new Deadline(desc, date);","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"lrnshk"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"lrnshk"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"lrnshk"},"content":"        case \"event\":","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"lrnshk"},"content":"            if (Event.isValid(arr1)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"lrnshk"},"content":"                arr2 \u003d arr1[1].split(\" /\", 2);","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"lrnshk"},"content":"                desc \u003d arr2[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"lrnshk"},"content":"                date \u003d arr2[1].substring(3);","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"lrnshk"},"content":"                newTask \u003d new Event(desc, date);","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"lrnshk"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"lrnshk"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"lrnshk"},"content":"        default:","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"lrnshk"},"content":"            throw new DukeException(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"lrnshk"},"content":"        list.add(listIndex, newTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"lrnshk"},"content":"        String word;","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"lrnshk"},"content":"        if (listIndex \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"lrnshk"},"content":"            word \u003d \"task\";","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"lrnshk"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"lrnshk"},"content":"            word \u003d \"tasks\";","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"lrnshk"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"lrnshk"},"content":"        System.out.printf(\"   [%s][%s] %s\\n\", newTask.getType(), newTask.getStatusIcon(), newTask.getDescription());","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"lrnshk"},"content":"        System.out.printf(\"Now you have %d %s in the list.%n\", listIndex + 1, word);","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"lrnshk"},"content":"        listIndex++;","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"lrnshk"},"content":"     * Marks a Task in the task list as completed.","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"lrnshk"},"content":"     * Prints a confirmation that the Task has been marked complete.","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"lrnshk"},"content":"     * @param completedTask The task that is to be marked as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"lrnshk"},"content":"    public void complete(int completedTask) {","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"lrnshk"},"content":"        Task currentTask \u003d list.get(completedTask - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"lrnshk"},"content":"        if (!currentTask.isDone()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"lrnshk"},"content":"            currentTask.markDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"lrnshk"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"lrnshk"},"content":"        System.out.printf(\"[%s][X] %s\\n\", currentTask.getType(), currentTask.getDescription());","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"lrnshk"},"content":"     * Removes a Task from the task list. Prints a confirmation that the Task has been deleted,","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"lrnshk"},"content":"     * and the new total number of tasks in the list.","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"lrnshk"},"content":"     * @param deleteTask The task to be deleted.","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"lrnshk"},"content":"    public void delete(int deleteTask) {","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"lrnshk"},"content":"        Task delTask \u003d list.remove(deleteTask - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"lrnshk"},"content":"        listIndex--;","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"lrnshk"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"lrnshk"},"content":"        System.out.printf(\"[%s][%s] %s\\n\", delTask.getType(), delTask.getStatusIcon(), delTask.getDescription());","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"lrnshk"},"content":"        String word;","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"lrnshk"},"content":"        if (listIndex \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"lrnshk"},"content":"            word \u003d \"task\";","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"lrnshk"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"lrnshk"},"content":"            word \u003d \"tasks\";","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"lrnshk"},"content":"        System.out.printf(\"Now you have %d %s in the list.%n\", listIndex, word);","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"lrnshk"},"content":"     * Searches in the task list for tasks that contain the string given.","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"lrnshk"},"content":"     * @param str The string to find.","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"lrnshk"},"content":"    public void find(String str) {","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"lrnshk"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"lrnshk"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"lrnshk"},"content":"        while (i \u003c listIndex) {","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"lrnshk"},"content":"            int num \u003d i+1;","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"lrnshk"},"content":"            Task curr \u003d list.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"lrnshk"},"content":"            if (curr.getDescription().contains(str)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"lrnshk"},"content":"                System.out.printf(\"%d. [%s][%s] %s\\n\", num, curr.getType(), curr.getStatusIcon(), curr.getDescription());","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"lrnshk"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"lrnshk"},"content":"            i++;","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"lrnshk"},"content":"     * Prints the current task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"lrnshk"},"content":"    public void printList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":157,"author":{"gitId":"lrnshk"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":158,"author":{"gitId":"lrnshk"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"lrnshk"},"content":"        while (i \u003c listIndex) {","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"lrnshk"},"content":"            int num \u003d i+1;","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"lrnshk"},"content":"            Task curr \u003d list.get(i);","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"lrnshk"},"content":"            System.out.printf(\"%d. [%s][%s] %s\\n\", num, curr.getType(), curr.getStatusIcon(), curr.getDescription());","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"lrnshk"},"content":"            i++;","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":165,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"lrnshk"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"lrnshk":166}},{"path":"src/main/java/mango/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrnshk"},"content":"package mango;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"lrnshk"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"lrnshk"},"content":" * Represents a user interface that controls the interactions with the user, such as","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"lrnshk"},"content":" * greeting, showing errors, and exiting.","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lrnshk"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lrnshk"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"lrnshk"},"content":"     * Constructor for a Ui.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"lrnshk"},"content":"    public Ui() {}","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"lrnshk"},"content":"     * Greets the user with the chat-bot logo and an introduction.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"lrnshk"},"content":"    public void greet() {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"lrnshk"},"content":"        String logo \u003d \" __  __    ___    _  _     ___     ___\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"lrnshk"},"content":"                + \"|  \\\\/  |  /   \\\\  | \\\\| |   / __|   / _ \\\\\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"lrnshk"},"content":"                + \"| |\\\\/| |  | - |  | .` |  | (_ |  | (_) |\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"lrnshk"},"content":"                + \"|_|__|_|  |_|_|  |_|\\\\_|   \\\\___|   \\\\___/\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"lrnshk"},"content":"                + \"_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"lrnshk"},"content":"                + \"\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"lrnshk"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"lrnshk"},"content":"        System.out.println(\"Hello! I\u0027m Mango\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"lrnshk"},"content":"     * Echoes the input of the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"lrnshk"},"content":"     * @param str The string input of the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"lrnshk"},"content":"    public void echo(String str) {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"lrnshk"},"content":"        System.out.println(str);","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"lrnshk"},"content":"     * Prints a farewell message to the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"lrnshk"},"content":"    public void exit() {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"lrnshk"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"lrnshk"},"content":"     * Prints a loading error message.","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"lrnshk"},"content":"     * @param e The exception that was thrown during loading.","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"lrnshk"},"content":"    public void showLoadingError(Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"lrnshk"},"content":"        System.out.println(\"Error encountered when loading data: \" + e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"lrnshk"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"lrnshk":54}},{"path":"src/main/java/mango/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrnshk"},"content":"package mango.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"lrnshk"},"content":"import mango.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"lrnshk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"lrnshk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"lrnshk"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lrnshk"},"content":" * Represents a task that is a deadline. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to a","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"lrnshk"},"content":" * \u003ccode\u003eTask\u003c/code\u003e that has a description, a completion status, and a date by which the task should be completed.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"lrnshk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"lrnshk"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"lrnshk"},"content":"     * Constructor for a Deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"lrnshk"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"lrnshk"},"content":"     * @param date The date on which the deadline falls.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"lrnshk"},"content":"    public Deadline(String description, String date) {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"lrnshk"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"lrnshk"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"lrnshk"},"content":"     * Constructor for a Deadline, initialised with a completion status.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"lrnshk"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"lrnshk"},"content":"     * @param date The date on which the deadline falls.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"lrnshk"},"content":"     * @param status The completion status of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"lrnshk"},"content":"    public Deadline(String description, String date, String status) {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"lrnshk"},"content":"        super(description, status.equals(\"true\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"lrnshk"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"lrnshk"},"content":"     * Returns the string representation of the type of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"lrnshk"},"content":"     * @return The string representation of the type of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"lrnshk"},"content":"    public String getType() {","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"lrnshk"},"content":"        return \"D\";","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"lrnshk"},"content":"     * Checks if the input string array is valid.","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"lrnshk"},"content":"     * @param arr The input string array.","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"lrnshk"},"content":"     * @return True if the string array is valid, else false.","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"lrnshk"},"content":"     * @throws DukeException If the array length is 1.","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"lrnshk"},"content":"    public static boolean isValid(String[] arr) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"lrnshk"},"content":"        if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"lrnshk"},"content":"            throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"lrnshk"},"content":"        return true;","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"lrnshk"},"content":"     * Returns the description of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"lrnshk"},"content":"     * @return The description of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"lrnshk"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"lrnshk"},"content":"        return String.format(\"%s (by: %s)\", this.description, this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"lrnshk"},"content":"     * Returns the string representation of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"lrnshk"},"content":"     * @return The string representation of the deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"lrnshk"},"content":"    public String save() {","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"lrnshk"},"content":"        return String.format(\"%s:%s:%s:%s\\n\", this.getType(), this.getStatus(), this.description, this.date);","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"lrnshk"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"lrnshk":79}},{"path":"src/main/java/mango/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrnshk"},"content":"package mango.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"lrnshk"},"content":"import mango.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"lrnshk"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lrnshk"},"content":" * Represents a task that is an event. An \u003ccode\u003eEvent\u003c/code\u003e object corresponds to a","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lrnshk"},"content":" * \u003ccode\u003eTask\u003c/code\u003e that has a description, a completion status, and a date on which it happens.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lrnshk"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lrnshk"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"lrnshk"},"content":"    protected String date;","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"lrnshk"},"content":"     * Constructor for an Event.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"lrnshk"},"content":"     * @param description The description of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"lrnshk"},"content":"     * @param date The date on which the event occurs.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"lrnshk"},"content":"    public Event(String description, String date) {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"lrnshk"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"lrnshk"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"lrnshk"},"content":"     * Constructor for an Event, initialised with a completion status.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"lrnshk"},"content":"     * @param description The description of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"lrnshk"},"content":"     * @param date The date on which the event occurs.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"lrnshk"},"content":"     * @param status The completion status of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"lrnshk"},"content":"    public Event(String description, String date, String status) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"lrnshk"},"content":"        super(description, status.equals(\"true\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"lrnshk"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"lrnshk"},"content":"     * Returns the string representation of the type of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"lrnshk"},"content":"     * @return The string representation of the type of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"lrnshk"},"content":"    public String getType() {","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"lrnshk"},"content":"        return \"E\";","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"lrnshk"},"content":"     * Checks if the input string array is valid.","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"lrnshk"},"content":"     * @param arr The input string array.","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"lrnshk"},"content":"     * @return True if the string array is valid, else false.","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"lrnshk"},"content":"     * @throws DukeException If the array length is 1.","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"lrnshk"},"content":"    public static boolean isValid(String[] arr) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"lrnshk"},"content":"        if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"lrnshk"},"content":"            throw new DukeException(\" ☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"lrnshk"},"content":"        return true;","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"lrnshk"},"content":"     * Returns the description of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"lrnshk"},"content":"     * @return The description of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"lrnshk"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"lrnshk"},"content":"        return String.format(\"%s (at: %s)\", this.description, this.date);","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"lrnshk"},"content":"     * Returns the string representation of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"lrnshk"},"content":"     * @return The string representation of the event.","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"lrnshk"},"content":"    public String save() {","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"lrnshk"},"content":"        return String.format(\"%s:%s:%s:%s\\n\", this.getType(), this.getStatus(), this.description, this.date);","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"lrnshk"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"lrnshk":76}},{"path":"src/main/java/mango/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrnshk"},"content":"package mango.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"lrnshk"},"content":"import mango.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"lrnshk"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lrnshk"},"content":" * Represents a task. A \u003ccode\u003eTask\u003c/code\u003e object has a description and a completion status.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lrnshk"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lrnshk"},"content":"public class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"lrnshk"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"lrnshk"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"lrnshk"},"content":"     * Constructor of a Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"lrnshk"},"content":"     * @param description The description of the Task.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"lrnshk"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"lrnshk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"lrnshk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"lrnshk"},"content":"     * Constructor of a Task, initialised with a completion status.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"lrnshk"},"content":"     * @param description The description of a task.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"lrnshk"},"content":"     * @param isDone The completions status of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"lrnshk"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"lrnshk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"lrnshk"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"lrnshk"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"lrnshk"},"content":"     * @return True if the task is done, else false.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"lrnshk"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"lrnshk"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"lrnshk"},"content":"     * Returns the string representation of the completion status of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"lrnshk"},"content":"     * @return The string representation of the completion status of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"lrnshk"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"lrnshk"},"content":"        return (isDone ? \"true\" : \"false\");","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"lrnshk"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"lrnshk"},"content":"     * @return The string representation of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"lrnshk"},"content":"    public String save() {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"lrnshk"},"content":"        return String.format(\"%s:%s:%s:\\n\", this.getType(), this.getStatus(), this.description);","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"lrnshk"},"content":"     * Returns the string icon of the completion status of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"lrnshk"},"content":"     * @return The string icon of the completion status of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"lrnshk"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"lrnshk"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"lrnshk"},"content":"     * Returns the description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"lrnshk"},"content":"     * @return The description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"lrnshk"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"lrnshk"},"content":"        return this.description;","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"lrnshk"},"content":"     * Checks if the input string array is valid.","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"lrnshk"},"content":"     * @param arr The input string array.","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"lrnshk"},"content":"     * @return True if the string array is valid, else false.","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"lrnshk"},"content":"     * @throws DukeException If the input array has a length of 1.","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"lrnshk"},"content":"    public static boolean isValid(String[] arr) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"lrnshk"},"content":"        return true;","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"lrnshk"},"content":"     * Returns the type of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"lrnshk"},"content":"     * @return The type of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"lrnshk"},"content":"    public String getType() {","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"lrnshk"},"content":"        return \" \";","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"lrnshk"},"content":"     * Marks the task as completed.","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"lrnshk"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":102,"author":{"gitId":"lrnshk"},"content":"      this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"lrnshk"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"lrnshk":104}},{"path":"src/main/java/mango/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrnshk"},"content":"package mango.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"lrnshk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"lrnshk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"lrnshk"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"lrnshk"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"lrnshk"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"lrnshk"},"content":"    public void testDeadlineDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"        assertEquals(\"abc (by: Oct 15 2009)\", new Deadline(\"abc\", \"2009-10-15\").getDescription());","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"lrnshk"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"lrnshk"},"content":"    public void testEventDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"lrnshk"},"content":"        assertEquals(\"abc (at: Mon)\", new Event(\"abc\", \"Mon\").getDescription());","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"lrnshk"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"lrnshk"},"content":"    public void testTodoDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"lrnshk"},"content":"        assertEquals(\"abc\", new Todo(\"abc\").getDescription());","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"lrnshk"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"lrnshk"},"content":"    public void testDeadline_isValid_exceptionThrown() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"lrnshk"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"lrnshk"},"content":"            assertEquals(false, Deadline.isValid(new String[] {\"deadline\"}));","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"lrnshk"},"content":"            fail(); // the test should not reach this line","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"lrnshk"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"lrnshk"},"content":"            assertEquals(\" ☹ OOPS!!! The description of a deadline cannot be empty.\", e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"lrnshk"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"lrnshk":35}},{"path":"src/main/java/mango/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"lrnshk"},"content":"package mango.task;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"lrnshk"},"content":"import mango.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"lrnshk"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"lrnshk"},"content":" * Represents a task that needs to be done. A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to a","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"lrnshk"},"content":" * \u003ccode\u003eTask\u003c/code\u003e that has a description and a completion status.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"lrnshk"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"lrnshk"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"lrnshk"},"content":"     * Constructor for a Todo.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"lrnshk"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"lrnshk"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"lrnshk"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"lrnshk"},"content":"     * Constructor for a TaskList, initialised with a completion status.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"lrnshk"},"content":"     * @param description The description of the todo.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"lrnshk"},"content":"     * @param status The completion status of the todo.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"lrnshk"},"content":"    public Todo(String description, String status) {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"lrnshk"},"content":"        super(description, status.equals(\"true\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"lrnshk"},"content":"     * Returns the type of task in a string.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"lrnshk"},"content":"     * @return The string that represents a Todo task.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"lrnshk"},"content":"    public String getType() {","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"lrnshk"},"content":"        return \"T\";","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"lrnshk"},"content":"     * Checks whether the input string array is valid.","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"lrnshk"},"content":"     * @param arr The input string array.","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"lrnshk"},"content":"     * @return True if the array is valid, else false.","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"lrnshk"},"content":"     * @throws DukeException If the length of the array is 1.","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"lrnshk"},"content":"    public static boolean isValid(String[] arr) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"lrnshk"},"content":"        if (arr.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"lrnshk"},"content":"            throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"lrnshk"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"lrnshk"},"content":"        return true;","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"lrnshk"},"content":"     * Returns the description of the todo.","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"lrnshk"},"content":"     * @return The description of the todo.","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"lrnshk"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"lrnshk"},"content":"        return this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"lrnshk"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"lrnshk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"lrnshk"},"content":"     * Returns the string representation of the todo.","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"lrnshk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"lrnshk"},"content":"     * @return The string representation of the todo.","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"lrnshk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"lrnshk"},"content":"    public String save() {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"lrnshk"},"content":"        return String.format(\"%s:%s:%s:\\n\", this.getType(), this.getStatus(), this.description);","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"lrnshk"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"lrnshk"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"lrnshk":71}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"lrnshk"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"lrnshk"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"lrnshk"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"lrnshk"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"lrnshk"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"lrnshk":5}}]
