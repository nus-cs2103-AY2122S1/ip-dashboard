[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"T | 1 | task 1","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"D | 1 | task | tomorrow","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"E | 1 | task | sunday","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"mrmrinal":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"  protected String by;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"  private LocalDate time;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"  ","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"  public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"    super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"    this.time \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"    this.by \u003d this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"  public Deadline(String description, String by, int done) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"    super(description, done);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"    this.by \u003d by;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"  @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"  public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"    return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"  @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"  public String toStorageString(){","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"    int done \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"    if(this.isDone){","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"      done \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"    return \"D | \" + done +\" | \" +  this.description + \" | \" + this.by + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mrmrinal":34}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"import java.util.List;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"    private final static List\u003cTask\u003e items \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"    enum RequestType {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"        DEFAULT,","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"        DONE,","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"        DELETE,","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"        EVENT,","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"        TODO,","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"        UNUSUAL","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"        Storage.loadIntoDuke(items);","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"        Scanner userSc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"        String name \u003d \"JARVIS\";","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"        System.out.println(\"Hello I am \" + name +\".\\nIs there anything I can do for you Sir?\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"        String userInput \u003d userSc.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"        RequestType userRequest;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"        while(!userInput.equals(\"bye\")){","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"            if(userInput.equals(\"list\")){","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"                userRequest \u003d RequestType.DEFAULT;","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"                list();","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"            } else if(userInput.startsWith(\"done\")){","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"                userRequest \u003d RequestType.DONE;","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"            } else if(userInput.startsWith(\"delete\")){","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"                userRequest \u003d RequestType.DELETE;","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"            } else if(userInput.length() \u003e 8 \u0026\u0026 userInput.startsWith(\"deadline\")  \u0026\u0026 userInput.contains(\"/by\")){","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"                userRequest \u003d RequestType.DEADLINE;","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"            } else if(userInput.length() \u003e 5 \u0026\u0026 userInput.startsWith(\"event\")  \u0026\u0026 userInput.contains(\"/at\")){","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"                userRequest \u003d RequestType.EVENT;","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"            } else if(userInput.startsWith(\"todo\")){","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"                userRequest \u003d RequestType.TODO;","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"                userRequest \u003d RequestType.UNUSUAL;","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"            ","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"            switch (userRequest){","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"                case DEFAULT:","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"mrmrinal"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"mrmrinal"},"content":"                case UNUSUAL:","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"mrmrinal"},"content":"                    System.out.println(\"That is a rather unusual looking request sir.\\nPerhaps you might want to specify the kind of task you would like to add.\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"mrmrinal"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"mrmrinal"},"content":"                case DONE:","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"mrmrinal"},"content":"                    done(userInput);","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"mrmrinal"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"mrmrinal"},"content":"                case DELETE:","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"mrmrinal"},"content":"                    delete(userInput);","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"mrmrinal"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"mrmrinal"},"content":"                case DEADLINE:","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"mrmrinal"},"content":"                    deadline(userInput);","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"mrmrinal"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"mrmrinal"},"content":"                case EVENT:","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"mrmrinal"},"content":"                    event(userInput);","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"mrmrinal"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"mrmrinal"},"content":"                case TODO:","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"mrmrinal"},"content":"                    todo(userInput);","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"mrmrinal"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"mrmrinal"},"content":"            ","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"mrmrinal"},"content":"            userInput \u003d userSc.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"mrmrinal"},"content":"        System.out.println(\"Goodbye Sir! Will take good care of your garden in the meantime.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"mrmrinal"},"content":"        Storage.writeToFile(items);","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"mrmrinal"},"content":"    public static void echo(String userInput, String actionType){","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"mrmrinal"},"content":"        System.out.println(\"Got it sir, I have \"+ actionType + \" this task:\\n \" + userInput + \"\\nNow you have \" + items.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"mrmrinal"},"content":"    public static void list(){","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"mrmrinal"},"content":"        for(int i \u003d 1; i \u003c\u003d items.size(); i++){","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"mrmrinal"},"content":"            System.out.println(i + \". \" + items.get(i-1).toString());","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"mrmrinal"},"content":"        System.out.println(\"\");","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"mrmrinal"},"content":"    private static void done(String userInput){","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"mrmrinal"},"content":"        try{","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"mrmrinal"},"content":"            int task \u003d Integer.parseInt(userInput.substring(5));","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"mrmrinal"},"content":"            if(task \u003e 0 \u0026\u0026 task \u003c\u003d items.size()){","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"mrmrinal"},"content":"                markDone(task - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"mrmrinal"},"content":"                System.out.println(\"One task down sir. Here is the task I checked off:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"mrmrinal"},"content":"                System.out.println(\"    \" + items.get(task - 1).toString() + \"\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"mrmrinal"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"mrmrinal"},"content":"                System.out.println(\"You have entered an invalid task number Sir, please input again.\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"mrmrinal"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"mrmrinal"},"content":"            System.out.println(\"Task number formatted incorrectly. Try again\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"mrmrinal"},"content":"        } ","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"mrmrinal"},"content":"        ","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"mrmrinal"},"content":"    private static void delete(String userInput){","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"mrmrinal"},"content":"        try{","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"mrmrinal"},"content":"            int task \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"mrmrinal"},"content":"            if(task \u003e 0 \u0026\u0026 task \u003c\u003d items.size()){","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"mrmrinal"},"content":"                deleteTask(task - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"mrmrinal"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"mrmrinal"},"content":"                System.out.println(\"You have entered an invalid task number Sir, please input again.\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"mrmrinal"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"mrmrinal"},"content":"            System.out.println(\"Task number formatted incorrectly. Try again\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"mrmrinal"},"content":"    private static void deadline(String userInput){","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"mrmrinal"},"content":"        if(userInput.indexOf(\"/by\")  \u003c 11 ){","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"mrmrinal"},"content":"            System.out.println(\"Enter a valid deadline activity description\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"mrmrinal"},"content":"        } else if(userInput.length() \u003c\u003d userInput.indexOf(\"/by\") +  4){","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"mrmrinal"},"content":"            System.out.println(\"Enter a valid deadline time\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"mrmrinal"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"mrmrinal"},"content":"            String description \u003d userInput.substring(9, userInput.indexOf(\"/by\") - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"mrmrinal"},"content":"            String by \u003d userInput.substring(userInput.indexOf(\"/by\") + 4);","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"mrmrinal"},"content":"            try{","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"mrmrinal"},"content":"                LocalDate time \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"mrmrinal"},"content":"                Task t \u003d  new Deadline(description, by);","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"mrmrinal"},"content":"                items.add(t);","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"mrmrinal"},"content":"                Storage.addNewTask(t);","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"mrmrinal"},"content":"                echo(t.toString(), \"added\");","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"mrmrinal"},"content":"            } catch (Exception e){","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"mrmrinal"},"content":"                System.out.println(\"Enter a valid date in the format yyyy-mm-dd\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"mrmrinal"},"content":"    private static void event(String userInput){","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"mrmrinal"},"content":"        if(userInput.indexOf(\"/at\")  \u003c 8 ){","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"mrmrinal"},"content":"            System.out.println(\"Enter a valid event activity description\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"mrmrinal"},"content":"        } else if(userInput.length() \u003c\u003d userInput.indexOf(\"/at\") +  4){","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"mrmrinal"},"content":"            System.out.println(\"Enter a valid event time\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"mrmrinal"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"mrmrinal"},"content":"            String description \u003d userInput.substring(6, userInput.indexOf(\"/at\") - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":142,"author":{"gitId":"mrmrinal"},"content":"            String at \u003d userInput.substring(userInput.indexOf(\"/at\") + 4);","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"mrmrinal"},"content":"            Task t \u003d  new Event(description, at);","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"mrmrinal"},"content":"            items.add(t);","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"mrmrinal"},"content":"            echo(t.toString(), \"added\");","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"mrmrinal"},"content":"            Storage.addNewTask(t);","lastModifiedDate":"2021-08-25"},{"lineNumber":147,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":148,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-18"},{"lineNumber":150,"author":{"gitId":"mrmrinal"},"content":"    private static void todo(String userInput){","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"mrmrinal"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"mrmrinal"},"content":"            readActivity(userInput.substring(5), \"todo\");","lastModifiedDate":"2021-08-18"},{"lineNumber":153,"author":{"gitId":"mrmrinal"},"content":"            String description \u003d userInput.substring(5);","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"mrmrinal"},"content":"            Task t \u003d new ToDo(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":155,"author":{"gitId":"mrmrinal"},"content":"            items.add(t);","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"mrmrinal"},"content":"            echo(t.toString(), \"added\");","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"mrmrinal"},"content":"            Storage.addNewTask(t);","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"mrmrinal"},"content":"        } catch (DukeException e){","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"mrmrinal"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"mrmrinal"},"content":"        } catch (StringIndexOutOfBoundsException e){","lastModifiedDate":"2021-08-18"},{"lineNumber":161,"author":{"gitId":"mrmrinal"},"content":"            System.out.println(\"Enter a valid todo activity\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":165,"author":{"gitId":"mrmrinal"},"content":"    public static void markDone(int n){","lastModifiedDate":"2021-08-18"},{"lineNumber":166,"author":{"gitId":"mrmrinal"},"content":"        items.get(n).markAsDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":167,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":168,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":169,"author":{"gitId":"mrmrinal"},"content":"    private static void readActivity(String userTask, String taskType) throws DukeException{","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"mrmrinal"},"content":"        if(userTask.length() \u003c\u003d 1){","lastModifiedDate":"2021-08-18"},{"lineNumber":171,"author":{"gitId":"mrmrinal"},"content":"            throw new DukeException(\"Enter valid \" + taskType + \" activity\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":172,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":173,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":174,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-18"},{"lineNumber":175,"author":{"gitId":"mrmrinal"},"content":"    public static void deleteTask(int number){","lastModifiedDate":"2021-08-18"},{"lineNumber":176,"author":{"gitId":"mrmrinal"},"content":"        Task t \u003d items.remove(number);","lastModifiedDate":"2021-08-18"},{"lineNumber":177,"author":{"gitId":"mrmrinal"},"content":"        echo(t.toString(), \"removed\");","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"mrmrinal":175,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"  public DukeException(String errorMessage){","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"    super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mrmrinal":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"  protected String at;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"  public Event(String description, String at) {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"    super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"    this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"  public Event(String description, String at, int done) {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"    super(description, done);","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"    this.at \u003d at;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"  @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"  public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"    return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"  ","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"  @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"  public String toStorageString(){","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"    int done \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"    if(this.isDone){","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"      done \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"    return \"E | \" + done + \" | \" +  this.description + \" | \" + this.at + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"  ","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mrmrinal":29}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"    public static String path \u003d \".\" +  File.separator + \"data\" + File.separator + \"duke.txt\";","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"    public static String pathFolder \u003d \".\" +  File.separator + \"data\" + File.separator;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"    public static File file \u003d new File(path);","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"    public static void loadIntoDuke(List\u003cTask\u003e items) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"        try{","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"            if (!file.createNewFile()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"                Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"                    String task \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"                    if (task.startsWith(\"T\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"                        items.add(new ToDo(task.substring(8), Integer.parseInt(task.substring(4, 5))));","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"                    } else if (task.startsWith(\"D\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"                        String taskSubstring \u003d task.substring((8));","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"                        items.add(new Deadline(taskSubstring.substring(0, taskSubstring.indexOf(\"|\")),","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"                                taskSubstring.substring(taskSubstring.indexOf(\"|\") + 2),","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"                                Integer.parseInt(task.substring(4, 5))","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"                        ));","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"                    } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"                        String taskSubstring \u003d task.substring((8));","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"                        items.add(new Event(taskSubstring.substring(0, taskSubstring.indexOf(\"|\")),","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"                                taskSubstring.substring(taskSubstring.indexOf(\"|\") + 2),","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"                                Integer.parseInt(task.substring(4, 5))","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"                        ));","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"        } catch (Exception e){","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"            fixFileFolderProblems();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"mrmrinal"},"content":"    public static void addNewTask(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"mrmrinal"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"mrmrinal"},"content":"            String input \u003d task.toStorageString();","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"mrmrinal"},"content":"            Files.write(Paths.get(path), input.getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"mrmrinal"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"mrmrinal"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"mrmrinal"},"content":"    public static void writeToFile(List\u003cTask\u003e items){","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"mrmrinal"},"content":"        try{","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"mrmrinal"},"content":"            FileWriter fw \u003d new FileWriter(path, false);","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"mrmrinal"},"content":"            PrintWriter pw\u003d new PrintWriter(fw, false);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"mrmrinal"},"content":"            pw.flush();","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"mrmrinal"},"content":"            pw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"mrmrinal"},"content":"            fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"mrmrinal"},"content":"            for (Task currentTask : items) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"mrmrinal"},"content":"                String input \u003d currentTask.toStorageString();","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"mrmrinal"},"content":"                Files.write(Paths.get(path), input.getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"mrmrinal"},"content":"        }  catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"mrmrinal"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"mrmrinal"},"content":"    public static void fixFileFolderProblems(){","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"mrmrinal"},"content":"        try{","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"mrmrinal"},"content":"            if(!Files.isDirectory(Path.of(pathFolder))){","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"mrmrinal"},"content":"                Files.createDirectory(Path.of(pathFolder));","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"mrmrinal"},"content":"            } if(!Files.isRegularFile(Path.of(path))){","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"mrmrinal"},"content":"                Files.createFile(Path.of(path));","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"mrmrinal"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"mrmrinal"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"mrmrinal":84}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"  protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"  protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"  public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"    this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"  ","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"  public Task(String description, int done){","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"    this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"    if(done \u003d\u003d 1){","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"      this.isDone \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"    } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"      this.isDone \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"  public String getDescription() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"    return this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"  public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"    return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"  public void markAsDone(){","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"    this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"  public String toString(){","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"    return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription() ;","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"  ","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"  public String toStorageString(){","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"    int done \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"    if(this.isDone){","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"      done \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"    return \"T | \" + done +  \" | \" +  this.description + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mrmrinal":43}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"  public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"    super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"  public ToDo(String description, int done) {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"    super(description, done);","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"  @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"  public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"    return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mrmrinal":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"deadline reading /by 530","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"event marathon /at Saturday 2-5","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"todo send email to mom","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"deadline /by 530","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"event /at 6","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"deadline cs2103 ip /by","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"event tutorial /at","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mrmrinal":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"    pause","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"pause","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"mrmrinal":2,"-":21}}]
