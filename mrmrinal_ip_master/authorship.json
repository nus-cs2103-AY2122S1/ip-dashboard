[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"## JarvisPro","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"\u003e ‚ÄúYour mind is for having ideas, not holding them.‚Äù ‚Äì David Allen [source](https://dansilvestre.com/productivity-quotes/)","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"JarvisPro frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"- text-based","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"- easy to learn","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"- \u003cstrike\u003eFAST\u003c/strike\u003e _SUPER_ FAST to use","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"All you need to do is,","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"1. download it","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"2. double-click it.","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"3. add your tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"4. let it manage your tasks for you üòâ","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"Features:","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"- [x] Managing tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"- [x] Managing deadlines","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"- [ ] Reminders","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"If you are a Java programmer, you can use it to practice Java too. Here\u0027s the `main` method:","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"```java","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"public class Main {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mrmrinal":26,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"mrmrinal"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mrmrinal":18,"-":45}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"mrmrinal"},"content":"    private void flip() {","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"mrmrinal"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"mrmrinal"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"mrmrinal"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"mrmrinal"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"mrmrinal"},"content":"     * Method that returns new DialogBox for the bot.","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"mrmrinal"},"content":"     * ","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"mrmrinal"},"content":"     * @param text the text that is supposed to be shown","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"mrmrinal"},"content":"     * @param img the image of the bot","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"mrmrinal"},"content":"     * @return the user dialogue box back to the GUI interface","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"mrmrinal"},"content":"     */ ","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"mrmrinal"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"mrmrinal"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"mrmrinal"},"content":"     * Method that returns new DialogBox for the user.","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"mrmrinal"},"content":"     * @param text the text that is supposed to be shown","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"mrmrinal"},"content":"     * @param img the image of the user","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"mrmrinal"},"content":"     * @return the user dialogue box back to the GUI interface","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"mrmrinal"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"mrmrinal"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"mrmrinal"},"content":"        db.flip();","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"mrmrinal"},"content":"        return db;","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"mrmrinal":75}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"import java.io.File;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":" * A CLI bot which is based off Duke.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":" * @author mrmrinal","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"public class Duke extends Application {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"    private final Gui gui;","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"    private Scene scene;","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"    private final Image userimg \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"    private final Image dukeimg \u003d new Image(this.getClass().getResourceAsStream(\"/images/nestor.png\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"    public enum RequestType {","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"        DEFAULT,","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"mrmrinal"},"content":"        FIND,","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"mrmrinal"},"content":"        DONE,","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"mrmrinal"},"content":"        DELETE,","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"mrmrinal"},"content":"        UPDATE,","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"mrmrinal"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"mrmrinal"},"content":"        EVENT,","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"mrmrinal"},"content":"        TODO,","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"mrmrinal"},"content":"        UNUSUAL","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"mrmrinal"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"mrmrinal"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"mrmrinal"},"content":"        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"mrmrinal"},"content":"        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"mrmrinal"},"content":"        stage.setScene(scene); // Setting the stage to show our screen","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"mrmrinal"},"content":"        stage.show(); // Render the stage.","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"mrmrinal"},"content":"     * Instantiates a new Dukebot that the user can input commands to.","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"mrmrinal"},"content":"     * The filePath argument must specify an absolute location to where","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"mrmrinal"},"content":"     * the duke.txt file is stored.","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"mrmrinal"},"content":"     * @param filePath String representation of storage path","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"mrmrinal"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"mrmrinal"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"mrmrinal"},"content":"        gui \u003d new Gui();","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"mrmrinal"},"content":"        tasks \u003d new TaskList(storage.loadIntoDuke());","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"mrmrinal"},"content":"    public Duke() {","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"mrmrinal"},"content":"        storage \u003d new Storage(\".\" +  File.separator + \"data\"","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"mrmrinal"},"content":"                + File.separator + \"duke.txt\");","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"mrmrinal"},"content":"        gui \u003d new Gui();","lastModifiedDate":"2021-08-31"},{"lineNumber":82,"author":{"gitId":"mrmrinal"},"content":"        tasks \u003d new TaskList(storage.loadIntoDuke());","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"mrmrinal"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"mrmrinal"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"mrmrinal"},"content":"     * @param input the input for which the bot has to make a response","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"mrmrinal"},"content":"     * @return The string that dukebot outputs","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"mrmrinal"},"content":"    String getResponse(String input) {","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"mrmrinal"},"content":"        RequestType userRequest;","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"mrmrinal"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"mrmrinal"},"content":"            storage.writeToFile(tasks);","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"mrmrinal"},"content":"            return gui.farewellMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"mrmrinal"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"mrmrinal"},"content":"            userRequest \u003d duke.Parser.parse(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"mrmrinal"},"content":"            switch (userRequest) {","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"mrmrinal"},"content":"                case DEFAULT:","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"mrmrinal"},"content":"                    return tasks.list();","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"mrmrinal"},"content":"                case FIND:","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"mrmrinal"},"content":"                    return tasks.find(input.substring(5));","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"mrmrinal"},"content":"                case UNUSUAL:","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"mrmrinal"},"content":"                    return gui.unusualRequest();","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"mrmrinal"},"content":"                case DONE:","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"mrmrinal"},"content":"                    return makeDone(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"mrmrinal"},"content":"                case DELETE:","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"mrmrinal"},"content":"                    return deleteTask(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"mrmrinal"},"content":"                case UPDATE:","lastModifiedDate":"2021-09-06"},{"lineNumber":110,"author":{"gitId":"mrmrinal"},"content":"                    return updateTask(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":111,"author":{"gitId":"mrmrinal"},"content":"                case DEADLINE:","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"mrmrinal"},"content":"                    return deadline(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":113,"author":{"gitId":"mrmrinal"},"content":"                case EVENT:","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"mrmrinal"},"content":"                    return event(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"mrmrinal"},"content":"                case TODO:","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"mrmrinal"},"content":"                    return todo(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":117,"author":{"gitId":"mrmrinal"},"content":"                default:","lastModifiedDate":"2021-09-04"},{"lineNumber":118,"author":{"gitId":"mrmrinal"},"content":"                    return tasks.list();","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":125,"author":{"gitId":"mrmrinal"},"content":"     * Prints the following statement once an action is performed.","lastModifiedDate":"2021-08-31"},{"lineNumber":126,"author":{"gitId":"mrmrinal"},"content":"     * ","lastModifiedDate":"2021-08-31"},{"lineNumber":127,"author":{"gitId":"mrmrinal"},"content":"     * @param userInput Name of task","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"mrmrinal"},"content":"     * @param actionType Type of action","lastModifiedDate":"2021-08-31"},{"lineNumber":129,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":130,"author":{"gitId":"mrmrinal"},"content":"    public String echo(String userInput, String actionType) {","lastModifiedDate":"2021-08-31"},{"lineNumber":131,"author":{"gitId":"mrmrinal"},"content":"        assert actionType.equals(\"removed\") || actionType.equals(\"added\")  || actionType.equals(\"updated\")","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"mrmrinal"},"content":"                : \"Unknown action type found in echo\";","lastModifiedDate":"2021-09-04"},{"lineNumber":133,"author":{"gitId":"mrmrinal"},"content":"        return gui.dukeResponse(\"Got it sir, I have \" + actionType + \" this task:\\n \"","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"mrmrinal"},"content":"                + userInput + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":135,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":136,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"mrmrinal"},"content":"    private String makeDone(String userInput) {","lastModifiedDate":"2021-09-04"},{"lineNumber":139,"author":{"gitId":"mrmrinal"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"mrmrinal"},"content":"            assert userInput.substring(0, 4).equals(\"done\") : \"first 4 characters should be done\";","lastModifiedDate":"2021-09-04"},{"lineNumber":141,"author":{"gitId":"mrmrinal"},"content":"            int task \u003d Integer.parseInt(userInput.substring(5));","lastModifiedDate":"2021-08-18"},{"lineNumber":142,"author":{"gitId":"mrmrinal"},"content":"            if (task \u003e 0 \u0026\u0026 task \u003c\u003d tasks.getSize()) {","lastModifiedDate":"2021-08-29"},{"lineNumber":143,"author":{"gitId":"mrmrinal"},"content":"                tasks.markDone(task - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":144,"author":{"gitId":"mrmrinal"},"content":"                String r;","lastModifiedDate":"2021-08-31"},{"lineNumber":145,"author":{"gitId":"mrmrinal"},"content":"                r \u003d gui.dukeResponse(\"One task down sir. Here is the task I checked off:\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":146,"author":{"gitId":"mrmrinal"},"content":"                r \u003d r+ gui.dukeResponse(\"    \" + tasks.getTask(task).toString() + \"\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":147,"author":{"gitId":"mrmrinal"},"content":"                return r;","lastModifiedDate":"2021-08-31"},{"lineNumber":148,"author":{"gitId":"mrmrinal"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":149,"author":{"gitId":"mrmrinal"},"content":"                return gui.dukeResponse(\"You have entered an invalid task number Sir, please input again.\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":150,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"mrmrinal"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"mrmrinal"},"content":"            return gui.dukeResponse(\"Task number formatted incorrectly. Try again\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":153,"author":{"gitId":"mrmrinal"},"content":"        } catch (StringIndexOutOfBoundsException e){","lastModifiedDate":"2021-08-31"},{"lineNumber":154,"author":{"gitId":"mrmrinal"},"content":"            return gui.dukeResponse(\"Enter number of the task you want to delete\");","lastModifiedDate":"2021-08-31"},{"lineNumber":155,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":158,"author":{"gitId":"mrmrinal"},"content":"    private String deleteTask(String userInput) {","lastModifiedDate":"2021-09-04"},{"lineNumber":159,"author":{"gitId":"mrmrinal"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"mrmrinal"},"content":"            int task \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2021-08-18"},{"lineNumber":161,"author":{"gitId":"mrmrinal"},"content":"            if(task \u003e 0 \u0026\u0026 task \u003c\u003d tasks.getSize()){","lastModifiedDate":"2021-08-29"},{"lineNumber":162,"author":{"gitId":"mrmrinal"},"content":"                Task t \u003d tasks.deleteTask(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":163,"author":{"gitId":"mrmrinal"},"content":"                return echo(t.toString(), \"removed\");","lastModifiedDate":"2021-08-31"},{"lineNumber":164,"author":{"gitId":"mrmrinal"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":165,"author":{"gitId":"mrmrinal"},"content":"                return gui.dukeResponse(\"You have entered an invalid task number Sir, please input again.\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":166,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":167,"author":{"gitId":"mrmrinal"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2021-08-18"},{"lineNumber":168,"author":{"gitId":"mrmrinal"},"content":"            return gui.dukeResponse(\"Task number formatted incorrectly. Try again\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":169,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":171,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-18"},{"lineNumber":172,"author":{"gitId":"mrmrinal"},"content":"    private String updateTask(String userInput){","lastModifiedDate":"2021-09-06"},{"lineNumber":173,"author":{"gitId":"mrmrinal"},"content":"        try{","lastModifiedDate":"2021-09-06"},{"lineNumber":174,"author":{"gitId":"mrmrinal"},"content":"            int task \u003d Integer.parseInt(userInput.substring(userInput.indexOf(\"/no\") +  4));","lastModifiedDate":"2021-09-06"},{"lineNumber":175,"author":{"gitId":"mrmrinal"},"content":"            if(task \u003e 0 \u0026\u0026 task \u003c\u003d tasks.getSize()){","lastModifiedDate":"2021-09-06"},{"lineNumber":176,"author":{"gitId":"mrmrinal"},"content":"                String newTask \u003d userInput.substring(7, userInput.indexOf(\"/no\") - 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":177,"author":{"gitId":"mrmrinal"},"content":"                ","lastModifiedDate":"2021-09-06"},{"lineNumber":178,"author":{"gitId":"mrmrinal"},"content":"                RequestType taskType \u003d duke.Parser.parse(newTask);","lastModifiedDate":"2021-09-06"},{"lineNumber":179,"author":{"gitId":"mrmrinal"},"content":"                ","lastModifiedDate":"2021-09-06"},{"lineNumber":180,"author":{"gitId":"mrmrinal"},"content":"                if (taskType \u003d\u003d RequestType.DEADLINE) {","lastModifiedDate":"2021-09-06"},{"lineNumber":181,"author":{"gitId":"mrmrinal"},"content":"                    return updateDeadline(newTask, task);","lastModifiedDate":"2021-09-06"},{"lineNumber":182,"author":{"gitId":"mrmrinal"},"content":"                } else if (taskType \u003d\u003d RequestType.TODO) {","lastModifiedDate":"2021-09-06"},{"lineNumber":183,"author":{"gitId":"mrmrinal"},"content":"                    return updateTodo(newTask, task);","lastModifiedDate":"2021-09-06"},{"lineNumber":184,"author":{"gitId":"mrmrinal"},"content":"                } else if(taskType \u003d\u003d RequestType.EVENT){","lastModifiedDate":"2021-09-06"},{"lineNumber":185,"author":{"gitId":"mrmrinal"},"content":"                    return updateEvent(newTask, task);","lastModifiedDate":"2021-09-06"},{"lineNumber":186,"author":{"gitId":"mrmrinal"},"content":"                } ","lastModifiedDate":"2021-09-06"},{"lineNumber":187,"author":{"gitId":"mrmrinal"},"content":"                return \"Enter a valid task\";","lastModifiedDate":"2021-09-06"},{"lineNumber":188,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":189,"author":{"gitId":"mrmrinal"},"content":"        } catch (Exception e){","lastModifiedDate":"2021-09-06"},{"lineNumber":190,"author":{"gitId":"mrmrinal"},"content":"            return \"Error with input\";","lastModifiedDate":"2021-09-06"},{"lineNumber":191,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":192,"author":{"gitId":"mrmrinal"},"content":"        return \"Error with input. Please try again\";","lastModifiedDate":"2021-09-06"},{"lineNumber":193,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":194,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-09-06"},{"lineNumber":195,"author":{"gitId":"mrmrinal"},"content":"    private String updateDeadline(String userInput, int index){","lastModifiedDate":"2021-09-06"},{"lineNumber":196,"author":{"gitId":"mrmrinal"},"content":"        if(index \u003e tasks.getSize() || index \u003c 1){","lastModifiedDate":"2021-09-06"},{"lineNumber":197,"author":{"gitId":"mrmrinal"},"content":"            return \"Enter a valid task number\";","lastModifiedDate":"2021-09-06"},{"lineNumber":198,"author":{"gitId":"mrmrinal"},"content":"        } else if (userInput.indexOf(\"/by\")  \u003c 11 ) {","lastModifiedDate":"2021-09-06"},{"lineNumber":199,"author":{"gitId":"mrmrinal"},"content":"            return gui.dukeResponse(\"Enter a valid deadline activity description\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":200,"author":{"gitId":"mrmrinal"},"content":"        } else if (userInput.length() \u003c\u003d userInput.indexOf(\"/by\") +  4) {","lastModifiedDate":"2021-08-18"},{"lineNumber":201,"author":{"gitId":"mrmrinal"},"content":"            return gui.dukeResponse(\"Enter a valid deadline time\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":202,"author":{"gitId":"mrmrinal"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":203,"author":{"gitId":"mrmrinal"},"content":"            String description \u003d userInput.substring(9, userInput.indexOf(\"/by\") - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":204,"author":{"gitId":"mrmrinal"},"content":"            String by \u003d userInput.substring(userInput.indexOf(\"/by\") + 4);","lastModifiedDate":"2021-08-18"},{"lineNumber":205,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":206,"author":{"gitId":"mrmrinal"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":207,"author":{"gitId":"mrmrinal"},"content":"                LocalDate time \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-25"},{"lineNumber":208,"author":{"gitId":"mrmrinal"},"content":"                Task t \u003d  new Deadline(description, by);","lastModifiedDate":"2021-08-18"},{"lineNumber":209,"author":{"gitId":"mrmrinal"},"content":"                if(index \u003d\u003d tasks.getSize() + 1){","lastModifiedDate":"2021-09-06"},{"lineNumber":210,"author":{"gitId":"mrmrinal"},"content":"                    tasks.addTask(t);","lastModifiedDate":"2021-08-29"},{"lineNumber":211,"author":{"gitId":"mrmrinal"},"content":"                    storage.addNewTask(t);","lastModifiedDate":"2021-08-29"},{"lineNumber":212,"author":{"gitId":"mrmrinal"},"content":"                    return echo(t.toString(), \"added\");","lastModifiedDate":"2021-08-31"},{"lineNumber":213,"author":{"gitId":"mrmrinal"},"content":"                } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":214,"author":{"gitId":"mrmrinal"},"content":"                    tasks.updateTask(t, index);","lastModifiedDate":"2021-09-06"},{"lineNumber":215,"author":{"gitId":"mrmrinal"},"content":"                    storage.writeToFile(tasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":216,"author":{"gitId":"mrmrinal"},"content":"                    return echo(t.toString(), \"updated\");","lastModifiedDate":"2021-09-06"},{"lineNumber":217,"author":{"gitId":"mrmrinal"},"content":"                }","lastModifiedDate":"2021-09-06"},{"lineNumber":218,"author":{"gitId":"mrmrinal"},"content":"                ","lastModifiedDate":"2021-09-06"},{"lineNumber":219,"author":{"gitId":"mrmrinal"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":220,"author":{"gitId":"mrmrinal"},"content":"                assert e.toString().startsWith(\"java.time.format.DateTimeParseException:\")","lastModifiedDate":"2021-09-04"},{"lineNumber":221,"author":{"gitId":"mrmrinal"},"content":"                        : e.toString();","lastModifiedDate":"2021-09-04"},{"lineNumber":222,"author":{"gitId":"mrmrinal"},"content":"                return gui.dukeResponse(\"Enter a valid date in the format yyyy-mm-dd\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":223,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":224,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":225,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":226,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":227,"author":{"gitId":"mrmrinal"},"content":"    private String deadline(String userInput) {","lastModifiedDate":"2021-09-06"},{"lineNumber":228,"author":{"gitId":"mrmrinal"},"content":"        return updateDeadline(userInput, tasks.getSize() + 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":229,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":230,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-09-06"},{"lineNumber":231,"author":{"gitId":"mrmrinal"},"content":"    private String updateEvent(String userInput, int index){","lastModifiedDate":"2021-09-06"},{"lineNumber":232,"author":{"gitId":"mrmrinal"},"content":"        if (userInput.indexOf(\"/at\")  \u003c 8 ) {","lastModifiedDate":"2021-08-18"},{"lineNumber":233,"author":{"gitId":"mrmrinal"},"content":"            return gui.dukeResponse(\"Enter a valid event activity description\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":234,"author":{"gitId":"mrmrinal"},"content":"        } else if (userInput.length() \u003c\u003d userInput.indexOf(\"/at\") +  4) {","lastModifiedDate":"2021-08-18"},{"lineNumber":235,"author":{"gitId":"mrmrinal"},"content":"            return gui.dukeResponse(\"Enter a valid event time\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":236,"author":{"gitId":"mrmrinal"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":237,"author":{"gitId":"mrmrinal"},"content":"            String description \u003d userInput.substring(6, userInput.indexOf(\"/at\") - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":238,"author":{"gitId":"mrmrinal"},"content":"            String at \u003d userInput.substring(userInput.indexOf(\"/at\") + 4);","lastModifiedDate":"2021-08-18"},{"lineNumber":239,"author":{"gitId":"mrmrinal"},"content":"            Task t \u003d  new Event(description, at);","lastModifiedDate":"2021-08-18"},{"lineNumber":240,"author":{"gitId":"mrmrinal"},"content":"            if (index \u003d\u003d tasks.getSize() + 1) {","lastModifiedDate":"2021-09-06"},{"lineNumber":241,"author":{"gitId":"mrmrinal"},"content":"                tasks.addTask(t);","lastModifiedDate":"2021-08-29"},{"lineNumber":242,"author":{"gitId":"mrmrinal"},"content":"                storage.addNewTask(t);","lastModifiedDate":"2021-08-29"},{"lineNumber":243,"author":{"gitId":"mrmrinal"},"content":"                return echo(t.toString(), \"added\");","lastModifiedDate":"2021-08-31"},{"lineNumber":244,"author":{"gitId":"mrmrinal"},"content":"            } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":245,"author":{"gitId":"mrmrinal"},"content":"                tasks.updateTask(t, index);","lastModifiedDate":"2021-09-06"},{"lineNumber":246,"author":{"gitId":"mrmrinal"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":247,"author":{"gitId":"mrmrinal"},"content":"                return echo(t.toString(), \"updated\");","lastModifiedDate":"2021-09-06"},{"lineNumber":248,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":249,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":250,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":251,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":252,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-18"},{"lineNumber":253,"author":{"gitId":"mrmrinal"},"content":"    private String event(String userInput) {","lastModifiedDate":"2021-09-06"},{"lineNumber":254,"author":{"gitId":"mrmrinal"},"content":"        return updateEvent(userInput, tasks.getSize() + 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":255,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":256,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-09-06"},{"lineNumber":257,"author":{"gitId":"mrmrinal"},"content":"    private String updateTodo(String userInput, int index){","lastModifiedDate":"2021-09-06"},{"lineNumber":258,"author":{"gitId":"mrmrinal"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":259,"author":{"gitId":"mrmrinal"},"content":"            readActivity(userInput.substring(5));","lastModifiedDate":"2021-09-04"},{"lineNumber":260,"author":{"gitId":"mrmrinal"},"content":"            String description \u003d userInput.substring(5);","lastModifiedDate":"2021-08-18"},{"lineNumber":261,"author":{"gitId":"mrmrinal"},"content":"            Task t \u003d new ToDo(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":262,"author":{"gitId":"mrmrinal"},"content":"            if (index \u003d\u003d tasks.getSize() + 1) {","lastModifiedDate":"2021-09-06"},{"lineNumber":263,"author":{"gitId":"mrmrinal"},"content":"                tasks.addTask(t);","lastModifiedDate":"2021-08-29"},{"lineNumber":264,"author":{"gitId":"mrmrinal"},"content":"                storage.addNewTask(t);","lastModifiedDate":"2021-08-29"},{"lineNumber":265,"author":{"gitId":"mrmrinal"},"content":"                return echo(t.toString(), \"added\");","lastModifiedDate":"2021-08-31"},{"lineNumber":266,"author":{"gitId":"mrmrinal"},"content":"            } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":267,"author":{"gitId":"mrmrinal"},"content":"                tasks.updateTask(t, index);","lastModifiedDate":"2021-09-06"},{"lineNumber":268,"author":{"gitId":"mrmrinal"},"content":"                storage.writeToFile(tasks);","lastModifiedDate":"2021-09-06"},{"lineNumber":269,"author":{"gitId":"mrmrinal"},"content":"                return echo(t.toString(), \"updated\");","lastModifiedDate":"2021-09-06"},{"lineNumber":270,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":271,"author":{"gitId":"mrmrinal"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":272,"author":{"gitId":"mrmrinal"},"content":"            return gui.dukeResponse(e.getMessage());","lastModifiedDate":"2021-08-31"},{"lineNumber":273,"author":{"gitId":"mrmrinal"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":274,"author":{"gitId":"mrmrinal"},"content":"            assert userInput.length() \u003c 6","lastModifiedDate":"2021-09-04"},{"lineNumber":275,"author":{"gitId":"mrmrinal"},"content":"                    : \"todo request was supposed to be smaller than 6 characters\";","lastModifiedDate":"2021-09-04"},{"lineNumber":276,"author":{"gitId":"mrmrinal"},"content":"            return gui.dukeResponse(\"Enter a valid todo activity\\n\");","lastModifiedDate":"2021-08-31"},{"lineNumber":277,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":278,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":279,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-18"},{"lineNumber":280,"author":{"gitId":"mrmrinal"},"content":"    private String todo(String userInput) {","lastModifiedDate":"2021-09-06"},{"lineNumber":281,"author":{"gitId":"mrmrinal"},"content":"        return updateTodo(userInput, tasks.getSize() + 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":282,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":283,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-09-06"},{"lineNumber":284,"author":{"gitId":"mrmrinal"},"content":"    private static void readActivity(String userTask) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":285,"author":{"gitId":"mrmrinal"},"content":"        if (userTask.length() \u003c\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":286,"author":{"gitId":"mrmrinal"},"content":"            throw new DukeException(\"Enter valid \" + \"todo\" + \" activity description\\n\");","lastModifiedDate":"2021-09-04"},{"lineNumber":287,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":288,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":289,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-18"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"mrmrinal":289,"-":1}},{"path":"src/main/java/duke/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":" * Class responsible for displaying the output messages the bot gives.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":" * @author mrmrinal","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"public class Gui {","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"     * Bot greeting which shows up whenever the bot is instantiated.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"     * @return String that shows the user greeting","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"    public String dukeGreeting() {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"        String name \u003d \"Nestor\";","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"        return \"Hello I am \" + name + \".\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"                + \"Is there anything I can do for you Sir?\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"     * Bot message whenever there is an unusual request.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"    public String unusualRequest() {","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"        return \"That is a rather unusual looking request sir.\\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"                + \"Perhaps you might want to specify \"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"                + \"the kind of task you would like to add.\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"     * Bot message which will display the output the user wants to show.","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"     * @param output String outputted from the CLI","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"    public String dukeResponse(String output) {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"        return output;","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"     * Message shown when the bot exists.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"    public String farewellMessage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"        return \"Goodbye Sir! Will take good \"","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"                + \"care of your garden in the meantime.\";","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"mrmrinal":48}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"import java.io.File;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"public class Launcher {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"mrmrinal":16}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"mrmrinal":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"    private Gui gui \u003d new Gui();","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/nestor.png\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"                DialogBox.getDukeDialog(gui.dukeGreeting(), dukeImage));","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"mrmrinal"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"mrmrinal"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"mrmrinal"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"mrmrinal"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"mrmrinal"},"content":"        Timer timer \u003d new Timer();","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"mrmrinal"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"mrmrinal"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"mrmrinal"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"mrmrinal"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"mrmrinal"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"mrmrinal"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"mrmrinal"},"content":"                    ","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"mrmrinal"},"content":"            );","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"mrmrinal"},"content":"            userInput.clear();","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"mrmrinal"},"content":"            userInput.setEditable(false);","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"mrmrinal"},"content":"            timer.schedule(new TimerTask() {","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"mrmrinal"},"content":"                               @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"mrmrinal"},"content":"                               public void run() {","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"mrmrinal"},"content":"                                   // Your database code here","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"mrmrinal"},"content":"                                   Platform.exit();","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"mrmrinal"},"content":"                                   System.exit(0);","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"mrmrinal"},"content":"                               }","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"mrmrinal"},"content":"                           }, 2*1000);","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"mrmrinal"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"mrmrinal"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"mrmrinal"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"mrmrinal"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"mrmrinal"},"content":"            );","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"mrmrinal"},"content":"            userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"mrmrinal":79}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":" * A parser which aids with deciphering the nature of the user input.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":" * @author mrmrinal","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"public class Parser {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"     * Method that returns an enum and determines the control flow of the dukebot.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"     * @param userInput User Input of the user using the bot","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"     * @return the enum which is used to determine the task the bot will perform","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"    public static Duke.RequestType parse(String userInput) {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"        Duke.RequestType userRequest;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"            userRequest \u003d Duke.RequestType.DEFAULT;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"        } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"            userRequest \u003d Duke.RequestType.FIND;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"        } else if (userInput.startsWith(\"done\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"            userRequest \u003d Duke.RequestType.DONE;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"            userRequest \u003d Duke.RequestType.DELETE;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"        } else if(userInput.startsWith(\"update\")){","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"            userRequest \u003d Duke.RequestType.UPDATE;","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"        } else if (userInput.length() \u003e 8 ","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"                \u0026\u0026 userInput.startsWith(\"deadline\") \u0026\u0026 userInput.contains(\"/by\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"            userRequest \u003d Duke.RequestType.DEADLINE;","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"        } else if (userInput.length() \u003e 5 \u0026\u0026 userInput.startsWith(\"event\") \u0026\u0026 userInput.contains(\"/at\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"            userRequest \u003d Duke.RequestType.EVENT;","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"        } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"            userRequest \u003d Duke.RequestType.TODO;","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"            userRequest \u003d Duke.RequestType.UNUSUAL;","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"        return userRequest;","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"mrmrinal":42}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":" * A class that helps in storing the class offline.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":" * @author mrmrinal","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"    private final String path;","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"    private static final String pathFolder \u003d \".\" +  File.separator + \"data\" + File.separator;","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"    private final File file;","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"     * Constructor to create new Storage instance.","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"     * ","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"     * @param filePath the path of the data.txt file","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"    public Storage(String filePath) { ","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"        this.path \u003d filePath;","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"        file \u003d new File(path);","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"     * Method that loads the offline txt file tasks into the bot.","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"mrmrinal"},"content":"     * @return List that the dukebot uses","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"mrmrinal"},"content":"    public List\u003cTask\u003e loadIntoDuke() {","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"mrmrinal"},"content":"        List\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"mrmrinal"},"content":"        assert this.path.equals(\".\" +  File.separator + \"data\"","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"mrmrinal"},"content":"                + File.separator + \"duke.txt\")","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"mrmrinal"},"content":"                : \"File path is not correct\";","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"mrmrinal"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"mrmrinal"},"content":"            if (!file.createNewFile()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"mrmrinal"},"content":"                Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"mrmrinal"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"mrmrinal"},"content":"                    String task \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"mrmrinal"},"content":"                    if (task.startsWith(\"T\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"mrmrinal"},"content":"                        assert task.startsWith(\"T | 0 |\") || task.startsWith(\"T | 1 |\")","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"mrmrinal"},"content":"                                : \"Error with todo formatting\";","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"mrmrinal"},"content":"                        items.add(new ToDo(","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"mrmrinal"},"content":"                                task.substring(8), Integer.parseInt(task.substring(4, 5))));","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"mrmrinal"},"content":"                    } else if (task.startsWith(\"D\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"mrmrinal"},"content":"                        assert task.startsWith(\"D | 0 |\") || task.startsWith(\"D | 1 |\")","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"mrmrinal"},"content":"                                : \"Error with deadline formatting\";","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"mrmrinal"},"content":"                        String taskSubstring \u003d task.substring((8));","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"mrmrinal"},"content":"                        items.add(new Deadline(","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"mrmrinal"},"content":"                                taskSubstring.substring(0, taskSubstring.indexOf(\"|\")),","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"mrmrinal"},"content":"                                taskSubstring.substring(taskSubstring.indexOf(\"|\") + 2),","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"mrmrinal"},"content":"                                Integer.parseInt(task.substring(4, 5))","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"mrmrinal"},"content":"                        ));","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"mrmrinal"},"content":"                    } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"mrmrinal"},"content":"                        String taskSubstring \u003d task.substring((8));","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"mrmrinal"},"content":"                        assert task.startsWith(\"E | 0 |\") || task.startsWith(\"E | 1 |\")","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"mrmrinal"},"content":"                                : \"Error with event formatting\";","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"mrmrinal"},"content":"                        items.add(new Event(","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"mrmrinal"},"content":"                                taskSubstring.substring(0, taskSubstring.indexOf(\"|\")),","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"mrmrinal"},"content":"                                taskSubstring.substring(taskSubstring.indexOf(\"|\") + 2),","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"mrmrinal"},"content":"                                Integer.parseInt(task.substring(4, 5))","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"mrmrinal"},"content":"                        ));","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"mrmrinal"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"mrmrinal"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"mrmrinal"},"content":"            return items;","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"mrmrinal"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"mrmrinal"},"content":"            fixFileFolderProblems();","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"mrmrinal"},"content":"            return items;","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"mrmrinal"},"content":"     * Adds New task to storage.","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"mrmrinal"},"content":"     * @param task Task to be added to storage","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"mrmrinal"},"content":"    public void addNewTask(Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"mrmrinal"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"mrmrinal"},"content":"            String input \u003d task.toStorageString();","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"mrmrinal"},"content":"            Files.write(Paths.get(path), input.getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"mrmrinal"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"mrmrinal"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"mrmrinal"},"content":"     * Writes tasks in ArrayList to the offline storage.","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"mrmrinal"},"content":"     * @param taskList Tasklist storing all tasks in the bot","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"mrmrinal"},"content":"    public void writeToFile(TaskList taskList) {","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"mrmrinal"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"mrmrinal"},"content":"            FileWriter fw \u003d new FileWriter(path, false);","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"mrmrinal"},"content":"            PrintWriter pw \u003d new PrintWriter(fw, false);","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"mrmrinal"},"content":"            pw.flush();","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"mrmrinal"},"content":"            pw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"mrmrinal"},"content":"            fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"mrmrinal"},"content":"            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"mrmrinal"},"content":"                String input \u003d taskList.getTask(i + 1).toStorageString();","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"mrmrinal"},"content":"                Files.write(Paths.get(path), input.getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"mrmrinal"},"content":"        }  catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"mrmrinal"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"mrmrinal"},"content":"    private void fixFileFolderProblems() {","lastModifiedDate":"2021-08-30"},{"lineNumber":127,"author":{"gitId":"mrmrinal"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"mrmrinal"},"content":"            if (!Files.isDirectory(Path.of(pathFolder))) {","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"mrmrinal"},"content":"                Files.createDirectory(Path.of(pathFolder));","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"mrmrinal"},"content":"            } if (!Files.isRegularFile(Path.of(path))) {","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"mrmrinal"},"content":"                Files.createFile(Path.of(path));","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"mrmrinal"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"mrmrinal"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"mrmrinal":137}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":" * Class responsible for displaying the output messages the bot gives.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":" * @author mrmrinal","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"public class Ui {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"     * Bot greeting which shows up whenever the bot is instantiated.","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"    public void dukeGreeting() {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"        String name \u003d \"JARVIS\";","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"        System.out.println(\"Hello I am \" + name + \".\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"                + \"Is there anything I can do for you Sir?\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"     * Bot message whenever there is an unusual request.","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"    public void unusualRequest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"        System.out.println(\"That is a rather unusual looking request sir.\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"                + \"Perhaps you might want to specify \"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"                + \"the kind of task you would like to add.\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"     * Bot message which will display the output the user wants to show.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"     * @param output String outputted from the CLI","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"    public void dukeResponse(String output) {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"        System.out.println(output);","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"     * Message shown when the bot exists.","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"    public void farewellMessage() {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"        System.out.println(\"Goodbye Sir! Will take good \"","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"                + \"care of your garden in the meantime.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"mrmrinal":44}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke.exception;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"  public DukeException(String errorMessage){","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"    super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mrmrinal":7}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":" * Class that is used in order to create a new.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":" * @author mrmrinal","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"    private String by;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"    private LocalDate time;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"     * Constructor to instantiate new deadline object","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"     * @param description Description of the deadline task","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"     * @param by Due date of the deadline task","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"        this.time \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"        this.by \u003d this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"     * Constructor to instantiate new deadline object.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"     * @param description Description of the deadline task","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"     * @param by Due date of the deadline task","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"     * @param done Status of whether task was done or not","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"    public Deadline(String description, String by, int done) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"      super(description, done);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"      this.by \u003d by;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"     * Method to return String that has been stored in the Arraylist.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"     * @return String stored in the ArrayList","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"mrmrinal"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"mrmrinal"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"mrmrinal"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"mrmrinal"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"mrmrinal"},"content":"        int done \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"mrmrinal"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"mrmrinal"},"content":"            done \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"mrmrinal"},"content":"        return \"D | \" + done + \" | \" +  this.description","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"mrmrinal"},"content":"                + \" | \" + this.by + \"\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mrmrinal":58}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":" * Event Task class used by bot.","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":" * @author mrmrinal","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"    private final String at;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"     * Creates new Event task.","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"     * @param description Description of Event","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"     * @param at Time of Event","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"     * Creates new Event task.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"     * @param description Description of Event","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"     * @param at Time of Event","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"     * @param done Status of Event","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"    public Event(String description, String at, int done) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"        super(description, done);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"                + \" (at: \" + this.at + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"        int done \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"mrmrinal"},"content":"            done \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"mrmrinal"},"content":"        return \"E | \" + done + \" | \" +  this.description","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"mrmrinal"},"content":"                + \" | \" + this.at + \"\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mrmrinal":52}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":" * Task class used by bot.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":" * @author mrmrinal","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"   /**","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"    * Constructor of task","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"    *","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"    * @param description Description of task.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"    */","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"   /**","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"    * Constructor of task","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"    *","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"    * @param description Description of task.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"    * @param done Status of Task","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"    */","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"    public Task(String description, int done){","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"        this.isDone \u003d done \u003d\u003d 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"     * Get description of task.","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"     * @return String description of task","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"        return this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"     * Return status of task as string.","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"mrmrinal"},"content":"     * @return String status of task","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"mrmrinal"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"mrmrinal"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"mrmrinal"},"content":"     * Change task status to done.","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"mrmrinal"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"mrmrinal"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"mrmrinal"},"content":"     * Method to return String that has been stored in the Arraylist.","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"mrmrinal"},"content":"     * @return String stored in the ArrayList","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"mrmrinal"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"mrmrinal"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"mrmrinal"},"content":"     * Method to return String that has been stored in the txt File.","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"mrmrinal"},"content":"     * @return String stored in the .txt file","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"mrmrinal"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"mrmrinal"},"content":"        int done \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"mrmrinal"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"mrmrinal"},"content":"            done \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"mrmrinal"},"content":"        return \"T | \" + done +  \" | \" +  this.description + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mrmrinal":81}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"import duke.Gui;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"import java.util.List;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":" * Active list structure used to store all active tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":" * @author mrmrinal","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"public class TaskList {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"    private List\u003cTask\u003e items \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"    private final Gui gui \u003d new Gui();","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"     * Creates new TaskList instance.","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"     * @param items Task List autofilled from the storage","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"    public TaskList(List\u003cTask\u003e items) {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"        this.items \u003d items;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"     * Lists all the Tasks down in numerical form.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"    public String list() {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"        if(items.size() \u003c 1){","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"            return \"There are no tasks for you sir\";","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"        } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"            String r \u003d \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"            for (int i \u003d 1; items.size() \u003e\u003d i; i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"                r \u003d r + gui.dukeResponse(i + \". \"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"                        + items.get(i - 1) + \"\\n\".toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"            r \u003d r + gui.dukeResponse(\"\");","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"            return r;","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"mrmrinal"},"content":"     * Marks a specific task as done.","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"mrmrinal"},"content":"     * @param n the position of task in the List","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"mrmrinal"},"content":"    public void markDone(int n) {","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"mrmrinal"},"content":"        items.get(n).markAsDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"mrmrinal"},"content":"     * Add a new task to the List.","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"mrmrinal"},"content":"     * @param task task that user wants to add","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"mrmrinal"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"mrmrinal"},"content":"        items.add(task);","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"mrmrinal"},"content":"     * Delete a specific task on the list.","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"mrmrinal"},"content":"     * @param task Position of task that user wants to delete","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"mrmrinal"},"content":"    public Task deleteTask(int task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"mrmrinal"},"content":"        return items.remove(task - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"mrmrinal"},"content":"     * Get a specific task on the list.","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"mrmrinal"},"content":"     * @param task Position of task that user wants to obtain","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"mrmrinal"},"content":"     * @return task that the user queried for","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"mrmrinal"},"content":"    public Task getTask(int task){","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"mrmrinal"},"content":"        return items.get(task - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"mrmrinal"},"content":"     * Get total number of tasks on the list.","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"mrmrinal"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"mrmrinal"},"content":"        return items.size();","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"mrmrinal"},"content":"     * Update a specific task on the list.","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"mrmrinal"},"content":"     * ","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"mrmrinal"},"content":"     * @param task The task which is to be updated","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"mrmrinal"},"content":"     * @param number the position which has to be updated","lastModifiedDate":"2021-09-06"},{"lineNumber":95,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"mrmrinal"},"content":"    public void updateTask(Task task, int number){","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"mrmrinal"},"content":"        items.set(number - 1, task);","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":100,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"mrmrinal"},"content":"     * Returns user the tasks that he/she searched for.","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"mrmrinal"},"content":"     * ","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"mrmrinal"},"content":"     * @param substring the user search request","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"mrmrinal"},"content":"    public String find(String substring){","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"mrmrinal"},"content":"        StringBuilder r \u003d new StringBuilder();","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"mrmrinal"},"content":"        int list \u003d 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"mrmrinal"},"content":"        for(int i \u003d 1; i \u003c\u003d items.size(); i++){","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"mrmrinal"},"content":"            if(this.getTask(i).description.contains(substring)){","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"mrmrinal"},"content":"                r.append(gui.dukeResponse(list + \". \" + items.get(i - 1)  + \"\\n\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"mrmrinal"},"content":"                list++;","lastModifiedDate":"2021-08-30"},{"lineNumber":112,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":113,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":114,"author":{"gitId":"mrmrinal"},"content":"        if(list \u003d\u003d 1){","lastModifiedDate":"2021-08-30"},{"lineNumber":115,"author":{"gitId":"mrmrinal"},"content":"            return gui.dukeResponse(\"No such tasks found\");","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":117,"author":{"gitId":"mrmrinal"},"content":"        return r + gui.dukeResponse(\"\");","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":119,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"mrmrinal":120}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":" * Todo Task class used by bot.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":" * @author mrmrinal","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"  /**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"   * Creates new Todo task","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"   *","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"   * @param description Description of Event","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"   */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"  public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"      super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"  /**","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"   * Creates new Todo task","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"   *","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"   * @param description Description of Event","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"   * @param done Status of Event","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"   */","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"  public ToDo(String description, int done) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"      super(description, done);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mrmrinal":33}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #152238;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"        \u003cLabel fx:id\u003d\"dialog\" cacheShape\u003d\"false\" graphicTextGap\u003d\"10.0\" style\u003d\"-fx-alignment: center; -fx-font-family: Georgia; -fx-font-size: 18;\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"            \u003cFont size\u003d\"18.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"         \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"mrmrinal":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: black; -fx-font-family: Georgia;\" text\u003d\"Chat\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" textOverrun\u003d\"CLIP\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"558.0\" prefWidth\u003d\"399.0\" style\u003d\"-fx-background-color: #152238;\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"mrmrinal":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"import static duke.Parser.parse;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"    public void deadlineStorageStringTest(){","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"        Task t \u003d new Deadline(\"task 1\", \"2021-08-29\", 0);","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"        Assertions.assertEquals(\"D | 0 | task 1 | 2021-08-29\\n\", t.toStorageString());","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"    public void deadlineToStringTest(){","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"        Task t \u003d new Deadline(\"task 1\", \"2021-08-29\", 0);","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"        Assertions.assertEquals( \"[D][ ] task 1 (by: 2021-08-29)\", t.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"    public void parserTest(){","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"        Assertions.assertEquals(parse(\"list\"), Duke.RequestType.DEFAULT);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"        Assertions.assertEquals(parse(\"done 2\"), Duke.RequestType.DONE);","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"        Assertions.assertEquals(parse(\"delete 1\"), Duke.RequestType.DELETE);","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"        Assertions.assertEquals(parse(\"deadline task1 /by 2021-08-09\"), Duke.RequestType.DEADLINE);","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"        Assertions.assertEquals(parse(\"event swimming /at 5:30-6:30\"), Duke.RequestType.EVENT);","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"        Assertions.assertEquals(parse(\"todo buy groceries\"), Duke.RequestType.TODO);","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"        Assertions.assertEquals(parse(\"bybye\"), Duke.RequestType.UNUSUAL);","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"mrmrinal":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"deadline reading /by 2026-02-02","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"event marathon /at Saturday 2-5","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"todo send email to mom","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"deadline /by 530","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"event /at 6","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"deadline cs2103 ip /by 2025-02-02","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"event tutorial /at","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mrmrinal":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"    pause","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"pause","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"mrmrinal":3,"-":20}}]
