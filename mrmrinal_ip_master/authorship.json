[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"import java.io.File;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":" * A CLI bot which is based off Duke","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":" * @author mrmrinal","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"     public enum RequestType {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"        DEFAULT,","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"        FIND,","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"        DONE,","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"        DELETE,","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"        EVENT,","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"        TODO,","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"        UNUSUAL","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"     * Instantiates a new Dukebot that the user can input commands to.","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"     * The filePath argument must specify an absolute location to where","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"     * the duke.txt file is stored","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"     * @param filePath String representation of storage path","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"mrmrinal"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"mrmrinal"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"mrmrinal"},"content":"        tasks \u003d new TaskList(storage.loadIntoDuke());","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"mrmrinal"},"content":"     * Main method that is responsible for launching the bot","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"mrmrinal"},"content":"        new Duke(\".\" +  File.separator + \"data\"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"mrmrinal"},"content":"                + File.separator + \"duke.txt\").run();","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"mrmrinal"},"content":"    private void run() {","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"mrmrinal"},"content":"        Scanner userSc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"mrmrinal"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"mrmrinal"},"content":"        ui.dukeGreeting();","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"mrmrinal"},"content":"        String userInput \u003d userSc.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"mrmrinal"},"content":"        RequestType userRequest;","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"mrmrinal"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"mrmrinal"},"content":"            userRequest \u003d duke.Parser.parse(userInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"mrmrinal"},"content":"            switch (userRequest) {","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"mrmrinal"},"content":"            case DEFAULT:","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"mrmrinal"},"content":"                tasks.list();","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"mrmrinal"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"mrmrinal"},"content":"            case FIND:","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"mrmrinal"},"content":"                tasks.find(userInput.substring(5));","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"mrmrinal"},"content":"                break;","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"mrmrinal"},"content":"            case UNUSUAL:","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"mrmrinal"},"content":"                ui.unusualRequest();","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"mrmrinal"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"mrmrinal"},"content":"            case DONE:","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"mrmrinal"},"content":"                done(userInput);","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"mrmrinal"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"mrmrinal"},"content":"            case DELETE:","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"mrmrinal"},"content":"                delete(userInput);","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"mrmrinal"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"mrmrinal"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"mrmrinal"},"content":"                deadline(userInput);","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"mrmrinal"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"mrmrinal"},"content":"            case EVENT:","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"mrmrinal"},"content":"                event(userInput);","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"mrmrinal"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"mrmrinal"},"content":"            case TODO:","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"mrmrinal"},"content":"                todo(userInput);","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"mrmrinal"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"mrmrinal"},"content":"            ","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"mrmrinal"},"content":"            userInput \u003d userSc.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"mrmrinal"},"content":"        ui.farewellMessage();","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"mrmrinal"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"mrmrinal"},"content":"    public void echo(String userInput, String actionType) {","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"mrmrinal"},"content":"        System.out.println(\"Got it sir, I have \"+ actionType + \" this task:\\n \"","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"mrmrinal"},"content":"                + userInput + \"\\nNow you have \" + tasks.getSize() + \" tasks in the list.\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"mrmrinal"},"content":"    private void done(String userInput) {","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"mrmrinal"},"content":"        try{","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"mrmrinal"},"content":"            int task \u003d Integer.parseInt(userInput.substring(5));","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"mrmrinal"},"content":"            if(task \u003e 0 \u0026\u0026 task \u003c\u003d tasks.getSize()){","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"mrmrinal"},"content":"                tasks.markDone(task - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"mrmrinal"},"content":"                System.out.println(\"One task down sir. Here is the task I checked off:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"mrmrinal"},"content":"                System.out.println(\"    \" + tasks.getTask(task).toString() + \"\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"mrmrinal"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"mrmrinal"},"content":"                System.out.println(\"You have entered an invalid task number Sir, please input again.\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"mrmrinal"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"mrmrinal"},"content":"            System.out.println(\"Task number formatted incorrectly. Try again\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"mrmrinal"},"content":"    private void delete(String userInput) {","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"mrmrinal"},"content":"        try{","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"mrmrinal"},"content":"            int task \u003d Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"mrmrinal"},"content":"            if(task \u003e 0 \u0026\u0026 task \u003c\u003d tasks.getSize()){","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"mrmrinal"},"content":"                Task t \u003d tasks.deleteTask(task);","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"mrmrinal"},"content":"                echo(t.toString(), \"removed\");","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"mrmrinal"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"mrmrinal"},"content":"                System.out.println(\"You have entered an invalid task number Sir, please input again.\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":136,"author":{"gitId":"mrmrinal"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2021-08-18"},{"lineNumber":137,"author":{"gitId":"mrmrinal"},"content":"            System.out.println(\"Task number formatted incorrectly. Try again\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":138,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":140,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-18"},{"lineNumber":141,"author":{"gitId":"mrmrinal"},"content":"    private void deadline(String userInput){","lastModifiedDate":"2021-08-29"},{"lineNumber":142,"author":{"gitId":"mrmrinal"},"content":"        if(userInput.indexOf(\"/by\")  \u003c 11 ){","lastModifiedDate":"2021-08-18"},{"lineNumber":143,"author":{"gitId":"mrmrinal"},"content":"            System.out.println(\"Enter a valid deadline activity description\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":144,"author":{"gitId":"mrmrinal"},"content":"        } else if(userInput.length() \u003c\u003d userInput.indexOf(\"/by\") +  4){","lastModifiedDate":"2021-08-18"},{"lineNumber":145,"author":{"gitId":"mrmrinal"},"content":"            System.out.println(\"Enter a valid deadline time\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":146,"author":{"gitId":"mrmrinal"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":147,"author":{"gitId":"mrmrinal"},"content":"            String description \u003d userInput.substring(9, userInput.indexOf(\"/by\") - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":148,"author":{"gitId":"mrmrinal"},"content":"            String by \u003d userInput.substring(userInput.indexOf(\"/by\") + 4);","lastModifiedDate":"2021-08-18"},{"lineNumber":149,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"mrmrinal"},"content":"            try{","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"mrmrinal"},"content":"                LocalDate time \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-25"},{"lineNumber":152,"author":{"gitId":"mrmrinal"},"content":"                Task t \u003d  new Deadline(description, by);","lastModifiedDate":"2021-08-18"},{"lineNumber":153,"author":{"gitId":"mrmrinal"},"content":"                tasks.addTask(t);","lastModifiedDate":"2021-08-29"},{"lineNumber":154,"author":{"gitId":"mrmrinal"},"content":"                storage.addNewTask(t);","lastModifiedDate":"2021-08-29"},{"lineNumber":155,"author":{"gitId":"mrmrinal"},"content":"                echo(t.toString(), \"added\");","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"mrmrinal"},"content":"            } catch (Exception e){","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"mrmrinal"},"content":"                System.out.println(\"Enter a valid date in the format yyyy-mm-dd\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":161,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-19"},{"lineNumber":162,"author":{"gitId":"mrmrinal"},"content":"    private void event(String userInput) {","lastModifiedDate":"2021-08-29"},{"lineNumber":163,"author":{"gitId":"mrmrinal"},"content":"        if (userInput.indexOf(\"/at\")  \u003c 8 ) {","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"mrmrinal"},"content":"            System.out.println(\"Enter a valid event activity description\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":165,"author":{"gitId":"mrmrinal"},"content":"        } else if (userInput.length() \u003c\u003d userInput.indexOf(\"/at\") +  4) {","lastModifiedDate":"2021-08-18"},{"lineNumber":166,"author":{"gitId":"mrmrinal"},"content":"            System.out.println(\"Enter a valid event time\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":167,"author":{"gitId":"mrmrinal"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":168,"author":{"gitId":"mrmrinal"},"content":"            String description \u003d userInput.substring(6, userInput.indexOf(\"/at\") - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":169,"author":{"gitId":"mrmrinal"},"content":"            String at \u003d userInput.substring(userInput.indexOf(\"/at\") + 4);","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"mrmrinal"},"content":"            Task t \u003d  new Event(description, at);","lastModifiedDate":"2021-08-18"},{"lineNumber":171,"author":{"gitId":"mrmrinal"},"content":"            tasks.addTask(t);","lastModifiedDate":"2021-08-29"},{"lineNumber":172,"author":{"gitId":"mrmrinal"},"content":"            echo(t.toString(), \"added\");","lastModifiedDate":"2021-08-18"},{"lineNumber":173,"author":{"gitId":"mrmrinal"},"content":"            storage.addNewTask(t);","lastModifiedDate":"2021-08-29"},{"lineNumber":174,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":175,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":176,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-18"},{"lineNumber":177,"author":{"gitId":"mrmrinal"},"content":"    private void todo(String userInput) {","lastModifiedDate":"2021-08-29"},{"lineNumber":178,"author":{"gitId":"mrmrinal"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":179,"author":{"gitId":"mrmrinal"},"content":"            readActivity(userInput.substring(5), \"todo\");","lastModifiedDate":"2021-08-18"},{"lineNumber":180,"author":{"gitId":"mrmrinal"},"content":"            String description \u003d userInput.substring(5);","lastModifiedDate":"2021-08-18"},{"lineNumber":181,"author":{"gitId":"mrmrinal"},"content":"            Task t \u003d new ToDo(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":182,"author":{"gitId":"mrmrinal"},"content":"            tasks.addTask(t);","lastModifiedDate":"2021-08-29"},{"lineNumber":183,"author":{"gitId":"mrmrinal"},"content":"            echo(t.toString(), \"added\");","lastModifiedDate":"2021-08-18"},{"lineNumber":184,"author":{"gitId":"mrmrinal"},"content":"            storage.addNewTask(t);","lastModifiedDate":"2021-08-29"},{"lineNumber":185,"author":{"gitId":"mrmrinal"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":186,"author":{"gitId":"mrmrinal"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":187,"author":{"gitId":"mrmrinal"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":188,"author":{"gitId":"mrmrinal"},"content":"            System.out.println(\"Enter a valid todo activity\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":189,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":190,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":191,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":192,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":193,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":194,"author":{"gitId":"mrmrinal"},"content":"    private static void readActivity(String userTask, String taskType) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":195,"author":{"gitId":"mrmrinal"},"content":"        if(userTask.length() \u003c\u003d 1){","lastModifiedDate":"2021-08-18"},{"lineNumber":196,"author":{"gitId":"mrmrinal"},"content":"            throw new DukeException(\"Enter valid \" + taskType + \" activity\\n\");","lastModifiedDate":"2021-08-18"},{"lineNumber":197,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":198,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":199,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-18"},{"lineNumber":200,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"mrmrinal":198,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":" * A parser which aids with deciphering the nature of the user input","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":" * @author mrmrinal","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"public class Parser {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"     * Method that returns an enum and determines the control flow of the dukebot","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"     * @param userInput User Input of the user using the bot","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"     * @return the enum which is used to determine the task the bot will perform","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"    public static Duke.RequestType parse(String userInput) {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"        Duke.RequestType userRequest;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"            userRequest \u003d Duke.RequestType.DEFAULT;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"        } else if (userInput.startsWith(\"find\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"            userRequest \u003d Duke.RequestType.FIND;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"        } else if (userInput.startsWith(\"done\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"            userRequest \u003d Duke.RequestType.DONE;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"        } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"            userRequest \u003d Duke.RequestType.DELETE;","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"        } else if (userInput.length() \u003e 8 \u0026\u0026","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"                userInput.startsWith(\"deadline\") \u0026\u0026 userInput.contains(\"/by\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"            userRequest \u003d Duke.RequestType.DEADLINE;","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"        } else if (userInput.length() \u003e 5 \u0026\u0026 userInput.startsWith(\"event\") \u0026\u0026 userInput.contains(\"/at\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"            userRequest \u003d Duke.RequestType.EVENT;","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"        } else if (userInput.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"            userRequest \u003d Duke.RequestType.TODO;","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"            userRequest \u003d Duke.RequestType.UNUSUAL;","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"        return userRequest;","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"mrmrinal":40}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":" * A class that helps in storing the class offline","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":" * @author mrmrinal","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"    private final String path;","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"    private static final String pathFolder \u003d \".\" +  File.separator + \"data\" + File.separator;","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"    private final File file;","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"    public Storage(String filePath){","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"        this.path \u003d filePath;","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"        file \u003d new File(path);","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"     * Method that loads the offline txt file tasks into the bot","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"     * @return List that the dukebot uses","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"    public List\u003cTask\u003e loadIntoDuke() {","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"        List\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"mrmrinal"},"content":"        try{","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"mrmrinal"},"content":"            if (!file.createNewFile()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"mrmrinal"},"content":"                Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"mrmrinal"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"mrmrinal"},"content":"                    String task \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"mrmrinal"},"content":"                    if (task.startsWith(\"T\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"mrmrinal"},"content":"                        items.add(new ToDo(","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"mrmrinal"},"content":"                                task.substring(8), Integer.parseInt(task.substring(4, 5))));","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"mrmrinal"},"content":"                    } else if (task.startsWith(\"D\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"mrmrinal"},"content":"                        String taskSubstring \u003d task.substring((8));","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"mrmrinal"},"content":"                        items.add(new Deadline(","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"mrmrinal"},"content":"                                taskSubstring.substring(0, taskSubstring.indexOf(\"|\")),","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"mrmrinal"},"content":"                                taskSubstring.substring(taskSubstring.indexOf(\"|\") + 2),","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"mrmrinal"},"content":"                                Integer.parseInt(task.substring(4, 5))","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"mrmrinal"},"content":"                        ));","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"mrmrinal"},"content":"                    } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"mrmrinal"},"content":"                        String taskSubstring \u003d task.substring((8));","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"mrmrinal"},"content":"                        items.add(new Event(","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"mrmrinal"},"content":"                                taskSubstring.substring(0, taskSubstring.indexOf(\"|\")),","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"mrmrinal"},"content":"                                taskSubstring.substring(taskSubstring.indexOf(\"|\") + 2),","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"mrmrinal"},"content":"                                Integer.parseInt(task.substring(4, 5))","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"mrmrinal"},"content":"                        ));","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"mrmrinal"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"mrmrinal"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"mrmrinal"},"content":"            return items;","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"mrmrinal"},"content":"        } catch (Exception e){","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"mrmrinal"},"content":"            fixFileFolderProblems();","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"mrmrinal"},"content":"            return items;","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"mrmrinal"},"content":"     * Adds New task to storage","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"mrmrinal"},"content":"     * @param task Task to be added to storage","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"mrmrinal"},"content":"    public void addNewTask(Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"mrmrinal"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"mrmrinal"},"content":"            String input \u003d task.toStorageString();","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"mrmrinal"},"content":"            Files.write(Paths.get(path), input.getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"mrmrinal"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"mrmrinal"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"mrmrinal"},"content":"     * Writes tasks in ArrayList to the offline storage","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"mrmrinal"},"content":"     * @param taskList Tasklist storing all tasks in the bot","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"mrmrinal"},"content":"    public void writeToFile(TaskList taskList){","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"mrmrinal"},"content":"        try{","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"mrmrinal"},"content":"            FileWriter fw \u003d new FileWriter(path, false);","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"mrmrinal"},"content":"            PrintWriter pw\u003d new PrintWriter(fw, false);","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"mrmrinal"},"content":"            pw.flush();","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"mrmrinal"},"content":"            pw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"mrmrinal"},"content":"            fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"mrmrinal"},"content":"            for(int i \u003d 0; i \u003c taskList.getSize(); i++){","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"mrmrinal"},"content":"                String input \u003d taskList.getTask(i + 1).toStorageString();","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"mrmrinal"},"content":"                Files.write(Paths.get(path), input.getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"mrmrinal"},"content":"        }  catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"mrmrinal"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"mrmrinal"},"content":"    private void fixFileFolderProblems(){","lastModifiedDate":"2021-08-30"},{"lineNumber":113,"author":{"gitId":"mrmrinal"},"content":"        try{","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"mrmrinal"},"content":"            if(!Files.isDirectory(Path.of(pathFolder))){","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"mrmrinal"},"content":"                Files.createDirectory(Path.of(pathFolder));","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"mrmrinal"},"content":"            } if(!Files.isRegularFile(Path.of(path))){","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"mrmrinal"},"content":"                Files.createFile(Path.of(path));","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"mrmrinal"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"mrmrinal"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"mrmrinal":123}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":" * Class responsible for displaying the output messages the bot gives","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":" * @author mrmrinal","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"public class Ui {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"     * Bot greeting which shows up whenever whenever the bot is instantiated","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"    public void dukeGreeting() {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"        String name \u003d \"JARVIS\";","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"        System.out.println(\"Hello I am \" + name + \".\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"                + \"Is there anything I can do for you Sir?\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"     * Bot message whenever there is an unusual request","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"    public void unusualRequest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"        System.out.println(\"That is a rather unusual looking request sir.\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"                + \"Perhaps you might want to specify \"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"                + \"the kind of task you would like to add.\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"     * Bot message which will display the output the user wants to show","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"     * @param output String outputted from the CLI","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"    public void dukeResponse(String output) {","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"        System.out.println(output);","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"     * Message shown when the bot exists","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"    public void farewellMessage() {","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"        System.out.println(\"Goodbye Sir! Will take good \"","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"                + \"care of your garden in the meantime.\");","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"mrmrinal":44}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke.exception;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"  public DukeException(String errorMessage){","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"    super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mrmrinal":7}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":" * Class that is used in order to create a new","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":" * @author mrmrinal","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"    private String by;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"    private LocalDate time;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"     * Constructor to instantiate new deadline object","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"     * @param description Description of the deadline task","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"     * @param by Due date of the deadline task","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"        this.time \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"        this.by \u003d this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"     * Constructor to instantiate new deadline object","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"     * @param description Description of the deadline task","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"     * @param by Due date of the deadline task","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"     * @param done Status of whether task was done or not","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"    public Deadline(String description, String by, int done) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"      super(description, done);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"      this.by \u003d by;","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"     * Method to return String that has been stored in the Arraylist","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"     * @return String stored in the ArrayList","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"mrmrinal"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"mrmrinal"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"mrmrinal"},"content":"    public String toStorageString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"mrmrinal"},"content":"        int done \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"mrmrinal"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"mrmrinal"},"content":"            done \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"mrmrinal"},"content":"        return \"D | \" + done + \" | \" +  this.description","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"mrmrinal"},"content":"                + \" | \" + this.by + \"\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mrmrinal":57}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":" * Event Task class used by bot","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":" * @author mrmrinal","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"    protected String at;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"     * Creates new Event task","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"     * @param description Description of Event","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"     * @param at Time of Event","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"     * Creates new Event task","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"     * @param description Description of Event","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"     * @param at Time of Event","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"     * @param done Status of Event","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"    public Event(String description, String at, int done) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"        super(description, done);","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"                + \" (at: \" + this.at + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"    public String toStorageString(){","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"        int done \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"        if(this.isDone){","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"mrmrinal"},"content":"            done \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"mrmrinal"},"content":"        return \"E | \" + done + \" | \" +  this.description","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"mrmrinal"},"content":"                + \" | \" + this.at + \"\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mrmrinal":52}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":" * Task class used by bot","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":" * @author mrmrinal","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"   /**","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"    * Constructor of task","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"    *","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"    * @param description Description of task","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"    */","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"   /**","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"    * Constructor of task","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"    *","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"    * @param description Description of task","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"    * @param done Status of Task","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"    */","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"    public Task(String description, int done){","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"        this.isDone \u003d done \u003d\u003d 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"     * Get description of task","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"     * @return String description of task","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"        return this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"     * Return status of task as string","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"mrmrinal"},"content":"     * @return String status of tassk","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"mrmrinal"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"mrmrinal"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"mrmrinal"},"content":"     * Change task status to done","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"mrmrinal"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"mrmrinal"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"mrmrinal"},"content":"     * Method to return String that has been stored in the Arraylist","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"mrmrinal"},"content":"     * @return String stored in the ArrayList","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"mrmrinal"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"mrmrinal"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription() ;","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"mrmrinal"},"content":"     * Method to return String that has been stored in the txt File","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"mrmrinal"},"content":"     * @return String stored in the .txt file","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"mrmrinal"},"content":"    public String toStorageString(){","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"mrmrinal"},"content":"        int done \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"mrmrinal"},"content":"        if(this.isDone){","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"mrmrinal"},"content":"            done \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"mrmrinal"},"content":"        return \"T | \" + done +  \" | \" +  this.description + \"\\n\";","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mrmrinal":82}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"import java.util.List;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":" * Active list structure used to store all active tasks","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":" * @author mrmrinal","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"public class TaskList {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"    ","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"    private List\u003cTask\u003e items \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"     * Creates new TaskList instance","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"     * @param items Task List autofilled from the storage","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"    public TaskList(List\u003cTask\u003e items){","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"        this.items \u003d items;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"     * Lists all the Tasks down in numerical form","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"    public void list(){","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"        for(int i \u003d 1; i \u003c\u003d items.size(); i++){","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"            System.out.println(i + \". \"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"                    + items.get(i-1).toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"        System.out.println(\"\");","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"mrmrinal"},"content":"     * Marks a specific task as done","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"mrmrinal"},"content":"     * @param n the position of task in the List","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"mrmrinal"},"content":"    public void markDone(int n){","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"mrmrinal"},"content":"        items.get(n).markAsDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"mrmrinal"},"content":"     * Add a new task to the List","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"mrmrinal"},"content":"     * @param task task that user wants to add","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"mrmrinal"},"content":"    public void addTask(Task task){","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"mrmrinal"},"content":"        items.add(task);","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"mrmrinal"},"content":"     * Delete a specific task on the list","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"mrmrinal"},"content":"     * @param task Position of task that user wants to delete","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"mrmrinal"},"content":"    public Task deleteTask(int task){","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"mrmrinal"},"content":"        return items.remove(task - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"mrmrinal"},"content":"     * Get a specific task on the list","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"mrmrinal"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"mrmrinal"},"content":"     * @param task Position of task that user wants to obtain","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"mrmrinal"},"content":"    public Task getTask(int task){","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"mrmrinal"},"content":"        return items.get(task - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"mrmrinal"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"mrmrinal"},"content":"     * Get total number of tasks on the list","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"mrmrinal"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"mrmrinal"},"content":"    public int getSize(){","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"mrmrinal"},"content":"        return items.size();","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"mrmrinal"},"content":"    public void find(String substring){","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"mrmrinal"},"content":"        int list \u003d 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"mrmrinal"},"content":"        for(int i \u003d 1; i \u003c\u003d items.size(); i++){","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"mrmrinal"},"content":"            if(this.getTask(i).description.contains(substring)){","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"mrmrinal"},"content":"                System.out.println(list + \". \" + items.get(i-1).toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"mrmrinal"},"content":"                list++;","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"mrmrinal"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"mrmrinal"},"content":"        if(list \u003d\u003d 1){","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"mrmrinal"},"content":"            System.out.println(\"No such tasks found\");","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"mrmrinal"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"mrmrinal"},"content":"        System.out.println(\"\");","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"mrmrinal":92}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"package duke.task;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":" * Todo Task class used by bot","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":" *","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":" * @author mrmrinal","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"  /**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"   * Creates new Todo task","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"   *","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"   * @param description Description of Event","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"   */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"  public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"      super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"  /**","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"   * Creates new Todo task","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"   *","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"   * @param description Description of Event","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"   * @param done Status of Event","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"   */","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"  public ToDo(String description, int done) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"      super(description, done);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"  }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mrmrinal":33}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"import static duke.Parser.parse;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"    public void deadlineStorageStringTest(){","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"        Task t \u003d new Deadline(\"task 1\", \"2021-08-29\", 0);","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"        Assertions.assertEquals(\"D | 0 | task 1 | 2021-08-29\\n\", t.toStorageString());","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"mrmrinal"},"content":"    public void deadlineToStringTest(){","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"mrmrinal"},"content":"        Task t \u003d new Deadline(\"task 1\", \"2021-08-29\", 0);","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"mrmrinal"},"content":"        Assertions.assertEquals( \"[D][ ] task 1 (by: 2021-08-29)\", t.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"    @Test","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"mrmrinal"},"content":"    public void parserTest(){","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"mrmrinal"},"content":"        Assertions.assertEquals(parse(\"list\"), Duke.RequestType.DEFAULT);","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"mrmrinal"},"content":"        Assertions.assertEquals(parse(\"done 2\"), Duke.RequestType.DONE);","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"mrmrinal"},"content":"        Assertions.assertEquals(parse(\"delete 1\"), Duke.RequestType.DELETE);","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"mrmrinal"},"content":"        Assertions.assertEquals(parse(\"deadline task1 /by 2021-08-09\"), Duke.RequestType.DEADLINE);","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"mrmrinal"},"content":"        Assertions.assertEquals(parse(\"event swimming /at 5:30-6:30\"), Duke.RequestType.EVENT);","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"mrmrinal"},"content":"        Assertions.assertEquals(parse(\"todo buy groceries\"), Duke.RequestType.TODO);","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"mrmrinal"},"content":"        Assertions.assertEquals(parse(\"bybye\"), Duke.RequestType.UNUSUAL);","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"mrmrinal"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"mrmrinal"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"mrmrinal"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"mrmrinal":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mrmrinal"},"content":"deadline reading /by 2026-02-02","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"mrmrinal"},"content":"event marathon /at Saturday 2-5","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"mrmrinal"},"content":"todo send email to mom","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"mrmrinal"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"mrmrinal"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"mrmrinal"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"mrmrinal"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"mrmrinal"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"mrmrinal"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"deadline /by 530","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"mrmrinal"},"content":"event /at 6","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"mrmrinal"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"deadline cs2103 ip /by 2025-02-02","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"mrmrinal"},"content":"event tutorial /at","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"mrmrinal"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"mrmrinal"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"mrmrinal"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"mrmrinal":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"mrmrinal"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"mrmrinal"},"content":"    pause","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"mrmrinal"},"content":"pause","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"mrmrinal":3,"-":20}}]
