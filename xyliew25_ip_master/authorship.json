[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"xyliew25"},"content":"    mainClassName \u003d \"duke.ui.Launcher\"","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xyliew25":16,"-":45}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":" * Represents a personal assistance to manage users\u0027 tasks list.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"    public Duke() {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"     * Sets up the Duke program by instantiating a user interface, a storage and a task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"     * @param filePath File path of the storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"            ui.showError(e.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"xyliew25"},"content":"     * Runs the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"xyliew25"},"content":"    public void run() {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"xyliew25"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"xyliew25"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"xyliew25"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"xyliew25"},"content":"            try {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"xyliew25"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"xyliew25"},"content":"                ui.showOpeningLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"xyliew25"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"xyliew25"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"xyliew25"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"xyliew25"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"xyliew25"},"content":"                ui.showError(e.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"xyliew25"},"content":"            } finally {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"xyliew25"},"content":"                ui.showClosingLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"xyliew25"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"xyliew25"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"xyliew25"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"xyliew25"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"xyliew25"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"xyliew25"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"xyliew25"},"content":"            return c.executeAndGetResponse(tasks, ui, storage);","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"xyliew25"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"xyliew25"},"content":"            return e.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"xyliew25"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"xyliew25":70,"-":4}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"    private final Duke duke \u003d new Duke(\"data/duke.txt\");","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"            stage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"xyliew25":32}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":" * Represents a command in the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"     * Defines the execution of this command.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"     * @param tasks   Tasks of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"     * @param ui      Ui of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"     * @param storage Storage of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"     * @throws DukeException If there is/are invalid argument(s) passed into this command,","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"     *                       or changes cannot be saved to storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"     * Returns the response of this command.","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"     * @param tasks   Tasks of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"     * @param ui      Ui of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"     * @param storage Storage of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"     * @throws DukeException If there is/are invalid argument(s) passed into this command,","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"     *                       or changes cannot be saved to storage.","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"    public abstract String executeAndGetResponse(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"     * Returns true if this command is not the ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"xyliew25"},"content":"     * @return true if this command is not the ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"xyliew25"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xyliew25":40}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":" * Represents the DeadlineCommand in the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"    private final Deadline deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"     * Constructs a DeadlineCommand to create a Deadline task with the given description and deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"     * @param description Description of the Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"     * @param by          Deadline of the Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"    public DeadlineCommand(String description, LocalDate by) {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"        this.deadline \u003d new Deadline(description, by);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"     * Defines the execution of the DeadlineCommand where a Deadline task is created and added to tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"     * @param tasks   Tasks of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"     * @param ui      Ui of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"     * @param storage Storage of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"     * @throws DukeException If changes cannot be saved to storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"xyliew25"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"xyliew25"},"content":"        tasks.addTask(this.deadline);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"xyliew25"},"content":"        String response \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"xyliew25"},"content":"                + \"       \" + this.deadline + \"\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"xyliew25"},"content":"                + \"     Now you have \"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"xyliew25"},"content":"                + tasks.getSize() + (tasks.getSize() \u003e 1 ? \" tasks\" : \" task\")","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"xyliew25"},"content":"                + \" in the list.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"xyliew25"},"content":"        ui.showResponse(response);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"xyliew25"},"content":"        storage.save(tasks.getTaskList());","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"xyliew25"},"content":"     * Returns the response after creating a Deadline task.","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"xyliew25"},"content":"     * @param tasks   Tasks of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"xyliew25"},"content":"     * @param ui      Ui of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"xyliew25"},"content":"     * @param storage Storage of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"xyliew25"},"content":"     * @throws DukeException If changes cannot be saved to storage.","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"xyliew25"},"content":"    public String executeAndGetResponse(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"xyliew25"},"content":"        tasks.addTask(this.deadline);","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"xyliew25"},"content":"        String response \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"xyliew25"},"content":"                + \"       \" + this.deadline + \"\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"xyliew25"},"content":"                + \"     Now you have \"","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"xyliew25"},"content":"                + tasks.getSize() + (tasks.getSize() \u003e 1 ? \" tasks\" : \" task\")","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"xyliew25"},"content":"                + \" in the list.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"xyliew25"},"content":"        storage.save(tasks.getTaskList());","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"xyliew25"},"content":"        return response;","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"xyliew25"},"content":"     * Returns false as this command is not the ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"xyliew25"},"content":"     * @return false as this command is not the ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"xyliew25"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"xyliew25"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xyliew25":81}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":" * Represents the DeleteCommand in the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"    private final int deleteTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"     * Constructs a DeleteCommand to delete a given task in tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"     * @param deleteTask Index of task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"    public DeleteCommand(int deleteTask) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"        this.deleteTask \u003d deleteTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"     * Defines the execution of the DeleteCommand where the given task is deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"     * @param tasks   Tasks of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"     * @param ui      Ui of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"     * @param storage Storage of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"     * @throws DukeException If the given task does not exist, or changes cannot be saved to storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"        // Check for invalid task argument","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"        if (deleteTask \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"xyliew25"},"content":"            throw new InvalidArgumentException(tasks.getSize());","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"xyliew25"},"content":"        String response \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"xyliew25"},"content":"                + \"       \" + tasks.getTask(deleteTask) + \"\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"xyliew25"},"content":"                + \"     Now you have \"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"xyliew25"},"content":"                + (tasks.getSize() - 1) + (tasks.getSize() - 1 \u003e 1 ? \" tasks\" : \" task\")","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"xyliew25"},"content":"                + \" in the list.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"xyliew25"},"content":"        ui.showResponse(response);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"xyliew25"},"content":"        tasks.deleteTask(deleteTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"xyliew25"},"content":"        storage.save(tasks.getTaskList());","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"xyliew25"},"content":"     * Returns the response after deleting the given task.","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"xyliew25"},"content":"     * @param tasks   Tasks of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"xyliew25"},"content":"     * @param ui      Ui of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"xyliew25"},"content":"     * @param storage Storage of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"xyliew25"},"content":"     * @throws DukeException If the given task does not exist, or changes cannot be saved to storage.","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"xyliew25"},"content":"    public String executeAndGetResponse(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"xyliew25"},"content":"        // Check for invalid task argument","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"xyliew25"},"content":"        if (deleteTask \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"xyliew25"},"content":"            throw new InvalidArgumentException(tasks.getSize());","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"xyliew25"},"content":"        String response \u003d \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"xyliew25"},"content":"                + \"       \" + tasks.getTask(deleteTask) + \"\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"xyliew25"},"content":"                + \"     Now you have \"","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"xyliew25"},"content":"                + (tasks.getSize() - 1) + (tasks.getSize() - 1 \u003e 1 ? \" tasks\" : \" task\")","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"xyliew25"},"content":"                + \" in the list.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"xyliew25"},"content":"        tasks.deleteTask(deleteTask);","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"xyliew25"},"content":"        storage.save(tasks.getTaskList());","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"xyliew25"},"content":"        return response;","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"xyliew25"},"content":"     * Returns false as this command is not the ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"xyliew25"},"content":"     * @return false as this command is not the ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"xyliew25"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"xyliew25"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xyliew25":88}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":" * Represents the DoneCommand in the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"    private final int doneTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"     * Constructs a DoneCommand to mark a given task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"     * @param doneTask Index of task to be marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"    public DoneCommand(int doneTask) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"        this.doneTask \u003d doneTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"     * Defines the execution of the DoneCommand where the given task is marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"     * @param tasks   Tasks of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"     * @param ui      Ui of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"     * @param storage Storage of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"     * @throws DukeException If the given task does not exist, or changes cannot be saved to storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"        // Check for invalid task argument","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"        if (doneTask \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"xyliew25"},"content":"            throw new InvalidArgumentException(tasks.getSize());","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"xyliew25"},"content":"        tasks.getTask(doneTask).markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"xyliew25"},"content":"        String response \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"xyliew25"},"content":"                + \"       \" + tasks.getTask(doneTask);","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"xyliew25"},"content":"        ui.showResponse(response);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"xyliew25"},"content":"        storage.save(tasks.getTaskList());","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"xyliew25"},"content":"     * Returns the response after marking the given task as done.","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"xyliew25"},"content":"     * @param tasks   Tasks of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"xyliew25"},"content":"     * @param ui      Ui of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"xyliew25"},"content":"     * @param storage Storage of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"xyliew25"},"content":"     * @throws DukeException If the given task does not exist, or changes cannot be saved to storage.","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"xyliew25"},"content":"    public String executeAndGetResponse(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"xyliew25"},"content":"        // Check for invalid task argument","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"xyliew25"},"content":"        if (doneTask \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"xyliew25"},"content":"            throw new InvalidArgumentException(tasks.getSize());","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"xyliew25"},"content":"        tasks.getTask(doneTask).markAsDone();","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"xyliew25"},"content":"        String response \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"xyliew25"},"content":"                + \"       \" + tasks.getTask(doneTask);","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"xyliew25"},"content":"        storage.save(tasks.getTaskList());","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"xyliew25"},"content":"        return response;","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"xyliew25"},"content":"     * Returns false as this command is not the ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"xyliew25"},"content":"     * @return false as this command is not the ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"xyliew25"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"xyliew25"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xyliew25":82}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":" * Represents the EventCommand in the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"    private final Event event;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"     * Constructs a EventCommand to create an Event task with the given description and datetime.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"     * @param description Description of the Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"     * @param at          Datetime of the Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"    public EventCommand(String description, String at) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"        this.event \u003d new Event(description, at);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"     * Defines the execution of the EventCommand where an Event task is created and added to tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"     * @param tasks   Tasks of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"     * @param ui      Ui of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"     * @param storage Storage of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"     * @throws DukeException If changes cannot be saved to storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"        tasks.addTask(event);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"xyliew25"},"content":"        String response \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"xyliew25"},"content":"                + \"       \" + event + \"\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"xyliew25"},"content":"                + \"     Now you have \"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"xyliew25"},"content":"                + tasks.getSize() + (tasks.getSize() \u003e 1 ? \" tasks\" : \" task\")","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"xyliew25"},"content":"                + \" in the list.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"xyliew25"},"content":"        ui.showResponse(response);","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"xyliew25"},"content":"        storage.save(tasks.getTaskList());","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"xyliew25"},"content":"     * Returns the response after creating an Event task.","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"xyliew25"},"content":"     * @param tasks   Tasks of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"xyliew25"},"content":"     * @param ui      Ui of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"xyliew25"},"content":"     * @param storage Storage of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"xyliew25"},"content":"     * @throws DukeException If changes cannot be saved to storage.","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"xyliew25"},"content":"    public String executeAndGetResponse(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"xyliew25"},"content":"        tasks.addTask(event);","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"xyliew25"},"content":"        String response \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"xyliew25"},"content":"                + \"       \" + event + \"\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"xyliew25"},"content":"                + \"     Now you have \"","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"xyliew25"},"content":"                + tasks.getSize() + (tasks.getSize() \u003e 1 ? \" tasks\" : \" task\")","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"xyliew25"},"content":"                + \" in the list.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"xyliew25"},"content":"        storage.save(tasks.getTaskList());","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"xyliew25"},"content":"        return response;","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"xyliew25"},"content":"     * Returns false as this command is not the ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"xyliew25"},"content":"     * @return false as this command is not the ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"xyliew25"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"xyliew25"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xyliew25":79}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":" * Represents an execution where the Duke program is terminated.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"     * Defines the execution of the DeadlineCommand where a Deadline task is created and added to tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"     * @param tasks   Tasks of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"     * @param ui      Ui of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"     * @param storage Storage of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"        String response \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"        ui.showResponse(response);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"        ui.closeScanner();","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"     * Returns the response after exiting the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"     * @param tasks   Tasks of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"     * @param ui      Ui of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"     * @param storage Storage of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"    public String executeAndGetResponse(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"        String response \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"        return response;","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"xyliew25"},"content":"     * Returns true as this command is not the ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"xyliew25"},"content":"     * @return true as this command is not the ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"xyliew25"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"xyliew25"},"content":"        return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xyliew25":47}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":" * Represents the FindCommand in the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"    private final String keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"     * Construct a FindCommand to find all task(s) with the given keyword in the list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"     * @param keyword Keyword to be used to find all task(s) in the list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"     * Defines the execution of the FindCommand where all task(s) with the given keyword is/are listed.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"     * @param tasks Tasks of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"     * @param ui Ui of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"     * @param storage Storage of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"            Task currTask \u003d tasks.getTask(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"            if (currTask.toString().contains(keyword)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"xyliew25"},"content":"                matchingTasks.addTask(currTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"xyliew25"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"xyliew25"},"content":"        String response;","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"xyliew25"},"content":"        if (matchingTasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"xyliew25"},"content":"            response \u003d \"There are no matching tasks.\";","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"xyliew25"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"xyliew25"},"content":"            response \u003d \"Here are the matching tasks in your list:\\n\" + matchingTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"xyliew25"},"content":"        ui.showResponse(response);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"xyliew25"},"content":"     * Returns the response after finding all task(s) with the given keyword.","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"xyliew25"},"content":"     * @param tasks Tasks of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"xyliew25"},"content":"     * @param ui Ui of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"xyliew25"},"content":"     * @param storage Storage of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"xyliew25"},"content":"    public String executeAndGetResponse(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"xyliew25"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"xyliew25"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"xyliew25"},"content":"            Task currTask \u003d tasks.getTask(i);","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"xyliew25"},"content":"            if (currTask.toString().contains(keyword)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"xyliew25"},"content":"                matchingTasks.addTask(currTask);","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"xyliew25"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"xyliew25"},"content":"        String response;","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"xyliew25"},"content":"        if (matchingTasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"xyliew25"},"content":"            response \u003d \"There are no matching tasks.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"xyliew25"},"content":"        } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"xyliew25"},"content":"            response \u003d \"Here are the matching tasks in your list:\\n\" + matchingTasks;","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"xyliew25"},"content":"        return response;","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"xyliew25"},"content":"     * Returns false as this command is not the ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"xyliew25"},"content":"     * @return false as this command is not the ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"xyliew25"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"xyliew25"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"xyliew25":82}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":" * Represents the ListCommand in the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"     * Defines the execution of the ListCommand where all created tasks are listed.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"     * @param tasks   Tasks of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"     * @param ui      Ui of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"     * @param storage Storage of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"        String response;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"            response \u003d \"You do not have any tasks.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"            response \u003d \"Here are the tasks in your list:\\n\" + tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"        ui.showResponse(response);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"     * Returns listings.","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"     * @param tasks   Tasks of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"     * @param ui      Ui of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"     * @param storage Storage of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"xyliew25"},"content":"    public String executeAndGetResponse(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"xyliew25"},"content":"        String response;","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"xyliew25"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"xyliew25"},"content":"            response \u003d \"You do not have any tasks.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"xyliew25"},"content":"        } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"xyliew25"},"content":"            response \u003d \"Here are the tasks in your list:\\n\" + tasks;","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"xyliew25"},"content":"        return response;","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"xyliew25"},"content":"     * Returns false as this command is not the ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"xyliew25"},"content":"     * @return false as this command is not the ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"xyliew25"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"xyliew25"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xyliew25":56}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":" * Represents the TodoCommand in the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"    private final Todo todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"     * Constructs a TodoCommand to create a Todo task with the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"     * @param description Description of the Todo task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"    public TodoCommand(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"        this.todo \u003d new Todo(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"     * Defines the execution of the TodoCommand where a Todo task is created and added to tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"     * @param tasks   Tasks of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"     * @param ui      Ui of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"     * @param storage Storage of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"     * @throws DukeException If changes cannot be saved to storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"xyliew25"},"content":"        String response \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"xyliew25"},"content":"                + \"       \" + todo + \"\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"xyliew25"},"content":"                + \"     Now you have \"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"xyliew25"},"content":"                + tasks.getSize() + (tasks.getSize() \u003e 1 ? \" tasks\" : \" task\")","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"xyliew25"},"content":"                + \" in the list.\";","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"xyliew25"},"content":"        ui.showResponse(response);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"xyliew25"},"content":"        storage.save(tasks.getTaskList());","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"xyliew25"},"content":"     * Returns the response after creating a Todo task.","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"xyliew25"},"content":"     * @param tasks   Tasks of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"xyliew25"},"content":"     * @param ui      Ui of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"xyliew25"},"content":"     * @param storage Storage of the Duke program.","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"xyliew25"},"content":"     * @throws DukeException If changes cannot be saved to storage.","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"xyliew25"},"content":"    public String executeAndGetResponse(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"xyliew25"},"content":"        tasks.addTask(todo);","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"xyliew25"},"content":"        String response \u003d \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"xyliew25"},"content":"                + \"       \" + todo + \"\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"xyliew25"},"content":"                + \"     Now you have \"","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"xyliew25"},"content":"                + tasks.getSize() + (tasks.getSize() \u003e 1 ? \" tasks\" : \" task\")","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"xyliew25"},"content":"                + \" in the list.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"xyliew25"},"content":"        storage.save(tasks.getTaskList());","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"xyliew25"},"content":"        return response;","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"xyliew25"},"content":"     * Returns false as this command is not the ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"xyliew25"},"content":"     * @return false as this command is not the ExitCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"xyliew25"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"xyliew25"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xyliew25":78}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":" * Signals that an exception in the Duke program has occurred.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"     * Constructs a DukeException with the given message.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"     * @param message Message of this DukeException.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"     * Returns a description of this DukeException.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"     * @return a description of this DukeException.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"        return \"OOPs!!! \" + super.getMessage();","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"xyliew25":25}},{"path":"src/main/java/duke/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":" * Signals that the description is missing when parsing a command.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"public class EmptyDescriptionException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"     * Constructs an EmptyDescriptionException for the given task.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"     * @param task Task that is missing a description.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"    public EmptyDescriptionException(String task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"        super(\"The description of a \" + task + \" cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"xyliew25":15}},{"path":"src/main/java/duke/exception/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":" * Signals that the given argument format is invalid when parsing a command, or creating a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"public class InvalidArgumentException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"     * Constructs an InvalidArgumentException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"     * @param numOfTask Number of task in tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"    public InvalidArgumentException(int numOfTask) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"        super(numOfTask \u003c 0","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"                ? \"Please input a positive number.\"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"                : numOfTask \u003d\u003d 0","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"                ? \"You do not have any tasks.\"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"                : numOfTask \u003d\u003d 1","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"                ? \"You only have \" + numOfTask + \" task.\"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"                : \"You only have \" + numOfTask + \" tasks.\"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"        );","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"xyliew25":22}},{"path":"src/main/java/duke/exception/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":" * Signals that the given date format is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"public class InvalidDateFormatException extends DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"     * Constructs an InvalidDateFormatException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"    public InvalidDateFormatException() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"        super(\"Please input date in yyyy-mm-dd format.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"xyliew25":13}},{"path":"src/main/java/duke/exception/LoadingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":" * Signals that an exception has occurred when loading the storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"public class LoadingException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"     * Constructs a LoadingException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"    public LoadingException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"        super(\"Duke forgot about your old task list liao, Duke create a new one for you ah!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xyliew25":13}},{"path":"src/main/java/duke/exception/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":" * Signals that there is a missing argument when parsing a command.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"public class MissingArgumentException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"     * Constructs a MissingArgumentException specifying which argument is missing for the given task.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"     * @param task     Task that is missing an argument.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"     * @param argument Argument that is missing.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"    public MissingArgumentException(String task, String argument) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"        super(task + \" is missing the \" + argument + \" argument.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"xyliew25":16}},{"path":"src/main/java/duke/exception/SavingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":" * Signals that an exception has occurred when saving to storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"public class SavingException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"     * Constructs a SavingException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"    public SavingException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"        super(\"Duke\u0027s memory full liao, can\u0027t memorize your new task liao!!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xyliew25":13}},{"path":"src/main/java/duke/exception/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":" * Signals that an exception has occurred when initializing a storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"public class StorageException extends DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"     * Constructs a StorageException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"    public StorageException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"        super(\"Duke is having goldfish memory today so Duke is not going to memorize your task blekk!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xyliew25":13}},{"path":"src/main/java/duke/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":" * Signals that an unknown command has been encountered.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"     * Constructs an UnknownCommandException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"xyliew25":13}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":" * Represents the Deadline task in the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"     * Constructs a Deadline task with the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"     * @param description Description of the Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"     * @param by          Deadline of the Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"     * Returns the string representation of this Deadline task to be saved in storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"     * @return the string representation of this Deadline task to be saved in storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"    public String toStringData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"        return \"D | \" + super.toStringData() + \" | \" + this.by;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"     * Returns a description of this Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"xyliew25"},"content":"     * @return a description of this Deadline task.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"xyliew25"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"xyliew25"},"content":"        return \"[D]\"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"xyliew25"},"content":"                + super.toString()","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"xyliew25"},"content":"                + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"xyliew25":44}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":" * Represents the Event task in the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"    protected String at;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"     * Constructs an Event task with the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"     * @param description Description of the Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"     * @param at          Datetime of the Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"     * Returns the string representation of this Event task to be saved in storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"     * @return the string representation of this Event task to be saved in storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"    public String toStringData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"        return \"E | \" + super.toStringData() + \" | \" + this.at;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"     * Returns a description of this Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"     * @return a description of this Event task.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"xyliew25"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"xyliew25"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"xyliew25":39}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":" * Represents a task in the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"     * Constructs a task with the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"     * @param description Description of this task.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"     * Marks this task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"     * Returns the string representation of this task to be saved in storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"     * @return the string representation of this task to be saved in storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"xyliew25"},"content":"    public String toStringData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"xyliew25"},"content":"        return (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"xyliew25"},"content":"     * Returns a description of this task.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"xyliew25"},"content":"     * @return a description of this task.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"xyliew25"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"xyliew25"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"xyliew25":49}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":" * Represents the Todo task in the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"     * Constructs a Todo task with the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"     * @param description Description of the Todo task.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"     * Returns the string representation of this Todo task to be saved in storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"     * @return the string representation of this Todo task to be saved in storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"    public String toStringData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"        return \"T | \" + super.toStringData();","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"     * Returns a description of this Todo task.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"     * @return a description of this Todo task.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"xyliew25":35}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"xyliew25"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"xyliew25"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"xyliew25"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"xyliew25"},"content":"    private void flip() {","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"xyliew25"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"xyliew25"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"xyliew25"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"xyliew25"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"xyliew25"},"content":"     * Returns a user dialog with given image and text.","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"xyliew25"},"content":"     * @param text Text in the user dialog.","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"xyliew25"},"content":"     * @param img Image in the user dialog.","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"xyliew25"},"content":"     * @return user dialog with given image and text.","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"xyliew25"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"xyliew25"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"xyliew25"},"content":"     * Returns a Duke dialog with given image and text.","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"xyliew25"},"content":"     * @param text Text in the user dialog.","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"xyliew25"},"content":"     * @param img Image in the user dialog.","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"xyliew25"},"content":"     * @return Duke dialog with given image and text.","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"xyliew25"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"xyliew25"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"xyliew25"},"content":"        db.flip();","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"xyliew25"},"content":"        return db;","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"xyliew25":75}},{"path":"src/main/java/duke/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import duke.Main;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"public class Launcher {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"xyliew25":13}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"     * Greets users.","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"xyliew25"},"content":"        String welcome \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"xyliew25"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcome, dukeImage));","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"xyliew25"},"content":"     * Sets Duke for the current window.","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"xyliew25"},"content":"     * @param d Duke for the current window.","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"xyliew25"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"xyliew25"},"content":"        duke \u003d d;","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"xyliew25"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"xyliew25"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"xyliew25"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"xyliew25"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"xyliew25"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"xyliew25"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"xyliew25"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"xyliew25"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"xyliew25"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"xyliew25"},"content":"        );","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"xyliew25"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"xyliew25":62}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"import duke.exception.EmptyDescriptionException;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"import duke.exception.InvalidDateFormatException;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"import duke.exception.MissingArgumentException;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":" * Represents the parser in the Duke program to parse commands by users.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"    private static final String DONE_COMMAND \u003d \"done\";","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"    private static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"xyliew25"},"content":"     * Parses the given raw command.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"xyliew25"},"content":"     * @param fullCommand Raw command.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"xyliew25"},"content":"     * @return Parsed command.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"xyliew25"},"content":"     * @throws DukeException If there is/are missing or invalid argument(s).","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"xyliew25"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"xyliew25"},"content":"        String[] commandComponents \u003d fullCommand.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"xyliew25"},"content":"        String command \u003d commandComponents[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"xyliew25"},"content":"        // Command arguments","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"xyliew25"},"content":"        int task;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"xyliew25"},"content":"        String description;","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"xyliew25"},"content":"        LocalDate by;","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"xyliew25"},"content":"        String at;","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"xyliew25"},"content":"        String arguments;","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"xyliew25"},"content":"        String[] argumentComponents;","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"xyliew25"},"content":"        String keyword;","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"xyliew25"},"content":"        switch (command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"xyliew25"},"content":"        case Parser.DONE_COMMAND:","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"xyliew25"},"content":"            // Check for missing task argument","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"xyliew25"},"content":"            if (commandComponents.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"xyliew25"},"content":"                throw new MissingArgumentException(\"Done\", \"task\");","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"xyliew25"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"xyliew25"},"content":"            // Extract task argument","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"xyliew25"},"content":"            task \u003d Integer.parseInt(commandComponents[1]) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"xyliew25"},"content":"            // Check for invalid task argument","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"xyliew25"},"content":"            if (task \u003c 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"xyliew25"},"content":"                throw new InvalidArgumentException(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"xyliew25"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"xyliew25"},"content":"            // If pass all checking, create and return done command obj","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"xyliew25"},"content":"            return new DoneCommand(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"xyliew25"},"content":"        case Parser.DELETE_COMMAND:","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"xyliew25"},"content":"            // Check for missing task argument","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"xyliew25"},"content":"            if (commandComponents.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"xyliew25"},"content":"                throw new MissingArgumentException(\"Delete\", \"task\");","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"xyliew25"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"xyliew25"},"content":"            // Extract task argument","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"xyliew25"},"content":"            task \u003d Integer.parseInt(commandComponents[1]) - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"xyliew25"},"content":"            // Check for invalid task argument","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"xyliew25"},"content":"            if (task \u003c 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"xyliew25"},"content":"                throw new InvalidArgumentException(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"xyliew25"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"xyliew25"},"content":"            // If pass all checking, create and return delete command obj","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"xyliew25"},"content":"            return new DeleteCommand(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"xyliew25"},"content":"        case Parser.FIND_COMMAND:","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"xyliew25"},"content":"            // Check for missing keyword argument","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"xyliew25"},"content":"            if (commandComponents.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"xyliew25"},"content":"                throw new MissingArgumentException(\"Find\", \"keyword\");","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"xyliew25"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"xyliew25"},"content":"            // Extract keyword argument","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"xyliew25"},"content":"            keyword \u003d commandComponents[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"xyliew25"},"content":"            // If pass all checking, create and return find command obj","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"xyliew25"},"content":"            return new FindCommand(keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"xyliew25"},"content":"        case Parser.DEADLINE_COMMAND:","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"xyliew25"},"content":"            // Check for empty description","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"xyliew25"},"content":"            if (commandComponents.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"xyliew25"},"content":"                throw new EmptyDescriptionException(\"Deadline\");","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"xyliew25"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"xyliew25"},"content":"            arguments \u003d fullCommand.split(\" \", 2)[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"xyliew25"},"content":"            argumentComponents \u003d arguments.split(\" /by \");","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"xyliew25"},"content":"            // Extract description argument","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"xyliew25"},"content":"            description \u003d argumentComponents[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"xyliew25"},"content":"            // Check for missing by argument","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"xyliew25"},"content":"            if (argumentComponents.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"xyliew25"},"content":"                throw new MissingArgumentException(\"Deadline\", \"/by\");","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"xyliew25"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"xyliew25"},"content":"            // Extract and parse by argument","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"xyliew25"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"xyliew25"},"content":"                by \u003d LocalDate.parse(arguments.split(\" /by \")[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"xyliew25"},"content":"            } catch (DateTimeParseException err) {","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"xyliew25"},"content":"                throw new InvalidDateFormatException();","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"xyliew25"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"xyliew25"},"content":"            // If pass all checking, create and return deadline command obj","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"xyliew25"},"content":"            return new DeadlineCommand(description, by);","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"xyliew25"},"content":"        case Parser.EVENT_COMMAND:","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"xyliew25"},"content":"            // Check for missing description","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"xyliew25"},"content":"            if (commandComponents.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"xyliew25"},"content":"                throw new EmptyDescriptionException(\"Event\");","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"xyliew25"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"xyliew25"},"content":"            arguments \u003d fullCommand.split(\" \", 2)[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"xyliew25"},"content":"            argumentComponents \u003d arguments.split(\" /at \");","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"xyliew25"},"content":"            // Extract description argument","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"xyliew25"},"content":"            description \u003d argumentComponents[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"xyliew25"},"content":"            if (argumentComponents.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"xyliew25"},"content":"                throw new MissingArgumentException(\"Event\", \"/at\");","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"xyliew25"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"xyliew25"},"content":"            // Extract at argument","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"xyliew25"},"content":"            at \u003d arguments.split(\" /at \")[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"xyliew25"},"content":"            // If pass all checking, create and return event command obj","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"xyliew25"},"content":"            return new EventCommand(description, at);","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"xyliew25"},"content":"        case Parser.TODO_COMMAND:","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"xyliew25"},"content":"            // Check for missing description","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"xyliew25"},"content":"            if (commandComponents.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"xyliew25"},"content":"                throw new EmptyDescriptionException(\"Todo\");","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"xyliew25"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"xyliew25"},"content":"            // Extract description argument","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"xyliew25"},"content":"            description \u003d fullCommand.split(\" \", 2)[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"xyliew25"},"content":"            // If pass all checking, create and return event command obj","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"xyliew25"},"content":"            return new TodoCommand(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"xyliew25"},"content":"        case Parser.LIST_COMMAND:","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"xyliew25"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"xyliew25"},"content":"        case Parser.EXIT_COMMAND:","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"xyliew25"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"xyliew25"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"xyliew25"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xyliew25":153}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import java.io.File;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"import duke.exception.LoadingException;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"import duke.exception.SavingException;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"import duke.exception.StorageException;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":" * Represents the storage in the Duke program to store tasks created by users.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"    private final File file;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"     * Constructs a Storage for the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"     * @param filePath File path of the storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"     * @throws DukeException If file path does not exist.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"    public Storage(String filePath) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"        // Ensure parent directories exist","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"        String[] filePathComponents \u003d filePath.split(\"/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"        String filePathTemp \u003d filePathComponents[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"xyliew25"},"content":"        for (int i \u003d 0; i \u003c filePathComponents.length - 1; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"xyliew25"},"content":"            File dir \u003d new File(filePathTemp);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"xyliew25"},"content":"            if (!dir.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"xyliew25"},"content":"                dir.mkdir();","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"xyliew25"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"xyliew25"},"content":"            filePathTemp +\u003d filePathComponents[i + 1];","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"xyliew25"},"content":"        // Ensure file exists","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"xyliew25"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"xyliew25"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"xyliew25"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"xyliew25"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"xyliew25"},"content":"            throw new StorageException();","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"xyliew25"},"content":"     * Loads saved tasks from the storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"xyliew25"},"content":"     * @return Tasks saved in the storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"xyliew25"},"content":"     * @throws DukeException If saved tasks cannot be retrieved from storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"xyliew25"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"xyliew25"},"content":"        // Initialize task list","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"xyliew25"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"xyliew25"},"content":"        // Instantiate scanner obj","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"xyliew25"},"content":"        Scanner scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"xyliew25"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"xyliew25"},"content":"            scanner \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"xyliew25"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"xyliew25"},"content":"            throw new LoadingException();","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"xyliew25"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"xyliew25"},"content":"            // Extract task components","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"xyliew25"},"content":"            String taskRaw \u003d scanner.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"xyliew25"},"content":"            String[] taskComponents \u003d taskRaw.split(\" \\\\| \");","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"xyliew25"},"content":"            String taskType \u003d taskComponents[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"xyliew25"},"content":"            String taskStatus \u003d taskComponents[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"xyliew25"},"content":"            String taskDescription \u003d taskComponents[2];","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"xyliew25"},"content":"            // Create task","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"xyliew25"},"content":"            Task task;","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"xyliew25"},"content":"            switch (taskType) {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"xyliew25"},"content":"            case \"T\":","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"xyliew25"},"content":"                task \u003d new Todo(taskDescription);","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"xyliew25"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"xyliew25"},"content":"            case \"D\":","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"xyliew25"},"content":"                String taskBy \u003d taskComponents[3];","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"xyliew25"},"content":"                task \u003d new Deadline(taskDescription, LocalDate.parse(taskBy));","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"xyliew25"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"xyliew25"},"content":"            default:","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"xyliew25"},"content":"                String taskAt \u003d taskComponents[3];","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"xyliew25"},"content":"                task \u003d new Event(taskDescription, taskAt);","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"xyliew25"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"xyliew25"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"xyliew25"},"content":"            // Mark task as done if applicable","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"xyliew25"},"content":"            if (taskStatus.equals(\"1\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"xyliew25"},"content":"                task.markAsDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"xyliew25"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"xyliew25"},"content":"            // Add task to taskList","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"xyliew25"},"content":"            taskList.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"xyliew25"},"content":"        // Return taskList","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"xyliew25"},"content":"        return taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"xyliew25"},"content":"     * Save tasks to storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"xyliew25"},"content":"     * @param taskList Tasks to be saved to storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"xyliew25"},"content":"     * @throws DukeException If tasks cannot be saved to storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"xyliew25"},"content":"    public void save(ArrayList\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"xyliew25"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"xyliew25"},"content":"            // Instantiate file writer obj","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"xyliew25"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"xyliew25"},"content":"            // Write to file","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"xyliew25"},"content":"            taskList.forEach(task -\u003e {","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"xyliew25"},"content":"                try {","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"xyliew25"},"content":"                    fw.write(task.toStringData() + \"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"xyliew25"},"content":"                } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"xyliew25"},"content":"                    System.err.println();","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"xyliew25"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"xyliew25"},"content":"            });","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"xyliew25"},"content":"            // Close file writer obj","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"xyliew25"},"content":"            fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"xyliew25"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"xyliew25"},"content":"            throw new SavingException();","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xyliew25":134}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":" * Represents the list of tasks in the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"     * Constructs a TaskList with no task.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"     * Constructs a TaskList with given list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"     * @param taskList List of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"     * Returns the list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"     * @return the list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"        return this.taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"xyliew25"},"content":"     * Returns the number of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"xyliew25"},"content":"     * @return the number of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"xyliew25"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"xyliew25"},"content":"        return this.taskList.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"xyliew25"},"content":"     * Returns the task of the given index.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"xyliew25"},"content":"     * @param index Index of the task to be returned.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"xyliew25"},"content":"     * @return the task of the given index.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"xyliew25"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"xyliew25"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"xyliew25"},"content":"     * Adds the given task to the existing list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"xyliew25"},"content":"     * @param task Task to be added to the existing list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"xyliew25"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"xyliew25"},"content":"        this.taskList.add(task);","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"xyliew25"},"content":"     * Deletes the task of the given index from the existing list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"xyliew25"},"content":"     * @param index Index of the task to be deleted from the existing list of tasks","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"xyliew25"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"xyliew25"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"xyliew25"},"content":"     * Returns the string representation of the list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"xyliew25"},"content":"     * @return the string representation of the list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"xyliew25"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"xyliew25"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"xyliew25"},"content":"        String taskListString \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"xyliew25"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"xyliew25"},"content":"            if (i \u003d\u003d this.taskList.size() - 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"xyliew25"},"content":"                taskListString \u003d taskListString + \"     \" + (i + 1) + \".\" + this.taskList.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"xyliew25"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"xyliew25"},"content":"                taskListString \u003d taskListString + \"     \" + (i + 1) + \".\" + this.taskList.get(i) + \"\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"xyliew25"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"xyliew25"},"content":"        return taskListString;","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xyliew25":92}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":" * Represents the user interface of the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"    private final Scanner scanner;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"     * Constructs a user interface for the Duke program.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"    public Ui() {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"     * Greets users.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"        String welcome \u003d \"    ____________________________________________________________\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"                + \"     Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"                + \"     What can I do for you?\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"                + \"    ____________________________________________________________\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"        System.out.println(welcome);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"     * Reads commands inputted by users.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"     * @return the line of command inputted by users.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"        String nextLine \u003d this.scanner.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"xyliew25"},"content":"        while (nextLine.equals(\"\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"xyliew25"},"content":"            nextLine \u003d this.scanner.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"xyliew25"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"xyliew25"},"content":"        return nextLine;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"xyliew25"},"content":"     * Prints error message onto the console.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"xyliew25"},"content":"     * @param errorMsg Error message to be printed onto the console.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"xyliew25"},"content":"    public void showError(String errorMsg) {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"xyliew25"},"content":"        System.out.println(\"     \" + errorMsg);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"xyliew25"},"content":"     * Prints a divider with no new line.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"xyliew25"},"content":"    public void showOpeningLine() {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"xyliew25"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"xyliew25"},"content":"     * Prints a divider with a new line.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"xyliew25"},"content":"    public void showClosingLine() {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"xyliew25"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"xyliew25"},"content":"     * Prints the response after users inputted a command onto the console.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"xyliew25"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"xyliew25"},"content":"     * @param response Response to be printed onto the console after users inputted a command.","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"xyliew25"},"content":"    public void showResponse(String response) {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"xyliew25"},"content":"        System.out.println(\"     \" + response);","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"xyliew25"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"xyliew25"},"content":"     * Closes the scanner.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"xyliew25"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"xyliew25"},"content":"    public void closeScanner() {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"xyliew25"},"content":"        this.scanner.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xyliew25":80}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"xyliew25":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"            fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"xyliew25":23}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"class DeadlineTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"    void toStringData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"        Deadline deadline \u003d new Deadline(\"watch lecture\", LocalDate.parse(\"2021-08-24\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"        assertEquals(\"D | 0 | watch lecture | 2021-08-24\", deadline.toStringData());","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"        deadline.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"        assertEquals(\"D | 1 | watch lecture | 2021-08-24\", deadline.toStringData());","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"    void testToString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"        Deadline deadline \u003d new Deadline(\"watch lecture\", LocalDate.parse(\"2021-08-24\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"        assertEquals(\"[D][ ] watch lecture (by: Aug 24 2021)\", deadline.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"        deadline.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"        assertEquals(\"[D][X] watch lecture (by: Aug 24 2021)\", deadline.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"xyliew25":25}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"class EventTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"    void toStringData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"        Event event \u003d new Event(\"go party\", \"tonight\");","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"        assertEquals(\"E | 0 | go party | tonight\", event.toStringData());","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"        event.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"        assertEquals(\"E | 1 | go party | tonight\", event.toStringData());","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"    void testToString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"        Event event \u003d new Event(\"go party\", \"tonight\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"        assertEquals(\"[E][ ] go party (at: tonight)\", event.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"        event.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"        assertEquals(\"[E][X] go party (at: tonight)\", event.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"xyliew25":23}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"class TodoTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"    void toStringData() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"        assertEquals(\"T | 0 | read book\", todo.toStringData());","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"        todo.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"        assertEquals(\"T | 1 | read book\", todo.toStringData());","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"    void testToString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"        assertEquals(\"[T][ ] read book\", todo.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"        todo.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"        assertEquals(\"[T][X] read book\", todo.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"xyliew25":23}},{"path":"src/test/java/duke/util/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"package duke.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"class TaskListTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"    void getTaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"        TaskList taskList \u003d new TaskList(taskArrayList);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"        assertEquals(taskArrayList, taskList.getTaskList());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"        taskArrayList.add(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"        assertEquals(taskArrayList, taskList.getTaskList());","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"    void getSize() {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"xyliew25"},"content":"        taskList.addTask(new Todo(\"read book\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"xyliew25"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"xyliew25"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"xyliew25"},"content":"    void getTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"xyliew25"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"xyliew25"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"xyliew25"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"xyliew25"},"content":"        assertEquals(todo, taskList.getTask(0));","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"xyliew25"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"xyliew25"},"content":"    void addTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"xyliew25"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"xyliew25"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"xyliew25"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"xyliew25"},"content":"        assertEquals(todo, taskList.getTask(0));","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"xyliew25"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"xyliew25"},"content":"    void deleteTask() {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"xyliew25"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"xyliew25"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"xyliew25"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"xyliew25"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"xyliew25"},"content":"        taskList.deleteTask(0);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"xyliew25"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"xyliew25"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"xyliew25"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"xyliew25"},"content":"    void testToString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"xyliew25"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"xyliew25"},"content":"        Todo todo \u003d new Todo(\"read book\");","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"xyliew25"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"xyliew25"},"content":"        Todo todo2 \u003d new Todo(\"prepare lunch\");","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"xyliew25"},"content":"        taskList.addTask(todo2);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"xyliew25"},"content":"        assertEquals(\"     1.[T][ ] read book\\n     2.[T][ ] prepare lunch\", taskList.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"xyliew25"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"xyliew25"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"xyliew25":68}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"todo read book","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"deadline return book","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"deadline return book /by 2021-06-06","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"event project meeting","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"done -1","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"done 0","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"todo join sports club","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"delete -1","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"delete 0","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"delete 5","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"delete 4","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"find book","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"find study","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"blah","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"xyliew25"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"xyliew25":28}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"if exist data\\tasks.txt del data\\tasks.txt","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"dir ..\\src\\main\\java\\duke /s /b /a-d \u003e sources.txt","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"javac -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin @sources.txt","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xyliew25":4,"-":19}},{"path":"text-ui-test/sources.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\Duke.java","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\command\\Command.java","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\command\\DeadlineCommand.java","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\command\\DeleteCommand.java","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\command\\DoneCommand.java","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\command\\EventCommand.java","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\command\\ExitCommand.java","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\command\\FindCommand.java","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\command\\ListCommand.java","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\command\\TodoCommand.java","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\exception\\DukeException.java","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\exception\\EmptyDescriptionException.java","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\exception\\InvalidArgumentException.java","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\exception\\InvalidDateFormatException.java","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\exception\\LoadingException.java","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\exception\\MissingArgumentException.java","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\exception\\SavingException.java","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\exception\\StorageException.java","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\exception\\UnknownCommandException.java","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\task\\Deadline.java","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\task\\Event.java","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\task\\Task.java","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\task\\Todo.java","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\util\\Parser.java","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\util\\Storage.java","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\util\\TaskList.java","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"xyliew25"},"content":"C:\\Users\\User\\Documents\\NUS\\CS2103\\iP\\src\\main\\java\\duke\\util\\Ui.java","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"xyliew25":27}}]
