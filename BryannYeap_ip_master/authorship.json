[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"BryannYeap":16}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"# GARY üêå","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"---","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"## User Guide","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"---","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"Gary is a desktop app for anyone who needs to keep track of their myriad of tasks. It is optimized for quick text-based inputs via a Command Line Interface (CLI) while still having the ease of use of a Graphical User Interface (GUI). This app will make users lives easier through search and update functionalities.","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"- [Features](#features)","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"- [Usage](#usage)","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"## Quick start","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"---","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"2. Download the application [here](https://github.com/BryannYeap/ip/releases).","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"3. Copy the file to the folder you want to use as the home folder for Gary.","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"4. Double-click the file to start the app. The GUI similar to the one shown below should appear in a few seconds. The image below shows an example of the app with sample data.","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"![Image of Gary](https://BryannYeap.github.io/ip/Ui.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"---","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"Listed below are the features of Gary. ","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"### List tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"Lists all the tasks you have on your list.","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"### Add Todo task","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"Adds a Todo task into your list. A Todo is a task with no restricted time or deadline. ","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"### Add Deadline task","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"Adds a Deadline task into your list. A Deadline is a task with a deadline.","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"### Add Event task","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"Adds an Event task into your list. An Event is a task that happens at a specific period of time.","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"### Mark tasks as done","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"Checks the task as done.","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"### Delete tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"Removes tasks from your list.","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"### Find tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"Searches for a task based on your search terms.","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"### Update tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"Updates a task in your list.","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"---","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"Stated below is how you use Gary to utilise the listed features.","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"### `list` - List tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"Lists out all tasks in your list, including tasks that are marked as done or undone. Tasks include Todo, Deadline and Event.","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"Format: ","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"`list`","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"This is your current list!","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"    1.[T][]  Borrow a book","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"    2.[D][X] Complete Math assignment (by: Sep 18 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"    3.[E][]  Biology exam (at: Tuesday 2-4pm)","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"BryannYeap"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"BryannYeap"},"content":"* Todo tasks are marked as `[T]`","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"BryannYeap"},"content":"* Deadline tasks are marked as `[D]`","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"BryannYeap"},"content":"* Event tasks are marked as `[E]`","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"BryannYeap"},"content":"* Tasks that are done are marked as `[X]`","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"BryannYeap"},"content":"* Tasks that are not done are marked as `[]`","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"BryannYeap"},"content":"### `todo` - Adds a Todo task ","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"BryannYeap"},"content":"Adds a Todo task into your list with the given description.","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"BryannYeap"},"content":"Format:","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"BryannYeap"},"content":"`todo \u003cdescription\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"BryannYeap"},"content":"`todo Borrow a book`","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"BryannYeap"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":102,"author":{"gitId":"BryannYeap"},"content":"You have successfully added the following task!","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"BryannYeap"},"content":"    ","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"BryannYeap"},"content":"    [T][] Borrow a book","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":106,"author":{"gitId":"BryannYeap"},"content":"You now have 1 task in your list!","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":108,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"BryannYeap"},"content":"* `[T]` means that this is a Todo task","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"BryannYeap"},"content":"* `[]` means that the task is not marked as done (default state)","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"BryannYeap"},"content":"### `deadline` - Adds a Deadline task","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"BryannYeap"},"content":"Adds a Deadline task into your list with the given description and deadline date (yyyy-mm-dd).","lastModifiedDate":"2021-09-16"},{"lineNumber":115,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":116,"author":{"gitId":"BryannYeap"},"content":"Format:","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"BryannYeap"},"content":"`deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":119,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":120,"author":{"gitId":"BryannYeap"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":122,"author":{"gitId":"BryannYeap"},"content":"`deadline Complete Math assignment /by 2021-09-18`","lastModifiedDate":"2021-09-16"},{"lineNumber":123,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":124,"author":{"gitId":"BryannYeap"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":125,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":126,"author":{"gitId":"BryannYeap"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":127,"author":{"gitId":"BryannYeap"},"content":"You have successfully added the following task!","lastModifiedDate":"2021-09-16"},{"lineNumber":128,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"BryannYeap"},"content":"    [D][] Complete Math assignment (by: Sep 18 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":130,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":131,"author":{"gitId":"BryannYeap"},"content":"You now have 2 tasks in your list!","lastModifiedDate":"2021-09-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":133,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":134,"author":{"gitId":"BryannYeap"},"content":"* `[D]` means that this is a Deadline task","lastModifiedDate":"2021-09-16"},{"lineNumber":135,"author":{"gitId":"BryannYeap"},"content":"* `[]` means that the task is not marked as done (default state)","lastModifiedDate":"2021-09-16"},{"lineNumber":136,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":137,"author":{"gitId":"BryannYeap"},"content":"### `event` - Adds an Event task","lastModifiedDate":"2021-09-16"},{"lineNumber":138,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":139,"author":{"gitId":"BryannYeap"},"content":"Adds an Event task into your list with the given description and event time.","lastModifiedDate":"2021-09-16"},{"lineNumber":140,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":141,"author":{"gitId":"BryannYeap"},"content":"Format:","lastModifiedDate":"2021-09-16"},{"lineNumber":142,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":143,"author":{"gitId":"BryannYeap"},"content":"`event \u003cdescription\u003e /at \u003cevent time\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":147,"author":{"gitId":"BryannYeap"},"content":"`event Biology exam /at Tuesday 2-4pm`","lastModifiedDate":"2021-09-16"},{"lineNumber":148,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":149,"author":{"gitId":"BryannYeap"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":150,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":151,"author":{"gitId":"BryannYeap"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":152,"author":{"gitId":"BryannYeap"},"content":"You have successfully added the following task!","lastModifiedDate":"2021-09-16"},{"lineNumber":153,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":154,"author":{"gitId":"BryannYeap"},"content":"    [E][] Biology exam (at: Tuesday 2-4pm)","lastModifiedDate":"2021-09-16"},{"lineNumber":155,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":156,"author":{"gitId":"BryannYeap"},"content":"You now have 3 tasks in your list!","lastModifiedDate":"2021-09-16"},{"lineNumber":157,"author":{"gitId":"BryannYeap"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":158,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":159,"author":{"gitId":"BryannYeap"},"content":"* `[E]` means that this is an Event task","lastModifiedDate":"2021-09-16"},{"lineNumber":160,"author":{"gitId":"BryannYeap"},"content":"* `[]` means that the task is not marked as done (default state)","lastModifiedDate":"2021-09-16"},{"lineNumber":161,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":162,"author":{"gitId":"BryannYeap"},"content":"### `done` - Marks task as done","lastModifiedDate":"2021-09-16"},{"lineNumber":163,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":164,"author":{"gitId":"BryannYeap"},"content":"Marks a specified task as done to signify its completion.","lastModifiedDate":"2021-09-16"},{"lineNumber":165,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":166,"author":{"gitId":"BryannYeap"},"content":"Format:","lastModifiedDate":"2021-09-16"},{"lineNumber":167,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":168,"author":{"gitId":"BryannYeap"},"content":"`done \u003ctask number\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":169,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":170,"author":{"gitId":"BryannYeap"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":171,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":172,"author":{"gitId":"BryannYeap"},"content":"`done 1`","lastModifiedDate":"2021-09-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":176,"author":{"gitId":"BryannYeap"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":177,"author":{"gitId":"BryannYeap"},"content":"This task is successfully marked as done!","lastModifiedDate":"2021-09-16"},{"lineNumber":178,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":179,"author":{"gitId":"BryannYeap"},"content":"    [T][X] Borrow a book","lastModifiedDate":"2021-09-16"},{"lineNumber":180,"author":{"gitId":"BryannYeap"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":181,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":182,"author":{"gitId":"BryannYeap"},"content":"* `[X]` means that this task is marked as done","lastModifiedDate":"2021-09-16"},{"lineNumber":183,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":184,"author":{"gitId":"BryannYeap"},"content":"### `delete` - Deletes task","lastModifiedDate":"2021-09-16"},{"lineNumber":185,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":186,"author":{"gitId":"BryannYeap"},"content":"Deletes a specified task.","lastModifiedDate":"2021-09-16"},{"lineNumber":187,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":188,"author":{"gitId":"BryannYeap"},"content":"Format:","lastModifiedDate":"2021-09-16"},{"lineNumber":189,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":190,"author":{"gitId":"BryannYeap"},"content":"`delete \u003ctask number\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":191,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":192,"author":{"gitId":"BryannYeap"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":193,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":194,"author":{"gitId":"BryannYeap"},"content":"`delete 2`","lastModifiedDate":"2021-09-16"},{"lineNumber":195,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":196,"author":{"gitId":"BryannYeap"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":198,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":199,"author":{"gitId":"BryannYeap"},"content":"This task is successfully deleted!","lastModifiedDate":"2021-09-16"},{"lineNumber":200,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":201,"author":{"gitId":"BryannYeap"},"content":"    [D][] Complete math assignment (by: Sep 18 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":202,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":203,"author":{"gitId":"BryannYeap"},"content":"You now have 2 tasks in your list!","lastModifiedDate":"2021-09-16"},{"lineNumber":204,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":205,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":206,"author":{"gitId":"BryannYeap"},"content":"### `find` - Finds task","lastModifiedDate":"2021-09-16"},{"lineNumber":207,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":208,"author":{"gitId":"BryannYeap"},"content":"Finds a task based on your search terms.","lastModifiedDate":"2021-09-16"},{"lineNumber":209,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":210,"author":{"gitId":"BryannYeap"},"content":"Format:","lastModifiedDate":"2021-09-16"},{"lineNumber":211,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":212,"author":{"gitId":"BryannYeap"},"content":"`find \u003csearch terms\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":213,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":214,"author":{"gitId":"BryannYeap"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":215,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":216,"author":{"gitId":"BryannYeap"},"content":"`find Biology`","lastModifiedDate":"2021-09-16"},{"lineNumber":217,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":218,"author":{"gitId":"BryannYeap"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":219,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":220,"author":{"gitId":"BryannYeap"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":221,"author":{"gitId":"BryannYeap"},"content":"These tasks have descriptions that contain the phrase: `Biology`","lastModifiedDate":"2021-09-16"},{"lineNumber":222,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":223,"author":{"gitId":"BryannYeap"},"content":"    Task 2. [E][] Biology exam (at: Tuesday 2-4pm)","lastModifiedDate":"2021-09-16"},{"lineNumber":224,"author":{"gitId":"BryannYeap"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":225,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":226,"author":{"gitId":"BryannYeap"},"content":"* Search terms are case sensitive","lastModifiedDate":"2021-09-16"},{"lineNumber":227,"author":{"gitId":"BryannYeap"},"content":"* Order of words and letters matter (i.e Searching for `find exam Biology` would not have worked for the above task)","lastModifiedDate":"2021-09-16"},{"lineNumber":228,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":229,"author":{"gitId":"BryannYeap"},"content":"### `update` - Updates task","lastModifiedDate":"2021-09-16"},{"lineNumber":230,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":231,"author":{"gitId":"BryannYeap"},"content":"Updates a specified task based on your given descriptions so that you do not have to delete and re-add a task in order to change it.","lastModifiedDate":"2021-09-16"},{"lineNumber":232,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":233,"author":{"gitId":"BryannYeap"},"content":"Format:","lastModifiedDate":"2021-09-16"},{"lineNumber":234,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":235,"author":{"gitId":"BryannYeap"},"content":"`update \u003ctask number\u003e \u003ctask description + required parameters\u003e`","lastModifiedDate":"2021-09-16"},{"lineNumber":236,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":237,"author":{"gitId":"BryannYeap"},"content":"Example of usage:","lastModifiedDate":"2021-09-16"},{"lineNumber":238,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":239,"author":{"gitId":"BryannYeap"},"content":"`update 2 deadline Study for Biology exam /by 2021-09-18`","lastModifiedDate":"2021-09-16"},{"lineNumber":240,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":241,"author":{"gitId":"BryannYeap"},"content":"Expected outcome:","lastModifiedDate":"2021-09-16"},{"lineNumber":242,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":243,"author":{"gitId":"BryannYeap"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":244,"author":{"gitId":"BryannYeap"},"content":"This Task is successfully updated from:","lastModifiedDate":"2021-09-16"},{"lineNumber":245,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":246,"author":{"gitId":"BryannYeap"},"content":"    [E][] Biology exam (at: Tuesday 2-4pm)","lastModifiedDate":"2021-09-16"},{"lineNumber":247,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":248,"author":{"gitId":"BryannYeap"},"content":"to:","lastModifiedDate":"2021-09-16"},{"lineNumber":249,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":250,"author":{"gitId":"BryannYeap"},"content":"    [D][] Study for Biology exam (by: Sep 18 2021)","lastModifiedDate":"2021-09-16"},{"lineNumber":251,"author":{"gitId":"BryannYeap"},"content":"```","lastModifiedDate":"2021-09-16"},{"lineNumber":252,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":253,"author":{"gitId":"BryannYeap"},"content":"### `bye` - Exits the application","lastModifiedDate":"2021-09-16"},{"lineNumber":254,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":255,"author":{"gitId":"BryannYeap"},"content":"Exits Gary 0.5s after showing a goodbye message.","lastModifiedDate":"2021-09-16"},{"lineNumber":256,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":257,"author":{"gitId":"BryannYeap"},"content":"Format:","lastModifiedDate":"2021-09-16"},{"lineNumber":258,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":259,"author":{"gitId":"BryannYeap"},"content":"`bye`","lastModifiedDate":"2021-09-16"},{"lineNumber":260,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":261,"author":{"gitId":"BryannYeap"},"content":"### Command summary","lastModifiedDate":"2021-09-16"},{"lineNumber":262,"author":{"gitId":"BryannYeap"},"content":"---","lastModifiedDate":"2021-09-16"},{"lineNumber":263,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":264,"author":{"gitId":"BryannYeap"},"content":"Action | Format | Example","lastModifiedDate":"2021-09-16"},{"lineNumber":265,"author":{"gitId":"BryannYeap"},"content":"-------|--------|--------","lastModifiedDate":"2021-09-16"},{"lineNumber":266,"author":{"gitId":"BryannYeap"},"content":"List | `list` | `list`","lastModifiedDate":"2021-09-16"},{"lineNumber":267,"author":{"gitId":"BryannYeap"},"content":"Add Todo | `todo \u003cdescription\u003e` | `todo Borrow a book`","lastModifiedDate":"2021-09-16"},{"lineNumber":268,"author":{"gitId":"BryannYeap"},"content":"Add Deadline | `deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd\u003e` | `deadline Complete Math assignment /by 2021-09-18`","lastModifiedDate":"2021-09-16"},{"lineNumber":269,"author":{"gitId":"BryannYeap"},"content":"Add Event | `event \u003cdescription\u003e /at \u003cevent time\u003e` | `event Biology exam /at Tuesday 2-4pm`","lastModifiedDate":"2021-09-16"},{"lineNumber":270,"author":{"gitId":"BryannYeap"},"content":"Done | `done \u003ctask number\u003e` | `done 1`","lastModifiedDate":"2021-09-16"},{"lineNumber":271,"author":{"gitId":"BryannYeap"},"content":"Delete | `delete \u003ctask number\u003e` | `delete 2`","lastModifiedDate":"2021-09-16"},{"lineNumber":272,"author":{"gitId":"BryannYeap"},"content":"Find | `find \u003csearch terms\u003e` | `find Biology`","lastModifiedDate":"2021-09-16"},{"lineNumber":273,"author":{"gitId":"BryannYeap"},"content":"Update | `update \u003ctask number\u003e \u003ctask description + required parameters\u003e` | `update 2 deadline Study for Biology exam /by 2021-09-18`","lastModifiedDate":"2021-09-16"},{"lineNumber":274,"author":{"gitId":"BryannYeap"},"content":"Exit | `bye` | `bye`","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"-":31,"BryannYeap":243}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":" * Represents Exceptions thrown as a result of inappropriate user input from running Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"     * A constructor for this DukeException.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"     * @param errorMessage Error message describing this Exception.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BryannYeap":16}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":" * Represents a DukeException that is thrown when the user input is completely invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"     * Constructs an InvalidInputException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"    public InvalidInputException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"        super(\"Meow! That is not a valid input!\");","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BryannYeap":13}},{"path":"src/main/java/duke/exception/InvalidParamException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":" * Represents a DukeException that is thrown when a valid command has information","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":" * that is invalid or in the wrong format.","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"public class InvalidParamException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"     * Constructs an InvalidParamException.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"     * @param errorMessage Error message describing this Exception.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"    public InvalidParamException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BryannYeap":17}},{"path":"src/main/java/duke/exception/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":" * Represents a DukeException that is thrown when the input for adding a Task into a TaskList has an empty description.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"public class NoDescriptionException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"     * Constructs a NoDescriptionException.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"     * @param task Task that was attempting to be added into a TaskList which resulted in this Exception.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"    public NoDescriptionException(String task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"        super(\"A description of the \" + task + \" is required!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BryannYeap":16}},{"path":"src/main/java/duke/exception/OutOfBoundsOfTaskListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.exception;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":" * Represents a DukeException that is thrown when the index of the TaskList specified is out of bounds.","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"public class OutOfBoundsOfTaskListException extends DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"     * Constructs an OutOfBoundsTaskListException.","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"    public OutOfBoundsOfTaskListException() {","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"        super(\"Meow! What are you talking about? There is no task under that number!\");","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"BryannYeap":14}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.gui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"            setStyle(\"-fx-background-color: #f3d403\");","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"        setStyle(\"-fx-background-color: #abdff9\");","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"        dialog.setPadding(new Insets(0, 0, 0, 0));","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"        dialog.setTranslateX(2.5);","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"     * Returns a DialogBox (for the user) with the given String and Image.","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"     * @param text String that the dialog will contain.","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"     * @param img Image of the user for the user dialog.","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"     * @return DialogBox for the user containing the given String and Image.","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"     * Returns a DialogBox (for Gary) with the given String and Image.","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"     * @param text String that the dialog will contain.","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"     * @param img Image of Gary for the dialog.","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"     * @return DialogBox for Gary containing the given String and Image.","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"    public static DialogBox getGaryDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"BryannYeap"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"BryannYeap":81}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.gui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":" * The launcher to start the program.","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"BryannYeap":12}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.gui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import duke.main.Duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().showLogo();","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"BryannYeap":33}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.gui;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import duke.main.Duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"    /** Image representing the user */","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"    /** Image representing Gary */","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"    private Image garyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaGary.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"     * Adds a DialogBox to the VBox containg the logo.","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"    public void showLogo() {","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"        dialogContainer.getChildren().add(DialogBox.getGaryDialog(duke.getLogo(), garyImage));","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"     * Obtains an instance of Duke for this class.","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"     * @param d The Duke that is to be used in this class.","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"                DialogBox.getGaryDialog(response, garyImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"BryannYeap":67}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.main;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":" * Drives the main logic of the program.","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"    /** Storage that is responsible for saving and loading information from your hard disk into a TaskList */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"    private static Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"    /** Parser that handles and interprets user input in order to perform appropriate actions */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"    private static Parser parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"     * Constructs a Duke instance to initialise fields required to drive the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"     * At the same time, copies any previous saved file into the list upon initialisation.","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"    public Duke() {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"        storage \u003d new Storage(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"        parser \u003d new Parser(taskList);","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"        storage.copyFromFileToList();","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"     * Returns the logo of Gary.","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"     * @return String representing the logo of Gary.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"    public String getLogo() {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"        String greeting \u003d \"Meow! My name is \\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"        String logo \u003d \"  _______              __               _____      __             __    _\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"                + \"|      ____|          /  ^  \\\\         |      _    \\\\   \\\\  \\\\        /  /  |  |\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"                + \"|    |  ___          /  /_\\\\  \\\\      |    |_|    |   \\\\  \\\\  /  /     |  |\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"                + \"|    ||_    |      /      __     \\\\    |    __    \u003c        \\\\      /        |_|\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"                + \"|    |__| |    /      /    \\\\     \\\\  |    |  \\\\    \\\\        |   |            _  \\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"                + \"|______|  /__/        \\\\__\\\\|_ |       \\\\_\\\\     |_|         |_|\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"        return greeting + logo;","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"     * Generates a response according to user input.","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"     * The response is generated by saving the printed standard output into a stream and returning it as a string.","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"     * @param input User input obtained from GUI.","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"     * @return String that represents the response of Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"        // Solution adapted from:","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"        // https://stackoverflow.com/questions/8708342/redirect-console-output-to-string-in-java","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"        // Create a stream to hold the output","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"        PrintStream printStream \u003d new PrintStream(outputStream);","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"        // IMPORTANT: Save the old System.out!","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"        PrintStream old \u003d System.out;","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"        // Tell Java to use your special stream","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"        System.setOut(printStream);","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"        // Handle input: Any printed output goes to your special stream","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"        parser.handleInput(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"        storage.writeToFile();","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"        // Put things back","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"        System.out.flush();","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"        System.setOut(old);","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"        // Return what was printed","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"        return outputStream.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"BryannYeap"},"content":"     * Exits the application and program after half a second so that users will see the goodbye message before leaving.","lastModifiedDate":"2021-09-03"},{"lineNumber":83,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":84,"author":{"gitId":"BryannYeap"},"content":"    public static void exit() {","lastModifiedDate":"2021-09-03"},{"lineNumber":85,"author":{"gitId":"BryannYeap"},"content":"        new Timer().schedule(new TimerTask() {","lastModifiedDate":"2021-09-03"},{"lineNumber":86,"author":{"gitId":"BryannYeap"},"content":"            public void run () {","lastModifiedDate":"2021-09-03"},{"lineNumber":87,"author":{"gitId":"BryannYeap"},"content":"                System.exit(0);","lastModifiedDate":"2021-09-03"},{"lineNumber":88,"author":{"gitId":"BryannYeap"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":89,"author":{"gitId":"BryannYeap"},"content":"        }, 500);","lastModifiedDate":"2021-09-03"},{"lineNumber":90,"author":{"gitId":"BryannYeap"},"content":"        System.out.println(\"Goodbye :( Sad to see you go! Hope to see you again!\");","lastModifiedDate":"2021-09-03"},{"lineNumber":91,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":92,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"-":1,"BryannYeap":92}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.main;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"import duke.exception.InvalidParamException;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"import duke.exception.NoDescriptionException;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"import duke.exception.OutOfBoundsOfTaskListException;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":" * Encapsulates methods that handle and interpret user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"    /** The TaskList that will be altered based on user input */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"     * Enum that holds information about acting on a task, not including actions that result in new Tasks in the list.","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"     * Task actions include deleting a task (DELETE) and marking a Task as done (DONE).","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"    private enum TaskAction {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"        DELETE(\"delete\", 7, \"deleted\", TaskList::removeTask),","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"        DONE(\"done\", 5, \"marked as done\", TaskList::markDoneInTaskList);","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"        /** Name of the task action */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"        private String name;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"        /** Index to substring the input so as to remove the first word (command word) */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"        private int substringIndex;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"        /** Message fragment when the action is successfully completed */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"        private String successMessage;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"        /** The method to act on the Task */","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"        private BiFunction\u003cTaskList, Integer, Task\u003e actionOnTask;","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"        /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"         * Constructs a TaskAction.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"         *","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"         * @param name Name of the TaskAction.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"         * @param substringIndex Index to substring the input so as to remove the first word (command word).","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"         * @param successMessage Message fragment when the action is successfully completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"         * @param actionOnTask Method used to complete the action on a Task.","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"         */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"        TaskAction(String name, int substringIndex, String successMessage,","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"                   BiFunction\u003cTaskList, Integer, Task\u003e actionOnTask) {","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"            this.substringIndex \u003d substringIndex;","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"            this.successMessage \u003d successMessage;","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"            this.actionOnTask \u003d actionOnTask;","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"     * Enum that holds information about a Task attempting to be added.","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"    private enum TaskToAdd {","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"        TODO(\"todo \", 5, Todo::setTodo),","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"        DEADLINE(\"deadline \", 9, Deadline::setDeadline),","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"        EVENT(\"event \", 6, Event::setEvent);","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"        /**","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"         * Acts similar to Java 8\u0027s functional interface `Function`, but its method throws an InvalidParamException.","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"         *","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"         * @param \u003cT\u003e The type that is input into the method","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"         * @param \u003cR\u003e The type that is returned by the method","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"         */","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"        @FunctionalInterface","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"        public interface CheckedFunction\u003cT, R\u003e {","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"            R apply(T t) throws InvalidParamException;","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"        /** What the user input should start with to refer to this Task */","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"        private String inputPrefix;","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"BryannYeap"},"content":"        /** Index to substring the user input with */","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"BryannYeap"},"content":"        private int substringIndex;","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"BryannYeap"},"content":"        /** The CheckedFunction used to return the Task to be added */","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"BryannYeap"},"content":"        private CheckedFunction\u003cString, Task\u003e setTask;","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"BryannYeap"},"content":"        /**","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"BryannYeap"},"content":"         * Constructs the TaskToAdd.","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"BryannYeap"},"content":"         *","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"BryannYeap"},"content":"         * @param inputPrefix String that the input should start with to indicate what Task to add.","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"BryannYeap"},"content":"         * @param substringIndex Index to substring the input so as to remove the first word (command word).","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"BryannYeap"},"content":"         * @param setTask CheckedFunction used to return the Task to be added.","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"BryannYeap"},"content":"         */","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"BryannYeap"},"content":"        TaskToAdd(String inputPrefix, int substringIndex, CheckedFunction\u003cString, Task\u003e setTask) {","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"BryannYeap"},"content":"            this.inputPrefix \u003d inputPrefix;","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"BryannYeap"},"content":"            this.substringIndex \u003d substringIndex;","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"BryannYeap"},"content":"            this.setTask \u003d setTask;","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"BryannYeap"},"content":"     * Constructs a Parser instance that acts on the given TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"BryannYeap"},"content":"     * @param taskList TaskList that the Parser will alter or act on.","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"BryannYeap"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"BryannYeap"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":106,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"BryannYeap"},"content":"     * Takes user input to interpret and acts on the TaskList appropriately.","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"BryannYeap"},"content":"     * @param input Input string from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"BryannYeap"},"content":"    public void handleInput(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":113,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"BryannYeap"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"BryannYeap"},"content":"                Duke.exit();","lastModifiedDate":"2021-09-03"},{"lineNumber":117,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":118,"author":{"gitId":"BryannYeap"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"BryannYeap"},"content":"                this.taskList.printList();","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"BryannYeap"},"content":"            } else if (input.startsWith(\"find \")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"BryannYeap"},"content":"                findTask(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"BryannYeap"},"content":"            } else if (input.startsWith(\"done \")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"BryannYeap"},"content":"                alterTask(input, Parser.TaskAction.DONE);","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"BryannYeap"},"content":"            } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"BryannYeap"},"content":"                alterTask(input, Parser.TaskAction.DELETE);","lastModifiedDate":"2021-09-04"},{"lineNumber":133,"author":{"gitId":"BryannYeap"},"content":"                this.taskList.printNumberOfTasks();","lastModifiedDate":"2021-09-04"},{"lineNumber":134,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":135,"author":{"gitId":"BryannYeap"},"content":"            } else if (input.startsWith(\"update \")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":136,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":137,"author":{"gitId":"BryannYeap"},"content":"                updateTaskInTaskList(input);","lastModifiedDate":"2021-09-05"},{"lineNumber":138,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":139,"author":{"gitId":"BryannYeap"},"content":"            } else if (isTaskCommand(input)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":140,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"BryannYeap"},"content":"                vetoTask(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":143,"author":{"gitId":"BryannYeap"},"content":"            } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":144,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":145,"author":{"gitId":"BryannYeap"},"content":"                throw new InvalidInputException();","lastModifiedDate":"2021-09-04"},{"lineNumber":146,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":147,"author":{"gitId":"BryannYeap"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":148,"author":{"gitId":"BryannYeap"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":149,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-04"},{"lineNumber":150,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":154,"author":{"gitId":"BryannYeap"},"content":"     * Finds and prints the tasks that match the user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":155,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":156,"author":{"gitId":"BryannYeap"},"content":"     * @param input Input string from the user.","lastModifiedDate":"2021-09-02"},{"lineNumber":157,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":158,"author":{"gitId":"BryannYeap"},"content":"    private void findTask(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"BryannYeap"},"content":"        String searchTerm \u003d input.split(\" \", 2)[1];","lastModifiedDate":"2021-09-04"},{"lineNumber":160,"author":{"gitId":"BryannYeap"},"content":"        System.out.println(\"These tasks have descriptions that contain the phrase:\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":161,"author":{"gitId":"BryannYeap"},"content":"                + \"\u0027\" + searchTerm + \"\u0027\\n\");","lastModifiedDate":"2021-09-04"},{"lineNumber":162,"author":{"gitId":"BryannYeap"},"content":"        this.taskList.printAllContains(searchTerm);","lastModifiedDate":"2021-09-04"},{"lineNumber":163,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":164,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":165,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"BryannYeap"},"content":"     * Alters the TaskList depending on the TaskAction given, which could either be DELETE or DONE.","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":168,"author":{"gitId":"BryannYeap"},"content":"     * @param input Input string from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":169,"author":{"gitId":"BryannYeap"},"content":"     * @param action TaskAction to be done.","lastModifiedDate":"2021-08-25"},{"lineNumber":170,"author":{"gitId":"BryannYeap"},"content":"     * @throws InvalidParamException If the information of the action in the input is in the wrong format.","lastModifiedDate":"2021-09-04"},{"lineNumber":171,"author":{"gitId":"BryannYeap"},"content":"     * @throws OutOfBoundsOfTaskListException If the Task index given is out of the range of Tasks in the TaskList.","lastModifiedDate":"2021-09-05"},{"lineNumber":172,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":173,"author":{"gitId":"BryannYeap"},"content":"    private void alterTask(String input, Parser.TaskAction action)","lastModifiedDate":"2021-09-04"},{"lineNumber":174,"author":{"gitId":"BryannYeap"},"content":"            throws InvalidParamException, OutOfBoundsOfTaskListException {","lastModifiedDate":"2021-09-04"},{"lineNumber":175,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":176,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":177,"author":{"gitId":"BryannYeap"},"content":"            Task taskToBeAltered;","lastModifiedDate":"2021-08-22"},{"lineNumber":178,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":179,"author":{"gitId":"BryannYeap"},"content":"            // For user, the list starts at 1. However, our list index starts at 0","lastModifiedDate":"2021-09-04"},{"lineNumber":180,"author":{"gitId":"BryannYeap"},"content":"            int taskIndex \u003d Integer.parseInt(input.substring(action.substringIndex)) - 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":181,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":182,"author":{"gitId":"BryannYeap"},"content":"            // Apply a delete or done function specified in the enum depending on the action","lastModifiedDate":"2021-09-15"},{"lineNumber":183,"author":{"gitId":"BryannYeap"},"content":"            taskToBeAltered \u003d action.actionOnTask.apply(this.taskList, taskIndex);","lastModifiedDate":"2021-09-04"},{"lineNumber":184,"author":{"gitId":"BryannYeap"},"content":"            assert taskToBeAltered !\u003d null : \"taskToBeAltered should not be null\";","lastModifiedDate":"2021-09-05"},{"lineNumber":185,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(\"This task is successfully \" + action.successMessage + \"!\\n\\n\"","lastModifiedDate":"2021-09-03"},{"lineNumber":186,"author":{"gitId":"BryannYeap"},"content":"                    + \"    \" + taskToBeAltered);","lastModifiedDate":"2021-08-22"},{"lineNumber":187,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":188,"author":{"gitId":"BryannYeap"},"content":"        } catch (StringIndexOutOfBoundsException | NumberFormatException e1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":189,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":190,"author":{"gitId":"BryannYeap"},"content":"            throw new InvalidParamException(\"Please specify which task you would like to have\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":191,"author":{"gitId":"BryannYeap"},"content":"                    + action.successMessage + \" by adding a single number after \u0027\" + action.name + \"\u0027!\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":192,"author":{"gitId":"BryannYeap"},"content":"                    + \"i.e. \" + action.name + \" 1\");","lastModifiedDate":"2021-08-22"},{"lineNumber":193,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":194,"author":{"gitId":"BryannYeap"},"content":"        } catch (IndexOutOfBoundsException e2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":195,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":196,"author":{"gitId":"BryannYeap"},"content":"            throw new OutOfBoundsOfTaskListException();","lastModifiedDate":"2021-09-04"},{"lineNumber":197,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":198,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":199,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":200,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":201,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":202,"author":{"gitId":"BryannYeap"},"content":"     * Checks the input and updates a specific task if the inputs are appropriate.","lastModifiedDate":"2021-09-05"},{"lineNumber":203,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":204,"author":{"gitId":"BryannYeap"},"content":"     * @param input Input string from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":205,"author":{"gitId":"BryannYeap"},"content":"     * @throws NoDescriptionException If the description of the task is empty.","lastModifiedDate":"2021-09-04"},{"lineNumber":206,"author":{"gitId":"BryannYeap"},"content":"     * @throws InvalidParamException If the information of the task is in the wrong format.","lastModifiedDate":"2021-09-04"},{"lineNumber":207,"author":{"gitId":"BryannYeap"},"content":"     * @throws OutOfBoundsOfTaskListException If the Task index given is out of the range of Tasks in the TaskList.","lastModifiedDate":"2021-09-05"},{"lineNumber":208,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":209,"author":{"gitId":"BryannYeap"},"content":"    private void updateTaskInTaskList(String input) throws","lastModifiedDate":"2021-09-05"},{"lineNumber":210,"author":{"gitId":"BryannYeap"},"content":"            NoDescriptionException, InvalidParamException, OutOfBoundsOfTaskListException {","lastModifiedDate":"2021-09-05"},{"lineNumber":211,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":212,"author":{"gitId":"BryannYeap"},"content":"        String paramExceptionMessage \u003d \"Please use update in the following format:\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":213,"author":{"gitId":"BryannYeap"},"content":"                + \"update (task number) (task + description + needed info)\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":214,"author":{"gitId":"BryannYeap"},"content":"                + \"i.e update 2 event Career fair /at 2021-09-06\";","lastModifiedDate":"2021-09-05"},{"lineNumber":215,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":216,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":217,"author":{"gitId":"BryannYeap"},"content":"            // Split the input in 3 params: command word, task number, task description","lastModifiedDate":"2021-09-15"},{"lineNumber":218,"author":{"gitId":"BryannYeap"},"content":"            final int NUMBER_OF_PARAMS \u003d 3;","lastModifiedDate":"2021-09-15"},{"lineNumber":219,"author":{"gitId":"BryannYeap"},"content":"            String[] params \u003d input.split(\" \", NUMBER_OF_PARAMS);","lastModifiedDate":"2021-09-15"},{"lineNumber":220,"author":{"gitId":"BryannYeap"},"content":"            checkUpdateParams(params, paramExceptionMessage);","lastModifiedDate":"2021-09-05"},{"lineNumber":221,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":222,"author":{"gitId":"BryannYeap"},"content":"            // Initialise variables to hold significant params","lastModifiedDate":"2021-09-15"},{"lineNumber":223,"author":{"gitId":"BryannYeap"},"content":"            int taskIndex \u003d Integer.parseInt(params[1]) - 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":224,"author":{"gitId":"BryannYeap"},"content":"            String taskDescription \u003d params[2];","lastModifiedDate":"2021-09-05"},{"lineNumber":225,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":226,"author":{"gitId":"BryannYeap"},"content":"            // Instantiate and update the TaskList with the new Task","lastModifiedDate":"2021-09-15"},{"lineNumber":227,"author":{"gitId":"BryannYeap"},"content":"            Task newTask \u003d instantiateTask(taskDescription);","lastModifiedDate":"2021-09-05"},{"lineNumber":228,"author":{"gitId":"BryannYeap"},"content":"            Task oldTask \u003d this.taskList.updateTask(taskIndex, newTask);","lastModifiedDate":"2021-09-05"},{"lineNumber":229,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(\"This Task is successfully updated from:\\n\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":230,"author":{"gitId":"BryannYeap"},"content":"                    + \"    \" + oldTask + \"\\n\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":231,"author":{"gitId":"BryannYeap"},"content":"                    + \"to:\\n\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":232,"author":{"gitId":"BryannYeap"},"content":"                    + \"    \" + newTask);","lastModifiedDate":"2021-09-05"},{"lineNumber":233,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":234,"author":{"gitId":"BryannYeap"},"content":"        } catch (NumberFormatException e1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":235,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":236,"author":{"gitId":"BryannYeap"},"content":"            throw new InvalidParamException(paramExceptionMessage);","lastModifiedDate":"2021-09-05"},{"lineNumber":237,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":238,"author":{"gitId":"BryannYeap"},"content":"        } catch (IndexOutOfBoundsException e2) {","lastModifiedDate":"2021-09-05"},{"lineNumber":239,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":240,"author":{"gitId":"BryannYeap"},"content":"            throw new OutOfBoundsOfTaskListException();","lastModifiedDate":"2021-09-05"},{"lineNumber":241,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":242,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":243,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":244,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":245,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":246,"author":{"gitId":"BryannYeap"},"content":"     * Checks whether the parameters of the update command are valid.","lastModifiedDate":"2021-09-05"},{"lineNumber":247,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":248,"author":{"gitId":"BryannYeap"},"content":"     * @param params String array obtained from splitting the user input into parameters.","lastModifiedDate":"2021-09-05"},{"lineNumber":249,"author":{"gitId":"BryannYeap"},"content":"     * @param paramExceptionMessage Message displayed if there is an InvalidParamException thrown.","lastModifiedDate":"2021-09-05"},{"lineNumber":250,"author":{"gitId":"BryannYeap"},"content":"     * @throws InvalidParamException If the information of the task is in the wrong format.","lastModifiedDate":"2021-09-05"},{"lineNumber":251,"author":{"gitId":"BryannYeap"},"content":"     * @throws NoDescriptionException If the description of the task is empty.","lastModifiedDate":"2021-09-05"},{"lineNumber":252,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":253,"author":{"gitId":"BryannYeap"},"content":"    private void checkUpdateParams(String[] params, String paramExceptionMessage)","lastModifiedDate":"2021-09-05"},{"lineNumber":254,"author":{"gitId":"BryannYeap"},"content":"            throws InvalidParamException, NoDescriptionException {","lastModifiedDate":"2021-09-05"},{"lineNumber":255,"author":{"gitId":"BryannYeap"},"content":"        String taskDescription;","lastModifiedDate":"2021-09-15"},{"lineNumber":256,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":257,"author":{"gitId":"BryannYeap"},"content":"        // If the input does not have 3 params, or if the third param is not a task command, throw an exception","lastModifiedDate":"2021-09-15"},{"lineNumber":258,"author":{"gitId":"BryannYeap"},"content":"        if (params.length \u003c 3 || !isTaskCommand(taskDescription \u003d params[2])) {","lastModifiedDate":"2021-09-15"},{"lineNumber":259,"author":{"gitId":"BryannYeap"},"content":"            throw new InvalidParamException(paramExceptionMessage);","lastModifiedDate":"2021-09-05"},{"lineNumber":260,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":261,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":262,"author":{"gitId":"BryannYeap"},"content":"        checkDescription(taskDescription);","lastModifiedDate":"2021-09-05"},{"lineNumber":263,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":264,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":265,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":266,"author":{"gitId":"BryannYeap"},"content":"     * Looks through all possible TaskToAdd and check if the input has a prefix that coincides with any of them.","lastModifiedDate":"2021-09-04"},{"lineNumber":267,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":268,"author":{"gitId":"BryannYeap"},"content":"     * @param input Input string from the user.","lastModifiedDate":"2021-09-04"},{"lineNumber":269,"author":{"gitId":"BryannYeap"},"content":"     * @return True if the input is a command to add a Task, false otherwise.","lastModifiedDate":"2021-09-04"},{"lineNumber":270,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":271,"author":{"gitId":"BryannYeap"},"content":"    private boolean isTaskCommand(String input) {","lastModifiedDate":"2021-09-04"},{"lineNumber":272,"author":{"gitId":"BryannYeap"},"content":"        return Stream.of(TaskToAdd.values())","lastModifiedDate":"2021-09-04"},{"lineNumber":273,"author":{"gitId":"BryannYeap"},"content":"                .anyMatch(x -\u003e input.startsWith(x.inputPrefix));","lastModifiedDate":"2021-09-04"},{"lineNumber":274,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":275,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":276,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":277,"author":{"gitId":"BryannYeap"},"content":"     * Checks the task that is being attempted to be added into the task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":278,"author":{"gitId":"BryannYeap"},"content":"     * If the input contains the appropriate information, the task is added.","lastModifiedDate":"2021-09-05"},{"lineNumber":279,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":280,"author":{"gitId":"BryannYeap"},"content":"     * @param input Input string from the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":281,"author":{"gitId":"BryannYeap"},"content":"     * @throws NoDescriptionException If the description of the task is empty.","lastModifiedDate":"2021-09-05"},{"lineNumber":282,"author":{"gitId":"BryannYeap"},"content":"     * @throws InvalidParamException If the information of the task is in the wrong format.","lastModifiedDate":"2021-09-05"},{"lineNumber":283,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":284,"author":{"gitId":"BryannYeap"},"content":"    private void vetoTask(String input) throws NoDescriptionException, InvalidParamException {","lastModifiedDate":"2021-09-05"},{"lineNumber":285,"author":{"gitId":"BryannYeap"},"content":"        checkDescription(input);","lastModifiedDate":"2021-09-05"},{"lineNumber":286,"author":{"gitId":"BryannYeap"},"content":"        addIntoTaskList(instantiateTask(input));","lastModifiedDate":"2021-09-05"},{"lineNumber":287,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":288,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":289,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":290,"author":{"gitId":"BryannYeap"},"content":"     * Checks if the input contains the description for the task to be added.","lastModifiedDate":"2021-08-22"},{"lineNumber":291,"author":{"gitId":"BryannYeap"},"content":"     * Throws a NoDescriptionException otherwise.","lastModifiedDate":"2021-08-22"},{"lineNumber":292,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":293,"author":{"gitId":"BryannYeap"},"content":"     * @param input Input string from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":294,"author":{"gitId":"BryannYeap"},"content":"     * @throws NoDescriptionException If the description of the task is empty.","lastModifiedDate":"2021-08-25"},{"lineNumber":295,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":296,"author":{"gitId":"BryannYeap"},"content":"    private void checkDescription(String input) throws NoDescriptionException {","lastModifiedDate":"2021-08-22"},{"lineNumber":297,"author":{"gitId":"BryannYeap"},"content":"        String[] inputArray \u003d input.split(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":298,"author":{"gitId":"BryannYeap"},"content":"        if (inputArray.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-02"},{"lineNumber":299,"author":{"gitId":"BryannYeap"},"content":"            throw new NoDescriptionException(inputArray[0]);","lastModifiedDate":"2021-09-02"},{"lineNumber":300,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":301,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":302,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":303,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":304,"author":{"gitId":"BryannYeap"},"content":"     * Looks through the possible tasks that can be added and check if the input matches.","lastModifiedDate":"2021-09-05"},{"lineNumber":305,"author":{"gitId":"BryannYeap"},"content":"     * Once found, instantiate and return it.","lastModifiedDate":"2021-09-05"},{"lineNumber":306,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":307,"author":{"gitId":"BryannYeap"},"content":"     * @param input Input string from the user.","lastModifiedDate":"2021-09-04"},{"lineNumber":308,"author":{"gitId":"BryannYeap"},"content":"     * @return Task to be added into the TaskList.","lastModifiedDate":"2021-09-04"},{"lineNumber":309,"author":{"gitId":"BryannYeap"},"content":"     * @throws InvalidParamException If the information of the task is in the wrong format.","lastModifiedDate":"2021-09-04"},{"lineNumber":310,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":311,"author":{"gitId":"BryannYeap"},"content":"    private Task instantiateTask(String input) throws InvalidParamException {","lastModifiedDate":"2021-09-05"},{"lineNumber":312,"author":{"gitId":"BryannYeap"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2021-09-04"},{"lineNumber":313,"author":{"gitId":"BryannYeap"},"content":"        for (TaskToAdd task : TaskToAdd.values()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":314,"author":{"gitId":"BryannYeap"},"content":"            if (input.startsWith(task.inputPrefix)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":315,"author":{"gitId":"BryannYeap"},"content":"                newTask \u003d task.setTask.apply(input.substring(task.substringIndex));","lastModifiedDate":"2021-09-04"},{"lineNumber":316,"author":{"gitId":"BryannYeap"},"content":"                break;","lastModifiedDate":"2021-09-04"},{"lineNumber":317,"author":{"gitId":"BryannYeap"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":318,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":319,"author":{"gitId":"BryannYeap"},"content":"        assert newTask !\u003d null : \"newTask should not be null\";","lastModifiedDate":"2021-09-04"},{"lineNumber":320,"author":{"gitId":"BryannYeap"},"content":"        return newTask;","lastModifiedDate":"2021-09-04"},{"lineNumber":321,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":322,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":323,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":324,"author":{"gitId":"BryannYeap"},"content":"     * Adds the given Task into the TaskList and prints the confirmation.","lastModifiedDate":"2021-09-04"},{"lineNumber":325,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":326,"author":{"gitId":"BryannYeap"},"content":"     * @param task Task to add into the TaskList.","lastModifiedDate":"2021-09-04"},{"lineNumber":327,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":328,"author":{"gitId":"BryannYeap"},"content":"    private void addIntoTaskList(Task task) {","lastModifiedDate":"2021-09-05"},{"lineNumber":329,"author":{"gitId":"BryannYeap"},"content":"        this.taskList.addTask(task);","lastModifiedDate":"2021-09-04"},{"lineNumber":330,"author":{"gitId":"BryannYeap"},"content":"        System.out.println(\"You have successfully added the following task!\\n\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":331,"author":{"gitId":"BryannYeap"},"content":"                + \"    \" + task);","lastModifiedDate":"2021-09-04"},{"lineNumber":332,"author":{"gitId":"BryannYeap"},"content":"        this.taskList.printNumberOfTasks();","lastModifiedDate":"2021-09-04"},{"lineNumber":333,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":334,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"BryannYeap":334}},{"path":"src/main/java/duke/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.main;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":" * Represents an iterable list that can hold Tasks and encapsulates methods for interacting with the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"    /** ArrayList used to hold Tasks */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"     * Constructs a TaskList that can hold Tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"     * Returns the iterator of the TaskList so that it is iterable.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"     * @return Iterator of the ArrayList representing the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"        return this.taskList.iterator();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"     * Adds the Task into the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"     * @param newTask Task to be added into the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"     * Removes a Task with the given index from the TaskList and returns it.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"     * @param taskIndex Index of the Task to be removed from the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"     * @return Task that was removed from the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"    public Task removeTask(int taskIndex) {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"        return this.taskList.remove(taskIndex);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"     * Marks a Task from the TaskList with the given index as done and returns it.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"     * @param taskIndex Index of the Task in the TaskList to be marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"     * @return Task from the TaskList that was marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"    public Task markDoneInTaskList(int taskIndex) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"        Task task \u003d this.taskList.get(taskIndex);","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"        return task;","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"     * Changes the Task at the given index to a new specified task.","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"     * @param taskIndex Index of the Task in the TaskList to be changed.","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"     * @param newTask Task that is going to replace another Task in the TaskList.","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"     * @return Task that was changed and no longer in the TaskList.","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"    public Task updateTask(int taskIndex, Task newTask) {","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"        Task oldTask \u003d this.removeTask(taskIndex);","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"        this.taskList.add(taskIndex, newTask);","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"        return oldTask;","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"     * Prints all the Tasks in the TaskList line by line.","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"BryannYeap"},"content":"    public void printList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"BryannYeap"},"content":"        if (this.taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(\"Meow! You have no tasks! GOOD JOB!\");","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"BryannYeap"},"content":"            return;","lastModifiedDate":"2021-09-03"},{"lineNumber":84,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":85,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":86,"author":{"gitId":"BryannYeap"},"content":"        System.out.println(\"This is your current list!\\n\");","lastModifiedDate":"2021-09-03"},{"lineNumber":87,"author":{"gitId":"BryannYeap"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(\"    \" + (i + 1) + \". \" + this.taskList.get(i));","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"BryannYeap"},"content":"     * Prints the number of tasks currently in the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"BryannYeap"},"content":"    public void printNumberOfTasks() {","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"BryannYeap"},"content":"        System.out.println(\"\\nYou now have \" + this.taskList.size()","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"BryannYeap"},"content":"                + (this.taskList.size() \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in your list!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"BryannYeap"},"content":"     * Prints all tasks that have descriptions that contains a given String.","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"BryannYeap"},"content":"     * @param match Given string to check the task descriptions against.","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":105,"author":{"gitId":"BryannYeap"},"content":"    public void printAllContains(String match) {","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"BryannYeap"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"BryannYeap"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"BryannYeap"},"content":"            String description \u003d this.taskList.get(i).getDescription();","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"BryannYeap"},"content":"            if (description.contains(match)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"BryannYeap"},"content":"                isFound \u003d true;","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"BryannYeap"},"content":"                System.out.println(\"    Task \" + (i + 1) + \". \" + this.taskList.get(i));","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"BryannYeap"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"BryannYeap"},"content":"        if (!isFound) {","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(\"                    -- NO MATCHING TASKS FOUND --\");","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"BryannYeap":119}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"import duke.exception.InvalidParamException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":" * Represents a Deadline type Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"    /** String that Deadline uses to distinguish the description from the deadline date in the input String */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"    private static final String SEPARATOR \u003d \" /by \";","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"    /** String containing the deadline date that this Deadline is due on*/","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"    private String by;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"    /** Date that this Deadline is due on */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"     * Constructs a Deadline Task with the given description and information.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"     * @param description Description of the Deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"     * @param by The specific date that this Deadline is due on.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"     * @throws InvalidParamException If the description does not contain the appropriate information or format.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"    public Deadline(String description, String by) throws InvalidParamException {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"            this.date \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"            throw new InvalidParamException(\"\\n\\nThe deadline should be a valid date in the form: yyyy-mm-dd\\n\"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"                    + \"i.e. 2021-12-25\");","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"     * Returns the string representation of this Deadline, which follows the following format:","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"     * [D][Task status] Task Description (by: Task deadline)","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"     * @return String representation of this Deadline, which consist of the type of task (Deadline),","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"     *         its status, its description, and its deadline date.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"     * Returns a Deadline Task based on the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"     * @param input String containing the Deadline description.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"     * @return Deadline constructed from the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"     * @throws InvalidParamException If the description does not contain the appropriate information or format.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"    public static Task setDeadline(String input) throws InvalidParamException {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"        String[] deadlineParams \u003d input.split(SEPARATOR);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"        if (deadlineParams.length !\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"            throw new InvalidParamException(\"Please include the deadline of the task after\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"                    + \"a task description using a \u0027/by\u0027 (only once).\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"                    + \"i.e. deadline return book /by 2021-12-25\");","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"        return new Deadline(deadlineParams[0], deadlineParams[1]);","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"     * Returns the date that the Deadline is due on.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"     * @return String containing the date that this Deadline is due on.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"    public String getBy() {","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"        return this.by;","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"BryannYeap"},"content":"     * Returns the separator string used to distinguish the description from the Deadline date in the input String.","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"BryannYeap"},"content":"     * @return Separator string.","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"BryannYeap"},"content":"    public static String getSeparator() {","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"BryannYeap"},"content":"        return SEPARATOR;","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BryannYeap":87}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import duke.exception.InvalidParamException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":" * Represents an Event type Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"    /** String that Event uses to distinguish the description from the Event time in the input String */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"    private static final String SEPARATOR \u003d \" /at \";","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"    /** String containing the start to end time that this Event will occur on */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"    private String at;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"     * Constructs an Event Task with the given description and information.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"     * @param at The specific start to end time that this Event will occur on.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"     * Returns the string representation of this Event, which follows the following format:","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"     * [E][Task status] Task Description (at: Task start time to end time)","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"     * @return String representation of this Event, which consists of the type of task (Event),","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"     *         its status, its description, and its start time to end time.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"     * Returns an Event Task based on the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"     * @param input String containing the Event description.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"     * @return Event constructed from the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"     * @throws InvalidParamException If the description does not contain the appropriate information or format.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"    public static Task setEvent(String input) throws InvalidParamException {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"        String[] eventParams \u003d input.split(SEPARATOR);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"        if (eventParams.length !\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"            throw new InvalidParamException(\"Please include the time of the event after\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"                    + \"a task description using an \u0027/at\u0027 (only once).\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"                    + \"i.e. event project meeting /at Aug 6th 2-4pm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"        return new Event(eventParams[0], eventParams[1]);","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"     * Returns the time that the Event will occur on.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"     * @return String containing the specific start to end time that this Event will occur on.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"    public String getAt() {","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"        return this.at;","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"     * Returns the separator string used to distinguish the description from the Event time in the input String.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"     * @return Separator string.","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"    public static String getSeparator() {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"        return SEPARATOR;","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BryannYeap":74}},{"path":"src/main/java/duke/task/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"import duke.exception.InvalidParamException;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"import duke.main.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":" * Encapsulates a storage that has methods to save Tasks from a TaskList in the hard disk,","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":" * as well as loading that saved data back into the TaskList upon running Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"    /** The path of the text file used to store the Tasks from a TaskList */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"    private final String FILEPATH \u003d \"tasklist.txt\";","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"    /** The file used to store the Tasks from a TaskList */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"    private final File SAVE_FILE \u003d new File(FILEPATH);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"    /** A distinct string separating pieces of information saved in the save text file */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"    private final String SEPARATOR \u003d \"~SEPARATION_STRING~\";","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"    /** Initial letter of the To-do Task */","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"    private final char TODO_INITIAL \u003d \u0027T\u0027;","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"    /** Initial letter of the Deadline Task */","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"    private final char DEADLINE_INITIAL \u003d \u0027D\u0027;","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"    /** Initial letter of the Event Task */","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"    private final char EVENT_INITIAL \u003d \u0027E\u0027;","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"    /** TaskList that this Storage will copy to and from */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"     * Constructs a Storage instance that acts on the given TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"     * @param taskList TaskList that this Storage will copy to and from.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"    public Storage(TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"            this.taskList \u003d taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"            SAVE_FILE.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"     * Copies Tasks from the TaskList in order and saves them in a save text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"     * Each Task is saved on 1 line in the order and format:","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"     * Status(1 for done, 0 for not done), Initial of Task, Description, Extra information","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"     * The above pieces of information are separated by the SEPARATOR string.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"    public void writeToFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"            StringBuilder toBeWritten \u003d new StringBuilder();","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILEPATH);","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"                char initialOfTask \u003d task.toString().charAt(1);","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"                String description \u003d task.getDescription();","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"                // Add a marker to tell if its done or not i.e. 1 is done, 0 is not","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"                toBeWritten.append(task.getIsDone() ? \"1\" : \"0\").append(SEPARATOR);","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"                // Add the task type and description","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"                toBeWritten.append(initialOfTask).append(SEPARATOR).append(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"                // Add any extra information if needed","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"                switch (initialOfTask) {","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"                case TODO_INITIAL:","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"                case DEADLINE_INITIAL:","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"                    toBeWritten.append(SEPARATOR).append(deadline.getBy());","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"                case EVENT_INITIAL:","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"                    toBeWritten.append(SEPARATOR).append(event.getAt());","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"BryannYeap"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"BryannYeap"},"content":"                default:","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"BryannYeap"},"content":"                    assert false : initialOfTask;","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"BryannYeap"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"BryannYeap"},"content":"                // Add new line for next task","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"BryannYeap"},"content":"                toBeWritten.append(\"\\n\");","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"BryannYeap"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"BryannYeap"},"content":"            fileWriter.write(toBeWritten.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"BryannYeap"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"BryannYeap"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"BryannYeap"},"content":"     * Reads the save text file line by line to interpret and construct the appropriate Tasks to add into the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"BryannYeap"},"content":"    public void copyFromFileToList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"BryannYeap"},"content":"            Scanner sc \u003d new Scanner(SAVE_FILE);","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"BryannYeap"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"BryannYeap"},"content":"                Task newTask \u003d null;","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"BryannYeap"},"content":"                String[] inputArray \u003d sc.nextLine().split(SEPARATOR);","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"BryannYeap"},"content":"                boolean isDone \u003d inputArray[0].equals(\"1\");","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"BryannYeap"},"content":"                char initialOfTask \u003d inputArray[1].charAt(0);","lastModifiedDate":"2021-09-03"},{"lineNumber":107,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"BryannYeap"},"content":"                switch (initialOfTask) {","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"BryannYeap"},"content":"                case TODO_INITIAL:","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"BryannYeap"},"content":"                    newTask \u003d Todo.setTodo(inputArray[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"BryannYeap"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"BryannYeap"},"content":"                case DEADLINE_INITIAL:","lastModifiedDate":"2021-09-03"},{"lineNumber":113,"author":{"gitId":"BryannYeap"},"content":"                    newTask \u003d Deadline.setDeadline(inputArray[2] + Deadline.getSeparator() + inputArray[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"BryannYeap"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"BryannYeap"},"content":"                case EVENT_INITIAL:","lastModifiedDate":"2021-09-03"},{"lineNumber":116,"author":{"gitId":"BryannYeap"},"content":"                    newTask \u003d Event.setEvent(inputArray[2] + Event.getSeparator() + inputArray[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"BryannYeap"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"BryannYeap"},"content":"                default:","lastModifiedDate":"2021-09-02"},{"lineNumber":119,"author":{"gitId":"BryannYeap"},"content":"                    assert false : initialOfTask;","lastModifiedDate":"2021-09-03"},{"lineNumber":120,"author":{"gitId":"BryannYeap"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"BryannYeap"},"content":"                if (isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"BryannYeap"},"content":"                    newTask.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"BryannYeap"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"BryannYeap"},"content":"                taskList.addTask(newTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"BryannYeap"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"BryannYeap"},"content":"        } catch (IOException e1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(e1.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"BryannYeap"},"content":"        } catch (InvalidParamException e2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"BryannYeap"},"content":"            assert false : e2.getMessage();","lastModifiedDate":"2021-09-03"},{"lineNumber":132,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"BryannYeap":134}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":" * Encapsulates an abstract Task with a description and status.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"    /** Description of this Task */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"    private final String DESCRIPTION;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"    /** Status of this task */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"     * Constructs a Task with the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"     * Task is not marked as done by default.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"        this.DESCRIPTION \u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"     * Returns the string representation of this Task, which follows the following format:","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"     * [Task status] Task Description","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"     * @return String representation of this Task, which is its status and its description.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"        String statusIcon \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"        return \"[\" + statusIcon + \"] \" + this.DESCRIPTION;","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"     * Marks this task as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"     * Returns the status of this Task, which is whether it has been marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"     * @return True if the Task is done, false otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"     * Returns the description of this Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"     * @return Description of this Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"        return this.DESCRIPTION;","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BryannYeap":61}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":" * Represents a To-do type Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"     * Constructs a To-do Task with the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"     * @param description Description of the To-do.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"     * Returns the string representation of this To-do, which follows the following format:","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"     * [T][Task status] Task Description","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"     * @return String representation of this To-do, which consists of the type of Task (To-do),","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"     *         its status, and its description.","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"     * Returns a To-do Task based on the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"     * @param input String containing the To-do description.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"     * @return To-do constructed from the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"    public static Task setTodo(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"        return new Todo(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BryannYeap":38}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"    \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" translateX\u003d\"-5.0\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"         \u003cfont\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"            \u003cFont name\u003d\"Franklin Gothic Demi Cond\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"         \u003c/font\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"            \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"BryannYeap":26}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"BryannYeap":19}},{"path":"src/test/java/duke/main/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.main;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"    private class TaskStub extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"        private String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"        private boolean isDone;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"        public TaskStub(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"            super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"        @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"        public void markAsDone() {","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"        @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"        public boolean getIsDone() {","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"            return this.isDone;","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"        @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"        public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"            return this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"    public void addTaskAndRemoveTask_dummyTaskStub_taskStubDescriptionReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"        taskList.addTask(new TaskStub(\"Return book\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"Return book\", taskList.removeTask(0).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"    public void markDoneInTaskList_secondItem_getDoneTrueReturned() {","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"        taskList.addTask(new TaskStub(\"Borrow book\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"        taskList.addTask(new TaskStub(\"Return book\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"        assertTrue(taskList.markDoneInTaskList(1).getIsDone());","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"    public void updateTask_secondItem_taskInTaskListChanged() {","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"        taskList.addTask(new TaskStub(\"Borrow book\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"        taskList.addTask(new TaskStub(\"Return book\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"        Task newTask \u003d new TaskStub(\"Burn book\");","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"        Task oldTask \u003d taskList.updateTask(1, newTask);","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"        assertNotEquals(oldTask, newTask);","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"BryannYeap":62}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"import duke.exception.InvalidParamException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"    public void deadlineConstructor_invalidDate_invalidParamExceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"            new Deadline(\"Finish math homework\", \"Tuesday\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"            fail();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"        } catch (InvalidParamException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"            assertEquals(\"\\n\\nThe deadline should be a valid date in the form: yyyy-mm-dd\\n\" + \"i.e. 2021-12-25\",","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"                    e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"    public void toString_descriptionOfDeadline_deadlineStringReturned() throws InvalidParamException {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"[D][ ] Return book (by: Jan 02 2025)\",","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"                new Deadline(\"Return book\", \"2025-01-02\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"    public void getBy_dateOfDeadline_deadlineDateReturned() throws InvalidParamException {","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"2021-12-25\",","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"                new Deadline(\"Finish math homework\", \"2021-12-25\").getBy());","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"    public void setDeadline_descriptionOfDeadline_deadlineReturned() throws InvalidParamException {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"[D][ ] Finish math homework (by: Dec 25 2021)\",","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"                Deadline.setDeadline(\"Finish math homework /by 2021-12-25\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"    public void setDeadline_invalidDescriptionOfDeadline_invalidParamExceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"            Deadline.setDeadline(\"Finish math homework /by Tuesday\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"            fail();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"        } catch (InvalidParamException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"            assertEquals(\"\\n\\nThe deadline should be a valid date in the form: yyyy-mm-dd\\n\" + \"i.e. 2021-12-25\",","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"                    e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"BryannYeap":50}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"import duke.exception.InvalidParamException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"public class EventTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"    public void toString_descriptionOfEvent_eventStringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"[E][ ] Biology Exam (at: August 12 7-10am)\",","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"                new Event(\"Biology Exam\", \"August 12 7-10am\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"    public void getAt_timeOfEvent_eventTimeReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"Monday 2-4pm\",","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"                new Event(\"Project Meeting\", \"Monday 2-4pm\").getAt());","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"    public void setEvent_descriptionOfEvent_eventReturned() throws InvalidParamException {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"[E][ ] Finish math homework (at: Monday)\",","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"                Event.setEvent(\"Finish math homework /at Monday\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"    public void setEvent_invalidDescriptionOfEvent_invalidParamExceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"            Event.setEvent(\"Finish math homework\").toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"            fail();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"        } catch (InvalidParamException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"            assertEquals(\"Please include the time of the event after\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"                    + \"a task description using an \u0027/at\u0027 (only once).\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"                    + \"i.e. event project meeting /at Aug 6th 2-4pm\",","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"                    e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"BryannYeap":41}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"    private class TaskStub extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"        public TaskStub(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"            super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"    public void toString_descriptionOfTask_taskStringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"[ ] Return book\",","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"                new TaskStub(\"Return book\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"    public void getIsDone_undoneTask_falseReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(new TaskStub(\"Return Book\").getIsDone());","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"    public void getDescription_dummyTaskStub_descriptionStringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"Return book\",","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"                new TaskStub(\"Return book\").getDescription());","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"    public void markAsDone_taskMarkedDone_returnTaskStringMarkedDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"        Task task \u003d new TaskStub(\"Return book\");","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"[X] Return book\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"BryannYeap":38}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"    public void toString_descriptionOfTodo_todoStringReturned() {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"[T][ ] Return book\",","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"                new Todo(\"Return book\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"[T][ ] Buy milk\",","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"                new Todo(\"Buy milk\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"BryannYeap":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"deadline return book /by 2021-12-25","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"done jedbakdb","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"done -1","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"asasasas","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"deadline ","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"event     ","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"deadline return book","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"deadline return book /by Monday","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"event project meeting /at 2-4pm /at Monday","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"find","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"find fjlfhsfh","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"find meeting","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"delete ","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"delete adawdaw    ","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"delete -1","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"delete 10","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"delete 1","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"delete 1","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BryannYeap":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"del ACTUAL.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\main\\*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"java -classpath ..\\bin duke/main/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":18,"BryannYeap":3}}]
