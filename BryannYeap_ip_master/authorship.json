[{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":" * Represents Exceptions thrown as a result of inappropriate user input from running Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"     * A constructor for this DukeException.","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"     * @param errorMessage Error message describing this Exception.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BryannYeap":16}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":" * Represents a DukeException that is thrown when the user input is completely invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"public class InvalidInputException extends DukeException{","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"     * Constructs an InvalidInputException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"    public InvalidInputException() {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"        super(\"That is not a valid input!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BryannYeap":13}},{"path":"src/main/java/duke/exception/InvalidParamException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":" * Represents a DukeException that is thrown when the input for adding a Task into a TaskList has information that is","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":" * invalid or in the wrong format.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"public class InvalidParamException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"     * Constructs an InvalidParamException.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"     * @param errorMessage Error message describing this Exception.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"    public InvalidParamException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BryannYeap":17}},{"path":"src/main/java/duke/exception/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":" * Represents a DukeException that is thrown when the input for adding a Task into a TaskList has an empty description.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"public class NoDescriptionException extends DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"     * Constructs a NoDescriptionException.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"     * @param task Task that was attempting to be added into a TaskList which resulted in this Exception.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"    public NoDescriptionException(String task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"        super(\"A description of the \" + task + \" is required!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BryannYeap":16}},{"path":"src/main/java/duke/main/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.main;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":" * Drives the main program.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"    /** Scanner to get standard input from a user */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"    private static Scanner sc;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"    /** Storage that is responsible for saving and loading information from your hard disk into a TaskList */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"    private static Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"    /** Parser that handles and interprets user input in order to perform appropriate actions */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"    private static Parser parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"    /** Ui instance responsible for handling User Interaction (UI) */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"    private static Ui ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"     * Constructs a Duke instance to initialise fields required to drive the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"    public Duke() {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"        storage \u003d new Storage(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"        parser \u003d new Parser(taskList);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"     * Runs the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"    private void run() {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"        // Obtain data from save file if it exists","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"        storage.copyFromFileToList();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"        // Gets the user input","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"        ui.getInput(sc, parser, storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"        // Exits","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"        exit();","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"     * Exits the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"    private void exit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"        System.out.println(\"Output: Goodbye! See you again!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"        Ui.printDoubleDivider();","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"        sc.close();","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"-":2,"BryannYeap":57}},{"path":"src/main/java/duke/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.main;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import duke.exception.NoDescriptionException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":" * Encapsulates methods that handle and interpret user input.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"    /** The TaskList that will be altered based on user input */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"     * Enum that holds information about acting on a task, not including actions that changes the size of the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"     * Task actions include deleting a task (DELETE) and marking a Task as done (DONE).","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"    private enum TaskAction {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"        DELETE(\"delete\", 7, \"deleted\"),","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"        DONE(\"done\", 5, \"marked as done\");","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"        /** Name of the task action */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"        private String name;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"        /** Index to substring the input so as to remove the first word (command word) */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"        private int substringIndex;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"        /** Message fragment when the action is successfully completed */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"        private String successMessage;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"        /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"         * Constructs a TaskAction.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"         *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"         * @param name Name of the TaskAction.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"         * @param substringIndex Index to substring the input so as to remove the first word (command word).","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"         * @param successMessage Message fragment when the action is successfully completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"         */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"        TaskAction(String name, int substringIndex, String successMessage) {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"            this.substringIndex \u003d substringIndex;","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"            this.successMessage \u003d successMessage;","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"     * Constructs a Parser instance that acts on the given TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"     * @param taskList TaskList that the Parser will alter or act on.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"     * Takes user input to interpret and acts on the TaskList appropriately.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"     * @param input Input string from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"    public boolean handleInput(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"        Ui.printSingleDivider();","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"            return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(\"Output: This is your current list!\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"            taskList.printList();","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"        } else if (input.startsWith(\"find\")) {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"            findTask(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"        } else if (input.startsWith(\"done\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"BryannYeap"},"content":"            alterTask(input, Parser.TaskAction.DONE);","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"BryannYeap"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"BryannYeap"},"content":"            // If successfully deleted task, then print current number of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"BryannYeap"},"content":"            if (alterTask(input, Parser.TaskAction.DELETE)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"BryannYeap"},"content":"                taskList.printNumberOfTasks();","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"BryannYeap"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"BryannYeap"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"BryannYeap"},"content":"            vetoTask(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"BryannYeap"},"content":"        Ui.printDoubleDivider();","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"BryannYeap"},"content":"        return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"BryannYeap"},"content":"    private void findTask(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(\"Output: These tasks have descriptions that contain the phrase \u0027\"","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"BryannYeap"},"content":"                    + input.substring(5) + \"\u0027!\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"BryannYeap"},"content":"            taskList.printAllContains(input.substring(5));","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"BryannYeap"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(\"Output: Please include a search term after the word \u0027find\u0027.\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"BryannYeap"},"content":"                    + \"i.e. Find meeting\");","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"BryannYeap"},"content":"     * Alters the TaskList depending on the TaskAction given, which could either be DELETE or DONE.","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"BryannYeap"},"content":"     * @param input Input string from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"BryannYeap"},"content":"     * @param action TaskAction to be done.","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"BryannYeap"},"content":"     * @return True if the TaskList is successfully altered, false otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"BryannYeap"},"content":"    private boolean alterTask(String input, Parser.TaskAction action) {","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"BryannYeap"},"content":"            Task taskToBeAltered;","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"BryannYeap"},"content":"            int index \u003d Integer.parseInt(input.substring(action.substringIndex)) - 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"BryannYeap"},"content":"            if (action \u003d\u003d Parser.TaskAction.DELETE) {","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"BryannYeap"},"content":"                // If delete","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"BryannYeap"},"content":"                taskToBeAltered \u003d taskList.removeTask(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"BryannYeap"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"BryannYeap"},"content":"                // If done","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"BryannYeap"},"content":"                taskToBeAltered \u003d taskList.markDoneInTaskList(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"BryannYeap"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(\"Output:\\n\\nThis task is successfully \" + action.successMessage + \":\\n\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"BryannYeap"},"content":"                    + \"    \" + taskToBeAltered);","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"BryannYeap"},"content":"            return true;","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"BryannYeap"},"content":"        } catch (StringIndexOutOfBoundsException | NumberFormatException e1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(\"Output: Please specify which task you would like to have\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"BryannYeap"},"content":"                    + action.successMessage + \" by adding a single number after \u0027\" + action.name + \"\u0027!\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"BryannYeap"},"content":"                    + \"i.e. \" + action.name + \" 1\");","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"BryannYeap"},"content":"            return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"BryannYeap"},"content":"        } catch (IndexOutOfBoundsException e2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":143,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(\"Output: There is no task under that number!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"BryannYeap"},"content":"            return false;","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":147,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":149,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"BryannYeap"},"content":"     * Checks the task that is being attempted to be added into the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"BryannYeap"},"content":"     * If the input contains the appropriate information, the task is added.","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"BryannYeap"},"content":"     * @param input Input string from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":155,"author":{"gitId":"BryannYeap"},"content":"    private void vetoTask(String input) {","lastModifiedDate":"2021-08-22"},{"lineNumber":156,"author":{"gitId":"BryannYeap"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2021-08-22"},{"lineNumber":157,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":158,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"BryannYeap"},"content":"            if (!input.startsWith(\"todo\") \u0026\u0026 !input.startsWith(\"deadline\") \u0026\u0026 !input.startsWith(\"event\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"BryannYeap"},"content":"                throw new duke.exception.InvalidInputException();","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"BryannYeap"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"BryannYeap"},"content":"                // If it passes the if block, means it is a task-setting command","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"BryannYeap"},"content":"                // Check if a task description is present","lastModifiedDate":"2021-08-22"},{"lineNumber":165,"author":{"gitId":"BryannYeap"},"content":"                checkDescription(input);","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"BryannYeap"},"content":"                if (input.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":168,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":169,"author":{"gitId":"BryannYeap"},"content":"                    // Set the to-do","lastModifiedDate":"2021-08-22"},{"lineNumber":170,"author":{"gitId":"BryannYeap"},"content":"                    newTask \u003d Todo.setTodo(input.substring(5));","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":172,"author":{"gitId":"BryannYeap"},"content":"                } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":173,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":174,"author":{"gitId":"BryannYeap"},"content":"                    // Set the deadline","lastModifiedDate":"2021-08-22"},{"lineNumber":175,"author":{"gitId":"BryannYeap"},"content":"                    newTask \u003d Deadline.setDeadline(input.substring(9));","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":177,"author":{"gitId":"BryannYeap"},"content":"                } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":178,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":179,"author":{"gitId":"BryannYeap"},"content":"                    // Set the event","lastModifiedDate":"2021-08-22"},{"lineNumber":180,"author":{"gitId":"BryannYeap"},"content":"                    newTask \u003d Event.setEvent(input.substring(6));","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":182,"author":{"gitId":"BryannYeap"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":183,"author":{"gitId":"BryannYeap"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":184,"author":{"gitId":"BryannYeap"},"content":"        } catch (DukeException e1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":185,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(\"Output: \" + e1.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":186,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":187,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":188,"author":{"gitId":"BryannYeap"},"content":"        // If there was no error, then add task.","lastModifiedDate":"2021-08-25"},{"lineNumber":189,"author":{"gitId":"BryannYeap"},"content":"        if (newTask !\u003d null) {","lastModifiedDate":"2021-08-22"},{"lineNumber":190,"author":{"gitId":"BryannYeap"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":191,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(\"Output:\\n\\nYou have successfully added the following task:\\n\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":192,"author":{"gitId":"BryannYeap"},"content":"                    + \"    \" + newTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":193,"author":{"gitId":"BryannYeap"},"content":"            taskList.printNumberOfTasks();","lastModifiedDate":"2021-08-22"},{"lineNumber":194,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":195,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":196,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":197,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":198,"author":{"gitId":"BryannYeap"},"content":"     * Checks if the input contains the description for the task to be added.","lastModifiedDate":"2021-08-22"},{"lineNumber":199,"author":{"gitId":"BryannYeap"},"content":"     * Throws a NoDescriptionException otherwise.","lastModifiedDate":"2021-08-22"},{"lineNumber":200,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":201,"author":{"gitId":"BryannYeap"},"content":"     * @param input Input string from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":202,"author":{"gitId":"BryannYeap"},"content":"     * @throws NoDescriptionException If the description of the task is empty.","lastModifiedDate":"2021-08-25"},{"lineNumber":203,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":204,"author":{"gitId":"BryannYeap"},"content":"    private void checkDescription(String input) throws NoDescriptionException {","lastModifiedDate":"2021-08-22"},{"lineNumber":205,"author":{"gitId":"BryannYeap"},"content":"        String[] inputArray \u003d input.split(\" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":206,"author":{"gitId":"BryannYeap"},"content":"        if (inputArray.length \u003d\u003d 1) throw new NoDescriptionException(inputArray[0]);","lastModifiedDate":"2021-08-22"},{"lineNumber":207,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":208,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"BryannYeap":208}},{"path":"src/main/java/duke/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.main;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":" * Represents an iterable list that can hold Tasks and encapsulates methods for interacting with the list.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"public class TaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"    /** ArrayList used to hold Tasks */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"     * Constructs a TaskList that can hold Tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"     * Returns the iterator of the TaskList so that it is iterable.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"     * @return Iterator of the ArrayList representing the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"        return this.taskList.iterator();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"     * Adds the Task into the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"     * @param newTask Task to be added into the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"     * Removes a Task with the given index from the TaskList and returns it.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"     * @param taskIndex Index of the Task to be removed from the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"     * @return Task that was removed from the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"    public Task removeTask(int taskIndex) {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"        return this.taskList.remove(taskIndex);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"     * Marks a Task from the TaskList with the given index as done and returns it.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"     * @param taskIndex Index of the Task in the TaskList to be marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"     * @return Task from the TaskList that was marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"    public Task markDoneInTaskList(int taskIndex) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"        Task task \u003d this.taskList.get(taskIndex);","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"        return task;","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"     * Prints all the Tasks in the TaskList line by line.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"    public void printList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(i + 1 + \". \" + this.taskList.get(i));","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"     * Prints the number of tasks currently in the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"    public void printNumberOfTasks() {","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"        System.out.println(\"\\nYou now have \" + this.taskList.size()","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"                + (this.taskList.size() \u003d\u003d 1 ? \" task \" : \" tasks \") + \"in your list!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"BryannYeap"},"content":"    public void printAllContains(String match) {","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"BryannYeap"},"content":"        boolean taskFound \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"BryannYeap"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"BryannYeap"},"content":"            String description \u003d taskList.get(i).getDescription();","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"BryannYeap"},"content":"            if (description.contains(match)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"BryannYeap"},"content":"                taskFound \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"BryannYeap"},"content":"                System.out.println(\"Task \" + (i + 1) + \". \" + this.taskList.get(i));","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"BryannYeap"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"BryannYeap"},"content":"        if (!taskFound) {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(\"    -- NO MATCHING TASKS FOUND --\");","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"BryannYeap":95}},{"path":"src/main/java/duke/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.main;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":" * Encapsulates all the methods that is responsible for User Interaction (UI).","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"     * Constructs a Ui instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"     * Automatically prints the logo.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"        showLogo();","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"     * Prints the introduction and logo.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"    public static void showLogo() {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"        String logo \u003d \" _______       ___      _______   __     __   _\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"                + \"|   ____|     / ^ \\\\     |   _  \\\\  \\\\ \\\\   / /  | |\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"                + \"|  | ___     / /_\\\\ \\\\    |  |_|  |  \\\\ \\\\ / /   | |\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"                + \"|  ||_  |   /  ___  \\\\   |  __  \u003c    \\\\   /    |_|\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"                + \"|  |__| |  /  /   \\\\  \\\\  |  | \\\\  \\\\    | |      _ \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"                + \"|_______| /__/\\t   \\\\__\\\\ |--|  \\\\--\\\\   |_|     |_|\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"        printDoubleDivider();","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"        System.out.println(\"Hello! My name is\\n\" + logo);","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"        printDoubleDivider();","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"        System.out.println(\"How may I help you?\");","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"        printDoubleDivider();","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"     * Prompts the user for input and carries out actions accordingly.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"     * Additionally, saves contents of TaskList in hard disk after every input.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"     * @param sc Scanner to obtain standard input from user.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"     * @param parser Interprets user input and carries out actions accordingly.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"     * @param storage Storage responsible for storing the Tasks in the TaskList after every input.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"    public void getInput(Scanner sc, Parser parser, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"        System.out.print(\"Input: \");","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"        boolean isContinue \u003d parser.handleInput(sc.nextLine());","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"        // After every input, write to disk file","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"        storage.writeToFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"        if (isContinue) {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"            getInput(sc, parser, storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"     * Prints a divider using a line of \"\u003d\".","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"    public static void printDoubleDivider() {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"        System.out.println(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"     * Prints a divider using a line of \"-\".","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"    public static void printSingleDivider() {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"        System.out.println(\"\\n- - - - - - - - - - - - - - - - - - - - - - - - -\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"BryannYeap":71}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"import duke.exception.InvalidParamException;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":" * Represents a Deadline type Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"    /** String that Deadline uses to distinguish the description from the deadline date in the input String */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"    private static final String SEPARATOR \u003d \" /by \";","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"    /** String containing the deadline date that this Deadline is due on*/","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"    private String by;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"    /** Date that this Deadline is due on */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"     * Constructs a Deadline Task with the given description and information.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"     * @param description Description of the Deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"     * @param by The specific date that this Deadline is due on.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"     * @throws InvalidParamException If the description does not contain the appropriate information or format.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"    public Deadline(String description, String by) throws InvalidParamException {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"            this.date \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"            throw new InvalidParamException(\"\\n\\nThe deadline should be a valid date in the form: yyyy-mm-dd\\n\"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"                    + \"i.e. 2021-12-25\");","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"     * Returns the string representation of this Deadline, which follows the following format:","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"     * [D][Task status] Task Description (by: Task deadline)","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"     * @return String representation of this Deadline, which consist of the type of task (Deadline),","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"     *         its status, its description, and its deadline date.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"     * Returns a Deadline Task based on the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"     * @param input String containing the Deadline description.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"     * @return Deadline constructed from the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"     * @throws InvalidParamException If the description does not contain the appropriate information or format.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"    public static Task setDeadline(String input) throws InvalidParamException {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"        String[] deadlineParams \u003d input.split(SEPARATOR);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"        if (deadlineParams.length !\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"            throw new InvalidParamException(\"Please include the deadline of the task after\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"                    + \"a task description using a \u0027/by\u0027 (only once).\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"                    + \"i.e. deadline return book /by 2021-12-25\");","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"        Task deadline \u003d new Deadline(deadlineParams[0], deadlineParams[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"        return deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"     * Returns the date that the Deadline is due on.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"     * @return String containing the date that this Deadline is due on.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"    public String getBy() {","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"        return this.by;","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"BryannYeap"},"content":"     * Returns the separator string used to distinguish the description from the Deadline date in the input String.","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"BryannYeap"},"content":"     * @return Separator string.","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"BryannYeap"},"content":"    public static String getSeparator() {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"BryannYeap"},"content":"        return SEPARATOR;","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BryannYeap":88}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import duke.exception.InvalidParamException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":" * Represents an Event type Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"    /** String that Event uses to distinguish the description from the Event time in the input String */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"    private static final String SEPARATOR \u003d \" /at \";","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"    /** String containing the start to end time that this Event will occur on */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"    private String at;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"     * Constructs an Event Task with the given description and information.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"     * @param at The specific start to end time that this Event will occur on.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"     * Returns the string representation of this Event, which follows the following format:","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"     * [E][Task status] Task Description (at: Task start time to end time)","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"     * @return String representation of this Event, which consists of the type of task (Event),","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"     *         its status, its description, and its start time to end time.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"     * Returns an Event Task based on the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"     * @param input String containing the Event description.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"     * @return Event constructed from the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"     * @throws InvalidParamException If the description does not contain the appropriate information or format.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"    public static Task setEvent(String input) throws InvalidParamException {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"        String[] eventParams \u003d input.split(SEPARATOR);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"        if (eventParams.length !\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"            throw new InvalidParamException(\"Please include the time of the event after\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"                    + \"a task description using an \u0027/at\u0027 (only once).\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"                    + \"i.e. event project meeting /at Aug 6th 2-4pm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"        Task event \u003d new Event(eventParams[0], eventParams[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"        return event;","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"     * Returns the time that the Event will occur on.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"     * @return String containing the specific start to end time that this Event will occur on.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"    public String getAt() {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"        return this.at;","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"     * Returns the separator string used to distinguish the description from the Event time in the input String.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"     * @return Separator string.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"    public static String getSeparator() {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"        return SEPARATOR;","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BryannYeap":75}},{"path":"src/main/java/duke/task/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"import duke.exception.InvalidParamException;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"import duke.main.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":" * Encapsulates a storage that has methods to save Tasks from a TaskList in the hard disk,","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":" * as well as loading that saved data back into the TaskList upon running Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"    /** The path of the text file used to store the Tasks from a TaskList */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"    private final String FILEPATH \u003d \"tasklist.txt\";","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"    /** The file used to store the Tasks from a TaskList */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"    private final File SAVE_FILE \u003d new File(FILEPATH);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"    /** A distinct string separating pieces of information saved in the save text file */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"    private final String SEPARATOR \u003d \"~SEPARATION_STRING~\";","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"    /** TaskList that this Storage will copy to and from */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"     * Constructs a Storage instance that acts on the given TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"     * @param taskList TaskList that this Storage will copy to and from.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"    public Storage(TaskList taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"            this.taskList \u003d taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"            SAVE_FILE.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"        } catch (java.io.IOException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"     * Copies Tasks from the TaskList in order and saves them in a save text file.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"     * Each Task is saved on 1 line in the order and format:","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"     * Status(1 for done, 0 for not done), Initial of Task, Description, Extra information","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"     * The above pieces of information are separated by the SEPARATOR string.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"    public void writeToFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"            StringBuilder toBeWritten \u003d new StringBuilder();","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILEPATH);","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"                char initialOfTask \u003d task.toString().charAt(1);","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"                String description \u003d task.getDescription();","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"                // Add a marker to tell if its done or not","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"                toBeWritten.append(task.getIsDone() ? \"1\" : \"0\").append(SEPARATOR);","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"                //Add the task type and description","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"                toBeWritten.append(initialOfTask).append(SEPARATOR).append(description);","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"BryannYeap"},"content":"                switch (initialOfTask) {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"BryannYeap"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"BryannYeap"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"BryannYeap"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"BryannYeap"},"content":"                    Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"BryannYeap"},"content":"                    toBeWritten.append(SEPARATOR).append(deadline.getBy());","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"BryannYeap"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"BryannYeap"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"BryannYeap"},"content":"                    Event event \u003d (Event) task;","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"BryannYeap"},"content":"                    toBeWritten.append(SEPARATOR).append(event.getAt());","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"BryannYeap"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"BryannYeap"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"BryannYeap"},"content":"                toBeWritten.append(\"\\n\");","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"BryannYeap"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"BryannYeap"},"content":"            fileWriter.write(toBeWritten.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"BryannYeap"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"BryannYeap"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"BryannYeap"},"content":"     * Reads the save text file line by line to interpret and construct the appropriate Tasks to add into the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"BryannYeap"},"content":"    public void copyFromFileToList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"BryannYeap"},"content":"            Scanner sc \u003d new Scanner(SAVE_FILE);","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"BryannYeap"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"BryannYeap"},"content":"                Task newTask \u003d null;","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"BryannYeap"},"content":"                String[] inputArray \u003d sc.nextLine().split(SEPARATOR);","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"BryannYeap"},"content":"                boolean isDone \u003d inputArray[0].equals(\"1\");","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"BryannYeap"},"content":"                switch (inputArray[1].charAt(0)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"BryannYeap"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"BryannYeap"},"content":"                    newTask \u003d Todo.setTodo(inputArray[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"BryannYeap"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"BryannYeap"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"BryannYeap"},"content":"                    newTask \u003d Deadline.setDeadline(inputArray[2] + Deadline.getSeparator() + inputArray[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"BryannYeap"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"BryannYeap"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"BryannYeap"},"content":"                    newTask \u003d Event.setEvent(inputArray[2] + Event.getSeparator() + inputArray[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"BryannYeap"},"content":"                    break;","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"BryannYeap"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"BryannYeap"},"content":"                if (isDone) {","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"BryannYeap"},"content":"                    newTask.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"BryannYeap"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"BryannYeap"},"content":"                taskList.addTask(newTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"BryannYeap"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"BryannYeap"},"content":"        } catch (IOException e1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(e1.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"BryannYeap"},"content":"        } catch (InvalidParamException e2) {","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"BryannYeap"},"content":"            // SHOULD NEVER HAPPEN","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"BryannYeap"},"content":"            System.out.println(\"THIS SHOULD NEVER HAPPEN, DEADLINE FORMAT WRONG\");","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"BryannYeap":122}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":" * Encapsulates an abstract Task with a description and status.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"    /** Description of this Task */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"    private final String DESCRIPTION;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"    /** Status of this task */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"     * Constructs a Task with the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"     * Task is not marked as done by default.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"        this.DESCRIPTION \u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"     * Returns the string representation of this Task, which follows the following format:","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"     * [Task status] Task Description","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"     * @return String representation of this Task, which is its status and its description.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"        String statusIcon \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"        return \"[\" + statusIcon + \"] \" + this.DESCRIPTION;","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"     * Marks this task as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"     * Returns the status of this Task, which is whether it has been marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"     * @return True if the Task is done, false otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"BryannYeap"},"content":"     * Returns the description of this Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"BryannYeap"},"content":"     * @return Description of this Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"BryannYeap"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"BryannYeap"},"content":"        return this.DESCRIPTION;","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BryannYeap":61}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":" * Represents a To-do type Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"     * Constructs a To-do Task with the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"     * @param description Description of the To-do.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"     * Returns the string representation of this To-do, which follows the following format:","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"     * [T][Task status] Task Description","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"     * @return String representation of this To-do, which consists of the type of Task (To-do),","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"     *         its status, and its description.","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"     * Returns a To-do Task based on the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"     * @param input String containing the To-do description.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"     * @return To-do constructed from the given description.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"    public static Task setTodo(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"        Task todo \u003d new Todo(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"        return todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BryannYeap":39}},{"path":"src/test/java/duke/main/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.main;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"    private class TaskStub extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"        private String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"        public TaskStub(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"            super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"        @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"        public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"            return this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"    public void addTaskAndRemoveTask_dummyTaskStub_taskStubDescriptionReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"        taskList.addTask(new TaskStub(\"Return book\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"Return book\", taskList.removeTask(0).toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"BryannYeap":30}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"import duke.exception.InvalidParamException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"    public void deadlineConstructor_invalidDate_invalidParamExceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"            new Deadline(\"Finish math homework\", \"Tuesday\");","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"            fail();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"        } catch (InvalidParamException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"            assertEquals(\"\\n\\nThe deadline should be a valid date in the form: yyyy-mm-dd\\n\" + \"i.e. 2021-12-25\",","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"                    e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"    public void toString_descriptionOfDeadline_deadlineStringReturned() throws InvalidParamException {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"[D][ ] Return book (by: Jan 02 2025)\",","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"                new Deadline(\"Return book\", \"2025-01-02\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"    public void getBy_dateOfDeadline_DeadlineDateReturned() throws InvalidParamException {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"2021-12-25\",","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"                new Deadline(\"Finish math homework\", \"2021-12-25\").getBy());","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"    public void setDeadline_descriptionOfDeadline_deadlineReturned() throws InvalidParamException {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"[D][ ] Finish math homework (by: Dec 25 2021)\",","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"                Deadline.setDeadline(\"Finish math homework /by 2021-12-25\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"    public void setDeadline_invalidDescriptionOfDeadline_invalidParamExceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"BryannYeap"},"content":"            Deadline.setDeadline(\"Finish math homework /by Tuesday\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"BryannYeap"},"content":"            fail();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"BryannYeap"},"content":"        } catch (InvalidParamException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"BryannYeap"},"content":"            assertEquals(\"\\n\\nThe deadline should be a valid date in the form: yyyy-mm-dd\\n\" + \"i.e. 2021-12-25\",","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"BryannYeap"},"content":"                    e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"BryannYeap":50}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"import duke.exception.InvalidParamException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"public class EventTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"    public void toString_descriptionOfEvent_eventStringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"[E][ ] Biology Exam (at: August 12 7-10am)\",","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"                new Event(\"Biology Exam\", \"August 12 7-10am\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"    public void getAt_timeOfEvent_eventTimeReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"Monday 2-4pm\",","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"                new Event(\"Project Meeting\", \"Monday 2-4pm\").getAt());","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"    public void setEvent_descriptionOfEvent_eventReturned() throws InvalidParamException {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"[E][ ] Finish math homework (at: Monday)\",","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"                Event.setEvent(\"Finish math homework /at Monday\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"    public void setEvent_invalidDescriptionOfEvent_invalidParamExceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"            Event.setEvent(\"Finish math homework\").toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"            fail();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"        } catch (InvalidParamException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"            assertEquals(\"Please include the time of the event after\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"                    + \"a task description using an \u0027/at\u0027 (only once).\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"                    + \"i.e. event project meeting /at Aug 6th 2-4pm\",","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"                    e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"BryannYeap":41}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"public class TaskTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"    private class TaskStub extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"        public TaskStub(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"            super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"    public void toString_descriptionOfTask_taskStringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"[ ] Return book\",","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"                new TaskStub(\"Return book\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"    public void getIsDone_undoneTask_falseReturned()  {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"        assertFalse(new TaskStub(\"Return Book\").getIsDone());","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"    public void getDescription_dummyTaskStub_descriptionStringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"Return book\",","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"BryannYeap"},"content":"                new TaskStub(\"Return book\").getDescription());","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"BryannYeap"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"BryannYeap"},"content":"    public void markAsDone_taskMarkedDone_returnTaskStringMarkedDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"BryannYeap"},"content":"        Task task \u003d new TaskStub(\"Return book\");","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"BryannYeap"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"BryannYeap"},"content":"        assertEquals(\"[X] Return book\", task.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"BryannYeap"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"BryannYeap":38}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"     @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"     public void toString_descriptionOfTodo1_todoStringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"          assertEquals(\"[T][ ] Return book\",","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"                  new Todo(\"Return book\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"     }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"     @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"     public void toString_descriptionOfTodo2_todoStringReturned() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"          assertEquals(\"[T][ ] Buy milk\",","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"                  new Todo(\"Buy milk\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"     }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"BryannYeap":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BryannYeap"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"BryannYeap"},"content":"deadline return book /by 2021-12-25","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"BryannYeap"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"BryannYeap"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"BryannYeap"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"BryannYeap"},"content":"done","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"done jedbakdb","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"BryannYeap"},"content":"done -1","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"BryannYeap"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"asasasas","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"BryannYeap"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"BryannYeap"},"content":"deadline ","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"BryannYeap"},"content":"event     ","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"BryannYeap"},"content":"deadline return book","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"BryannYeap"},"content":"deadline return book /by Monday","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"BryannYeap"},"content":"event project meeting /at 2-4pm /at Monday","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"BryannYeap"},"content":"find","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"find fjlfhsfh","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"BryannYeap"},"content":"find meeting","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"BryannYeap"},"content":"delete ","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"BryannYeap"},"content":"delete adawdaw    ","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"BryannYeap"},"content":"delete -1","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"BryannYeap"},"content":"delete 10","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"BryannYeap"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"BryannYeap"},"content":"delete 1","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"BryannYeap"},"content":"delete 1","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"BryannYeap"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"BryannYeap":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"BryannYeap"},"content":"del ACTUAL.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"BryannYeap"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\main\\*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"BryannYeap"},"content":"java -classpath ..\\bin duke/main/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":18,"BryannYeap":3}}]
