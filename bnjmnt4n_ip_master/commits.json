{"authorDailyContributionsMap":{"bnjmnt4n":[{"date":"2021-08-19","commitResults":[{"hash":"b242801e17bfa5b9f45582538fc0d934a8f744d8","messageTitle":"Add basic greet, echo, and delete functionality","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":6}}},{"hash":"0600370133b49cd8a167ebbdec33fe3c76105639","messageTitle":"Store text input by users and add `list` command","messageBody":"","tags":["Level-2","A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}},{"hash":"5052638df64b5777eaae83ee2c65881c8ba67147","messageTitle":"Improve formatting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":7}}},{"hash":"cf167ed9c570b6ba093cbc7f0f5c18da9119faec","messageTitle":"Add `Task` implementation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":0}}},{"hash":"a6a4173a2141039c0f4cc3fedc7abbb58da32f02","messageTitle":"Duke: make use of `Task`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":8}}},{"hash":"ba1c4fa985e6eb9678a3cc130f8ad43baaafb73e","messageTitle":"Add `done` command to mark task as completed","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":1}}},{"hash":"fc7b8beadd31052fe2afd18e3ec1a8c33ad33fe1","messageTitle":"Add `Event`, `Todo` and `Deadline` classes","messageBody":"These classes inherit from `Task`.\n","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":0}}},{"hash":"d21e8799b0aa8381e4f238dbc6283911927fa0ec","messageTitle":"Deadline: rename `deadline` instance variable to `time`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"1febb43497f13c2906ed9b4415993d1bfa5e92b8","messageTitle":"Add `event`, `todo` and `deadline` commands","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":2}}},{"hash":"ebd3b8bd7ae6b8c55236d94daba9b6ffa1e82758","messageTitle":"Setup basic text UI testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0},"sh":{"insertions":0,"deletions":0}}}]},{"date":"2021-08-24","commitResults":[{"hash":"11d91ccd2367cb5367f2763ab9365363411aa2a7","messageTitle":"Duke: Convert to instantiable class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":83,"deletions":56}}},{"hash":"b47fed7ccf6e9c29b59ac87c53f540369674261c","messageTitle":"Handle unrecognized commands by throwing an exception","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":3}}},{"hash":"ce208ff9e220f196fa62f8b696aca40a8fd142d2","messageTitle":"Add basic error handling for task creation","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":6}}}]},{"date":"2021-08-25","commitResults":[{"hash":"6d514e6902a283da5cff65c0c8d9c7770932e2ec","messageTitle":"Task: convert to abstract class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"bcfaf8f51af427eba1f607b9287ac47234c59176","messageTitle":"Handle more exceptions","messageBody":"","tags":["A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":102,"deletions":45}}},{"hash":"47a5045d6b0ab5f0c7413244c08d2b1a44e1d64a","messageTitle":"Add `delete` command","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":0}}},{"hash":"ff1002870989c396d093d9ea10fd817057956c96","messageTitle":"Duke: use enums to represent commands","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":12}}},{"hash":"69fa4d0b921d3b1e2ba60fcc4120d376dec5ff51","messageTitle":"Save tasks to local file","messageBody":"Tasks are saved to `data/duke.txt`.\n","fileTypesAndContributionMap":{"java":{"insertions":76,"deletions":3}}},{"hash":"d8c193f843dfe76ea27fa900d8d710ac3595294e","messageTitle":"Duke: remove `shutdown` instance method","messageBody":"Since the scanner is created externally, it should not be the\nresponsibility of `Duke` to close the scanner.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":5}}},{"hash":"cc6109e2fd317106acc628a8653e854faab193d8","messageTitle":"Tasks: make constructors accept an `isCompleted` boolean","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":0}}},{"hash":"c8bc5be9d50f83a7a37b0b93a2f8fc31f1ff936a","messageTitle":"Read tasks from file on startup","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":9}}},{"hash":"9f0a17800f833983580ba4a0425fee5099cd9cd7","messageTitle":"Events and deadlines: parse input text into datetimes","messageBody":"The time for events and deadlines is parsed using the follow format:\n`YYYY-MM-DD HH:MM:SS`.\n","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":10}}},{"hash":"1f06b652caa3ac55e0e0c8b2586500f4b82e874c","messageTitle":"Add helper `DateTime` utility class","messageBody":"This class performs datetime formatting and parsing for both the `Event`\nand `Deadline` classes.\n","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":18}}},{"hash":"30e69e2972c6b682f51ed0086d3d46c80f038176","messageTitle":"Extract `Storage` class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":120,"deletions":116}}},{"hash":"557590ed4be183731fa719ba5a10993883763c77","messageTitle":"Extract `TaskList` class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":19}}},{"hash":"52294fc2a387044fad8a59f9a80fdd171ada5d2e","messageTitle":"Extract `Ui` class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":27}}},{"hash":"c0ba6e77b31059afd346cc734c718e50bd300948","messageTitle":"Extract `Command` classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":214,"deletions":94}}},{"hash":"654f58fde316695d5bbf8f00689d83232ac39301","messageTitle":"Extract `Parser` class","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":69}}},{"hash":"ee17a30d4e38625c661349b992b99de13d21021b","messageTitle":"Fix display of completed tasks when loaded from storage","messageBody":"This fixed a bug due to comparison of strings using the `\u003d\u003d` operator\ninstead of `Object.equal`.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"f4f7dbea56c9daf2bfc81cf7f4b539b677125232","messageTitle":"Organize classes into packages","messageBody":"For now there are the following packages:\n- duke\n- duke.task\n- duke.command\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":114,"deletions":13}}},{"hash":"bd326e01eaa77612850b1c847531eb0e588dc277","messageTitle":"Update `build.gradle`","messageBody":"Reflect new directory structure to avoid missing classpath.\n","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":2}}},{"hash":"1c1e17423c96fb19c701c460bf05628b24d55728","messageTitle":"Use more conventional directory structure","messageBody":"As per the JUnit tutorial at\nhttps://se-education.org/guides/tutorials/junit.html, use the\n`src/main/java` directory structure instead of just `src`.\n","fileTypesAndContributionMap":{"gradle":{"insertions":0,"deletions":13},"java":{"insertions":0,"deletions":0}}}]},{"date":"2021-08-26","commitResults":[{"hash":"25bdeeb342809f115184e2ffe4e1d9d081dd9f17","messageTitle":"Add tests for `TaskList`","messageBody":"","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":0}}},{"hash":"f5494315499661e51a671ecb4d056a4086107548","messageTitle":"TaskList: Add `filterTasks` method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":1}}},{"hash":"097aec9d92077fd6f4fa15b2216b9bcac24eb23e","messageTitle":"Add `find` command to filter tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":1}}},{"hash":"d48cff6e39c4e6a11ff2f0feea6d3c061237f82d","messageTitle":"Address code style violations","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":72,"deletions":58}}},{"hash":"c7addc54c4a1b6428ad04fda96ec34505cdab204","messageTitle":"Add JavaDocs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":144,"deletions":0}}},{"hash":"047b9826fd163630fd12cbb1ad0db73650903ea3","messageTitle":"Fix remaining code style violations","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":55}}}]},{"date":"2021-09-01","commitResults":[{"hash":"67f5f5e9f8f216819c5f8394bdaaf3a458b1cc6f","messageTitle":"Address PR feedback","messageBody":"- Make use of `@Override` when implementing abstract methods\n- Some JavaDoc cleanup\n","fileTypesAndContributionMap":{"java":{"insertions":79,"deletions":17}}},{"hash":"8d3c4a2057015f76761f630c661202883c2f1c76","messageTitle":"Gradle: install JavaFX dependencies","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":6,"deletions":0}}}]},{"date":"2021-09-02","commitResults":[{"hash":"c887a58b6bd9af3d2d490dc38cd08198a2843348","messageTitle":"Add initial JavaFX application","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2},"java":{"insertions":37,"deletions":2}}}]},{"date":"2021-09-03","commitResults":[{"hash":"1072fe9904b73be954aedd915dd468e5571502f4","messageTitle":"Migrate `Ui` to `ConsoleUi`","messageBody":"`ConsoleUi` now inherits from abstract class `Ui`. This allows creation\nof a new class with JavaFX interaction inheriting from `Ui`, allowing\nboth GUI/text-mode interfaces for Duke.\n","fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":25}}},{"hash":"6029c1a47828bf356068537d8c4c81d1f2d655d7","messageTitle":"Add JavaFX application","messageBody":"Based largely on\nhttps://se-education.org/guides/tutorials/javaFxPart4.html.\n","fileTypesAndContributionMap":{"fxml":{"insertions":35,"deletions":0},"java":{"insertions":253,"deletions":62}}},{"hash":"ec9b8f12c109b26e2bb2f75a181e4136a9116f62","messageTitle":"Allow running duke from command line as well","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":44,"deletions":56}}},{"hash":"3f169252db3b9cb5c9d5cd098d2a2b2c613ad0a7","messageTitle":"Fix style violations","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":13}}}]},{"date":"2021-09-17","commitResults":[{"hash":"a316d419671ea3defbb4c4f6f517e23f2083cee7","messageTitle":"Add assertions to codebase","messageBody":"Adds two assertions to ensure that the `Duke` object in and `Ui` objects\nare non-null.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"be7f96c327668aa31da9d0ade8cb817ce52dbaf3","messageTitle":"TaskList: Make use of Java streams","messageBody":"Use Java streams to filter tasks in `TaskList`.\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":2}}},{"hash":"1b540611ae3d568e0c7e4c5a0743a08ee008ef7d","messageTitle":"Add `DukeException` and `InvalidCommandException`","messageBody":"`InvalidCommandException` represents all exceptions relating to invalid\ncommand input.\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":0}}},{"hash":"e53641c73302f748938aa721846dbb967765d50c","messageTitle":"Shift deadline input parsing into `AddDeadlineCommand`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":31}}},{"hash":"82abae718841eac4e8e7024541298cc276480d8a","messageTitle":"Shift event input parsing into `AddEventCommand`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":31}}},{"hash":"913e639eb2a3b47125c750bde8ed300e9f079eee","messageTitle":"Shift todo input parsing into `AddTodoCommand`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":19}}},{"hash":"b7dca072fa2d5d8b1ec2728d9762c242ddc97f14","messageTitle":"Improve `DateTime` abstraction and add `InvalidDateTimeException`","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":28}}},{"hash":"0460035e6b5ecb3d19e2e6c80f5ea070198945d7","messageTitle":"DukeException: convert to Unix line-endings","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":10}}},{"hash":"abdd31d08f583c7e955a8f23c27477ccaf591a34","messageTitle":"Make use of `InvalidCommandException` in remaining commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":17}}},{"hash":"43dad9572ad8361b977a54426b3b3eb610240669","messageTitle":"Add `StorageException` and simplify `Storage` class","messageBody":"Attempt to apply SLAP by abstracting out a common `loadTask`\nabstraction.\n","fileTypesAndContributionMap":{"java":{"insertions":96,"deletions":44}}},{"hash":"a61689d20228cd0941cd3ade889f6c3097bc18c6","messageTitle":"Convert more methods to use `DukeException`","messageBody":"This commit also introduces `InvalidTaskException` which is thrown when\nan incorrect index is used to access a task.\n","fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":26}}},{"hash":"658e7c268763c6e530381c5c3317716da072816e","messageTitle":"Throw `InvalidCommandException` during command creation","messageBody":"Instead of throwing `InvalidCommandException` during the execution of\nthe command, throw it only during command creation.\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":12}}},{"hash":"a4c9ee325baf5cfd34ab2d02bae276026326755e","messageTitle":"Restructure different UI modes into `duke.ui` packages","messageBody":"","fileTypesAndContributionMap":{"fxml":{"insertions":1,"deletions":1},"java":{"insertions":54,"deletions":44}}},{"hash":"49423eff06da4b52dbc4599ab6af5a690294dd3f","messageTitle":"Fix tests","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"42b115b7d441be390163797d2fc10e430772e09d","messageTitle":"Make suggestions as recommended by IntelliJ","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":38}}},{"hash":"1db559e4a86ac212cd425f1563399bc75384c78e","messageTitle":"Fix code style violations","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":42,"deletions":32}}}]},{"date":"2021-09-20","commitResults":[{"hash":"7369fa3f2d00cb1c3626b9df80d938dc0ded01da","messageTitle":"Add initial `schedule` command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":164,"deletions":23}}},{"hash":"715ee55a679324b17bb526848f28b241d00cd281","messageTitle":"Improve error messages and comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":15}}},{"hash":"133e96f74267b2726bb646e1cd6b97326f9ba459","messageTitle":"Fix style","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":4}}},{"hash":"942cd2f07539c0915a8022c9d6fe71ef7d92abb9","messageTitle":"Update text UI tests","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":3},"sh":{"insertions":3,"deletions":3}}},{"hash":"cf8a5c59f4d96e8353f7278396da13a4fb2dfbc1","messageTitle":"Improve GUI styling","messageBody":"","tags":["A-BetterGui"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":1}}},{"hash":"d7f308fd9c1419377d78a003b21a85d4bc854ef5","messageTitle":"Fix text UI tests","messageBody":"","fileTypesAndContributionMap":{"sh":{"insertions":2,"deletions":8}}},{"hash":"903f04c08d1ab7af0ab321fb8f2dc8cd1fef32c3","messageTitle":"Add documentation and screenshot","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":168,"deletions":9}}},{"hash":"282a5212f7234c99989c162d6f59fa28a8a27408","messageTitle":"Docs: minor heading addition","messageBody":"","tags":["A-Release"],"fileTypesAndContributionMap":{"md":{"insertions":2,"deletions":0}}}]},{"date":"2021-09-30","commitResults":[{"hash":"1a5a4babe3431b2ffdc28936d51a23758a92c697","messageTitle":"Fix JAR file","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":14,"deletions":6}}}]}]},"authorFileTypeContributionMap":{"bnjmnt4n":{"java":1576,"md":170,"fxml":35,"sh":2,"bat":0,"gradle":15,"txt":13}},"authorContributionVariance":{"bnjmnt4n":59096.297},"authorDisplayNameMap":{"bnjmnt4n":"CS2103T-F11-4 TAN ..AMIN"}}
