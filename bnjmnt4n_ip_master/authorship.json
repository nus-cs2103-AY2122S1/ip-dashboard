[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"javafx {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"    version \u003d \"11\"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"bnjmnt4n":7,"-":45}},{"path":"src/main/java/duke/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"public class DateTime {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"     * Parses a string into a date.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"     * @param dateString The string containing a date.","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"    public static LocalDateTime parse(String dateString) throws Exception {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"            return LocalDateTime.parse(dateString, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"                return LocalDateTime.parse(dateString, DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm:ss\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"            } catch (Exception err) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"                throw new Exception(\"Invalid datetime: \" + dateString + \"\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"                        + \"Please use format: YYYY-MM-DD HH:MM:SS\");","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"    public static String stringify(LocalDateTime time) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm:ss\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bnjmnt4n":28}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"    private void flip() {","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"bnjmnt4n"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"bnjmnt4n"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"bnjmnt4n"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"bnjmnt4n"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"bnjmnt4n"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"bnjmnt4n"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"bnjmnt4n"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"bnjmnt4n"},"content":"        db.flip();","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"bnjmnt4n"},"content":"        return db;","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"bnjmnt4n":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"public class Duke {","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"     * Initializes an instance of Duke.","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"     * @param filePath The storage location for Duke\u0027s tasklist.","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"     * @throws Exception","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"    public Duke(String filePath) throws Exception {","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"        super();","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"        // TODO: throw error if unable to create file?","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"        this.taskList \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"    public void setUi(Ui ui) {","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"     * Executes the given command.","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"     * @param fullCommand The full string of the command to execute.","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"     * @return A boolean representing whether this instance of Duke should exit.","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"    public boolean executeCommand(String fullCommand) {","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"            Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"            command.execute(taskList, ui, storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"            return command.shouldExit();","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"            // TODO: custom Duke exceptions?","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"            ui.printMessage(\"Error: \" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"            return false;","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"bnjmnt4n":44,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import duke.ui.ConsoleUi;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"     * Launches Duke either in GUI mode or console mode.","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"     * @param args Arguments to the launcher.","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"        if (args.length \u003d\u003d 1 \u0026\u0026 args[0].equals(\"--console\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"            runConsole();","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"        } else {","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"            Application.launch(Main.class, args);","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"     * Initializes a instance of {@link Duke} in the console.","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"    public static void runConsole() {","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"        String filePath \u003d \"duke.txt\";","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"        Duke duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"            duke \u003d new Duke(filePath);","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"            // TODO: figure out static/non-static Ui class","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"            System.out.println(\"Unable to initialize data file\");","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"            return;","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"        Scanner inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"        ConsoleUi ui \u003d new ConsoleUi(inputScanner);","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"        ui.printGreeting();","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"        duke.setUi(ui);","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"        boolean shouldExit \u003d false;","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"        while (!shouldExit) {","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"bnjmnt4n"},"content":"            try {","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"bnjmnt4n"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"bnjmnt4n"},"content":"                shouldExit \u003d duke.executeCommand(fullCommand);","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"bnjmnt4n"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"bnjmnt4n"},"content":"                // TODO: custom Duke exceptions?","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"bnjmnt4n"},"content":"                ui.printMessage(\"Error: \" + e.getMessage());","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"bnjmnt4n"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"bnjmnt4n"},"content":"        ui.printGoodbye();","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"bnjmnt4n"},"content":"        inputScanner.close();","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"bnjmnt4n":59}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"        try {","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"            duke \u003d new Duke(\"duke.txt\");","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"            stage.show();","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"bnjmnt4n":34}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import duke.ui.GraphicalUi;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.stage.Window;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":" * Controller which manages the main window. Provides the layout for the other controls.","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"     * Binds the scroll pane position to the dialog container\u0027s height to always scroll to the","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"     * bottom of the dialog container.","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"        Ui ui \u003d new GraphicalUi(dialogContainer, dukeImage);","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"bnjmnt4n"},"content":"        duke.setUi(ui);","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"bnjmnt4n"},"content":"        ui.printGreeting();","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"bnjmnt4n"},"content":"    @FXML","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"bnjmnt4n"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"bnjmnt4n"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"bnjmnt4n"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"bnjmnt4n"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"bnjmnt4n"},"content":"                DialogBox.getUserDialog(input, userImage)","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"bnjmnt4n"},"content":"        );","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"bnjmnt4n"},"content":"        // Close the app if possible.","lastModifiedDate":"2021-09-03"},{"lineNumber":60,"author":{"gitId":"bnjmnt4n"},"content":"        boolean shouldExit \u003d duke.executeCommand(input);","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"bnjmnt4n"},"content":"        if (shouldExit) {","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"bnjmnt4n"},"content":"            Scene scene \u003d this.sendButton.getScene();","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"bnjmnt4n"},"content":"            if (scene !\u003d null) {","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"bnjmnt4n"},"content":"                Window window \u003d scene.getWindow();","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"bnjmnt4n"},"content":"                if (window instanceof Stage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"bnjmnt4n"},"content":"                    Stage stage \u003d (Stage) window;","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"bnjmnt4n"},"content":"                    stage.close();","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"bnjmnt4n"},"content":"                }","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"bnjmnt4n"},"content":"            }","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"bnjmnt4n":73}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"import duke.command.CompleteTaskCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"import duke.command.DeleteTaskCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"import duke.command.FilterTasksCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"import duke.command.ListTasksCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"    public enum CommandType {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"        BYE, LIST, DONE, DELETE, TODO, DEADLINE, EVENT, FIND,","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"     * Parses the user\u0027s input string into a command.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"     * @param fullCommand The full command string input by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"     * @return The new parsed {@link Command}.","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"     * @throws An exception if the input is not a valid command.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"    public static Command parse(String fullCommand) throws Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"        String[] commandArguments \u003d fullCommand.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"        String commandString \u003d commandArguments[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"        String arguments \u003d commandArguments.length \u003d\u003d 2 ? commandArguments[1] : \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"        CommandType commandType;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"            commandType \u003d CommandType.valueOf(commandString.toUpperCase());","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"            String fullInput \u003d commandString + \" \" + arguments;","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"            throw new Exception(\"Command not recognized: \" + fullInput);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"        // TODO: shift parsing into parser instead of individual commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"        switch (commandType) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"        case BYE:","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"            return new ByeCommand(arguments);","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"        case LIST:","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"            return new ListTasksCommand(arguments);","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"bnjmnt4n"},"content":"        case DONE:","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"bnjmnt4n"},"content":"            return new CompleteTaskCommand(arguments);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"bnjmnt4n"},"content":"        case DELETE:","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"bnjmnt4n"},"content":"            return new DeleteTaskCommand(arguments);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"bnjmnt4n"},"content":"        case FIND:","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"bnjmnt4n"},"content":"            return new FilterTasksCommand(arguments);","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"bnjmnt4n"},"content":"        case TODO:","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"bnjmnt4n"},"content":"            return new AddTodoCommand(arguments);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"bnjmnt4n"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"bnjmnt4n"},"content":"            return new AddDeadlineCommand(arguments);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"bnjmnt4n"},"content":"        case EVENT:","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"bnjmnt4n"},"content":"            return new AddEventCommand(arguments);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"bnjmnt4n"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"bnjmnt4n"},"content":"            throw new Exception(\"No command found\");","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bnjmnt4n":69}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"    private File tasksFile;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"     * Creates a Storage object to store data at the provided filepath.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"     * @param filePath The filepath to store data at.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"     * @throws An IO Exception if a file cannot be created at the provided filepath.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"        File dataDirectory \u003d new File(\"data\");","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"        if (!dataDirectory.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"            dataDirectory.mkdir();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"        File tasksFile \u003d new File(\"data/\" + filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"        if (!tasksFile.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"            tasksFile.createNewFile();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"        this.tasksFile \u003d tasksFile;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"     * Loads tasks from the storage file.","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"     * @return List of tasks read from the file.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"     * @throws Error if there is a problem with the file format of the stored file.","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"    public List\u003cTask\u003e loadTasks() throws Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"        Scanner s \u003d new Scanner(this.tasksFile);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"bnjmnt4n"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"bnjmnt4n"},"content":"                String[] components \u003d line.split(\" \\\\| \");","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"bnjmnt4n"},"content":"                if (components.length \u003c 3) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"bnjmnt4n"},"content":"                    throw new Exception(\"Invalid format\");","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"bnjmnt4n"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"bnjmnt4n"},"content":"                boolean isCompleted \u003d components[1].equals(\"1\") ? true : false;","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"bnjmnt4n"},"content":"                String description \u003d unescapeString(components[2]);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"bnjmnt4n"},"content":"                switch (components[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"bnjmnt4n"},"content":"                case \"T\": {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"bnjmnt4n"},"content":"                    tasks.add(new Todo(description, isCompleted));","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"bnjmnt4n"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"bnjmnt4n"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"bnjmnt4n"},"content":"                case \"E\": {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"bnjmnt4n"},"content":"                    if (components.length !\u003d 4) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"bnjmnt4n"},"content":"                        throw new Exception(\"Invalid format\");","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"bnjmnt4n"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"bnjmnt4n"},"content":"                    tasks.add(new Event(description, DateTime.parse(components[3]), isCompleted));","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"bnjmnt4n"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"bnjmnt4n"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"bnjmnt4n"},"content":"                case \"D\": {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"bnjmnt4n"},"content":"                    if (components.length !\u003d 4) {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"bnjmnt4n"},"content":"                        throw new Exception(\"Invalid format\");","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"bnjmnt4n"},"content":"                    }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"bnjmnt4n"},"content":"                    tasks.add(new Deadline(description, DateTime.parse(components[3]), isCompleted));","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"bnjmnt4n"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"bnjmnt4n"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"bnjmnt4n"},"content":"                default: {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"bnjmnt4n"},"content":"                    throw new Exception(\"Invalid format\");","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"bnjmnt4n"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"bnjmnt4n"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"bnjmnt4n"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"bnjmnt4n"},"content":"        } finally {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"bnjmnt4n"},"content":"            s.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"bnjmnt4n"},"content":"        return tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"bnjmnt4n"},"content":"     * Saves tasks from the given tasklist to the storage file.","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"bnjmnt4n"},"content":"     * @param taskList The tasklist to save.","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"bnjmnt4n"},"content":"     * @throws IO Exception if file cannot be written to.","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"bnjmnt4n"},"content":"    public void saveTasks(TaskList taskList) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"bnjmnt4n"},"content":"        FileWriter writer \u003d new FileWriter(this.tasksFile);","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"bnjmnt4n"},"content":"        for (Task task : taskList.items()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"bnjmnt4n"},"content":"            this.writeTask(writer, task);","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"bnjmnt4n"},"content":"        writer.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"bnjmnt4n"},"content":"     * Writes the stringified form of a task to the provided {@link FileWriter}.","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"bnjmnt4n"},"content":"     * @param writer Writer to write to.","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"bnjmnt4n"},"content":"     * @param task Task to convert to a string.","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"bnjmnt4n"},"content":"     * @throws IO Exception if writer cannot be written to.","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"bnjmnt4n"},"content":"    private void writeTask(FileWriter writer, Task task) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"bnjmnt4n"},"content":"        if (task instanceof Todo) {","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"bnjmnt4n"},"content":"            writer.write(\"T | \");","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"bnjmnt4n"},"content":"            writer.write(task.getIsCompleted() ? \"1\" : \"0\");","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"bnjmnt4n"},"content":"            writer.write(\" | \");","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"bnjmnt4n"},"content":"            writer.write(escapeString(task.getDescription()));","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"bnjmnt4n"},"content":"            writer.write(System.lineSeparator());","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"bnjmnt4n"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"bnjmnt4n"},"content":"            writer.write(\"E | \");","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"bnjmnt4n"},"content":"            writer.write(task.getIsCompleted() ? \"1\" : \"0\");","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"bnjmnt4n"},"content":"            writer.write(\" | \");","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"bnjmnt4n"},"content":"            writer.write(escapeString(task.getDescription()));","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"bnjmnt4n"},"content":"            writer.write(\" | \");","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"bnjmnt4n"},"content":"            writer.write(DateTime.stringify(((Event) task).getTime()));","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"bnjmnt4n"},"content":"            writer.write(System.lineSeparator());","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"bnjmnt4n"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"bnjmnt4n"},"content":"            writer.write(\"D | \");","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"bnjmnt4n"},"content":"            writer.write(task.getIsCompleted() ? \"1\" : \"0\");","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"bnjmnt4n"},"content":"            writer.write(\" | \");","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"bnjmnt4n"},"content":"            writer.write(escapeString(task.getDescription()));","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"bnjmnt4n"},"content":"            writer.write(\" | \");","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"bnjmnt4n"},"content":"            writer.write(DateTime.stringify(((Deadline) task).getTime()));","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"bnjmnt4n"},"content":"            writer.write(System.lineSeparator());","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"bnjmnt4n"},"content":"    private String escapeString(String str) {","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"bnjmnt4n"},"content":"        return str.replace(\"|\", \"||\");","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"bnjmnt4n"},"content":"    private String unescapeString(String str) {","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"bnjmnt4n"},"content":"        return str.replace(\"||\", \"|\");","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":141,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bnjmnt4n":141}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"    public Task removeTask(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"        return this.tasks.remove(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"     * Filters tasks by their description.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"     * @param searchStr The string to filter by.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"    public TaskList filterTasks(String searchStr) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(this.tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"        tasks.removeIf((task) -\u003e !task.getDescription().toLowerCase().contains(searchStr.toLowerCase()));","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"        return new TaskList(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"    public int size() {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"    public List\u003cTask\u003e items() {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"        return new ArrayList\u003c\u003e(this.tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bnjmnt4n":45}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"    private String arguments;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"     * Creates a command that adds a {@link Deadline} to the user\u0027s tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"     * @param arguments Command arguments.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"    public AddDeadlineCommand(String arguments) throws Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"        if (arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"            throw new Exception(\"Command `deadline` requires arguments\");","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"     * Adds a deadline to the user\u0027s tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"     * @param taskList The tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"     * @param ui The instance of the {@link Ui} class.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"     * @param storage The instance of the {@link Storage} class.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"     * @throws IOException when unable to save tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"        Task deadline \u003d Deadline.fromInput(arguments);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"        ui.printMessage(\"Added the following task:\\n    \" + deadline.toString() + \"\\n\" + \"You now have \"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"                + taskList.size() + \" tasks in your list.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bnjmnt4n":46}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"    private String arguments;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"     * Creates a command that adds a {@link Event} to the user\u0027s tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"     * @param arguments Command arguments.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"    public AddEventCommand(String arguments) throws Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"        if (arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"            throw new Exception(\"Command `deadline` requires arguments\");","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"     * Adds an event to the user\u0027s tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"     * @param taskList The tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"     * @param ui The instance of the {@link Ui} class.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"     * @param storage The instance of the {@link Storage} class.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"     * @throws IOException when unable to save tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"        Task event \u003d Event.fromInput(arguments);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"        taskList.addTask(event);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"        ui.printMessage(\"Added the following task:\\n    \" + event.toString() + \"\\n\" + \"You now have \"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"                + taskList.size() + \" tasks in your list.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bnjmnt4n":46}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"    private String arguments;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"     * Creates a command that adds a {@link Todo} to the user\u0027s tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"     * @param arguments Command arguments.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"    public AddTodoCommand(String arguments) throws Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"        if (arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"            throw new Exception(\"Command `todo` requires arguments\");","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"     * Adds a todo to the user\u0027s tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"     * @param taskList The tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"     * @param ui The instance of the {@link Ui} class.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"     * @param storage The instance of the {@link Storage} class.","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"     * @throws IOException when unable to save tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"        Task todo \u003d Todo.fromInput(arguments);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"        ui.printMessage(\"Added the following task:\\n    \" + todo.toString() + \"\\n\" + \"You now have \"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"                + taskList.size() + \" tasks in your list.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bnjmnt4n":46}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"     * Creates a command that exits the program.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"     * @param arguments Command arguments.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"    public ByeCommand(String arguments) throws Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"        if (arguments.length() \u003e 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"            throw new Exception(\"Command `bye` does not accept arguments\");","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"        // No-op.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"        return true;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bnjmnt4n":28}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws Exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"    public abstract boolean shouldExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bnjmnt4n":10}},{"path":"src/main/java/duke/command/CompleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"public class CompleteTaskCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"    private String arguments;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"     * Creates a command that marks a task as completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"     * @param arguments Command arguments.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"    public CompleteTaskCommand(String arguments) throws Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"        if (arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"            throw new Exception(\"Command `done` requires an arguments\");","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"     * Marks a user\u0027s task on the tasklist as completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"     * @param taskList The tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"     * @param ui The instance of the {@link Ui} class.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"     * @param storage The instance of the {@link Storage} class.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"     * @throws Exception when unable to find task or when unable to save tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"        Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"            int taskIndex \u003d Integer.parseInt(arguments);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"            task \u003d taskList.getTask(taskIndex - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"            task.markCompleted();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"            throw new Exception(\"Unable to parse number from arguments: \" + arguments);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"            throw new Exception(\"There is no task with the following number: \" + arguments);","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"        ui.printMessage(\"Marking task as completed:\\n    \" + task.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"bnjmnt4n"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"bnjmnt4n"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bnjmnt4n":52}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"    private String arguments;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"     * Creates a command that deletes a task.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"     * @param arguments Command arguments.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"    public DeleteTaskCommand(String arguments) throws Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"        if (arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"            throw new Exception(\"Command `done` requires an arguments\");","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"     * Delete a task from the user\u0027s tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"     * @param taskList The tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"     * @param ui The instance of the {@link Ui} class.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"     * @param storage The instance of the {@link Storage} class.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"     * @throws Exception when unable to find task or when unable to save tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"        Task task;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"            int taskIndex \u003d Integer.parseInt(arguments);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"            task \u003d taskList.removeTask(taskIndex - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"            throw new Exception(\"Unable to parse number from arguments: \" + arguments);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"            throw new Exception(\"There is no task with the following number: \" + arguments);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"        ui.printMessage(\"Removed the following task:\\n    \" + task.toString() + \"\\n\" + \"You now have \"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"                + taskList.size() + \" tasks in your list.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"bnjmnt4n"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"bnjmnt4n"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bnjmnt4n":52}},{"path":"src/main/java/duke/command/FilterTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"public class FilterTasksCommand extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"    private String searchInput;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"     * Creates a command that filters a user\u0027s tasklist by the search string.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"     * @param arguments Command arguments.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"    public FilterTasksCommand(String arguments) throws Exception {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"        if (arguments.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"            throw new Exception(\"Command `find` requires an argument\");","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"        this.searchInput \u003d arguments;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"     * Filters a user\u0027s tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"     * @param taskList The tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"     * @param ui The instance of the {@link Ui} class.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"     * @param storage The instance of the {@link Storage} class.","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"        TaskList filteredTaskList \u003d taskList.filterTasks(searchInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"        int numTasks \u003d filteredTaskList.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"        if (numTasks \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"            ui.printMessage(\"Couldn\u0027t find any tasks matchin: \" + searchInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"            builder.append(\"Here are the matching tasks:\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"            for (int i \u003d 0; i \u003c numTasks; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"                Task item \u003d filteredTaskList.getTask(i);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"                builder.append(i + 1)","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"                        .append(\". \")","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"                        .append(item.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"bnjmnt4n"},"content":"                if (i \u003c numTasks - 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"bnjmnt4n"},"content":"                    builder.append(\"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"bnjmnt4n"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"bnjmnt4n"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"bnjmnt4n"},"content":"            ui.printMessage(builder.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"bnjmnt4n"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"bnjmnt4n"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"bnjmnt4n":60}},{"path":"src/main/java/duke/command/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"public class ListTasksCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"     * Creates a command that lists all the user\u0027s tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"     * @param arguments Command arguments.","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"    public ListTasksCommand(String arguments) throws Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"        if (arguments.length() \u003e 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"            throw new Exception(\"Command `list` does not accept arguments\");","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"     * Lists all tasks to the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"     * @param taskList The tasklist.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"     * @param ui The instance of the {@link Ui} class.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"     * @param storage The instance of the {@link Storage} class.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"        int numTasks \u003d taskList.size();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"        if (numTasks \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"            ui.printMessage(\"No tasks saved\");","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"            for (int i \u003d 0; i \u003c numTasks; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"                Task item \u003d taskList.getTask(i);","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"                builder.append(i + 1)","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"                        .append(\". \")","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"                        .append(item.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"                if (i \u003c numTasks - 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"                    builder.append(\"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"            ui.printMessage(builder.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"bnjmnt4n"},"content":"    public boolean shouldExit() {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"bnjmnt4n"},"content":"        return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bnjmnt4n":53}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import duke.DateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"     * Constructs a new Deadline object.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"     * @param description Deadline description.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"     * @param time Deadline time.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"    public Deadline(String description, LocalDateTime time) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"     * Constructs a new Deadline object.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"     * @param description Deadline description.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"     * @param time Deadline time.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"     * @param isCompleted Deadline completion status.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"    public Deadline(String description, LocalDateTime time, boolean isCompleted) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"        super(description, isCompleted);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"        return this.time;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"     * Constructs a new Deadline object from an input string.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"     * @param input Input string used to create Deadline object.","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"    public static Deadline fromInput(String input) throws Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"        String[] deadlineInputs \u003d input.trim().split(\"\\\\s+/by\\\\s+\", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"        if (deadlineInputs.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"            if (deadlineInputs[0].length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"bnjmnt4n"},"content":"                throw new Exception(\"Deadline must have description and time\");","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"bnjmnt4n"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"bnjmnt4n"},"content":"                throw new Exception(\"Deadline must have time\");","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"bnjmnt4n"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"bnjmnt4n"},"content":"        if (deadlineInputs.length !\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"bnjmnt4n"},"content":"            throw new Exception(\"Deadline must have description and time\");","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"bnjmnt4n"},"content":"        String description \u003d deadlineInputs[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"bnjmnt4n"},"content":"        LocalDateTime time \u003d DateTime.parse(deadlineInputs[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"bnjmnt4n"},"content":"        return new Deadline(description, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"bnjmnt4n"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"bnjmnt4n"},"content":"        String timeStr \u003d DateTime.stringify(this.time);","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"bnjmnt4n"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + timeStr + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"bnjmnt4n":69}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import duke.DateTime;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"     * Constructs a new Event object.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"     * @param description Event description.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"     * @param time Event time.","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"    public Event(String description, LocalDateTime time) {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"     * Constructs a new Event object.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"     * @param description Event description.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"     * @param time Event time.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"     * @param isCompleted Event completion status.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"    public Event(String description, LocalDateTime time, boolean isCompleted) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"        super(description, isCompleted);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"        return this.time;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"     * Constructs a new Event object from an input string.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"     * @param input Input string used to create Event object.","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"    public static Event fromInput(String input) throws Exception {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"        String[] eventInputs \u003d input.trim().split(\"\\\\s+/at\\\\s+\", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"        if (eventInputs.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"            if (eventInputs[0].length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"bnjmnt4n"},"content":"                throw new Exception(\"Event must have description and time\");","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"bnjmnt4n"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"bnjmnt4n"},"content":"                throw new Exception(\"Event must have time\");","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"bnjmnt4n"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"bnjmnt4n"},"content":"        if (eventInputs.length !\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"bnjmnt4n"},"content":"            throw new Exception(\"Event must have description and time\");","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"bnjmnt4n"},"content":"        String description \u003d eventInputs[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"bnjmnt4n"},"content":"        LocalDateTime time \u003d DateTime.parse(eventInputs[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"bnjmnt4n"},"content":"        return new Event(description, time);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"bnjmnt4n"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"bnjmnt4n"},"content":"        String timeStr \u003d DateTime.stringify(this.time);","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"bnjmnt4n"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + timeStr + \")\";","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"bnjmnt4n":69}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"    protected String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"    protected boolean isCompleted;","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"     * Constructs a new Task object.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"     * Constructs a new Task object.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"     * @param isCompleted Task completion status.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"    public Task(String description, boolean isCompleted) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"        return this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"    public boolean getIsCompleted() {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"        return this.isCompleted;","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"    public void markCompleted() {","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"        String statusIcon \u003d this.isCompleted ? \"X\" : \" \";","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"        return \"[\" + statusIcon + \"] \" + this.description;","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"bnjmnt4n":45}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke.task;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"    public Todo(String description, boolean isCompleted) {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"        super(description, isCompleted);","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"     * Constructs a new Todo object from an input string.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"     * @param input Input string used to create todo object.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"    public static Todo fromInput(String input) throws Exception {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"        String todoDescription \u003d input.trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"        if (todoDescription.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"            throw new Exception(\"Todo must have description\");","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"        return new Todo(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"bnjmnt4n":29}},{"path":"src/main/java/duke/ui/ConsoleUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke.ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"public class ConsoleUi extends Ui {","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"    private Scanner in;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"    public ConsoleUi(Scanner in) {","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"        this.in \u003d in;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"     * Reads a command input by the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"        System.out.print(\"\u003e \");","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"        return in.nextLine().trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"     * Prints a formatted message to the user.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"     * @param string The message to print.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"    public void printMessage(String string) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"        System.out.print(\"------------------------------------------------\\n\" + string + \"\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"                + \"------------------------------------------------\\n\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"bnjmnt4n":28}},{"path":"src/main/java/duke/ui/GraphicalUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke.ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import duke.DialogBox;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"public class GraphicalUi extends Ui {","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"    private Image dukeImage;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"     * Initializes a graphical UI instance using JavaFX.","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"     * @param dialogContainer Dialog container to add messages to.","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"     * @param dukeImage Image of Duke to associate messages with.","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"    public GraphicalUi(VBox dialogContainer, Image dukeImage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"        this.dialogContainer \u003d dialogContainer;","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"        this.dukeImage \u003d dukeImage;","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"     * Prints a message by adding it as a dialog box to the GUI.","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"     * @param string Message to print.","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"    public void printMessage(String string) {","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"                DialogBox.getDukeDialog(string, dukeImage)","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"        );","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"bnjmnt4n":32}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package duke.ui;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"public abstract class Ui {","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"    private static final String WELCOME_TEXT \u003d \"Hey there I\u0027m Duke!\\nHow can I help you today?\";","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"    private static final String BYE_TEXT \u003d \"Bye! Hope to see you again!\";","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"    public abstract void printMessage(String string);","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"    public void printGreeting() {","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"        printMessage(WELCOME_TEXT);","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"    public void printGoodbye() {","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"        printMessage(BYE_TEXT);","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"bnjmnt4n":16}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"bnjmnt4n":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"bnjmnt4n":19}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"import java.util.List;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"    public void removeTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"        Task todo1 \u003d new Todo(\"TODO 1\");","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"        list.add(todo1);","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"        TaskList taskList \u003d new TaskList(list);","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"        assertEquals(1, taskList.size(), \"TaskList should have 1 item initially\");","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"        taskList.removeTask(0);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"        assertEquals(0, taskList.size(), \"Second task should be returned\");","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"        assertThrows(Exception.class, () -\u003e taskList.removeTask(0), \"Should throw after there are no tasks to remove\");","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"    public void getTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"        Task todo1 \u003d new Todo(\"TODO 1\");","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"        Task todo2 \u003d new Todo(\"TODO 2\");","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"        list.add(todo1);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"        list.add(todo2);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"        TaskList taskList \u003d new TaskList(list);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"        assertEquals(todo1, taskList.getTask(0), \"First task should be returned\");","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"        assertEquals(todo2, taskList.getTask(1), \"Second task should be returned\");","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"    public void filterTasks() {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"        Task todo1 \u003d new Todo(\"TODO 1\");","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"        Task todo2 \u003d new Todo(\"test 2\");","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"bnjmnt4n"},"content":"        list.add(todo1);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"bnjmnt4n"},"content":"        list.add(todo2);","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"bnjmnt4n"},"content":"        TaskList taskList \u003d new TaskList(list);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"bnjmnt4n"},"content":"        TaskList filteredTaskList \u003d taskList.filterTasks(\"todo\");","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"bnjmnt4n"},"content":"        assertEquals(1, filteredTaskList.size(), \"Filtered tasklist should have one element\");","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"bnjmnt4n"},"content":"        assertEquals(todo1, filteredTaskList.getTask(0), \"Filtered tasklist should have correct element\");","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"bnjmnt4n"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"bnjmnt4n"},"content":"    public void size() {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"bnjmnt4n"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"bnjmnt4n"},"content":"        assertEquals(0, taskList.size(), \"List should be empty at the start\");","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"bnjmnt4n"},"content":"        taskList.addTask(new Todo(\"TODO\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"bnjmnt4n"},"content":"        assertEquals(1, taskList.size(), \"List should have correct size\");","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"bnjmnt4n"},"content":"    @Test","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"bnjmnt4n"},"content":"    public void items() {","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"bnjmnt4n"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"bnjmnt4n"},"content":"        assertTrue(taskList.items() !\u003d taskList.items(), \"TaskList.items() should return different copies\");","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"bnjmnt4n":71}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"todo drop CS2103T","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"event macdonald\u0027s interview /at 20 Aug 2021 4-6pm","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"deadline fail test /by exam week","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"todo dropout university","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"done 1","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"event prof ben leong\u0027s lecture /at 24 Aug 2021 1-3pm","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"bnjmnt4n":10}}]
