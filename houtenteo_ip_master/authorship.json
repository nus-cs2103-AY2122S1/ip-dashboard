[{"path":"Data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"yyyy-MM-dd","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"[T][ ]  run","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"houtenteo":2}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"houtenteo":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.7.2\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.7.2\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"houtenteo":3,"-":43}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":" * The main class for the bot","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":" * @author Houten Teo","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":" * @version CS2103T week 3","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"    private static String format \u003d \"yyyy-MM-dd\"; //default date","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"    private MyList list;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"        new Duke().start();","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"     * Method to get the current format setting.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"     * @return the DateTimeFormatter","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"    public static String getFormat() {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"        return format;","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"     * Method to allow the user to change the date format.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"     * @param newFormat The desired format","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"     * @throws IllegalArgumentException Thrown if the format is not accepted by","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"     *                                  DateTimeFormatter","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"    public static void setFormat(String newFormat) throws IllegalArgumentException {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"        DateTimeFormatter.ofPattern(newFormat);","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        format \u003d newFormat;","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"     * Constructor for the duke class.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"     * Initialises the list and storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"    public Duke() {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"        this.list \u003d new MyList();","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"        this.storage \u003d new Storage(this.list, \"./Data.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"     * Method to start the bot and waits for the user\u0027s input.","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"    public void start() {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"        Ui.welcomeMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"        this.storage.load();","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"        Parser p \u003d new Parser(this.list, this.storage);","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"        while (p.isRunning()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"            p.readInput();","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"houtenteo":59,"-":4}},{"path":"src/main/java/duke/MyList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import duke.tasktype.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":" * duke.MyList class that encapsulates the bot list object and functionalities.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":" *","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":" * @Author Houten Teo","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":" * @version CS2103T week 3","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"public class MyList {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"     * An ArrayList Object to store all the items in the list.","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"    private ArrayList\u003cTask\u003e myList;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"     * Constructor for the duke.MyList class.","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"     * Adds the duke.tasks from the Data.txt file into the list if any.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"    public MyList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"          this.myList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"     * Method to return the size of the list","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"     * @return The number of items in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"    public int getListSize() {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        return this.myList.size();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"     * Method the return the task at the specified index.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"     * @param index The specified index.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        return this.myList.get(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"     * Method to add an item into the list","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"     * Subsequently prints out the total number of items in the list.","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"     * @param t the duke.tasks.Task to be added into the list","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"        myList.add(t);","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"        Ui.addTaskMessage(t, this);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"     * Method to list out all the items in the list.","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"    public void listAll() {","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"        Ui.listAllMessage(this);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"     * Method to mark a certain task in the list as completed.","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"     * @param index The index of the item in the list to be completed.","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"     *              If the index specified is invalid, prompt the user","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"     *              for another input.","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"    public void markComplete(int index) {","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"        try {","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"            myList.get(index - 1).markComplete();","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"            Ui.invalidIndexMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"     * Method to delete a certain task from the list.","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"     * @param index The index of the item in the list to be deleted.","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"     *              If the index specified is invalid, prompt the user","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"     *              for another input.","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"        Task removed \u003d this.myList.remove(index - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"        Ui.deleteTaskMessage(removed, this);","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"        System.out.println(removed.toString());","lastModifiedDate":"2021-08-16"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"        int noOfItems \u003d this.myList.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"        if (noOfItems \u003d\u003d 1) {","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"            System.out.printf(\"You now have %d item in your list \\n\", noOfItems);","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"            System.out.printf(\"You now have %d items in your list \\n\", noOfItems);","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"     * Method to find all tasks with a description containing the keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"     * Not case-sensitive.","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"     * @param keyword The keyword to be looking for.","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"    public void find(String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"        Task[] matchingList \u003d new Task[getListSize()];","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"        for (int i \u003d 0; i \u003c getListSize(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"            Task t \u003d getTask(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"            String taskDescription \u003d t.getDescription().toLowerCase();","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"            if (taskDescription.contains(keyword.toLowerCase())) {","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"                matchingList[i] \u003d t;","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"                counter++;","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"        Ui.containsKeyword(counter);","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"        Ui.containsKeywordTask(matchingList);","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"houtenteo"},"content":"     * Method to load a task into the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"     * This method does not print anything to the screen.","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"houtenteo"},"content":"     * Used in conjuntion with the load method in storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"houtenteo"},"content":"     * @param t The task to be laaded into the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"houtenteo"},"content":"    public void loadTask(Task t) {","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"houtenteo"},"content":"        this.myList.add(t);","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"houtenteo":125}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import duke.tasktype.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import duke.tasktype.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import duke.tasktype.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import duke.exception.WrongCommandFormatException;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":" * Class to handle all the user inputs.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":" * @author Houten Teo","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":" * @version CS2103T week 3","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"    private boolean isRunning;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"    private MyList list;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"     * Constructor for the class","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"     * @param list The list that the parser would be updating.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"     * @param storage the storage to read and write the data.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"    public Parser(MyList list, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"        this.isRunning \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"     * Method to check if the parser is still running.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"     * @return true if its running and false otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"    public boolean isRunning() {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        return this.isRunning;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"     * Method to read the inputs of the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"    public void readInput() {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"        Scanner s \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        String input \u003d s.next();","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"        if (!input.equals(\"bye\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"            if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"                this.list.listAll();","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"            } else if (input.equals(\"done\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"                Scanner s1 \u003d new Scanner(s.nextLine());","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"                int counter \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"                while (s1.hasNextInt()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"                    int index \u003d s1.nextInt();","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"                    this.list.markComplete(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"                    this.storage.writeToFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"                    counter ++;","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"                if (counter \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"                    Ui.invalidIndexMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"            } else if (input.equals(\"todo\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"                Scanner s2 \u003d new Scanner(s.nextLine());","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"                String description \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"                while (s2.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"                    description \u003d s2.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"                try {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"                    Todo newTodo \u003d new Todo(description, false);","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"                    this.list.addTask(newTodo);","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"                    this.storage.writeToFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"                } catch (WrongCommandFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"                    Ui.formatExceptionMessage(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"            } else if (input.equals(\"deadline\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"                Scanner s3 \u003d new Scanner(s.nextLine());","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"                String description \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"                while (s3.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"                    description \u003d s3.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"                try {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"                    Deadline newDeadline \u003d new Deadline(description, false);","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"                    this.list.addTask(newDeadline);","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"                    this.storage.writeToFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"                } catch (WrongCommandFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"                    Ui.formatExceptionMessage(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"            } else if (input.equals(\"event\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"                Scanner s4 \u003d new Scanner(s.nextLine());","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"                String description \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"                while (s4.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"                    description \u003d s4.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"                try {","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"                    Event newEvent \u003d new Event(description, false);","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"                    this.list.addTask(newEvent);","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"                    this.storage.writeToFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"                } catch (WrongCommandFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"                    Ui.formatExceptionMessage(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"            } else if (input.equals(\"delete\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"                Scanner s5 \u003d new Scanner(s.nextLine());","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"                if (s5.hasNextInt()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"                    int index \u003d s5.nextInt();","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"                    this.list.deleteTask(index);","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"                    this.storage.writeToFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"                    Ui.invalidIndexMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"            } else if (input.equals(\"setFormat\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"                Scanner s6 \u003d new Scanner(s.nextLine());","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"                if (s6.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"                    try {","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"                        Duke.setFormat(s6.nextLine().substring(1));","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"houtenteo"},"content":"                        Ui.formatUpdatedMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"                        this.storage.writeToFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"houtenteo"},"content":"                    } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"houtenteo"},"content":"                        Ui.unacceptableFormatMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"houtenteo"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"houtenteo"},"content":"                    Ui.noFormatSpecifiedMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"houtenteo"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"houtenteo"},"content":"            } else if (input.equals(\"format\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"houtenteo"},"content":"                Ui.currentDateFormatMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"houtenteo"},"content":"            } else if (input.equals(\"find\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"houtenteo"},"content":"                Scanner s7 \u003d new Scanner(s.nextLine());","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"houtenteo"},"content":"                if (s7.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"houtenteo"},"content":"                    this.list.find(s7.nextLine());","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"houtenteo"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"houtenteo"},"content":"                    Ui.noKeywordSpecifiedMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"houtenteo"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"houtenteo"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"houtenteo"},"content":"                Ui.noSpecificCmdMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"houtenteo"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"houtenteo"},"content":"            Ui.botShutdownMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"houtenteo"},"content":"            this.isRunning \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"houtenteo":142}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import duke.tasktype.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import duke.tasktype.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"import duke.tasktype.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"import duke.tasktype.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"import duke.exception.WrongCommandFormatException;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":" * Class that represents the storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":" * @author Houten Teo","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":" * @version CS2103T week 3","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"    private MyList list;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"    private String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"     * Constructor for the storage class","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"     * @param list the list to load the storage data into","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"    public Storage(MyList list, String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"     * Method to load the data from Data.txt file into the list if any.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"    public void load() {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"            File dataFile \u003d new File(this.filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"            Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"            Duke.setFormat(s.nextLine());","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"            while (s.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"                String input \u003d s.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"                Task t \u003d getTaskFromString(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"                this.list.loadTask(t);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"            System.out.println(\"No data to load\");","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"     * Takes the string representation of the task and converts it back into","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"     * the corresponding task object.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"     * @param s The string representation of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"     * @return The corresponding task object.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"    public Task getTaskFromString(String s) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"        String taskType \u003d s.substring(0, 3);","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"        String taskDescription \u003d s.substring(7);","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"        Task t \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"            if (s.substring(3,6). equals(\"[X]\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"                switch (taskType) {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"                case \"[T]\":","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"                    t \u003d new Todo(taskDescription, true);","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"                case \"[D]\":","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"                    t \u003d  new Deadline(taskDescription, true);","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"                case \"[E]\":","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"                    t \u003d  new Event(taskDescription, true);","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"                switch (taskType) {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"                case \"[T]\":","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"                    t \u003d new Todo(taskDescription, false);","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"                case \"[D]\":","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"                    t \u003d new Deadline(taskDescription, false);","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"                case \"[E]\":","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"                    t \u003d new Event(taskDescription, false);","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"        } catch (WrongCommandFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"            Ui.formatExceptionMessage(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"            Ui.loadingError();","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"        return t;","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"     * Method to store the string representation of a task into the Data.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"    public void writeToFile() {","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"            int listLength \u003d this.list.getListSize();","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"            String input \u003d Duke.getFormat() + \"\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"            for (int i \u003d 0; i \u003c listLength; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"                Task t \u003d this.list.getTask(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"                input +\u003d t.createData() + \"\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"            fw.write(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"            fw.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"houtenteo":113}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import duke.tasktype.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import duke.tasktype.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import duke.tasktype.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import duke.tasktype.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import duke.exception.WrongCommandFormatException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":" * Class that handles the user interface.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":" * @author Houten Teo","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":" * @version CS2103T week 3","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"     * Method to print out the welcome message when the bot starts.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"    public static void welcomeMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"        System.out.println(","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"                \"Yo! duke.Duke here \\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"                        + \"What did you call me for? \\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"                        + \"It better be something useful or else... \\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"     * Method to print out the error message when loading of tasks fails","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"    public static void loadingError() {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        System.out.println(\"Error loading duke.tasks\");","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"     * Method to print out the error message when user keys in an invalid index.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"    public static void invalidIndexMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"        System.out.println(\"Invalid index, please try again\");","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"     * Method to print out the message from the wrongCommandFormatException.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"     * @param e the exception to get the message from.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"    public static void formatExceptionMessage(WrongCommandFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"     * Method to print out the message when the user updates the date format.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"    public static void formatUpdatedMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"        System.out.println(","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"                \"Date format has been updated to: \"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"                        + Duke.getFormat()","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"     * Method to print out the message when the user tries to update into and invalid date format.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"    public static void unacceptableFormatMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"        System.out.println(\"Not an acceptable format. Please try again\");","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"     * Method to print out the current date format.","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"    public static void currentDateFormatMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"        System.out.println(\"Current format \" + Duke.getFormat());","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"    public static void noFormatSpecifiedMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"        System.out.println(\"No format specified. Please try again.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"     * Method when the user keys in and unrecognisable command.","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"    public static void noSpecificCmdMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"        System.out.println(\"No specific command specified. Please try again\");","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"     * Method to print out the goodbye message.","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"    public static void botShutdownMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"        System.out.println(\"Good riddance! Time to continue my beauty sleep :)\");","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"     * Method to inform the user what taks has been added and the number of items in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"     * @param t the task that the user added.","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"     * @param list the list that the task is added to.","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"    public static void addTaskMessage(Task t, MyList list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"        System.out.println(\"Got it! I have added:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"        System.out.println(t.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"        int noOfItems \u003d list.getListSize();","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"        if (noOfItems \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"            System.out.printf(\"You now have %d item in your list \\n\", noOfItems);","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"            System.out.printf(\"You now have %d items in your list \\n\", noOfItems);","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"     * Method to print out all the items in the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"     * @param list the list that contains the items to be printed out.","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"    public static void listAllMessage(MyList list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"        int listLength \u003d list.getListSize();","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"        if (listLength \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"houtenteo"},"content":"            System.out.println(\"Your list is empty.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"houtenteo"},"content":"            System.out.println(\"Your list items:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"houtenteo"},"content":"            for (int i \u003d 0; i \u003c listLength; i ++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"                Task t \u003d list.getTask(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"houtenteo"},"content":"                System.out.printf(\"%d. %s \\n\", i + 1, t.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"houtenteo"},"content":"     * Method to inform the user what task has been deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"houtenteo"},"content":"     * @param t The task that has been deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"houtenteo"},"content":"     * @param list The list that the task has been deleted from.","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"houtenteo"},"content":"    public static void deleteTaskMessage(Task t, MyList list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"houtenteo"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"houtenteo"},"content":"        System.out.println(t.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"houtenteo"},"content":"        int noOfItems \u003d list.getListSize();","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"houtenteo"},"content":"        if (noOfItems \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"houtenteo"},"content":"            System.out.printf(\"You now have %d item in your list \\n\", noOfItems);","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"houtenteo"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"houtenteo"},"content":"            System.out.printf(\"You now have %d items in your list \\n\", noOfItems);","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"houtenteo"},"content":"     * Method to print out the message when the user tries to complete a task","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"houtenteo"},"content":"     * that has already been completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"houtenteo"},"content":"     * @param t The completed task that the user tries to mark as complete","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"houtenteo"},"content":"    public static void taskAlrCompleted(Task t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"houtenteo"},"content":"        System.out.println(\"`\" + t.getDescription().substring(1) + \"`\" + \" is already completed.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"houtenteo"},"content":"     * Method to print out the message when the user marks an event as completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"houtenteo"},"content":"     * @param e The task that was marked as completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"houtenteo"},"content":"    public static void markCompleteEvent(Event e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"houtenteo"},"content":"        System.out.println(\"Completed: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"houtenteo"},"content":"                + e.getDescription()","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"houtenteo"},"content":"                + \" (by:\"","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"houtenteo"},"content":"                + e.getTimeframe()","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"houtenteo"},"content":"                + \")\"","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"houtenteo"},"content":"        System.out.println(\"WEW that\u0027s another task completed\");","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"houtenteo"},"content":"     * Method to print out the message when the user marks a to do as completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"houtenteo"},"content":"     * @param t The to do that was marked completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"houtenteo"},"content":"    public static void markCompleteTodo(Todo t) {","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"houtenteo"},"content":"        System.out.println(","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"houtenteo"},"content":"                \"Finally! Took you long enough to complete:\" + t.getDescription()","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"houtenteo"},"content":"     * Method to print out the message when the user marks a deadline as completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"houtenteo"},"content":"     * @param d The deadline that was marked as completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"houtenteo"},"content":"    public static void markCompleteDeadline(Deadline d) {","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"houtenteo"},"content":"        System.out.println(\"Completed:\"","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"houtenteo"},"content":"                + d.getDescription()","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"houtenteo"},"content":"                + \" (by:\"","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"houtenteo"},"content":"                + d.getDeadline().format(d.getCurrentFormat()) + \")\"","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"houtenteo"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"houtenteo"},"content":"        System.out.println(\"You didn\u0027t overshoot the deadline right?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"houtenteo"},"content":"     * Method to print out the number of matching tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"houtenteo"},"content":"     * @param counter The number of matching tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"houtenteo"},"content":"    public static void containsKeyword(int counter) {","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"houtenteo"},"content":"        if (counter \u003e 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"houtenteo"},"content":"            if (counter \u003d\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"houtenteo"},"content":"                System.out.printf(\"THere is %d matching task in your list: \\n\", counter);","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"houtenteo"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"houtenteo"},"content":"                System.out.printf(\"THere are %d matching tasks in your list: \\n\", counter);","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"houtenteo"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"houtenteo"},"content":"            System.out.println(\"There are no matching tasks in your list\");","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"houtenteo"},"content":"     * Method to print out the string representations of all the matching tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"houtenteo"},"content":"     * @param matchingList The array containing the matching tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"houtenteo"},"content":"    public static void containsKeywordTask(Task[] matchingList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":211,"author":{"gitId":"houtenteo"},"content":"        int noOfItems \u003d matchingList.length;","lastModifiedDate":"2021-08-24"},{"lineNumber":212,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"houtenteo"},"content":"        for (int i \u003d 0; i \u003c noOfItems; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":214,"author":{"gitId":"houtenteo"},"content":"            if (matchingList[i] !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":215,"author":{"gitId":"houtenteo"},"content":"                Task matchingTask \u003d matchingList[i];","lastModifiedDate":"2021-08-24"},{"lineNumber":216,"author":{"gitId":"houtenteo"},"content":"                System.out.printf(\"%d. %s \\n\", i + 1, matchingTask.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":217,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":218,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":219,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":220,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":221,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":222,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":223,"author":{"gitId":"houtenteo"},"content":"     * Method to inform the user that he has not input a keyword after the find command.","lastModifiedDate":"2021-08-24"},{"lineNumber":224,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"houtenteo"},"content":"    public static void noKeywordSpecifiedMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":226,"author":{"gitId":"houtenteo"},"content":"        System.out.println(\"No keyword specified. Please try again\");","lastModifiedDate":"2021-08-24"},{"lineNumber":227,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":228,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"houtenteo":228}},{"path":"src/main/java/duke/exception/WrongCommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"public class WrongCommandFormatException extends Exception{","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"    private String message;","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"    public WrongCommandFormatException(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"        super(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"        return this.message;","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"houtenteo":15}},{"path":"src/main/java/duke/tasktype/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package duke.tasktype;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"import duke.exception.WrongCommandFormatException;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":" * Class to represent a task with a deadline.","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":" * Has an additional component of a deadline.","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":" *","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":" * @author Houten Teo","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":" * @version CS2103T week 3","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"public class Deadline implements Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"    private String command;","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"    private String description \u003d \" \";","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"    private LocalDate deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"    private DateTimeFormatter currentFormat \u003d DateTimeFormatter.ofPattern(Duke.getFormat());","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"     * constructor for the deadline class.","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"     * @param description the description of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"     * @param isDone whether the task is completed .","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"     * @throws WrongCommandFormatException Thrown when the user enters the","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"     *                                      command with the wrong format.","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"    public Deadline(String description, boolean isDone) throws WrongCommandFormatException {","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"        Scanner s \u003d new Scanner(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"        this.command \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"            String next \u003d s.next();","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"            if (next.equals(\"/at\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"                throw new WrongCommandFormatException(\"Wrong keyword used. Please try again with /by\");","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"            } else if (next.equals(\"/by\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"                try {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"                    if (s.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"                        String date \u003d s.next();","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"                        if (s.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"                            String formatter \u003d s.next();","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"                            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(formatter);","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"                            this.deadline \u003d LocalDate.parse(date, format);","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"                        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"                            this.command +\u003d \" \" + Duke.getFormat();","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"                            this.deadline \u003d LocalDate.parse(date, currentFormat);","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"                        }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"                    } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"                        throw new WrongCommandFormatException(","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"                                \"No deadline specified. Please specify a deadline after `/by`\"","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"                        );","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"                    }","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"                } catch (DateTimeParseException ex) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"                    throw new WrongCommandFormatException(","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"                            \"Wrong deadline format specified. \\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"                            + \"Current format setting: \"","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"                            + Duke.getFormat()","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"                            + \"\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"                            + \"Please try again or consider changing the format \"","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"                            + \"settings by using the command `setFormat`\"","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"                    );","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"            } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"              this.description +\u003d next;","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"         if (this.description.equals(\" \")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"            throw new WrongCommandFormatException(","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"                    \"No task specified. Please specify a task before `/by`\"","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"            );","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"        } else if (this.deadline \u003d\u003d null) {","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"            throw new WrongCommandFormatException(","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"                    \"No deadline specified. Please specify a deadline after `/by`\"","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"            );","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"     * Method to return the current date format.","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"     * @return The current format.","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"    public DateTimeFormatter getCurrentFormat() {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"        return this.currentFormat;","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"     * Method to return the deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"     * @return The deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"        return this.deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"     * Overridden method to get the type icon.","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"     * @return The String representation of the icon.","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"        return \"[D]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"     * Overridden method to get the type icon.","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"     * @return The String representation of the icon.","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":117,"author":{"gitId":"houtenteo"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-15"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"            return \"[X]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":119,"author":{"gitId":"houtenteo"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":120,"author":{"gitId":"houtenteo"},"content":"            return \"[ ]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":122,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":123,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":124,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"houtenteo"},"content":"     * Method to return the description of the deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"houtenteo"},"content":"     * @return The description of the deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"houtenteo"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"houtenteo"},"content":"        return this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"houtenteo"},"content":"     * Overridden toString method","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"houtenteo"},"content":"     * @return The String representation of the deadline object","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"houtenteo"},"content":"     *          The type icon, status icon and description arranged","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"houtenteo"},"content":"     *          in a line.","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":139,"author":{"gitId":"houtenteo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":140,"author":{"gitId":"houtenteo"},"content":"        String typeIcon \u003d getTypeIcon();","lastModifiedDate":"2021-08-15"},{"lineNumber":141,"author":{"gitId":"houtenteo"},"content":"        String statusIcon \u003d getStatusIcon();","lastModifiedDate":"2021-08-15"},{"lineNumber":142,"author":{"gitId":"houtenteo"},"content":"        return typeIcon","lastModifiedDate":"2021-08-15"},{"lineNumber":143,"author":{"gitId":"houtenteo"},"content":"                + \" \"","lastModifiedDate":"2021-08-15"},{"lineNumber":144,"author":{"gitId":"houtenteo"},"content":"                + statusIcon","lastModifiedDate":"2021-08-15"},{"lineNumber":145,"author":{"gitId":"houtenteo"},"content":"                + this.description","lastModifiedDate":"2021-08-15"},{"lineNumber":146,"author":{"gitId":"houtenteo"},"content":"                + \" (by: \"","lastModifiedDate":"2021-08-15"},{"lineNumber":147,"author":{"gitId":"houtenteo"},"content":"                + this.deadline.format(DateTimeFormatter.ofPattern(Duke.getFormat()))","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"houtenteo"},"content":"                + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":149,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":150,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":151,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":152,"author":{"gitId":"houtenteo"},"content":"     * Overridden markComplete method to mark the deadline task as complete.","lastModifiedDate":"2021-08-17"},{"lineNumber":153,"author":{"gitId":"houtenteo"},"content":"     * If the task has already been completed, inform the user.","lastModifiedDate":"2021-08-17"},{"lineNumber":154,"author":{"gitId":"houtenteo"},"content":"     * Else indicate that the task has been correctly marked.","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":156,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":157,"author":{"gitId":"houtenteo"},"content":"    public void markComplete() {","lastModifiedDate":"2021-08-15"},{"lineNumber":158,"author":{"gitId":"houtenteo"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-15"},{"lineNumber":159,"author":{"gitId":"houtenteo"},"content":"            Ui.taskAlrCompleted(this);","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"houtenteo"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":161,"author":{"gitId":"houtenteo"},"content":"            Ui.markCompleteDeadline(this);","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"houtenteo"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":163,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":164,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":165,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"houtenteo"},"content":"     * Method to return the String representation of the deadline to be stored in Data.txt.","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"houtenteo"},"content":"     * @return The string representation of the deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":171,"author":{"gitId":"houtenteo"},"content":"    public String createData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":172,"author":{"gitId":"houtenteo"},"content":"        String data \u003d getTypeIcon()","lastModifiedDate":"2021-08-22"},{"lineNumber":173,"author":{"gitId":"houtenteo"},"content":"                    + \"\"","lastModifiedDate":"2021-08-22"},{"lineNumber":174,"author":{"gitId":"houtenteo"},"content":"                    + getStatusIcon()","lastModifiedDate":"2021-08-22"},{"lineNumber":175,"author":{"gitId":"houtenteo"},"content":"                    + \" \"","lastModifiedDate":"2021-08-22"},{"lineNumber":176,"author":{"gitId":"houtenteo"},"content":"                    + this.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":177,"author":{"gitId":"houtenteo"},"content":"        return data;","lastModifiedDate":"2021-08-22"},{"lineNumber":178,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":179,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"houtenteo":179}},{"path":"src/main/java/duke/tasktype/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package duke.tasktype;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import duke.exception.WrongCommandFormatException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":" * Class to represent an duke.tasks.Event task.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":" * An event has an additional component of a date.","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":" *","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":" * @author Houten Teo","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":" * @version CS2103T week 2","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"public class Event implements Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"    private String command;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"    private String description \u003d \" \";","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"    private String timeframe;","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"     * Constructor for the duke.tasks.Event task.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"     * @param description the description of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"     * @param isDone whether the task is completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"     * @throws WrongCommandFormatException thrown when the user enters the","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"     *                                     command with the wrong format.","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"    public Event(String description, boolean isDone) throws WrongCommandFormatException {","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"        this.command \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"        Scanner s \u003d new Scanner(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"            String next \u003d s.next();","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"            if (next.equals(\"/by\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"                throw new WrongCommandFormatException(\"Wrong keyword used. Please try again with /at\");","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"            } else if (next.equals(\"/at\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"                if (s.hasNextLine()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"                    this.timeframe \u003d s.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"                } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"                    throw new WrongCommandFormatException(","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"                            \"No timeframe specified. Please specify a deadline after `/at`\"","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"                    );","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"            } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"                this.description +\u003d next;","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"        if (this.description.equals(\" \")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"            throw new WrongCommandFormatException(","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"                    \"No task specified. Please specify a task before `/at`\"","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"            );","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"        } else if (this.timeframe \u003d\u003d null) {","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"            throw new WrongCommandFormatException(","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"                    \"No timeframe specified. Please specify a timeframe after `/at`\"","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"            );","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"    public String getTimeframe() {","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"        return this.timeframe;","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"     * Overridden method to get the specific type icon.","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"     * @return The String representation of the icon.","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"        return \"[E]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"     * Overriden method to get the status icon.","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"     * @return The String representation of the icon.","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"            return \"[X]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"            return \"[ ]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"        return this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"     * Overridden toString method.","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"     * @return The string representation of the event object.","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"     *         The type icon, status icon and decription arranged","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"     *         in a line.","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"        String typeIcon \u003d getTypeIcon();","lastModifiedDate":"2021-08-15"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"        String statusIcon \u003d getStatusIcon();","lastModifiedDate":"2021-08-15"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"        return typeIcon","lastModifiedDate":"2021-08-15"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"                + \" \"","lastModifiedDate":"2021-08-15"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"                + statusIcon","lastModifiedDate":"2021-08-15"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"                + this.description","lastModifiedDate":"2021-08-15"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"                + \" (at:\"","lastModifiedDate":"2021-08-15"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"                + this.timeframe","lastModifiedDate":"2021-08-15"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"                + \")\";","lastModifiedDate":"2021-08-15"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"     * Overridden markComplete method.","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"     * If the task has already been completed, inform the user.","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"     * Else indicate that the task has been correctly marked.","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":115,"author":{"gitId":"houtenteo"},"content":"    public void markComplete() {","lastModifiedDate":"2021-08-15"},{"lineNumber":116,"author":{"gitId":"houtenteo"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-15"},{"lineNumber":117,"author":{"gitId":"houtenteo"},"content":"            Ui.taskAlrCompleted(this);","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"houtenteo"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":119,"author":{"gitId":"houtenteo"},"content":"            Ui.markCompleteEvent(this);","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"houtenteo"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":121,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":122,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":123,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"houtenteo"},"content":"     * Method to convert the task into string format to be stored in Data.txt","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"houtenteo"},"content":"     * @return The string representation of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"houtenteo"},"content":"    public String createData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"houtenteo"},"content":"        String data \u003d getTypeIcon()","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"houtenteo"},"content":"                + \"\"","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"houtenteo"},"content":"                + getStatusIcon()","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"houtenteo"},"content":"                + \" \"","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"houtenteo"},"content":"                + this.command;","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"houtenteo"},"content":"        return data;","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"houtenteo":137}},{"path":"src/main/java/duke/tasktype/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package duke.tasktype;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":" * Task interface.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":" *","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":" * @author Houten Teo","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":" * @version CS2103T week 3","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"public interface Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"    void markComplete();","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"    String getStatusIcon();","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    String getDescription();","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"    String getTypeIcon();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"    String createData();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"houtenteo":20}},{"path":"src/main/java/duke/tasktype/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package duke.tasktype;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import duke.exception.WrongCommandFormatException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":" * Class to represent a to-do task.","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":" * A to-do event does not have any time or date requirements.","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":" * It essentially represents a standard task","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":" *","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":" * @author Houten Teo","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":" * @version CS2103T week 3","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"public class Todo implements Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    private String description;","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"     * Constructor for the todo task","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"     * @param isDone Whether the task has been compelted or not.","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"     * @throws WrongCommandFormatException Thrown when the user inputs the","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"     *                                     command with the wrong format.","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"    public Todo(String description, boolean isDone) throws WrongCommandFormatException {","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"            throw new WrongCommandFormatException(","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"                    \"No task specified. Please try again\"","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"            );","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"            this.isDone \u003d isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"     * Overridden method to get the specific type icon .","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"     * @return The String representation of the icon.","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"        return \"[T]\";","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"     * Overridden method to get the status icon.","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"     * @return The corresponding status icon depending on the","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"     *         completion status of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"            return \"[X]\";","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"            return \"[ ]\";","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"houtenteo"},"content":"     * Method to get the description of the to do.","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"houtenteo"},"content":"     * @return The description.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"houtenteo"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"houtenteo"},"content":"        return this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"houtenteo"},"content":"     * Overridden toString method to display the String representation","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"houtenteo"},"content":"     * of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"houtenteo"},"content":"     * @return The type icon, status icon and description arranged in a line.","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"houtenteo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":77,"author":{"gitId":"houtenteo"},"content":"        String typeIcon \u003d getTypeIcon();","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"houtenteo"},"content":"        String statusIcon \u003d getStatusIcon();","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"houtenteo"},"content":"        return typeIcon","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"houtenteo"},"content":"                + \" \"","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"houtenteo"},"content":"                + statusIcon","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"houtenteo"},"content":"                + this.description;","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"houtenteo"},"content":"     * Overridden method to mark the task as complete.","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"houtenteo"},"content":"     * If the task has already been completed, inform the user.","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"houtenteo"},"content":"     * Else indicate that the task has been correctly marked.","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"houtenteo"},"content":"    public void markComplete() {","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"houtenteo"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"houtenteo"},"content":"            Ui.taskAlrCompleted(this);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"houtenteo"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"houtenteo"},"content":"            Ui.markCompleteTodo(this);","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"houtenteo"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"houtenteo"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"houtenteo"},"content":"     * Method to return the string representation of the to do to be stored in Data.txt.","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"houtenteo"},"content":"     * @return","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"houtenteo"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"houtenteo"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"houtenteo"},"content":"    public String createData() {","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"houtenteo"},"content":"        String data \u003d getTypeIcon()","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"houtenteo"},"content":"                + \"\"","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"houtenteo"},"content":"                + getStatusIcon()","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"houtenteo"},"content":"                + \" \"","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"houtenteo"},"content":"                + this.description;","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"houtenteo"},"content":"        return data;","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"houtenteo":113}},{"path":"src/test/java/test/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package test;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import duke.exception.WrongCommandFormatException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import duke.tasktype.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"    public void testGetTypeIcon() {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"            Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"            assertEquals(\"[D]\", new Deadline(\"run /by 2000-12-12\", false).getTypeIcon());","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"        } catch (WrongCommandFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"            throw new Error(\"case 1 failed\");","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"    public void testDeadlineConstructorException1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"            new Deadline(\"run /at 2000-12-12\", false);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"        } catch (WrongCommandFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"            assertEquals(","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"                    \"Wrong keyword used. Please try again with /by\",","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"                    e.getMessage()","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"            );","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    public void testDeadlineConstructorException2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"houtenteo"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"houtenteo"},"content":"            new Deadline(\"run /by 20-12-12\", false);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"houtenteo"},"content":"        } catch (WrongCommandFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"houtenteo"},"content":"            assertEquals(","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"houtenteo"},"content":"                    \"Wrong deadline format specified. \\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"houtenteo"},"content":"                            + \"Current format setting: \"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"houtenteo"},"content":"                            + Duke.getFormat()","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"houtenteo"},"content":"                            + \"\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"houtenteo"},"content":"                            + \"Please try again or consider changing the format \"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"houtenteo"},"content":"                            + \"settings by using the command `setFormat`\",","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"houtenteo"},"content":"                    e.getMessage()","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"houtenteo"},"content":"            );","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"houtenteo":59}},{"path":"src/test/java/test/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"package test;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"import duke.MyList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"import duke.exception.WrongCommandFormatException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"import duke.tasktype.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"import duke.tasktype.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"houtenteo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"houtenteo"},"content":"public class StorageTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"houtenteo"},"content":"    public void testGetTaskFromString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"houtenteo"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"        Storage s \u003d new Storage(new MyList(), \"./Data.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"houtenteo"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"houtenteo"},"content":"            assertEquals(","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"houtenteo"},"content":"                    s.getTaskFromString(\"[D][X]  run /by 2000-12-12 yyyy-MM-dd\").toString(),","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"houtenteo"},"content":"                    new Deadline(\"run /by 2000-12-12\", true).toString()","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"houtenteo"},"content":"            );","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"houtenteo"},"content":"        } catch (WrongCommandFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"houtenteo"},"content":"            throw new Error(\"testGetTaskFromString failed\");","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"houtenteo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"houtenteo"},"content":"    public void testGetTaskFromString2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"houtenteo"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"houtenteo"},"content":"        Storage s \u003d new Storage(new MyList(), \"./Data.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"houtenteo"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"houtenteo"},"content":"            assertEquals(","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"houtenteo"},"content":"                    s.getTaskFromString(\"[E][]  run /at lolololol\").toString(),","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"houtenteo"},"content":"                    new Event(\"run /at lolololol\", false).toString()","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"houtenteo"},"content":"            );","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"houtenteo"},"content":"        } catch (WrongCommandFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"houtenteo"},"content":"            throw new Error(\"testGetTaskFromString2 failed\");","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"houtenteo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"houtenteo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"houtenteo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"houtenteo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"houtenteo":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"houtenteo"},"content":"todo eat","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"houtenteo"},"content":"deadline run /by tonight","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"houtenteo"},"content":"todo sleep","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"houtenteo"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"houtenteo"},"content":"event","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"houtenteo"},"content":"dsfkjn","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"houtenteo"},"content":"run","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"houtenteo"},"content":"event /at tmr night","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"houtenteo"},"content":"event party /at tmr night","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"houtenteo"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"houtenteo":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"houtenteo"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"houtenteo":1,"-":20}}]
