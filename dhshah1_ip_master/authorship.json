[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dhshah1":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.command.MalformedCommandException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import duke.command.UnsupportedCommandException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"import duke.storage.StorageException;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"    public Duke() {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"     * Reads user input and executes user commands.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"    public void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"            tasks.loadTasks(storage.load());","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"        } catch(StorageException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"            ui.showErrorMessage(e);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"        while(!isExit) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"                String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"                Command userCommand \u003d Parser.parse(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"                userCommand.execute(tasks, ui);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"                isExit \u003d userCommand.isExit();","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"            } catch(UnsupportedCommandException | MalformedCommandException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"                ui.showErrorMessage(e);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"dhshah1"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"dhshah1"},"content":"        } catch(StorageException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"dhshah1"},"content":"            ui.showErrorMessage(e);","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"dhshah1"},"content":"        Duke chatBot \u003d new Duke();","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"dhshah1"},"content":"        chatBot.run();","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"dhshah1":55,"-":4}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" * Adds a task to the user\u0027s list of task.","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"public abstract class AddCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    protected Task task;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"        int numTasksRemaining \u003d tasks.numTasks();","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"        ui.showTaskAddedMessage(task, numTasksRemaining);","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":24}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" * Adds a deadline task to the list of user\u0027s tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    public static final String COMMAND_IDENTIFIER \u003d \"deadline\";","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"     * Returns the add deadline command represented by the user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"     * @param userInput String input provided by the user.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"     * @return add deadline user command.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"     * @throws MalformedCommandException If userInput is incorrectly formatted for an add deadline command.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"    public static Command create(String userInput) throws MalformedCommandException {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"            String userParams \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"            String[] userParamsSplit \u003d userParams.split(\" /\", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"            String description \u003d userParamsSplit[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"            String by \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"            if(userParamsSplit[1].startsWith(\"by\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"                by \u003d userParamsSplit[1].replaceFirst(\"by\", \"\").stripLeading();","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"            Task task \u003d new Deadline(description, by);","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"            return new AddDeadlineCommand(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"        } catch(ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"            throw new MalformedCommandException(\"Creating an deadline needs to follow the following format: \" +","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"                \"deadline [description] /by [d/MM/yyyy HHmm]\");","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"    private AddDeadlineCommand(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":40}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" * Adds an event task to the list of user\u0027s tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    public static final String COMMAND_IDENTIFIER \u003d \"event\";","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"     * Returns the add event command represented by the user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"     * @param userInput String input provided by the user.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"     * @return add event user command.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"     * @throws MalformedCommandException If userInput is incorrectly formatted for an add event command.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"    public static Command create(String userInput) throws MalformedCommandException {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"            String userParams \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"            String[] userParamsSplit \u003d userParams.split(\" /\", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"            String description \u003d userParamsSplit[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"            String at \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"            if(userParamsSplit[1].startsWith(\"at\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"                at \u003d userParamsSplit[1].replaceFirst(\"at\", \"\").stripLeading();","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"            Task task \u003d new Event(description, at);","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"            return new AddEventCommand(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"        } catch(ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"            throw new MalformedCommandException(\"Creating an event needs to follow the following format: \" +","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"                \"event [description] /at [d/MM/yyyy HHmm]\");","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"    private AddEventCommand(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":40}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":" * Adds a todo task to the list of user\u0027s tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"public class AddTodoCommand extends AddCommand {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"    public static final String COMMAND_IDENTIFIER \u003d \"todo\";","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"     * Returns the add todo command represented by the user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"     * @param userInput String input provided by the user.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"     * @return add todo user command.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"     * @throws MalformedCommandException If userInput is incorrectly formatted for an add todo command.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"    public static Command create(String userInput) throws MalformedCommandException {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"            String description \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"            Task task \u003d new Todo(description);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"            return new AddTodoCommand(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"        } catch(NullPointerException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"            throw new MalformedCommandException(\"Creating an todo needs to follow the following format: \" +","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"                \"todo [description]\");","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"    private AddTodoCommand(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":33}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":" * Represents a command provided by the user.","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"public interface Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"     * @param tasks List of user\u0027s tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"     * @param ui Ui object to handle display of message to user.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"     * @throws MalformedCommandException If command could not be executed successfully.","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"    void execute(TaskList tasks, Ui ui) throws MalformedCommandException;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"     * Returns true if command should stop the chatbot.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"     * @return true if command should stop the chatbot.","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"    boolean isExit();","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"dhshah1":25}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" * Deletes a task from the user\u0027s list of tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    public static final String COMMAND_IDENTIFIER \u003d \"delete\";","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"    private int taskIndex;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"     * Returns the delete command represented by the user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"     * @param userInput String input provided by the user.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"     * @return delete user command.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"     * @throws MalformedCommandException If userInput is incorrectly formatted for a delete command.","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"    public static Command create(String userInput) throws MalformedCommandException {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"            int taskIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"            return new DeleteCommand(taskIndex);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException  e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"            throw new MalformedCommandException(","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"                \"Please provide a valid integer index for the task you want to delete like so: \" +","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"                    \"delete [taskIndex in integer form]\");","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"    private DeleteCommand(int taskIndex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"    public void execute(TaskList tasks, Ui ui) throws MalformedCommandException {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"        Task taskDeleted \u003d tasks.delete(taskIndex - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"        int numTasksRemaining \u003d tasks.numTasks();","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"        ui.showTaskDeletedMessage(taskDeleted, numTasksRemaining);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"dhshah1"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":48}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" * Marks a task as done","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"public class DoneCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    public static final String COMMAND_IDENTIFIER \u003d \"done\";","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"    private int taskIndex;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"     * Returns the done command represented by the user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"     * @param userInput String input provided by the user.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"     * @return done user command.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"     * @throws MalformedCommandException If userInput is incorrectly formatted for a done command.","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"    public static Command create(String userInput) throws MalformedCommandException {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"            int taskIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"            return new DoneCommand(taskIndex);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"            throw new MalformedCommandException(","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"                \"Please provide a valid integer index for the task you want to mark as done like so: \" +","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"                    \"done [taskIndex in integer form]\");","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"    private DoneCommand(int taskIndex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"    public void execute(TaskList tasks, Ui ui) throws MalformedCommandException {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"        Task taskMarkedDone \u003d tasks.markTaskDone(taskIndex - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"        ui.showTaskDoneMessage(taskMarkedDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":47}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":" * Stops the chatbot.","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"    public static final String COMMAND_IDENTIFIER \u003d \"bye\";","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"     * Returns a exit command.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"     * @return exit command.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"    public static Command create() {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"        return new ExitCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"        ui.showExitMessage();","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"        return true;","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":30}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":" * Displays all of the user\u0027s tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"    public static final String COMMAND_IDENTIFIER \u003d \"list\";","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"     * Returns a list command.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"     * @return list command;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"    public static Command create() {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"        return new ListCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"    public void execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"        ui.showTaskList(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":30}},{"path":"src/main/java/duke/command/MalformedCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"public class MalformedCommandException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"    public MalformedCommandException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"dhshah1":7}},{"path":"src/main/java/duke/command/UnsupportedCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"public class UnsupportedCommandException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"    public UnsupportedCommandException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"dhshah1":7}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"import duke.command.MalformedCommandException;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"import duke.command.UnsupportedCommandException;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":" * Responsible for parsing of command line user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"     * Parses and returns the command represented by the user input.","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"     * @param userInput String input provided by user.","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"     * @return user command","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"     * @throws UnsupportedCommandException If user command is not supported.","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"     * @throws MalformedCommandException If a supported user command has the wrong format.","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"    public static Command parse(String userInput) throws UnsupportedCommandException, MalformedCommandException {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"        String[] userInputSplit \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"        String userCommand \u003d userInputSplit[0];","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"        switch(userCommand){","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"        case ListCommand.COMMAND_IDENTIFIER:","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"            return ListCommand.create();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"        case DoneCommand.COMMAND_IDENTIFIER:","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"            return DoneCommand.create(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"        case DeleteCommand.COMMAND_IDENTIFIER:","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"            return DeleteCommand.create(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"        case AddTodoCommand.COMMAND_IDENTIFIER:","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"            return AddTodoCommand.create(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"        case AddDeadlineCommand.COMMAND_IDENTIFIER:","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"            return AddDeadlineCommand.create(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"        case AddEventCommand.COMMAND_IDENTIFIER:","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"            return AddEventCommand.create(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"        case ExitCommand.COMMAND_IDENTIFIER:","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"            return ExitCommand.create();","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"dhshah1"},"content":"            throw new UnsupportedCommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":49}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":" * Responsible for loading and saving user\u0027s tasks on disk.","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"    private final static String DIR_PATH \u003d \"data\";","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"    private final static String FILE_NAME \u003d \"tasks.txt\";","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"     * Returns file object which contains the tasks stored on disk.","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"     * @return file object which contains tasks stored on disk.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"    public File load() {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"        File file \u003d new File(DIR_PATH + \"/\" + FILE_NAME);","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"        return file;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"     * Saves users tasks in a file on disk.","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"     * @param tasks List of users tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"     * @throws StorageException If unable to write tasks to a file on disk.","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"    public void saveTasks(TaskList tasks) throws StorageException {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"            File base_dir \u003d new File(DIR_PATH);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"            if (!base_dir.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"                base_dir.mkdirs();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"            FileWriter fw \u003d new FileWriter(DIR_PATH + \"/\" + FILE_NAME);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"            fw.write(tasks.toStorageFormat());","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"            fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"            throw new StorageException(\"There was an error in saving your tasks to disk\");","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"dhshah1":45}},{"path":"src/main/java/duke/storage/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"public class StorageException extends Exception {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"    public StorageException(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"        super(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":7}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" * Represents a deadline task.","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    public static final String IDENTIFIER \u003d \"D\";","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"    private static final DateTimeFormatter DISPLAY_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"    private LocalDateTime by;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"    public Deadline(String description, boolean isDone, String by) throws DateTimeParseException {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"        this.by \u003d LocalDateTime.parse(by, INPUT_FORMAT);","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"    public Deadline(String description, String by) throws DateTimeParseException{","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"        this.by \u003d LocalDateTime.parse(by, INPUT_FORMAT);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"        return \"[\" + IDENTIFIER + \"]\" + super.toString() +","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"            \" (by:\" + by.format(DISPLAY_FORMAT) + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"        return IDENTIFIER + Task.STORAGE_DELIMITER + super.toStorageFormat() + Task.STORAGE_DELIMITER +","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"            by.format(INPUT_FORMAT);","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"dhshah1":38}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" * Represents an event task.","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    public static final String IDENTIFIER \u003d \"E\";","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"    private static final DateTimeFormatter DISPLAY_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"    private LocalDateTime at;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"    public Event(String description, boolean isDone, String at) throws DateTimeParseException {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"        this.at \u003d LocalDateTime.parse(at, INPUT_FORMAT);","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"    public Event(String description, String at) throws DateTimeParseException {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"        this.at \u003d LocalDateTime.parse(at, INPUT_FORMAT);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"        return \"[\" + IDENTIFIER + \"]\" + super.toString() +","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"            \" (at:\" + at.format(DISPLAY_FORMAT)  + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"        return IDENTIFIER + Task.STORAGE_DELIMITER + super.toStorageFormat() + Task.STORAGE_DELIMITER +","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"            at.format(INPUT_FORMAT);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"dhshah1":37}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":" * Represents a task in the task list.","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"    public final static String STORAGE_DELIMITER \u003d \"%\";","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"    private String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"    public Task(String description){","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"    public Task(String description, boolean isDone){","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"     * Returns a status icon representing whether task has been marked done.","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"     * @return string status icon representing whether task has been marked done.","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"     * Returns string representaion of task for storage on disk.","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"dhshah1"},"content":"     * @return string representation of task for storage on disk.","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"dhshah1"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"dhshah1"},"content":"        return description + STORAGE_DELIMITER + isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"dhshah1":51}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"import java.util.List;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"import duke.command.MalformedCommandException;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"import duke.storage.StorageException;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":" * Represents a collection of all the user\u0027s tasks.","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"public class TaskList {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"    public void loadTasks(File file) throws StorageException {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"            while(sc.hasNext()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"                String taskString \u003d sc.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"                String[] splitTaskString \u003d taskString.split(Task.STORAGE_DELIMITER);","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"                Task task \u003d null;","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"                switch (splitTaskString[0]) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"                case Todo.IDENTIFIER:","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"                    task \u003d new Todo(splitTaskString[1], Boolean.parseBoolean(splitTaskString[2]));","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"                case Event.IDENTIFIER:","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"                    task \u003d new Event(splitTaskString[1], Boolean.parseBoolean(splitTaskString[2]), splitTaskString[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"                case Deadline.IDENTIFIER:","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"                    task \u003d","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"                        new Deadline(splitTaskString[1], Boolean.parseBoolean(splitTaskString[2]), splitTaskString[3]);","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"                if(task !\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"                    tasks.add(task);","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"dhshah1"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"dhshah1"},"content":"        } catch (FileNotFoundException ignored) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"dhshah1"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"dhshah1"},"content":"            throw new StorageException(\"Txt file for loading tasks is wrongly formatted. Some tasks were not loaded\");","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"dhshah1"},"content":"    public Task add(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"dhshah1"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"dhshah1"},"content":"        return task;","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"dhshah1"},"content":"    public Task markTaskDone(int taskIndex) throws MalformedCommandException {","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"dhshah1"},"content":"            Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"dhshah1"},"content":"            task.markDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"dhshah1"},"content":"            return task;","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"dhshah1"},"content":"        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"dhshah1"},"content":"            throw new MalformedCommandException(\"You only have \" + numTasks() + \" tasks currently. \" +","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"dhshah1"},"content":"                \"Please provide a task index from that list\");","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"dhshah1"},"content":"    public Task delete(int taskIndex) throws MalformedCommandException {","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"dhshah1"},"content":"            return tasks.remove(taskIndex);","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"dhshah1"},"content":"        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"dhshah1"},"content":"            throw new MalformedCommandException(\"You only have \" + numTasks() + \" tasks currently. \" +","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"dhshah1"},"content":"                \"Please provide a task index from that list\");","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"dhshah1"},"content":"    public int numTasks() {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"dhshah1"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"dhshah1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"dhshah1"},"content":"        StringBuilder taskListStringRepresentation \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"dhshah1"},"content":"        for(int i \u003d 0; i \u003c numTasks(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"dhshah1"},"content":"            taskListStringRepresentation.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"dhshah1"},"content":"        return taskListStringRepresentation.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"dhshah1"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"dhshah1"},"content":"        StringBuilder taskStorageRepresentation \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"dhshah1"},"content":"        for(int i \u003d 0; i \u003c numTasks(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"dhshah1"},"content":"            taskStorageRepresentation.append(tasks.get(i).toStorageFormat()).append(\"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"dhshah1"},"content":"        return taskStorageRepresentation.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"dhshah1":101}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.command.MalformedCommandException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":" * Represents a todo task.","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"    public static final String IDENTIFIER \u003d \"T\";","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"//    public static Task create(String userInput) throws MalformedCommandException {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"//        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"//            String description \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"//            return new Todo(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"//        } catch(ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"//            throw new MalformedCommandException(\"Creating an todo needs to follow the following format: \" +","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"//                \"todo [description]\");","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"//        }","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"//    }","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"        return \"[\" + IDENTIFIER + \"]\" + super.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"        return IDENTIFIER + Task.STORAGE_DELIMITER + super.toStorageFormat();","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"dhshah1":38}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" * Responsible for getting user input and displaying messages back","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    private final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Duke. What can I do for you?\";","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"    private final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"    private final int INDENT \u003d 4;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"    private final String BORDER \u003d \"-\".repeat(150);","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"    public Ui() {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"     * Returns user\u0027s command line input","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"     * @return user input","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"     * Prints welcome message","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"        display(WELCOME_MESSAGE);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"     * Prints exit message","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"    public void showExitMessage() {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"        display(EXIT_MESSAGE);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"dhshah1"},"content":"     * Prints list of tasks user currently has","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"dhshah1"},"content":"     * @param tasks List of tasks user currently has","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"dhshah1"},"content":"    public void showTaskList(TaskList tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"dhshah1"},"content":"        display(\"Here are the tasks in your list:\\n\" + tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"dhshah1"},"content":"     * Prints a task added message","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"dhshah1"},"content":"     * @param task Task added","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"dhshah1"},"content":"     * @param numRemainingTasks Total number of tasks user has","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"dhshah1"},"content":"    public void showTaskAddedMessage(Task task, int numRemainingTasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"dhshah1"},"content":"        display(\"Got it. I\u0027ve added this task:\\n  \" + task + \u0027\\n\u0027 +","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"dhshah1"},"content":"            \"You have \" + numRemainingTasks + \" tasks in the list\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"dhshah1"},"content":"     * Prints a task deleted message","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"dhshah1"},"content":"     * @param task Task deleted","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"dhshah1"},"content":"     * @param numRemainingTasks Total number of tasks user has","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"dhshah1"},"content":"    public void showTaskDeletedMessage(Task task, int numRemainingTasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"dhshah1"},"content":"        display(\"Noted. I\u0027ve removed this task:\\n \" + task + \u0027\\n\u0027 +","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"dhshah1"},"content":"            \"You have \" + numRemainingTasks + \" tasks in the list\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"dhshah1"},"content":"     * Prints a task done message","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"dhshah1"},"content":"     * @param task Task marked done","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"dhshah1"},"content":"    public void showTaskDoneMessage(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"dhshah1"},"content":"        display(\"Nice! this task has been marked done:\\n  \" + task + \"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"dhshah1"},"content":"     * Prints error message","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"dhshah1"},"content":"     * @param e Exception object","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"dhshah1"},"content":"    public void showErrorMessage(Exception e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"dhshah1"},"content":"        display(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"dhshah1"},"content":"     * Prints the list of messages for the user","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"dhshah1"},"content":"     * @param messages List of messages to be printed","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"dhshah1"},"content":"    private void display(String... messages) {","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"dhshah1"},"content":"        printWithIndent(BORDER);","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"dhshah1"},"content":"        for(String message : messages){","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"dhshah1"},"content":"            String[] newLineSeparated \u003d message.split(\"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"dhshah1"},"content":"            for(String line: newLineSeparated) {","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"dhshah1"},"content":"                printWithIndent(line);","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"dhshah1"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"dhshah1"},"content":"        printWithIndent(BORDER);","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"dhshah1"},"content":"     * Prints a message with indentation","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"dhshah1"},"content":"     * @param string message to be printed","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"dhshah1"},"content":"    private void printWithIndent(String string) {","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"dhshah1"},"content":"        System.out.println(\" \".repeat(INDENT) + string);","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":118}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"[D][ ] This is a test (by:Aug 25 2021 02:00 PM)\",","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"            new Deadline(\"This is a test\", \"25/08/2021 1400\").toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"[D][X] This is a test (by:Aug 25 2021 02:00 PM)\",","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"            new Deadline(\"This is a test\", true, \"25/08/2021 1400\").toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"    public void testStorageFormatConversion() {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"D%This is a test%false%25/08/2021 1400\",","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"            new Deadline(\"This is a test\", \"25/08/2021 1400\").toStorageFormat());","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"D%This is a test%true%25/08/2021 1400\",","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"            new Deadline(\"This is a test\", true, \"25/08/2021 1400\").toStorageFormat());","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"    public void deadlineCreation_missingTime_exceptionThrown() {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"        Assertions.assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"            new Deadline(\"Missing time\", \"25/08/2021\");","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"        });","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"dhshah1":31}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"public class EventTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"[E][ ] This is a test (at:Aug 25 2021 02:00 PM)\",","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"            new Event(\"This is a test\", \"25/08/2021 1400\").toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"[E][X] This is a test (at:Aug 25 2021 02:00 PM)\",","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"            new Event(\"This is a test\", true, \"25/08/2021 1400\").toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"    public void testStorageFormatConversion() {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"E%This is a test%false%25/08/2021 1400\",","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"            new Event(\"This is a test\", \"25/08/2021 1400\").toStorageFormat());","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"E%This is a test%true%25/08/2021 1400\",","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"            new Event(\"This is a test\", true, \"25/08/2021 1400\").toStorageFormat());","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"    public void eventCreation_missingTime_exceptionThrown() {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"        Assertions.assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"            new Event(\"Missing time\", \"25/08/2021\");","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"        });","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"dhshah1":31}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"[T][ ] This is a test\", new Todo(\"This is a test\").toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"[T][X] This is a test\", new Todo(\"This is a test\", true).toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"    public void testStorageFormatConversion() {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"T%This is a test%false\", new Todo(\"This is a test\").toStorageFormat());","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"T%This is a test%true\",","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"            new Todo(\"This is a test\", true).toStorageFormat());","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"    public void testMarkDone() {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"        Task todo \u003d new Todo(\"This is a test\");","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"[T][ ] This is a test\", todo.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"        todo.markDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"[T][X] This is a test\", todo.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"dhshah1":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"blah","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"dhshah1":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"dhshah1":1}}]
