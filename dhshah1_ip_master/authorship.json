[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"dhshah1":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"javafx {","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"    version \u003d \"11\"","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"    modules \u003d [ \u0027javafx.base\u0027, \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.graphics\u0027]","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"dhshah1"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":42,"dhshah1":7}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"T%return book%false","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"D%finish assignment%false%12/08/1999 1200","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"T%readbook%true","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"T%rejwjenfjwnj%false","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"T%read%false","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"T%jewbfjbwejk%false","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"T%qnjkdnjqknjk qwdqdwqdw%false","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"dhshah1":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"# Duke - User Guide","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"Duke is a task manager that will make help you stay on top of the things you need to achieve","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"### Feature- Ability to add tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"Duke currently supports adding of three type of tasks:","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"1. Todos","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"2. Events (you can specify the event date and time)","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"3. Deadlines (you can specify the dueDate)","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"### Feature - Ability to mark tasks as done  ","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"Once you have completed a todo, attended and event or met a deadline ","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"you can mark it as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"### Feature - List all tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"You can list all the tasks you have to have a high level overview of the ","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"things you need to achieve.","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"### Feature - Delete Tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"If you mistakenly added a task or no longer have a need for it you can delete it.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"### Feature - Find Tasks","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"If you find yourself having a lot of tasks, you do have the ability to filter tasks by keywords","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"### `todo [description]` ","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"This command adds a todo to your task list (along with its description).","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"`todo essay assignment`","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"Duke should respond as follows:","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":" [T][] essay assignment","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"You have 1 tasks in the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"dhshah1"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"dhshah1"},"content":"### `deadline [description] /by [dd/MM/YYYY HHmm]`","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"dhshah1"},"content":"This command adds a deadline to your task list (along with its description and due date)","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"dhshah1"},"content":"Please note that the date time input has to match the above format strictly.","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"dhshah1"},"content":"Example of usage :","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"dhshah1"},"content":"`deadline return book /by 17/09/2021 1159`","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"dhshah1"},"content":"Duke should respond as follows:","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"dhshah1"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"dhshah1"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"dhshah1"},"content":" [D][] return book (by:Sep 17 2021 11:59 AM)","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"dhshah1"},"content":"You have 2 tasks in the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"dhshah1"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"dhshah1"},"content":"### `event [description] /at [dd/MM/YYYY HHmm]`","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"dhshah1"},"content":"This command adds a event to your task list (along with its description and the date and time it takes place)","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"dhshah1"},"content":"Please note that the date time input has to match the above format strictly.","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"dhshah1"},"content":"Example of usage:","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"dhshah1"},"content":"`event book festival /at 17/09/2021 1159`","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"dhshah1"},"content":"Duke should respond as follows:","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"dhshah1"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"dhshah1"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"dhshah1"},"content":" [E][] book festival (at:Sep 17 2021 11:59 AM)","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"dhshah1"},"content":"You have 3 tasks in the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"dhshah1"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"dhshah1"},"content":"### `list`","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"dhshah1"},"content":"This command should list all your tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"dhshah1"},"content":"Example of usage:","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"dhshah1"},"content":"`list`","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"dhshah1"},"content":"Duke should respond as follows (supposing you followed the three above commands to add the tasks):","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"dhshah1"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"dhshah1"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"dhshah1"},"content":"1. [T][] essay assignment","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"dhshah1"},"content":"2. [D][] return book (by:Sep 17 2021 11:59 AM)","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"dhshah1"},"content":"3. [E][] book festival (at:Sep 17 2021 11:59 AM)","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"dhshah1"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"dhshah1"},"content":"### `done [taskIndex]`","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"dhshah1"},"content":"This command will mark the task corresponding to the taskIndex as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"dhshah1"},"content":"Example of usage:","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"dhshah1"},"content":"`done 1`","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"dhshah1"},"content":"Duke should respond as follows :","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"dhshah1"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"dhshah1"},"content":"Nice this task has been marked done:","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"dhshah1"},"content":" [T][X] essay assignment","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"dhshah1"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"dhshah1"},"content":"### `find [searchTerm]`","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"dhshah1"},"content":"This command will search for tasks that match the searchTerm.","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"dhshah1"},"content":"`find book`","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"dhshah1"},"content":"Duke should respond as follows (supposing you followed the three above commands to add the tasks):","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"dhshah1"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"dhshah1"},"content":"  1. [D][] return book (by:Sep 17 2021 11:59 AM)","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"dhshah1"},"content":"  2. [E][] book festival (at:Sep 17 2021 11:59 AM)","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"dhshah1"},"content":"### `delete [taskIndex]`","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":128,"author":{"gitId":"dhshah1"},"content":"This command will delete the task corresponding to the taskIndex.","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"dhshah1"},"content":"Example of usage:","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"dhshah1"},"content":"`delete 1`","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":134,"author":{"gitId":"dhshah1"},"content":"Duke should respond as follows (supposing you followed the three above commands to add the tasks):","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":136,"author":{"gitId":"dhshah1"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"dhshah1"},"content":" [T][X] essay assignment","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"dhshah1"},"content":"You have 2 tasks in the list.","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":140,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"dhshah1"},"content":"The above commands should help you get started with using Duke.","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"dhshah1"},"content":"Acknowledgement: The GUI of the app was done using JavaFX and heavily followed the tutorial from:","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"dhshah1"},"content":"[JavaFX tutorial @SE-EDU/guides](https://se-education.org/addressbook-level3/UserGuide.html#features)","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":146,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":147,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":148,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":149,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"dhshah1":123,"-":26}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.command.MalformedCommandException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import duke.command.UnsupportedCommandException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"import duke.storage.StorageException;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"    public Duke() {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"     * Attempts to load tasks stored in disk.","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"     * @return Welcome message if tasks were successfully loaded","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"     * otherwise returns an error message.","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"    public String initialise() {","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"            Storage.loadTasks(tasks);","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"        } catch (StorageException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"dhshah1"},"content":"            return ui.showErrorMessage(e);","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"dhshah1"},"content":"        return ui.showWelcomeMessage();","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"dhshah1"},"content":"     * Stores tasks onto a file on disk and returns error message if storage of tasks fails.","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"dhshah1"},"content":"    public void saveTasks() {","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"dhshah1"},"content":"            Storage.saveTasksToFile(tasks, Storage.FILE_NAME);","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"dhshah1"},"content":"        } catch (StorageException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"dhshah1"},"content":"            ui.showErrorMessage(e);","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"dhshah1"},"content":"     * Executes command based on user input.","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"dhshah1"},"content":"     * @param userInput String input provided by user.","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"dhshah1"},"content":"     * @return String response from executing user command.","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"dhshah1"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"dhshah1"},"content":"            Command userCommand \u003d Parser.parse(userInput);","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"dhshah1"},"content":"            return userCommand.execute(tasks, ui);","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"dhshah1"},"content":"        } catch (UnsupportedCommandException | MalformedCommandException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"dhshah1"},"content":"            return ui.showErrorMessage(e);","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"dhshah1":73,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"public class Launcher {","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"dhshah1":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"            scene.getRoot().setStyle(\"-fx-font-family: \u0027serif\u0027\");","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"            stage.show();","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"    public void stop() {","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"        duke.saveTasks();","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"dhshah1":38}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" * Adds a task to the user\u0027s list of tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"public abstract class AddCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    protected static final String DATE_DELIMITER \u003d \" /\";","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"    protected Task task;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"        int numTasksRemaining \u003d tasks.numTasks();","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"        return ui.showTaskAddedMessage(task, numTasksRemaining);","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"    protected static String getTaskDescription(String userInput) throws","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"            ArrayIndexOutOfBoundsException {","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"        String[] commandParamsSplit \u003d userInput.split(DATE_DELIMITER, 2);","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"        String taskDescription \u003d commandParamsSplit[0];","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"        return taskDescription;","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":27}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":" * Adds a deadline task to the list of user\u0027s tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"public class AddDeadlineCommand extends AddCommand {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"    public static final String COMMAND_IDENTIFIER \u003d \"deadline\";","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"    private static final String DATE_PARAM_IDENTIFIER \u003d \"by\";","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"     * Returns the AddDeadline command represented by the user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"     * @param userInput String input provided by the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"     * @return AddDeadline user command.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"     * @throws MalformedCommandException If userInput is incorrectly formatted for an AddDeadline command.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"    public static Command create(String userInput) throws MalformedCommandException {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"        assert userInput !\u003d null : \"User input should be null for the creation of a Command\";","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"            String commandParams \u003d Parser.getCommandParams(userInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"            String taskDescription \u003d getTaskDescription(commandParams);","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"            String dueDate \u003d getDueDate(commandParams);","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"            Task task \u003d new Deadline(taskDescription, dueDate);","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"            return new AddDeadlineCommand(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"            throw new MalformedCommandException(\"Creating an deadline needs to follow the following\"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"                    + \" format: deadline [description] /by [d/MM/yyyy HHmm]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"    private AddDeadlineCommand(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"    private static String getDueDate(String commandParams) throws DateTimeParseException {","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"        String[] commandParamsSplit \u003d commandParams.split(DATE_DELIMITER, 2);","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"        String dueDate \u003d \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"        if (commandParamsSplit[1].startsWith(DATE_PARAM_IDENTIFIER)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"dhshah1"},"content":"            dueDate \u003d commandParamsSplit[1].replaceFirst(DATE_PARAM_IDENTIFIER, \"\").stripLeading();","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"dhshah1"},"content":"        return dueDate;","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":50}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":" * Adds an event task to the list of user\u0027s tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"public class AddEventCommand extends AddCommand {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"    public static final String COMMAND_IDENTIFIER \u003d \"event\";","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"    private static final String DATE_PARAM_IDENTIFIER \u003d \"at\";","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"     * Returns the AddEvent command represented by the user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"     * @param userInput String input provided by the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"     * @return AddEvent user command.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"     * @throws MalformedCommandException If userInput is incorrectly formatted for an AddEvent command.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"    public static Command create(String userInput) throws MalformedCommandException {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"        assert userInput !\u003d null : \"User input should be null for the creation of a Command\";","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"            String commandParams \u003d Parser.getCommandParams(userInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"            String taskDescription \u003d getTaskDescription(commandParams);","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"            String eventDate \u003d getEventDate(commandParams);","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"            Task task \u003d new Event(taskDescription, eventDate);","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"            return new AddEventCommand(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"            throw new MalformedCommandException(\"Creating an event needs to follow the following \"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"                    + \"format: event [description] /at [d/MM/yyyy HHmm]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"    private AddEventCommand(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"    private static String getEventDate(String commandParams) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"        String[] commandParamsSplit \u003d commandParams.split(DATE_DELIMITER, 2);","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"        String eventDate \u003d \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"        if (commandParamsSplit[1].startsWith(DATE_PARAM_IDENTIFIER)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"dhshah1"},"content":"            eventDate \u003d commandParamsSplit[1].replaceFirst(DATE_PARAM_IDENTIFIER, \"\").stripLeading();","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"dhshah1"},"content":"        return eventDate;","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":50}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" * Adds a todo task to the list of user\u0027s tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"public class AddTodoCommand extends AddCommand {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    public static final String COMMAND_IDENTIFIER \u003d \"todo\";","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"     * Returns the AddTodo command represented by the user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"     * @param userInput String input provided by the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"     * @return AddTodo user command.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"     * @throws MalformedCommandException If userInput is incorrectly formatted for an AddTodo command.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"    public static Command create(String userInput) throws MalformedCommandException {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"        assert userInput !\u003d null : \"User input should be null for the creation of a Command\";","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"            String commandParams \u003d Parser.getCommandParams(userInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"            String taskDescription \u003d getTaskDescription(commandParams);","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"            Task task \u003d new Todo(taskDescription);","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"            return new AddTodoCommand(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"            throw new MalformedCommandException(\"Creating an todo needs to follow the following \"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"                    + \"format: todo [description]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"    private AddTodoCommand(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":37}},{"path":"src/main/java/duke/command/ArchiveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.storage.StorageException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"public class ArchiveCommand implements Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"    public static final String COMMAND_IDENTIFIER \u003d \"archive\";","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    private String fileName;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"     * Returns the Archive command represented by the user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"     * @param userInput String input provided by the user.","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"     * @return Archive command.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"    public static Command create(String userInput)  {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"        assert userInput !\u003d null : \"User input should be null for the creation of a Command\";","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"        String fileName \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"        return new ArchiveCommand(fileName);","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"    private ArchiveCommand(String fileName) {","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"            Storage.saveTasksToFile(tasks, fileName);","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"            tasks.clear();","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"            return ui.showTasksArchivedMessage(fileName);","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"        } catch (StorageException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"            return ui.showErrorMessage(e);","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"dhshah1":40}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":" * Represents a command provided by the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"public interface Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"     * Performs the command on the user\u0027s task list and returns a display message.","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"     * @param tasks List of user\u0027s tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"     * @param ui Ui object to handle display of message to user.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"     * @throws MalformedCommandException If command could not be executed successfully.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"    String execute(TaskList tasks, Ui ui) throws MalformedCommandException;","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"dhshah1":19}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" * Deletes a task from the user\u0027s list of tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    public static final String COMMAND_IDENTIFIER \u003d \"delete\";","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"    private int taskIndex;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"     * Returns the Delete command represented by the user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"     * @param userInput String input provided by the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"     * @return Delete command.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"     * @throws MalformedCommandException If userInput is incorrectly formatted for a Delete command.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"    public static Command create(String userInput) throws MalformedCommandException {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"        assert userInput !\u003d null : \"User input should be null for the creation of a Command\";","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"            int taskIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"            return new DeleteCommand(taskIndex);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"        } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"            throw new MalformedCommandException(\"Please provide a valid integer index for the task\"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"                    + \" you want to delete like so: \" + \"delete [taskIndex in integer form]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"    private DeleteCommand(int taskIndex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"    public String execute(TaskList tasks, Ui ui) throws MalformedCommandException {","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"        Task taskDeleted \u003d tasks.delete(taskIndex - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"        int numTasksRemaining \u003d tasks.numTasks();","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"        return ui.showTaskDeletedMessage(taskDeleted, numTasksRemaining);","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":44}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" * Marks a task as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"public class DoneCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    public static final String COMMAND_IDENTIFIER \u003d \"done\";","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"    private int taskIndex;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"     * Returns the Done command represented by the user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"     * @param userInput String input provided by the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"     * @return Done command.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"     * @throws MalformedCommandException If userInput is incorrectly formatted for a Done command.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"    public static Command create(String userInput) throws MalformedCommandException {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"        assert userInput !\u003d null : \"User input should be null for the creation of a Command\";","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"            int taskIndex \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"            return new DoneCommand(taskIndex);","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"            throw new MalformedCommandException(\"Please provide a valid integer index for the task\"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"                    + \" you want to mark as done like so: done [taskIndex in integer form]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"    private DoneCommand(int taskIndex) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"    public String execute(TaskList tasks, Ui ui) throws MalformedCommandException {","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"        Task taskMarkedDone \u003d tasks.markTaskDone(taskIndex - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"        return ui.showTaskDoneMessage(taskMarkedDone);","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":43}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":" * Stops the chatbot.","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"    public static final String COMMAND_IDENTIFIER \u003d \"bye\";","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"     * Returns an Exit command.","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"     * @return Exit command.","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"    public static Command create() {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"        return new ExitCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"        return ui.showExitMessage();","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":25}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"    public static final String COMMAND_IDENTIFIER \u003d \"find\";","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"    private String searchTerm;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"     * Returns the Find command represented by the user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"     * @param userInput String input provided by the user.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"     * @return Find command.","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"    public static Command create(String userInput)  {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"        assert userInput !\u003d null : \"User input should be null for the creation of a Command\";","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"        String searchTerm \u003d userInput.split(\" \", 2)[1];","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"        return new FindCommand(searchTerm);","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"    private FindCommand(String searchTerm) {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"        TaskList filteredTasks \u003d tasks.findTasks(searchTerm);","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"        return ui.showFilteredTaskList(filteredTasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"dhshah1":33}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":" * Displays all of the user\u0027s tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"    public static final String COMMAND_IDENTIFIER \u003d \"list\";","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"     * Returns a List command.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"     * @return List command;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"    public static Command create() {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"        return new ListCommand();","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"    public String execute(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"        return ui.showTaskList(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":25}},{"path":"src/main/java/duke/command/MalformedCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":" * Signals a user command that was incorrectly formatted.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"public class MalformedCommandException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"    public MalformedCommandException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"dhshah1":10}},{"path":"src/main/java/duke/command/UnsupportedCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":" * Signals a user command that is not supported.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"public class UnsupportedCommandException extends Exception {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"    public UnsupportedCommandException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"dhshah1":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.parser;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"import duke.command.ArchiveCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"import duke.command.MalformedCommandException;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"import duke.command.UnsupportedCommandException;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":" * Responsible for parsing of command line user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"public class Parser {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"    ","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"     * Parses and returns the command represented by the user input.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"     * @param userInput String input provided by user.","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"     * @return user command","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"     * @throws UnsupportedCommandException If user command is not supported.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"     * @throws MalformedCommandException If a supported user command has the wrong format.","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"    public static Command parse(String userInput) throws","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"            UnsupportedCommandException, MalformedCommandException {","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"        String userCommand \u003d getUserCommand(userInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"        switch (userCommand){","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"        case ListCommand.COMMAND_IDENTIFIER:","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"            return ListCommand.create();","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"        case DoneCommand.COMMAND_IDENTIFIER:","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"            return DoneCommand.create(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"        case DeleteCommand.COMMAND_IDENTIFIER:","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"            return DeleteCommand.create(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"        case AddTodoCommand.COMMAND_IDENTIFIER:","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"            return AddTodoCommand.create(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"        case AddDeadlineCommand.COMMAND_IDENTIFIER:","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"            return AddDeadlineCommand.create(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"        case AddEventCommand.COMMAND_IDENTIFIER:","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"dhshah1"},"content":"            return AddEventCommand.create(userInput);","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"dhshah1"},"content":"        case FindCommand.COMMAND_IDENTIFIER:","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"dhshah1"},"content":"            return FindCommand.create(userInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"dhshah1"},"content":"        case ArchiveCommand.COMMAND_IDENTIFIER:","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"dhshah1"},"content":"            return ArchiveCommand.create(userInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"dhshah1"},"content":"        case ExitCommand.COMMAND_IDENTIFIER:","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"dhshah1"},"content":"            return ExitCommand.create();","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"dhshah1"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"dhshah1"},"content":"            throw new UnsupportedCommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"dhshah1"},"content":"     * Returns the string identifier of the user\u0027s command.","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"dhshah1"},"content":"     * @param userInput String input from user.","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"dhshah1"},"content":"     * @return String identifier of the user\u0027s command.","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"dhshah1"},"content":"    public static String getUserCommand(String userInput) {","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"dhshah1"},"content":"        String[] userInputSplit \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"dhshah1"},"content":"        String userCommand \u003d userInputSplit[0];","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"dhshah1"},"content":"        return userCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"dhshah1"},"content":"     * Returns the parameters related to the user command.","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"dhshah1"},"content":"     * @param userInput String input from user.","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"dhshah1"},"content":"     * @return String parameters of the user command.","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"dhshah1"},"content":"    public static String getCommandParams(String userInput) {","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"dhshah1"},"content":"        String[] userInputSplit \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"dhshah1"},"content":"        String commandParams \u003d userInputSplit[1];","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"dhshah1"},"content":"        return commandParams;","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":81}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":" * Responsible for loading and saving user\u0027s tasks on disk.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"    public final static String DIR_PATH \u003d \"./data\";","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"    public final static String FILE_NAME \u003d \"tasks\";","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"     * Returns file object which contains the tasks stored on disk.","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"     * @return file object which contains tasks stored on disk.","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"    private static File getTaskFile() {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"        File file \u003d new File(DIR_PATH + \"/\" + FILE_NAME + \".txt\");","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"        return file;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"     * Loads tasks stored in file on disk into the task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"     * @param tasks Task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"     * @throws StorageException If file storing the tasks is incorrectly formatted.","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"    public static void loadTasks(TaskList tasks) throws StorageException {","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"            File taskFile \u003d getTaskFile();","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"            Scanner sc \u003d new Scanner(taskFile);","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"                String taskString \u003d sc.nextLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"                Task task \u003d parseTaskFromStorage(taskString);","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"dhshah1"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"dhshah1"},"content":"                    tasks.add(task);","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"dhshah1"},"content":"                }","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"dhshah1"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"dhshah1"},"content":"        } catch (FileNotFoundException ignored) {","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"dhshah1"},"content":"        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"dhshah1"},"content":"            throw new StorageException(\"Txt file for loading tasks is wrongly formatted. \"","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"dhshah1"},"content":"                    + \"Some tasks were not loaded\");","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"dhshah1"},"content":"    private static Task parseTaskFromStorage(String taskString) throws","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"dhshah1"},"content":"            ArrayIndexOutOfBoundsException, DateTimeParseException {","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"dhshah1"},"content":"        String[] splitTaskString \u003d taskString.split(Task.STORAGE_DELIMITER);","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"dhshah1"},"content":"        String taskIdentifier \u003d splitTaskString[0];","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"dhshah1"},"content":"        String taskDescription \u003d splitTaskString[1];","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"dhshah1"},"content":"        Boolean isTaskDone \u003d Boolean.parseBoolean(splitTaskString[2]);","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"dhshah1"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"dhshah1"},"content":"        switch (taskIdentifier) {","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"dhshah1"},"content":"        case Todo.IDENTIFIER:","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"dhshah1"},"content":"            task \u003d new Todo(taskDescription, isTaskDone);","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"dhshah1"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"dhshah1"},"content":"        case Event.IDENTIFIER:","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"dhshah1"},"content":"            String eventDate \u003d splitTaskString[3];","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"dhshah1"},"content":"            task \u003d new Event(taskDescription, isTaskDone, eventDate);","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"dhshah1"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"dhshah1"},"content":"        case Deadline.IDENTIFIER:","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"dhshah1"},"content":"            String dueDate \u003d splitTaskString[3];","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"dhshah1"},"content":"            task \u003d new Deadline(taskDescription, isTaskDone, dueDate);","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"dhshah1"},"content":"            break;","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"dhshah1"},"content":"        return task;","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"dhshah1"},"content":"     * Saves users tasks in a file on disk.","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"dhshah1"},"content":"     * @param tasks List of users tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"dhshah1"},"content":"     * @param fileName Name of file where tasks should be saved.","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"dhshah1"},"content":"     * @throws StorageException If unable to write tasks to a file on disk.","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"dhshah1"},"content":"    public static void saveTasksToFile(TaskList tasks, String fileName) throws StorageException {","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"dhshah1"},"content":"        assert tasks !\u003d null : \"Task list should not be null in order to save tasks on disk\";","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"dhshah1"},"content":"            File base_dir \u003d new File(DIR_PATH);","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"dhshah1"},"content":"            if (!base_dir.exists()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"dhshah1"},"content":"                base_dir.mkdirs();","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"dhshah1"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"dhshah1"},"content":"            FileWriter fw \u003d new FileWriter(DIR_PATH + \"/\" + fileName + \".txt\");","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"dhshah1"},"content":"            fw.write(tasks.toStorageFormat());","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"dhshah1"},"content":"            fw.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"dhshah1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"dhshah1"},"content":"            throw new StorageException(\"There was an error in saving your tasks to disk\");","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"dhshah1":105}},{"path":"src/main/java/duke/storage/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":" * Signals an error for storing or loading tasks from disk.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"public class StorageException extends Exception {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"    public StorageException(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"        super(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":10}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" * Represents a deadline task.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    public static final String IDENTIFIER \u003d \"D\";","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"    private LocalDateTime by;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"     * Creates a deadline task.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"     * @param description Deadline\u0027s description.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"     * @param isDone Status of task\u0027s completion.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"     * @param by String representation of due date of deadline.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"     * @throws DateTimeParseException If due date of deadline is not correctly formatted.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"    public Deadline(String description, boolean isDone, String by) throws DateTimeParseException {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"        this.by \u003d LocalDateTime.parse(by, DATE_INPUT_FORMAT);","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"     * Creates a deadline task.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"     * @param description Deadline\u0027s description.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"     * @param by String representation of due date of deadline.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"     * @throws DateTimeParseException If due date of deadline is not correctly formatted.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"    public Deadline(String description, String by) throws DateTimeParseException{","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"        this.by \u003d LocalDateTime.parse(by, DATE_INPUT_FORMAT);","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"        return \"[\" + IDENTIFIER + \"]\" + super.toString()","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"                + \" (by:\" + by.format(DATE_DISPLAY_FORMAT) + \")\";","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"dhshah1"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"dhshah1"},"content":"        return IDENTIFIER + Task.STORAGE_DELIMITER + super.toStorageFormat()","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"dhshah1"},"content":"                + Task.STORAGE_DELIMITER + by.format(DATE_INPUT_FORMAT);","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"dhshah1":51}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" * Represents an event task.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    public static final String IDENTIFIER \u003d \"E\";","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"    private LocalDateTime eventDate;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"     * Creates a event task.","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"     * @param description Events\u0027s description.","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"     * @param isDone Status of task\u0027s completion.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"     * @param at String representation of date of event.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"     * @throws DateTimeParseException If date of event is not correctly formatted.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"    public Event(String description, boolean isDone, String at) throws DateTimeParseException {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"        this.eventDate \u003d LocalDateTime.parse(at, DATE_INPUT_FORMAT);","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"     * Creates an event task.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"     * @param description Events\u0027s description.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"     * @param at String representation of date of event.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"     * @throws DateTimeParseException If date of event is not correctly formatted.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"    public Event(String description, String at) throws DateTimeParseException {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"        this.eventDate \u003d LocalDateTime.parse(at, DATE_INPUT_FORMAT);","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"        return \"[\" + IDENTIFIER + \"]\" + super.toString()","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"                + \" (at:\" + eventDate.format(DATE_DISPLAY_FORMAT)  + \")\";","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"dhshah1"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"dhshah1"},"content":"        return IDENTIFIER + Task.STORAGE_DELIMITER + super.toStorageFormat()","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"dhshah1"},"content":"                + Task.STORAGE_DELIMITER + eventDate.format(DATE_INPUT_FORMAT);","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"dhshah1":50}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":" * Represents a task in the task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"    public static final String STORAGE_DELIMITER \u003d \"%\";","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    protected static final DateTimeFormatter DATE_INPUT_FORMAT \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"            DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"    protected static final DateTimeFormatter DATE_DISPLAY_FORMAT \u003d","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"    private String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"     * Creates a task.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"     * @param description Task\u0027s description.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"     * Creates a task.","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"     * @param description Task\u0027s description.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"     * @param isDone Status of task\u0027s completion.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"dhshah1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"dhshah1"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"dhshah1"},"content":"     * Returns a status icon representing whether task has been marked done.","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"dhshah1"},"content":"     * @return string status icon representing whether task has been marked done.","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"dhshah1"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"dhshah1"},"content":"        return isDone ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"dhshah1"},"content":"     * Returns string representation of task for storage on disk.","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"dhshah1"},"content":"     * @return string representation of task for storage on disk.","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"dhshah1"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"dhshah1"},"content":"        return description + STORAGE_DELIMITER + isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"dhshah1":69}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"import java.util.List;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"import duke.command.MalformedCommandException;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"import duke.storage.StorageException;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":" * Represents a collection of all the user\u0027s tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"public class TaskList {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"     * Creates the task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"     * @param task Task to be added to task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"     * @return task that was added to the task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"    public Task add(Task task) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"        return task;","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"     * Marks a task done in the task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"     * @param taskIndex Index of task to be marked done.","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"     * @return Task that was marked done.","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"     * @throws MalformedCommandException If taskIndex provided is out of range of the task list\u0027s length.","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"    public Task markTaskDone(int taskIndex) throws MalformedCommandException {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"            Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"dhshah1"},"content":"            task.markDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"dhshah1"},"content":"            return task;","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"dhshah1"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"dhshah1"},"content":"            throw new MalformedCommandException(\"You only have \" + numTasks() + \" tasks currently. \"","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"dhshah1"},"content":"                    + \"Please provide a task index from that list\");","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"dhshah1"},"content":"     * Deletes a task from the user\u0027s task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"dhshah1"},"content":"     * @param taskIndex Index of task to delete from task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"dhshah1"},"content":"     * @return Task that was deleted.","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"dhshah1"},"content":"     * @throws MalformedCommandException If taskIndex provided is out of range of the task list\u0027s length.","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"dhshah1"},"content":"    public Task delete(int taskIndex) throws MalformedCommandException {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"dhshah1"},"content":"            return tasks.remove(taskIndex);","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"dhshah1"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"dhshah1"},"content":"            throw new MalformedCommandException(\"You only have \" + numTasks() + \" tasks currently. \"","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"dhshah1"},"content":"                    + \"Please provide a task index from that list\");","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"dhshah1"},"content":"     * Returns number of tasks in the task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"dhshah1"},"content":"     * @return Number of tasks in the task list.","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"dhshah1"},"content":"    public int numTasks() {","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"dhshah1"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"dhshah1"},"content":"     * Returns a TaskList with filtered tasks matching the search term.","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"dhshah1"},"content":"     * @param searchTerm Serch term to filter tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"dhshah1"},"content":"     * @return TaskList with filtered tasks matching the search term.","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"dhshah1"},"content":"    public TaskList findTasks(String searchTerm) {","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"dhshah1"},"content":"        TaskList filteredTaskList \u003d new TaskList();","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"dhshah1"},"content":"        List\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"dhshah1"},"content":"        filteredTasks.removeIf(task -\u003e !(task.toString()).contains(searchTerm));","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"dhshah1"},"content":"        filteredTaskList.setTasks(filteredTasks);","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"dhshah1"},"content":"        return filteredTaskList;","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"dhshah1"},"content":"     * Clears the user\u0027s current list of tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"dhshah1"},"content":"    public void clear() {","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"dhshah1"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"dhshah1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"dhshah1"},"content":"        StringBuilder taskListStringRepresentation \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"dhshah1"},"content":"        for (int i \u003d 0; i \u003c numTasks(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"dhshah1"},"content":"            taskListStringRepresentation.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"dhshah1"},"content":"        return taskListStringRepresentation.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"dhshah1"},"content":"     * Returns a string representation of the task list for storage on disk.","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"dhshah1"},"content":"     * @return String representation of the task list for storage on disk.","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"dhshah1"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"dhshah1"},"content":"        StringBuilder taskStorageRepresentation \u003d new StringBuilder();","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"dhshah1"},"content":"        for (int i \u003d 0; i \u003c numTasks(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"dhshah1"},"content":"            taskStorageRepresentation.append(tasks.get(i).toStorageFormat()).append(\"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"dhshah1"},"content":"        return taskStorageRepresentation.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"dhshah1"},"content":"    private void setTasks(List\u003cTask\u003e newTasks) {","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"dhshah1"},"content":"        tasks \u003d newTasks;","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"dhshah1":125}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.task;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":" * Represents a Todo task.","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"    public static final String IDENTIFIER \u003d \"T\";","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"     * Creates a todo task.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"     * @param description Task\u0027s description.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"     * @param isDone Status of task\u0027s completion.","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"     * Creates a todo task.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"     * @param description Task\u0027s description.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"        super(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"        return \"[\" + IDENTIFIER + \"]\" + super.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"    public String toStorageFormat() {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"        return IDENTIFIER + Task.STORAGE_DELIMITER + super.toStorageFormat();","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"dhshah1":37}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"    private void flip() {","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"dhshah1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"dhshah1"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"dhshah1"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"dhshah1"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"dhshah1"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"dhshah1"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"dhshah1"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"dhshah1"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"dhshah1"},"content":"        db.flip();","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"dhshah1"},"content":"        return db;","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"dhshah1":61}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.ui.DialogBox;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"        String message \u003d duke.initialise();","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"            DialogBox.getDukeDialog(message, dukeImage)","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"        );","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"dhshah1"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"dhshah1"},"content":"    @FXML","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"dhshah1"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"dhshah1"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"dhshah1"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"dhshah1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"dhshah1"},"content":"            DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"dhshah1"},"content":"            DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"dhshah1"},"content":"        );","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"dhshah1"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"dhshah1":58}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":" * Responsible for returning messages for the user.","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"public class Ui {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    private final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Duke. What can I do for you?\";","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"    private final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"     * Returns welcome message.","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"     * @return Welcome message.","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"    public String showWelcomeMessage() {","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"        return WELCOME_MESSAGE;","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"     * Returns an exit message.","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"     * @return Exit message","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"    public String showExitMessage() {","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"        return EXIT_MESSAGE;","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"dhshah1"},"content":"     * Returns a message listing all the user\u0027s tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"dhshah1"},"content":"     * @param tasks User\u0027s task list.","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"dhshah1"},"content":"     * @return Returns a message listing all the user\u0027s tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"dhshah1"},"content":"    public String showTaskList(TaskList tasks) {","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"dhshah1"},"content":"        System.out.println(\"Here are the tasks in your list:\\n\" + tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"dhshah1"},"content":"        return \"Here are the tasks in your list:\\n\" + tasks;","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"dhshah1"},"content":"     * Returns a message confirming that the task was added.","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"dhshah1"},"content":"     * @param task Task added.","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"dhshah1"},"content":"     * @param numRemainingTasks Total number of tasks user has.","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"dhshah1"},"content":"     * @return Message confirming that the task was added.","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"dhshah1"},"content":"    public String showTaskAddedMessage(Task task, int numRemainingTasks) {","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"dhshah1"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + task + \u0027\\n\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"dhshah1"},"content":"            + \"You have \" + numRemainingTasks + \" tasks in the list\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"dhshah1"},"content":"     * Returns a message confirming that the task was deleted.","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"dhshah1"},"content":"     * @param task Task to be deleted.","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"dhshah1"},"content":"     * @param numRemainingTasks Total number of tasks user has left.","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"dhshah1"},"content":"     * @return Message confirming that the task was deleted.","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"dhshah1"},"content":"    public String showTaskDeletedMessage(Task task, int numRemainingTasks) {","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"dhshah1"},"content":"        return \"Noted. I\u0027ve removed this task:\\n \" + task + \u0027\\n\u0027","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"dhshah1"},"content":"            + \"You have \" + numRemainingTasks + \" tasks in the list\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"dhshah1"},"content":"     * Returns message confirming that the task was marked done.","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"dhshah1"},"content":"     * @param task Task marked done.","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"dhshah1"},"content":"     * @return Message confirming that the task was marked done.","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"dhshah1"},"content":"    public String showTaskDoneMessage(Task task) {","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"dhshah1"},"content":"        return \"Nice! this task has been marked done:\\n  \" + task + \"\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"dhshah1"},"content":"     * Returns list of filtered tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"dhshah1"},"content":"     * @param tasks List of filtered tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"dhshah1"},"content":"     * @return List of filtered tasks.","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"dhshah1"},"content":"    public String showFilteredTaskList(TaskList tasks) {","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"dhshah1"},"content":"        return \"Here are the matching tasks in your list:\\n\" + tasks;","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"dhshah1"},"content":"     * Returns a message confirming tasks were archived successfully.","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"dhshah1"},"content":"     * @param filename Name of file where archived tasks will be stored.","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"dhshah1"},"content":"     * @return Message confirming tasks were archived successfully.","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"dhshah1"},"content":"    public String showTasksArchivedMessage(String filename) {","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"dhshah1"},"content":"        return \"Your tasks have been archived to \" + Storage.DIR_PATH + \"/\" + filename;","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"dhshah1"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"dhshah1"},"content":"     * Returns an error message.","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"dhshah1"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"dhshah1"},"content":"     * @param e Exception object.","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"dhshah1"},"content":"     * @return Exception object\u0027s error message.","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"dhshah1"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"dhshah1"},"content":"    public String showErrorMessage(Exception e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"dhshah1"},"content":"        return e.getMessage();","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"dhshah1":107}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"Infinity\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"dhshah1":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"dhshah1":19}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"[D][ ] This is a test (by:Aug 25 2021 02:00 PM)\",","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"            new Deadline(\"This is a test\", \"25/08/2021 1400\").toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"[D][X] This is a test (by:Aug 25 2021 02:00 PM)\",","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"            new Deadline(\"This is a test\", true, \"25/08/2021 1400\").toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"    public void testStorageFormatConversion() {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"D%This is a test%false%25/08/2021 1400\",","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"            new Deadline(\"This is a test\", \"25/08/2021 1400\").toStorageFormat());","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"D%This is a test%true%25/08/2021 1400\",","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"            new Deadline(\"This is a test\", true, \"25/08/2021 1400\").toStorageFormat());","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"    public void deadlineCreation_missingTime_exceptionThrown() {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"        Assertions.assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"            new Deadline(\"Missing time\", \"25/08/2021\");","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"        });","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"dhshah1":31}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"public class EventTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"[E][ ] This is a test (at:Aug 25 2021 02:00 PM)\",","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"            new Event(\"This is a test\", \"25/08/2021 1400\").toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"[E][X] This is a test (at:Aug 25 2021 02:00 PM)\",","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"            new Event(\"This is a test\", true, \"25/08/2021 1400\").toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"    public void testStorageFormatConversion() {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"E%This is a test%false%25/08/2021 1400\",","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"            new Event(\"This is a test\", \"25/08/2021 1400\").toStorageFormat());","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"E%This is a test%true%25/08/2021 1400\",","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"            new Event(\"This is a test\", true, \"25/08/2021 1400\").toStorageFormat());","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"    public void eventCreation_missingTime_exceptionThrown() {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"        Assertions.assertThrows(DateTimeParseException.class, () -\u003e {","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"dhshah1"},"content":"            new Event(\"Missing time\", \"25/08/2021\");","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"dhshah1"},"content":"        });","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"dhshah1":31}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"package duke.task;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"[T][ ] This is a test\", new Todo(\"This is a test\").toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"[T][X] This is a test\", new Todo(\"This is a test\", true).toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"dhshah1"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"dhshah1"},"content":"    public void testStorageFormatConversion() {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"T%This is a test%false\", new Todo(\"This is a test\").toStorageFormat());","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"T%This is a test%true\",","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"dhshah1"},"content":"            new Todo(\"This is a test\", true).toStorageFormat());","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"dhshah1"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"dhshah1"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"dhshah1"},"content":"    public void testMarkDone() {","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"dhshah1"},"content":"        Task todo \u003d new Todo(\"This is a test\");","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"[T][ ] This is a test\", todo.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"dhshah1"},"content":"        todo.markDone();","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"dhshah1"},"content":"        assertEquals(\"[T][X] This is a test\", todo.toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"dhshah1"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"dhshah1"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"dhshah1":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"dhshah1"},"content":"todo borrow book","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"dhshah1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"dhshah1"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"dhshah1"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"dhshah1"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"dhshah1"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"dhshah1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"dhshah1"},"content":"blah","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"dhshah1"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"dhshah1"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"dhshah1"},"content":"bye","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"dhshah1":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"dhshah1"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"dhshah1":1}}]
