[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"stanley-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"stanley-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"stanley-1"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"stanley-1":16}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"### Keeps track of a variety of tasks","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"Users can classify their tasks according to:","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"    1. General Tasks (`todo`)","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"    2. Deadlines (`deadline`)","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"    3. Events (`event`)","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"Duke will assist the user in storing the above events for his/her","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"convenience.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"### Feature-XYZ","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"### `todo` - To add general task","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"User enters `todo` as a keyword followed by the task that he/she","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"wishes to add to the list. ","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"`todo eat lunch`","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"stanley-1"},"content":"```","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"stanley-1"},"content":"__________________________________","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"stanley-1"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"[T][ ] eat lunch","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"stanley-1"},"content":"You now have 1 task(s) in the list.","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"__________________________________","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"stanley-1"},"content":"```","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"stanley-1"},"content":"### `deadline` - To add a task with a specified due date","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"stanley-1"},"content":"User enters `deadline` as a keyword followed by the task that he/she","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"stanley-1"},"content":"wishes to add to the list. Thereafter, he/she appends the task with a","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"stanley-1"},"content":"`/by \u003cDATE\u003e` argument to indicate the task\u0027s due date.","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"stanley-1"},"content":"Example of usage: ","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"stanley-1"},"content":"`deadline return book /by June 6th`","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"stanley-1"},"content":"Expected outcome:","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"stanley-1"},"content":"```","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"stanley-1"},"content":"__________________________________","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"stanley-1"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"stanley-1"},"content":"[D][ ] return book (by: June 6th)","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"stanley-1"},"content":"You now have 2 task(s) in the list.","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"stanley-1"},"content":"__________________________________","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"stanley-1"},"content":"```","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"stanley-1"},"content":"### `event` - To add a task with a specified event date","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"stanley-1"},"content":"User enters `event` as a keyword followed by the task that he/she","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"stanley-1"},"content":"wishes to add to the list. Thereafter, he/she appends the task with a","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"stanley-1"},"content":"`/at \u003cDATE\u003e` argument to indicate the task\u0027s due date.","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"stanley-1"},"content":"`event project meeting /at 2pm`","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"stanley-1"},"content":"```","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"stanley-1"},"content":"__________________________________","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"stanley-1"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"stanley-1"},"content":"[E][ ] project meeting (at: 2pm)","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"stanley-1"},"content":"You now have 3 task(s) in the list.","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"stanley-1"},"content":"__________________________________","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"stanley-1"},"content":"```","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"stanley-1"},"content":"### `list` - To view the complete list of tasks added so far","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"stanley-1"},"content":"User types `list` to call up the list of tasks that he/she has","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"stanley-1"},"content":"created. This serves as a reference point for the user to mark tasks","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"stanley-1"},"content":"as `done` or `delete` them thereafter.","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"stanley-1"},"content":"Example of usage:","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"stanley-1"},"content":"`list`","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"stanley-1"},"content":"Expected outcome:","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":96,"author":{"gitId":"stanley-1"},"content":"__________________________________","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"stanley-1"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"stanley-1"},"content":"1.[T][ ] eat lunch","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"stanley-1"},"content":"2.[D][ ] return book (by: June 6th)","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"stanley-1"},"content":"3.[E][ ] project meeting (at: 2pm)","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"stanley-1"},"content":"__________________________________","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":29,"stanley-1":73}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"stanley-1"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"stanley-1"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"stanley-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"stanley-1"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"stanley-1"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"stanley-1"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"stanley-1"},"content":"    private void flip() {","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"stanley-1"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"stanley-1"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"stanley-1"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"stanley-1"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"stanley-1"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"stanley-1"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"stanley-1"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"stanley-1"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"stanley-1"},"content":"        db.flip();","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"stanley-1"},"content":"        return db;","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"stanley-1"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"stanley-1":59}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"    private final Parser parser;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"     * Initialises Duke program.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"    public Duke() {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"        this.storage \u003d new Storage(\"data/tasks.txt\", taskList);","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"        this.parser \u003d new Parser(taskList);","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"stanley-1"},"content":"     * Generates response based on user input.","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"     * @param input User input.","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"     * @return Duke\u0027s response.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"stanley-1"},"content":"        if (input.matches(\"bye\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"stanley-1"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"stanley-1"},"content":"                storage.writeToFile(taskList.getTasks());","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"                return \"Bye! Hope to see you again! :D\";","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"stanley-1"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"                return \"No tasks saved. Start by creating a new task.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"stanley-1"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"stanley-1"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"stanley-1"},"content":"            String result \u003d parser.parseCommand(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"stanley-1"},"content":"            return result;","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"stanley-1"},"content":"     * Retrieves tasks saved in txt file.","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"stanley-1"},"content":"     * @return List of previously saved tasks.","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"stanley-1"},"content":"    public String getTasks() {","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"stanley-1"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"stanley-1"},"content":"            return storage.printFileContents(taskList);","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"stanley-1"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"stanley-1"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"stanley-1"},"content":"        return \"You don\u0027t have any saved tasks\";","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"stanley-1":54}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"public class Launcher {","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"     * Launches Duke.","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"     * @param args Left blank.","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"stanley-1":16}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"        try {","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"            stage.show();","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"stanley-1":26}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"/**","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":" */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"man.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"stanley-1"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"male.png\"));","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"     * Initialises GUI and displays Welcome Message.","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"stanley-1"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"stanley-1"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"stanley-1"},"content":"        setDuke(duke);","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"stanley-1"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"stanley-1"},"content":"                \"Welcome to Duke!\\nHow may I assist you today?\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"                        + \"Type \u0027help\u0027 to view list of commands.\", dukeImage));","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"stanley-1"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.getTasks(), dukeImage));","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"stanley-1"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"stanley-1"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"stanley-1"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"stanley-1"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"stanley-1"},"content":"    @FXML","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"stanley-1"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"stanley-1"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"stanley-1"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"stanley-1"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"stanley-1"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-02"},{"lineNumber":55,"author":{"gitId":"stanley-1"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"stanley-1"},"content":"        );","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"stanley-1"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"stanley-1"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"stanley-1":59}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"    private final LocalDate by;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"     * Creates Deadline object to store task details.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"     * @param description Description of Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"     * @param by Due date of Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"        if (by.contains(\"-\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"            this.by \u003d LocalDate.parse(by, formatter);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"stanley-1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"stanley-1"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"stanley-1":32}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"     * Creates a DukeException object.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"     * @param str Error Message.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"    public DukeException(String str) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"        super(str);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"stanley-1":13}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"    private final String at;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"     * Creates an Event object to store Task details.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"     * @param description Description of Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"     * @param at When the Event is held.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"stanley-1":22}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"     * Reads userInput and calls on the corresponding function(s).","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"     * @param userInput Input provided by user.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"    public String parseCommand(String userInput) {","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"        if (userInput.matches(\"list\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"            return tasks.list();","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"        } else if (userInput.length() \u003e 3 \u0026\u0026 userInput.substring(0, 4).matches(\"done\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"            return tasks.markDone(userInput);","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"        } else if (userInput.length() \u003e 5 \u0026\u0026 userInput.substring(0, 6).matches(\"delete\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"            return tasks.delete(userInput);","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"        } else if (userInput.length() \u003e 3 \u0026\u0026 userInput.substring(0, 4).matches(\"todo\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"stanley-1"},"content":"            return tasks.makeTodo(userInput);","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"stanley-1"},"content":"        } else if (userInput.length() \u003e 4 \u0026\u0026 userInput.substring(0, 5).matches(\"event\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"stanley-1"},"content":"            return tasks.makeEvent(userInput);","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"stanley-1"},"content":"        } else if (userInput.length() \u003e 7 \u0026\u0026 userInput.substring(0, 8).matches(\"deadline\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"stanley-1"},"content":"            return tasks.makeDeadline(userInput);","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"stanley-1"},"content":"        } else if (userInput.length() \u003e 3 \u0026\u0026 userInput.substring(0, 4).matches(\"find\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"stanley-1"},"content":"            return tasks.find(userInput);","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"stanley-1"},"content":"        } else if (userInput.length() \u003e 3 \u0026\u0026 userInput.substring(0, 4).matches(\"help\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"stanley-1"},"content":"            return tasks.getHelp();","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"stanley-1"},"content":"        } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"stanley-1"},"content":"            return tasks.displayError();","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"stanley-1"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"stanley-1":58}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"package duke;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"    static final int TASK_INITIAL \u003d 1;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"    static final int TASK_STATUS \u003d 4;","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"    static final int TASK_DETAILS \u003d 7;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"    private final String filepath;","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"    private int counter \u003d 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"     * Creates a Storage object that takes in filepath and a TaskList object.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"     * @param filepath Filepath of text file to read and write data.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"     * @param taskList TaskList of user.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"stanley-1"},"content":"    public Storage(String filepath, TaskList taskList) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"stanley-1"},"content":"     * Reads in an existing text file (if it exists) and prints the existing tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"stanley-1"},"content":"     * @throws FileNotFoundException Raise Exception if text file does not exist.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"stanley-1"},"content":"    public String printFileContents(TaskList tasks) throws FileNotFoundException {","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"stanley-1"},"content":"        File f \u003d new File(filepath); // create a File for the given file path","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"stanley-1"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"stanley-1"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"stanley-1"},"content":"            String toAdd \u003d s.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"stanley-1"},"content":"            if (toAdd.charAt(TASK_INITIAL) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"stanley-1"},"content":"                String task \u003d toAdd.substring(TASK_DETAILS);","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"stanley-1"},"content":"                tasks.addTodo(task);","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"stanley-1"},"content":"                counter +\u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"stanley-1"},"content":"            } else if (toAdd.charAt(TASK_INITIAL) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"stanley-1"},"content":"                String task \u003d toAdd.substring(TASK_DETAILS);","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"stanley-1"},"content":"                String name \u003d task.substring(0, task.indexOf(\"(\") - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"stanley-1"},"content":"                String when \u003d task.substring(task.indexOf(\":\") + 2, task.indexOf(\")\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"stanley-1"},"content":"                tasks.addEvent(name + \" /at \" + when);","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"stanley-1"},"content":"                counter +\u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"stanley-1"},"content":"            } else if (toAdd.charAt(TASK_INITIAL) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"stanley-1"},"content":"                String task \u003d toAdd.substring(TASK_DETAILS);","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"stanley-1"},"content":"                String name \u003d task.substring(0, task.indexOf(\"(\") - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"stanley-1"},"content":"                String when \u003d task.substring(task.indexOf(\":\") + 2, task.indexOf(\")\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"stanley-1"},"content":"                tasks.addDeadline(name + \" /by \" + when);","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"stanley-1"},"content":"                counter +\u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"stanley-1"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"stanley-1"},"content":"            if (toAdd.charAt(TASK_STATUS) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"stanley-1"},"content":"                tasks.addDone(counter);","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"stanley-1"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"stanley-1"},"content":"        if (counter \u003d\u003d 0) {","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"stanley-1"},"content":"            return \"Great job! You have no tasks saved!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"stanley-1"},"content":"        String result \u003d \"Here are the tasks previously saved: \\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"stanley-1"},"content":"        for (int i \u003d 0; i \u003c counter; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"stanley-1"},"content":"            Task currTask \u003d tasks.getTasks().get(i);","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"stanley-1"},"content":"            result +\u003d String.format(\"%d. %s\", i + 1, currTask.toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"stanley-1"},"content":"            result +\u003d \"\\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"stanley-1"},"content":"        assert counter \u003e 0 : \"Counter should be larger than 0\";","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"stanley-1"},"content":"        return result;","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"stanley-1"},"content":"     * Converts the TaskList into text and stores data in a text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"stanley-1"},"content":"     * @param lst Existing list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"stanley-1"},"content":"     * @throws IOException Raises Exception if function fails.","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"stanley-1"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e lst) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"stanley-1"},"content":"        File directory \u003d new java.io.File(System.getProperty(\"user.dir\") + \"/data\");","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"stanley-1"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"stanley-1"},"content":"            directory.mkdir();","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"stanley-1"},"content":"        PrintWriter out \u003d new PrintWriter(\"data/tasks.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"stanley-1"},"content":"        for (int i \u003d 0; i \u003c taskList.getTasks().size(); i++) {","lastModifiedDate":"2021-09-07"},{"lineNumber":103,"author":{"gitId":"stanley-1"},"content":"            out.println(taskList.getTasks().get(i).toString());","lastModifiedDate":"2021-09-07"},{"lineNumber":104,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"stanley-1"},"content":"        out.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"stanley-1"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"stanley-1":108}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"    private final String description;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"    private boolean isDone;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"     * Creates a Task object to store details of a task and its status of completion.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"     * @param description Task details.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"     * Indicates task\u0027s status of completion.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"     * @return Status of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"     * Marks task as completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"stanley-1"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"stanley-1"},"content":"     * Returns description of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"stanley-1"},"content":"     * @return Description of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"stanley-1"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"stanley-1"},"content":"        return description;","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"stanley-1"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"stanley-1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"stanley-1"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"stanley-1"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"stanley-1":47}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"    static final int DEADLINE_LENGTH \u003d 8;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"    static final int DELETE_LENGTH \u003d 6;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"    static final int DONE_LENGTH \u003d 4;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"    static final int EMPTY \u003d 0;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"    static final int EVENT_LENGTH \u003d 5;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"    static final int FIND_LENGTH \u003d 4;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"    static final int TODO_LENGTH \u003d 4;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"    static final int WHEN \u003d 3;","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"    private int counter \u003d 0;","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"     * Creates a TaskList object that stores a list of tasks in an ArrayList.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"stanley-1"},"content":"     * Returns an ArrayList of tasks.","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"     * @return ArrayList of tasks.","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"stanley-1"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"        return tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"stanley-1"},"content":"     * Prints the user\u0027s existing list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"stanley-1"},"content":"     * @return List of tasks in String form.","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"stanley-1"},"content":"    public String list() {","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"stanley-1"},"content":"        if (counter \u003d\u003d EMPTY) {","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"stanley-1"},"content":"            return \"You have no tasks in your list!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"stanley-1"},"content":"        String result \u003d \"Here are the tasks in your list: \\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"stanley-1"},"content":"        assert counter \u003e 0 : \"Counter should be larger than 0\";","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"stanley-1"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"stanley-1"},"content":"            Task currTask \u003d tasks.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"stanley-1"},"content":"            result +\u003d String.format(\"%d. %s \\n\", i + 1, currTask.toString());","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"stanley-1"},"content":"        return result;","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"stanley-1"},"content":"     * Marks the selected task as completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"stanley-1"},"content":"     * @param userInput Index of task according to the list displayed.","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"stanley-1"},"content":"     * @return String output of completed task.","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"stanley-1"},"content":"    public String markDone(String userInput) {","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"stanley-1"},"content":"        if (userInput.substring(DONE_LENGTH).length() \u003d\u003d EMPTY) {","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"stanley-1"},"content":"            // throw new DukeException(\"User has not indicated task to mark as complete.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"stanley-1"},"content":"            return \"Sorry, which task do you wish to mark as completed?\\nType \u0027done \u003cTASK NO.\u003e\u0027\";","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"stanley-1"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"stanley-1"},"content":"            int index \u003d Integer.parseInt(userInput.substring(DONE_LENGTH + 1));","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"stanley-1"},"content":"            Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"stanley-1"},"content":"            currTask.completeTask();","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"stanley-1"},"content":"            String result \u003d \"Nice! I\u0027ve marked this task as done: \\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"stanley-1"},"content":"            result +\u003d currTask.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"stanley-1"},"content":"            return result;","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"stanley-1"},"content":"     * Reads data from text file and marks the task as completed.","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"stanley-1"},"content":"     * Only performed during Duke\u0027s initialisation.","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"stanley-1"},"content":"     * @param num Index of task according to the data stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"stanley-1"},"content":"    public void addDone(int num) {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"stanley-1"},"content":"        Task currTask \u003d tasks.get(num - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"stanley-1"},"content":"        currTask.completeTask();","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"stanley-1"},"content":"     * Deletes task from user\u0027s list.","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"stanley-1"},"content":"     * @param userInput Index of task according to the list displayed.","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"stanley-1"},"content":"     * @return String output of deleted task.","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"stanley-1"},"content":"    public String delete(String userInput) {","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"stanley-1"},"content":"        if (userInput.substring(DELETE_LENGTH).length() \u003d\u003d EMPTY) {","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"stanley-1"},"content":"            // throw new DukeException(\"User has not indicated task to delete.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"stanley-1"},"content":"            return \"Sorry, which task do you wish to delete?\\nType \u0027delete \u003cTASK NO.\u003e\u0027\";","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"stanley-1"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"stanley-1"},"content":"            int index \u003d Integer.parseInt(userInput.substring(DELETE_LENGTH + 1));","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"stanley-1"},"content":"            Task currTask \u003d tasks.get(index - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"stanley-1"},"content":"            tasks.remove(currTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"stanley-1"},"content":"            String result \u003d \"Noted. I\u0027ve removed this task: \\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"stanley-1"},"content":"            result +\u003d currTask.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":105,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"stanley-1"},"content":"            counter -\u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"stanley-1"},"content":"            result +\u003d String.format(\"\\nYou now have %d task(s) in your list!\", counter);","lastModifiedDate":"2021-09-07"},{"lineNumber":108,"author":{"gitId":"stanley-1"},"content":"            return result;","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"stanley-1"},"content":"     * Creates a ToDo task and adds it to the user\u0027s list.","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"stanley-1"},"content":"     * @param userInput Description of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"stanley-1"},"content":"     * @return String output of ToDo task.","lastModifiedDate":"2021-09-02"},{"lineNumber":117,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"stanley-1"},"content":"    public String makeTodo(String userInput) {","lastModifiedDate":"2021-09-02"},{"lineNumber":119,"author":{"gitId":"stanley-1"},"content":"        if (userInput.substring(TODO_LENGTH).length() \u003d\u003d EMPTY) {","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"stanley-1"},"content":"            // throw new DukeException(\"YIKES!! The description of a todo cannot be empty!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"stanley-1"},"content":"            return \"YIKES!! The description of a todo cannot be empty!\\nType \u0027todo \u003cdescription\u003e\u0027\";","lastModifiedDate":"2021-09-08"},{"lineNumber":122,"author":{"gitId":"stanley-1"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"stanley-1"},"content":"            return makeTask(new ToDo(userInput.substring(TODO_LENGTH + 1)));","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"stanley-1"},"content":"     * Reads data from text file and creates a ToDo task.","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"stanley-1"},"content":"     * Only performed during Duke\u0027s initialisation.","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"stanley-1"},"content":"     * @param userInput Description of task from text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"stanley-1"},"content":"    public void addTodo(String userInput) {","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"stanley-1"},"content":"        tasks.add(new ToDo(userInput));","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"stanley-1"},"content":"        counter +\u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"stanley-1"},"content":"     * Creates an Event and adds it to the user\u0027s list.","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"stanley-1"},"content":"     * @param userInput Details of the Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"stanley-1"},"content":"     * @return String output of Event task.","lastModifiedDate":"2021-09-02"},{"lineNumber":143,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"stanley-1"},"content":"    public String makeEvent(String userInput) {","lastModifiedDate":"2021-09-02"},{"lineNumber":145,"author":{"gitId":"stanley-1"},"content":"        if (userInput.substring(EVENT_LENGTH).length() \u003d\u003d EMPTY) {","lastModifiedDate":"2021-09-07"},{"lineNumber":146,"author":{"gitId":"stanley-1"},"content":"            // throw new DukeException(\"YIKES!! The description of an Event cannot be empty!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"stanley-1"},"content":"            String result \u003d \"YIKES!! The description of an Event cannot be empty!\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":148,"author":{"gitId":"stanley-1"},"content":"            result +\u003d \"Type \u0027event \u003cdescription\u003e /at \u003cdate/time\u003e\u0027\";","lastModifiedDate":"2021-09-08"},{"lineNumber":149,"author":{"gitId":"stanley-1"},"content":"            return result;","lastModifiedDate":"2021-09-08"},{"lineNumber":150,"author":{"gitId":"stanley-1"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"stanley-1"},"content":"            String output \u003d userInput.substring(EVENT_LENGTH + 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":152,"author":{"gitId":"stanley-1"},"content":"            String[] info \u003d output.split(\"/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"stanley-1"},"content":"            return makeTask(new Event(info[0], info[1].substring(WHEN)));","lastModifiedDate":"2021-09-07"},{"lineNumber":154,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":157,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"stanley-1"},"content":"     * Reads data from text file and creates an Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"stanley-1"},"content":"     * Only performed during Duke\u0027s initialisation.","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"stanley-1"},"content":"     * @param userInput Description of Event from text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"stanley-1"},"content":"    public void addEvent(String userInput) {","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"stanley-1"},"content":"        String[] info \u003d userInput.split(\"/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":165,"author":{"gitId":"stanley-1"},"content":"        tasks.add(new Event(info[0], info[1].substring(WHEN)));","lastModifiedDate":"2021-09-07"},{"lineNumber":166,"author":{"gitId":"stanley-1"},"content":"        counter +\u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":167,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":168,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":169,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"stanley-1"},"content":"     * Creates a Deadline task and adds it to the user\u0027s list.","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"stanley-1"},"content":"     * @param userInput Details of the Deadline task.","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"stanley-1"},"content":"     * @return String output of Deadline task.","lastModifiedDate":"2021-09-02"},{"lineNumber":174,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"stanley-1"},"content":"    public String makeDeadline(String userInput) {","lastModifiedDate":"2021-09-02"},{"lineNumber":176,"author":{"gitId":"stanley-1"},"content":"        if (userInput.substring(DEADLINE_LENGTH).length() \u003d\u003d EMPTY) {","lastModifiedDate":"2021-09-07"},{"lineNumber":177,"author":{"gitId":"stanley-1"},"content":"            // throw new DukeException(\"YIKES!! The description of a Deadline cannot be empty!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":178,"author":{"gitId":"stanley-1"},"content":"            String result \u003d \"YIKES!! The description of a Deadline cannot be empty!\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":179,"author":{"gitId":"stanley-1"},"content":"            result +\u003d \"Type \u0027deadline \u003cdescription\u003e /by \u003cYYYY-MM-DD\u003e\u0027\";","lastModifiedDate":"2021-09-08"},{"lineNumber":180,"author":{"gitId":"stanley-1"},"content":"            return result;","lastModifiedDate":"2021-09-08"},{"lineNumber":181,"author":{"gitId":"stanley-1"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":182,"author":{"gitId":"stanley-1"},"content":"            String output \u003d userInput.substring(DEADLINE_LENGTH + 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":183,"author":{"gitId":"stanley-1"},"content":"            String[] info \u003d output.split(\"/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":184,"author":{"gitId":"stanley-1"},"content":"            return makeTask(new Deadline(info[0], info[1].substring(WHEN)));","lastModifiedDate":"2021-09-07"},{"lineNumber":185,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":186,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":187,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":188,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"stanley-1"},"content":"     * Reads data from text file and creates a Deadline task.","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"stanley-1"},"content":"     * Only performed during Duke\u0027s initialisation.","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"stanley-1"},"content":"     * @param userInput Description of Deadline task from text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"stanley-1"},"content":"    public void addDeadline(String userInput) {","lastModifiedDate":"2021-08-23"},{"lineNumber":195,"author":{"gitId":"stanley-1"},"content":"        String[] info \u003d userInput.split(\"/\");","lastModifiedDate":"2021-08-23"},{"lineNumber":196,"author":{"gitId":"stanley-1"},"content":"        tasks.add(new Deadline(info[0], info[1].substring(WHEN)));","lastModifiedDate":"2021-09-07"},{"lineNumber":197,"author":{"gitId":"stanley-1"},"content":"        counter +\u003d 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":198,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":199,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":200,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"stanley-1"},"content":"     * Finds tasks with keywords that match user\u0027s input.","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"stanley-1"},"content":"     * Prints these tasks in a list for user\u0027s perusal.","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"stanley-1"},"content":"     * @param userInput Keyword provided by user.","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"stanley-1"},"content":"     * @return List of tasks that fit user\u0027s criteria.","lastModifiedDate":"2021-09-02"},{"lineNumber":206,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"stanley-1"},"content":"    public String find(String userInput) {","lastModifiedDate":"2021-09-02"},{"lineNumber":208,"author":{"gitId":"stanley-1"},"content":"        if (userInput.substring(FIND_LENGTH).length() \u003d\u003d EMPTY) {","lastModifiedDate":"2021-09-07"},{"lineNumber":209,"author":{"gitId":"stanley-1"},"content":"            String result \u003d \"Uh Oh!! Please specify the keyword of a task!\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":210,"author":{"gitId":"stanley-1"},"content":"            result +\u003d \"Type \u0027find \u003ckeyword\u003e\u0027\";","lastModifiedDate":"2021-09-08"},{"lineNumber":211,"author":{"gitId":"stanley-1"},"content":"            return result;","lastModifiedDate":"2021-09-08"},{"lineNumber":212,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"stanley-1"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":214,"author":{"gitId":"stanley-1"},"content":"            String keyword \u003d userInput.substring(FIND_LENGTH + 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":215,"author":{"gitId":"stanley-1"},"content":"            ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-07"},{"lineNumber":216,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":217,"author":{"gitId":"stanley-1"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-09-07"},{"lineNumber":218,"author":{"gitId":"stanley-1"},"content":"                if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":219,"author":{"gitId":"stanley-1"},"content":"                    matchedTasks.add(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":220,"author":{"gitId":"stanley-1"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":221,"author":{"gitId":"stanley-1"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":222,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":223,"author":{"gitId":"stanley-1"},"content":"            String result \u003d \"Here are the tasks that fit your criteria: \\n\";","lastModifiedDate":"2021-09-02"},{"lineNumber":224,"author":{"gitId":"stanley-1"},"content":"            for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"stanley-1"},"content":"                result +\u003d String.format(\"%d. %s\", i + 1, matchedTasks.get(i).toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":226,"author":{"gitId":"stanley-1"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":227,"author":{"gitId":"stanley-1"},"content":"            return result;","lastModifiedDate":"2021-09-02"},{"lineNumber":228,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":229,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":230,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":231,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":232,"author":{"gitId":"stanley-1"},"content":"     * Auxiliary method that adds specified task to TaskList and returns success message.","lastModifiedDate":"2021-09-07"},{"lineNumber":233,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":234,"author":{"gitId":"stanley-1"},"content":"     * @param task Task input provided by method.","lastModifiedDate":"2021-09-07"},{"lineNumber":235,"author":{"gitId":"stanley-1"},"content":"     * @return Success message upon addition of Task.","lastModifiedDate":"2021-09-07"},{"lineNumber":236,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":237,"author":{"gitId":"stanley-1"},"content":"    private String makeTask(Task task) {","lastModifiedDate":"2021-09-07"},{"lineNumber":238,"author":{"gitId":"stanley-1"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-07"},{"lineNumber":239,"author":{"gitId":"stanley-1"},"content":"        String result \u003d \"Got it. I\u0027ve added this task: \\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":240,"author":{"gitId":"stanley-1"},"content":"        result +\u003d tasks.get(counter).toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":241,"author":{"gitId":"stanley-1"},"content":"        counter +\u003d 1;","lastModifiedDate":"2021-09-07"},{"lineNumber":242,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":243,"author":{"gitId":"stanley-1"},"content":"        result +\u003d String.format(\"\\nYou now have %d task(s) in your list.\", counter);","lastModifiedDate":"2021-09-07"},{"lineNumber":244,"author":{"gitId":"stanley-1"},"content":"        return result;","lastModifiedDate":"2021-09-07"},{"lineNumber":245,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":246,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":247,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":248,"author":{"gitId":"stanley-1"},"content":"     * Returns instructions and sample commands for user to follow.","lastModifiedDate":"2021-09-08"},{"lineNumber":249,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":250,"author":{"gitId":"stanley-1"},"content":"     * @return Guide for users to adhere to when using Duke.","lastModifiedDate":"2021-09-08"},{"lineNumber":251,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":252,"author":{"gitId":"stanley-1"},"content":"    public String getHelp() {","lastModifiedDate":"2021-09-08"},{"lineNumber":253,"author":{"gitId":"stanley-1"},"content":"        String result \u003d \"Here are the commands you can give Duke:\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":254,"author":{"gitId":"stanley-1"},"content":"        result +\u003d \"Create tasks: todo, deadline, event\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":255,"author":{"gitId":"stanley-1"},"content":"        result +\u003d \"Manage tasks: list, delete, done, find\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":256,"author":{"gitId":"stanley-1"},"content":"        result +\u003d \"Exit: bye\";","lastModifiedDate":"2021-09-08"},{"lineNumber":257,"author":{"gitId":"stanley-1"},"content":"        return result;","lastModifiedDate":"2021-09-08"},{"lineNumber":258,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":259,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":260,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":261,"author":{"gitId":"stanley-1"},"content":"     * Alerts user to an invalid command.","lastModifiedDate":"2021-08-24"},{"lineNumber":262,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":263,"author":{"gitId":"stanley-1"},"content":"    public String displayError() {","lastModifiedDate":"2021-09-07"},{"lineNumber":264,"author":{"gitId":"stanley-1"},"content":"        String result \u003d \"OOPS!! I don\u0027t know how to respond to this command! :-(\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":265,"author":{"gitId":"stanley-1"},"content":"        result +\u003d \"Type \u0027help\u0027 to view list of commands available.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":266,"author":{"gitId":"stanley-1"},"content":"        return result;","lastModifiedDate":"2021-09-08"},{"lineNumber":267,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":268,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":269,"author":{"gitId":"stanley-1"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"stanley-1":269}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"     * Creates a ToDo object to store Task details.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"     * @param description Description of Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"stanley-1":18}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"stanley-1":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"stanley-1":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"public class DukeTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"    public void testToDo() {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"        duke.ToDo todo \u003d new duke.ToDo(\"Hi there\");","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"        String expected \u003d \"[T][ ] Hi there\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"        assertEquals(expected, todo.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"    public void testToDoDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"        duke.ToDo todo \u003d new duke.ToDo(\"Wash dishes\");","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"        todo.completeTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"        String expected \u003d \"[T][X] Wash dishes\";","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"        assertEquals(expected, todo.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"    public void testEvent() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"        duke.Event event \u003d new duke.Event(\"Lunch \", \"2pm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"stanley-1"},"content":"        String expected \u003d \"[E][ ] Lunch (at: 2pm)\";","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"    public void testEventDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"stanley-1"},"content":"        duke.Event event \u003d new duke.Event(\"Dinner \", \"9pm\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"stanley-1"},"content":"        event.completeTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"stanley-1"},"content":"        String expected \u003d \"[E][X] Dinner (at: 9pm)\";","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"stanley-1"},"content":"        assertEquals(expected, event.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"stanley-1"},"content":"    public void testDeadline() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"stanley-1"},"content":"        duke.Deadline deadline \u003d new duke.Deadline(\"Return books \", \"2021-08-24\");","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"stanley-1"},"content":"        String expected \u003d \"[D][ ] Return books (by: Aug 24 2021)\";","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"stanley-1"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"stanley-1"},"content":"    public void testDeadlineDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"stanley-1"},"content":"        duke.Deadline deadline \u003d new duke.Deadline(\"Finish project \", \"2021-11-30\");","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"stanley-1"},"content":"        deadline.completeTask();","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"stanley-1"},"content":"        String expected \u003d \"[D][X] Finish project (by: Nov 30 2021)\";","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"stanley-1"},"content":"        assertEquals(expected, deadline.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"stanley-1"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"stanley-1":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"todo eat lunch","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"deadline return book /by 2pm","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"event project meeting /at Sun 12am","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"deadline complete assignment /by 2pm","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"stanley-1":9}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"# cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":35,"stanley-1":3}}]
