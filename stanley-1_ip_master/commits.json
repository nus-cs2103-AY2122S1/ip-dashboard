{"authorDailyContributionsMap":{"stanley-1":[{"date":"2021-08-16","commitResults":[{"hash":"141dbd23048f679a87c45d050439c370eb75fc03","messageTitle":"Added Level-1","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":0}}},{"hash":"d9326e115661122d8a71d9b1555a4ec6e037d0a9","messageTitle":"Added Level-2: Add, List","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":1}}},{"hash":"dce2fe3ae94cef8d6753afd0779f2bffd5c71b34","messageTitle":"Improved syntax by adding newlines to existing work.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}}]},{"date":"2021-08-17","commitResults":[{"hash":"42dc7f891a9c0198016be2a539047b0a5f7f3676","messageTitle":"Created Task.java class and fulfilled Level 3","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":4}}}]},{"date":"2021-08-18","commitResults":[{"hash":"856763a6e692037c02c01d0c120ed6bdcb885aeb","messageTitle":"Added toString() method for Task.java and implemented this with Duke.java","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":2}}},{"hash":"626f894d6299f43326bbfe6c4f827e16bffb90b8","messageTitle":"Added ToDo.java which inherits from Task.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":5}}},{"hash":"668766ee02559b5f57e643781299955ff352fdd0","messageTitle":"Added Deadline.java which inherits from Task.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":0}}},{"hash":"c27ae3237a397f78fdeb3e65f51eae4cef7f94bf","messageTitle":"Added Event.java which inherits from Task.java","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":0}}},{"hash":"7e2db32d9a731f34d66f5d8904df99871529bed5","messageTitle":"Modified runtest.sh for MacBook and crafted test scenarios.","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0},"sh":{"insertions":4,"deletions":4}}},{"hash":"a5552be39d3bc0d96839da7771d6a9de75da64ad","messageTitle":"Created DukeException.java file \u0026 implemented Error Handling.","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":30}}},{"hash":"91f3d72576736422beb8e9e15d04421408145bff","messageTitle":"Used ArrayList as Data Structure \u0026 implemented \"Delete\" functionality.","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":18}}},{"hash":"3eaa0aa5869f124e4300792fdfef479a687fd1ff","messageTitle":"Made preliminary edits to the README.","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":80,"deletions":7}}}]},{"date":"2021-08-23","commitResults":[{"hash":"732a9e8dc37eb17d5bb5ca0fc12c6e284ab15ed4","messageTitle":"Create static methods for Duke.java \u0026 edit EXPECTED.txt accordingly","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":105,"deletions":85}}},{"hash":"3fb9dbfd3d940cb19ad669011c8a0b98e82c78a4","messageTitle":"Add ability to read/write files","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":93,"deletions":0}}},{"hash":"d20c4744294a211eb0035622af08fe5f5e33b8ab","messageTitle":"Handle case where data file does not exist initially","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":1},"java":{"insertions":5,"deletions":0}}},{"hash":"fd1ebc9392fcde97ec7ebb14fda033211b252b73","messageTitle":"Accept date in yyyy-mm-dd and print in MMM dd yyyy format","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":3}}},{"hash":"9a7b77df2c18edc1f113a09f776a10690683931b","messageTitle":"Handle different date formats","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":8,"deletions":1}}},{"hash":"c9259c97b3e919394e6514c3939251cbc455c6d8","messageTitle":"Use more OOP in code","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":5},"java":{"insertions":329,"deletions":235}}}]},{"date":"2021-08-24","commitResults":[{"hash":"54131351afc041c79e34995052bfb219d0980b83","messageTitle":"Divide classes into packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2},"java":{"insertions":41,"deletions":1}}},{"hash":"455d26241c9b5e0d7cfd41c4cec30f7aaf42297d","messageTitle":"Add 6 tests to DukeTest.java","messageBody":"","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":0}}},{"hash":"648c0e08cb3c22d3b2519bc9bf93911fc7b5965f","messageTitle":"Align format of code in Parser.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"38ad49cf87da9ca20832e4ffd6370f694d9b9653","messageTitle":"Add Find function in TaskList.java and Parser.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":0}}},{"hash":"dc481de577596ef102087a00332770c39b49d5ac","messageTitle":"Tweak code to comply with Java coding standards","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":2},"java":{"insertions":7,"deletions":12}}},{"hash":"f777af240b30397721719091442e991a404971ab","messageTitle":"Add JavaDoc comments","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":4},"java":{"insertions":121,"deletions":3}}},{"hash":"1b0f7e057b877d31839da2d3d07f64206a2e3c57","messageTitle":"Make minor edits to JavaDoc","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":0}}}]},{"date":"2021-08-31","commitResults":[{"hash":"ada43b83cecbeb34d5d272e53f6d4cc0ff7d00c0","messageTitle":"Implement minor edits","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":8}}},{"hash":"42268c3f25e512621d636e4e0b162cf343f26691","messageTitle":"Reverse errors in previous commit","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"5ba8eac96ae38959928a673abcd328643bb652f5","messageTitle":"Implement recommendations by Checkstyle plug-in","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}}]},{"date":"2021-09-01","commitResults":[{"hash":"97acb1169c118f26fac22a41d6417871d4b0af45","messageTitle":"Implement recommendations by Checkstyle plug-in","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":33}}}]},{"date":"2021-09-02","commitResults":[{"hash":"2d5f4be11bb9ab0b3a558163b5ed102529ff3dd9","messageTitle":"Implement GUI for Duke","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"fxml":{"insertions":35,"deletions":0},"java":{"insertions":350,"deletions":98}}},{"hash":"e9e04fb26a18b0fe0c9a3660af976251c5757bf8","messageTitle":"Implement recommendations by Checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":106}}}]},{"date":"2021-09-07","commitResults":[{"hash":"7b56d355af720aea334fe98511756ab34e57af3e","messageTitle":"Improve code readability","messageBody":"Presence of superfluous import statements.\n\nVarious classes include unnecessary import statements, resulting in\ncluttered code and poor readability.\n\nLet\u0027s delete unused import statements that have already been commented\nout from the existing codebase to reduce unnecessary noise and improve\ncode readability.\n","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":5,"deletions":13}}},{"hash":"d10418d3612c7f278f4639096c6e4a59354d1e91","messageTitle":"Teach Duke to deal with empty TaskList","messageBody":"Duke prints the incorrect message when TaskList is empty.\n\nPrinting the same message regardless of TaskList\u0027s size is erroneous\nand might confuse users.\n\nLet\u0027s update list() method to reflect \"You have no tasks in your list!\"\nmessage when the user\u0027s TaskList is empty.\n\nMaking this change improves the accuracy of results produced by Duke.\n","tags":["Jar","A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"91a632b7f512da1f3fa0440b2e71172d319b9ac8","messageTitle":"Implement Assertions within Storage.java and TaskList.java","messageBody":"Storage and TaskList classes lack an internal check to ensure that\nthe counter is larger than zero (i.e.: TaskList is not empty).\n\nLet\u0027s implement Java Assert statements at critical junctures in methods\nbelonging to Storage and TaskList classes.\n\nUsing Java Assert statements allows us to detect bugs in our program\nand rectify them before they are discovered by the end-user.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"b0abd94513b9ef334ce22ef289f8be6e21d9e6a0","messageTitle":"Improve general quality of codebase","messageBody":"Variables and attributes were not marked as \"private\" or \"final\" during\ninitial coding for convenience in testing and experimentation.\n\nLet\u0027s declare all necessary variables as \"private\" and \"final\". At the\nsame time, create getters to extract relevant details from such\nvariables.\n\nDeclaring majority of variables as \"private\" and \"final\" satisfies the\ncriteria for immutability under Java Coding Standards.\n","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":27}}},{"hash":"2a44d110eff398150f0e192fcced870acb8bcc28","messageTitle":"Delete legacy class that supports Text-Based UI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":58}}},{"hash":"9ce09ef28da87f7e211af217d429d41a9562192c","messageTitle":"Delete legacy code used in Text-Based UI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":16}}},{"hash":"349889ef77dabf7ef28e8585fccefd8f46081c4e","messageTitle":"Replace magic numbers with named constants","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":36}}},{"hash":"8caf32a71d053fa637b245746dd028309e7d10a0","messageTitle":"Refactor repeated code into an auxiliary method","messageBody":"Three methods (makeTodo, makeDeadline, makeEvent) exhibit common\nbehavior.\n\nThe common behavior across these three methods results in code\nduplication.\n\nExtracting the common behavior into an auxiliary method (makeTask())\nallows us to avoid code duplication and the presence of long methods.\n\nLet\u0027s extract behavior common to these Task Creation methods into a new\nauxiliary method named makeTask().\n","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":21}}}]},{"date":"2021-09-08","commitResults":[{"hash":"1ed7a4727a8f658bdd1db0feec54ca504b4330eb","messageTitle":"Implement in-App guidance for users","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":10}}},{"hash":"ac212172a5415f4f3799f1add8257c07ded03b2e","messageTitle":"Minor syntax improvement","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}}]},{"date":"2021-09-14","commitResults":[{"hash":"5359f8bd0474b72d80d4abf9c92c3ee1e85442dc","messageTitle":"Implement Error Handling via DukeException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":32}}},{"hash":"61aac94510f9e25f173f603a3c5e95ee13f9b7b0","messageTitle":"Implement recommendation by cs2103-bot","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"stanley-1":{"java":835,"md":73,"fxml":35,"sh":3,"bat":0,"gradle":16,"txt":9}},"authorContributionVariance":{"stanley-1":34689.36},"authorDisplayNameMap":{"stanley-1":"CS2103T-F11-4 STAN..HENG"}}
