[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guangxuan"},"content":"import duke.Command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"guangxuan"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"guangxuan"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"guangxuan"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"guangxuan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"guangxuan"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"guangxuan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"guangxuan"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"guangxuan"},"content":" * Main class for running Duke","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"guangxuan"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"guangxuan"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"guangxuan"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"guangxuan"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"guangxuan"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"guangxuan"},"content":"     * @param filePath path to tasks storage file","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"guangxuan"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"guangxuan"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"guangxuan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"guangxuan"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"guangxuan"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"guangxuan"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"guangxuan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"guangxuan"},"content":"            ui.showDukeException(e);","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"guangxuan"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"guangxuan"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"guangxuan"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"guangxuan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"guangxuan"},"content":"            ui.showException(e);","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"guangxuan"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"guangxuan"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"guangxuan"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"guangxuan"},"content":"     * Main loop for interactions with user","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"guangxuan"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"guangxuan"},"content":"    public void run() {","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"guangxuan"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"guangxuan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"guangxuan"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"guangxuan"},"content":"            try {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"guangxuan"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"guangxuan"},"content":"                ui.showDivider();","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"guangxuan"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"guangxuan"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"guangxuan"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"guangxuan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"guangxuan"},"content":"                ui.showDukeException(e);","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"guangxuan"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"guangxuan"},"content":"                ui.showException(e);","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"guangxuan"},"content":"            } finally {","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"guangxuan"},"content":"                ui.showDivider();","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"guangxuan"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"guangxuan"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"guangxuan"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"guangxuan":59,"-":4}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guangxuan"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"guangxuan"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"guangxuan"},"content":" * Represents a function that will be called in the Duke running loop.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"guangxuan"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"guangxuan"},"content":"public class Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"guangxuan"},"content":"    TriConsumer func;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"guangxuan"},"content":"    private boolean isExit;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"guangxuan"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"guangxuan"},"content":"     * @param func function that has to be called with taskList, ui, storage","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"guangxuan"},"content":"     * @param isExit true iff func is an exit function","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"guangxuan"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"guangxuan"},"content":"    public Command(TriConsumer func, boolean isExit) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"guangxuan"},"content":"        this.func \u003d func;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"guangxuan"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"guangxuan"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"guangxuan"},"content":"     * runs the function stored.","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"guangxuan"},"content":"     * @param taskList contains the task list","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"guangxuan"},"content":"     * @param ui handles interactions with the user","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"guangxuan"},"content":"     * @param storage handles loading tasks from the file and saving tasks in the file","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"guangxuan"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"guangxuan"},"content":"     * @throws Exception","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"guangxuan"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"guangxuan"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, Exception {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"guangxuan"},"content":"        func.execute(taskList, ui, storage);","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"guangxuan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"guangxuan"},"content":"        return isExit;","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"guangxuan"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"guangxuan":33}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guangxuan"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"guangxuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"guangxuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"guangxuan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"guangxuan"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"guangxuan"},"content":" * Represents a Task with an additional dateTime field storing a deadline","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"guangxuan"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"guangxuan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"guangxuan"},"content":"    private LocalDate dateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"guangxuan"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"guangxuan"},"content":"     * @param description Description of Task","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"guangxuan"},"content":"     * @param dateTime Deadline for task, formatted in YYYY-MM-DD","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"guangxuan"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"guangxuan"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"guangxuan"},"content":"    public Deadline(String description, String dateTime) throws DukeException, DateTimeParseException {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"guangxuan"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"guangxuan"},"content":"        this.dateTime \u003d LocalDate.parse(dateTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"guangxuan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"guangxuan"},"content":"        String dateString \u003d dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"guangxuan"},"content":"        return String.format(\"[D][%s] %s (by: %s)\",","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"guangxuan"},"content":"                getStatusIcon(), description, dateString);","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"guangxuan"},"content":"    public String getDateTime() {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"guangxuan"},"content":"        return dateTime.toString();","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"guangxuan"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"guangxuan"},"content":"    public TaskType getType() {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"guangxuan"},"content":"        return TaskType.DEADLINE;","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"guangxuan"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"guangxuan":36}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guangxuan"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"guangxuan"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"guangxuan"},"content":" * Represents an Exception thrown by Duke.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"guangxuan"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"guangxuan"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"guangxuan"},"content":"    DukeException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"guangxuan"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"guangxuan"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"guangxuan":10}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guangxuan"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"guangxuan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"guangxuan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"guangxuan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"guangxuan"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"guangxuan"},"content":" * Represents a Task with an additional dateTime field storing an event time","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"guangxuan"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"guangxuan"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"guangxuan"},"content":"    private LocalDate dateTime;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"guangxuan"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"guangxuan"},"content":"     * @param description Description of Task","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"guangxuan"},"content":"     * @param dateTime Event time for task, formatted in YYYY-MM-DD","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"guangxuan"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"guangxuan"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"guangxuan"},"content":"    public Event(String description, String dateTime) throws DukeException, DateTimeParseException {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"guangxuan"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"guangxuan"},"content":"        this.dateTime \u003d LocalDate.parse(dateTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"guangxuan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"guangxuan"},"content":"        String dateString \u003d dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"guangxuan"},"content":"        return String.format(\"[E][%s] %s (at: %s)\",","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"guangxuan"},"content":"                getStatusIcon(), description, dateString);","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"guangxuan"},"content":"    public String getDateTime() {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"guangxuan"},"content":"        return dateTime.toString();","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"guangxuan"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"guangxuan"},"content":"    public TaskType getType() {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"guangxuan"},"content":"        return TaskType.EVENT;","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"guangxuan"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"guangxuan":36}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guangxuan"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"guangxuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"guangxuan"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"guangxuan"},"content":" * Static class that parses input lines into Commands","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"guangxuan"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"guangxuan"},"content":"public class Parser {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"guangxuan"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"guangxuan"},"content":"     * Parses a line of input to a Command object","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"guangxuan"},"content":"     * @param fullCommand string containing exactly one line of input","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"guangxuan"},"content":"     * @return Command object represented by fullCommmand","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"guangxuan"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"guangxuan"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"guangxuan"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"guangxuan"},"content":"        String[] commandSplit \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"guangxuan"},"content":"        String commandType \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"guangxuan"},"content":"        if (commandSplit.length \u003e\u003d 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"guangxuan"},"content":"            commandType \u003d commandSplit[0];","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"guangxuan"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"guangxuan"},"content":"        Command command;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"guangxuan"},"content":"        switch (commandType) {","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"guangxuan"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"guangxuan"},"content":"            command \u003d new Command((taskList, ui, storage) -\u003e {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"guangxuan"},"content":"                ui.showBye();","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"guangxuan"},"content":"            }, true);","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"guangxuan"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"guangxuan"},"content":"        case \"list\":","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"guangxuan"},"content":"            command \u003d new Command((taskList, ui, storage) -\u003e {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"guangxuan"},"content":"                ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"guangxuan"},"content":"                ui.showln(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"guangxuan"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"guangxuan"},"content":"                    ui.showln(String.format(\"%d. %s\", i + 1, tasks.get(i)));","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"guangxuan"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"guangxuan"},"content":"            }, false);","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"guangxuan"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"guangxuan"},"content":"        case \"done\":","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"guangxuan"},"content":"            command \u003d new Command((taskList, ui, storage) -\u003e {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"guangxuan"},"content":"                int i \u003d Integer.parseInt(commandSplit[1].trim());","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"guangxuan"},"content":"                Task task \u003d taskList.markTaskAsDone(i - 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"guangxuan"},"content":"                ui.showln(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"guangxuan"},"content":"                ui.showTask(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"guangxuan"},"content":"                storage.save(taskList.getTasks());","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"guangxuan"},"content":"            }, false);","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"guangxuan"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"guangxuan"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"guangxuan"},"content":"            if (commandSplit.length \u003c 2) {","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"guangxuan"},"content":"                throw new DukeException(String.format(\"The description of a %s cannot be empty.\", commandType));","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"guangxuan"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"guangxuan"},"content":"            command \u003d new Command((taskList, ui, storage) -\u003e {","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"guangxuan"},"content":"                String taskName \u003d commandSplit[1].trim();","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"guangxuan"},"content":"                Task newTask \u003d new Todo(taskName);","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"guangxuan"},"content":"                taskList.addTask((newTask));","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"guangxuan"},"content":"                storage.save(taskList.getTasks());","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"guangxuan"},"content":"                ui.showln(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"guangxuan"},"content":"                ui.showTask(newTask);","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"guangxuan"},"content":"                ui.showTaskCount(taskList.getSize());","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"guangxuan"},"content":"            }, false);","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"guangxuan"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"guangxuan"},"content":"        case \"deadline\": {","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"guangxuan"},"content":"            if (commandSplit.length \u003c 2) {","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"guangxuan"},"content":"                throw new DukeException(String.format(\"The description of a %s cannot be empty.\", commandType));","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"guangxuan"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"guangxuan"},"content":"            String[] nameAndTime \u003d commandSplit[1].split(\"/by\", 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"guangxuan"},"content":"            if (nameAndTime.length \u003c 2) {","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"guangxuan"},"content":"                throw new DukeException(String.format(\"The dateTime of a %s cannot be empty.\", commandType));","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"guangxuan"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"guangxuan"},"content":"            command \u003d new Command((taskList, ui, storage) -\u003e {","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"guangxuan"},"content":"                String taskName \u003d nameAndTime[0].trim();","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"guangxuan"},"content":"                String dateTime \u003d nameAndTime[1].trim();","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"guangxuan"},"content":"                Task newTask \u003d new Deadline(taskName, dateTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"guangxuan"},"content":"                taskList.addTask((newTask));","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"guangxuan"},"content":"                storage.save(taskList.getTasks());","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"guangxuan"},"content":"                ui.showln(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"guangxuan"},"content":"                ui.showTask(newTask);","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"guangxuan"},"content":"                ui.showTaskCount(taskList.getSize());","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"guangxuan"},"content":"            }, false);","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"guangxuan"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"guangxuan"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"guangxuan"},"content":"        case \"event\": {","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"guangxuan"},"content":"            if (commandSplit.length \u003c 2) {","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"guangxuan"},"content":"                throw new DukeException(String.format(\"The description of a %s cannot be empty.\", commandType));","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"guangxuan"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"guangxuan"},"content":"            String[] nameAndTime \u003d commandSplit[1].split(\"/at\", 2);","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"guangxuan"},"content":"            if (nameAndTime.length \u003c 2) {","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"guangxuan"},"content":"                throw new DukeException(String.format(\"The dateTime of a %s cannot be empty.\", commandType));","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"guangxuan"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"guangxuan"},"content":"            command \u003d new Command((taskList, ui, storage) -\u003e {","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"guangxuan"},"content":"                String taskName \u003d nameAndTime[0].trim();","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"guangxuan"},"content":"                String dateTime \u003d nameAndTime[1].trim();","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"guangxuan"},"content":"                Task newTask \u003d new Event(taskName, dateTime);","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"guangxuan"},"content":"                taskList.addTask((newTask));","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"guangxuan"},"content":"                storage.save(taskList.getTasks());","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"guangxuan"},"content":"                ui.showln(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"guangxuan"},"content":"                ui.showTask(newTask);","lastModifiedDate":"2021-08-21"},{"lineNumber":96,"author":{"gitId":"guangxuan"},"content":"                ui.showTaskCount(taskList.getSize());","lastModifiedDate":"2021-08-21"},{"lineNumber":97,"author":{"gitId":"guangxuan"},"content":"            }, false);","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"guangxuan"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"guangxuan"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":100,"author":{"gitId":"guangxuan"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"guangxuan"},"content":"            command \u003d new Command((taskList, ui, storage) -\u003e {","lastModifiedDate":"2021-08-21"},{"lineNumber":102,"author":{"gitId":"guangxuan"},"content":"                int i \u003d Integer.parseInt(commandSplit[1].trim());","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"guangxuan"},"content":"                Task task \u003d taskList.removeTask(i - 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"guangxuan"},"content":"                storage.save(taskList.getTasks());","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"guangxuan"},"content":"                ui.showln(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"guangxuan"},"content":"                ui.showTask(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"guangxuan"},"content":"                ui.showTaskCount(taskList.getSize());","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"guangxuan"},"content":"            }, false);","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"guangxuan"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"guangxuan"},"content":"        case \"find\":","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"guangxuan"},"content":"            if (commandSplit.length \u003c 2) {","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"guangxuan"},"content":"                throw new DukeException(\"The key of find cannot be empty.\");","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"guangxuan"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"guangxuan"},"content":"            command \u003d new Command((taskList, ui, storage) -\u003e {","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"guangxuan"},"content":"                String key \u003d commandSplit[1].trim();","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"guangxuan"},"content":"                ArrayList\u003cTask\u003e tasks \u003d taskList.findTasks(key);","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"guangxuan"},"content":"                ui.showln(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"guangxuan"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"guangxuan"},"content":"                    ui.showln(String.format(\"%d. %s\", i + 1, tasks.get(i)));","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"guangxuan"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"guangxuan"},"content":"            }, false);","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"guangxuan"},"content":"            break;","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"guangxuan"},"content":"        default:","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"guangxuan"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"guangxuan"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"guangxuan"},"content":"        return command;","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"guangxuan"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"guangxuan":128}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guangxuan"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"guangxuan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"guangxuan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"guangxuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"guangxuan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"guangxuan"},"content":"import java.io.File;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"guangxuan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"guangxuan"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"guangxuan"},"content":" * Represents the persistent storage for tasks in Duke","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"guangxuan"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"guangxuan"},"content":"public class Storage {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"guangxuan"},"content":"    private String filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"guangxuan"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"guangxuan"},"content":"     * @param filePath Path to tasks data file","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"guangxuan"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"guangxuan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"guangxuan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"guangxuan"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"guangxuan"},"content":"        if(!file.getParentFile().exists()){","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"guangxuan"},"content":"            file.getParentFile().mkdir();","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"guangxuan"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"guangxuan"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"guangxuan"},"content":"     * Loads file data to an ArrayList of tasks","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"guangxuan"},"content":"     * @return ArrayList of tasks loaded from file","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"guangxuan"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"guangxuan"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"guangxuan"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"guangxuan"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException, FileNotFoundException {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"guangxuan"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"guangxuan"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"guangxuan"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"guangxuan"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"guangxuan"},"content":"            String line \u003d scanner.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"guangxuan"},"content":"            String[] lineSplit \u003d line.split(\" \\\\| \");","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"guangxuan"},"content":"            String lineType \u003d lineSplit[0];","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"guangxuan"},"content":"            Task newTask;","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"guangxuan"},"content":"            switch (lineType) {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"guangxuan"},"content":"            case \"T\":","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"guangxuan"},"content":"                newTask \u003d new Todo(lineSplit[2]);","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"guangxuan"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"guangxuan"},"content":"            case \"D\":","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"guangxuan"},"content":"                newTask \u003d new Deadline(lineSplit[2], lineSplit[3]);","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"guangxuan"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"guangxuan"},"content":"            case \"E\":","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"guangxuan"},"content":"                newTask \u003d new Event(lineSplit[2], lineSplit[3]);","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"guangxuan"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"guangxuan"},"content":"            default:","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"guangxuan"},"content":"                throw new DukeException(\"Invalid task storage format\");","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"guangxuan"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"guangxuan"},"content":"            if (lineSplit[1].equals(\"1\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"guangxuan"},"content":"                newTask.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"guangxuan"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"guangxuan"},"content":"            taskList.add(newTask);","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"guangxuan"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"guangxuan"},"content":"        scanner.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"guangxuan"},"content":"        return taskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"guangxuan"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"guangxuan"},"content":"     * Saves an ArrayList of tasks into file","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"guangxuan"},"content":"     * @param tasks ArrayList of tasks to be stored in file","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"guangxuan"},"content":"     * @throws IOException","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"guangxuan"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"guangxuan"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"guangxuan"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"guangxuan"},"content":"        String data \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"guangxuan"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"guangxuan"},"content":"            int isDone \u003d task.isDone() ? 1 : 0;","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"guangxuan"},"content":"            switch (task.getType()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"guangxuan"},"content":"            case TODO:","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"guangxuan"},"content":"                data +\u003d String.format(\"T | %d | %s\\n\",","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"guangxuan"},"content":"                        isDone, task.getDescription());","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"guangxuan"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"guangxuan"},"content":"            case EVENT:","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"guangxuan"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"guangxuan"},"content":"                data +\u003d String.format(\"E | %d | %s | %s\\n\",","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"guangxuan"},"content":"                        isDone, task.getDescription(), event.getDateTime());","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"guangxuan"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"guangxuan"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"guangxuan"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"guangxuan"},"content":"                data +\u003d String.format(\"D | %d | %s | %s\\n\",","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"guangxuan"},"content":"                        isDone, task.getDescription(), deadline.getDateTime());","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"guangxuan"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"guangxuan"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"guangxuan"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"guangxuan"},"content":"        writer.write(data);","lastModifiedDate":"2021-08-21"},{"lineNumber":92,"author":{"gitId":"guangxuan"},"content":"        writer.close();","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"guangxuan"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"guangxuan":94}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guangxuan"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"guangxuan"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"guangxuan"},"content":" * Base class for all tasks that can be marked as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"guangxuan"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"guangxuan"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"guangxuan"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"guangxuan"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"guangxuan"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"guangxuan"},"content":"     * @param description Task description, must not be empty","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"guangxuan"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"guangxuan"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"guangxuan"},"content":"    public Task(String description) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"guangxuan"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"guangxuan"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"guangxuan"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"guangxuan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"guangxuan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"guangxuan"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"guangxuan"},"content":"     * Mark Task as done","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"guangxuan"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"guangxuan"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"guangxuan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"guangxuan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"guangxuan"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"guangxuan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"guangxuan"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"guangxuan"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"guangxuan"},"content":"        return description;","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"guangxuan"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"guangxuan"},"content":"        return isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"guangxuan"},"content":"    abstract public TaskType getType();","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"guangxuan"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"guangxuan":46}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guangxuan"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"guangxuan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"guangxuan"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"guangxuan"},"content":" * Wrapper for ArrayList of tasks","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"guangxuan"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"guangxuan"},"content":"public class TaskList {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"guangxuan"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"guangxuan"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"guangxuan"},"content":"     * Creates empty TaskList","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"guangxuan"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"guangxuan"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"guangxuan"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"guangxuan"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"guangxuan"},"content":"     * Initializes tasklist with an ArrayList of tasks","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"guangxuan"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"guangxuan"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"guangxuan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"guangxuan"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"guangxuan"},"content":"     * Adds a task to TaskList","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"guangxuan"},"content":"     * @param task Task to be added","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"guangxuan"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"guangxuan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"guangxuan"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"guangxuan"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"guangxuan"},"content":"     * Marks an element of Tasklist as done","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"guangxuan"},"content":"     * @param i index of task to be MarkedAsDone, 0 indexed","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"guangxuan"},"content":"     * @return task that has been modified","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"guangxuan"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"guangxuan"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"guangxuan"},"content":"    public Task markTaskAsDone(int i) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"guangxuan"},"content":"        if (i \u003c 0 || i \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"guangxuan"},"content":"            throw new DukeException(\"markTaskAsDone index out of range.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"guangxuan"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"guangxuan"},"content":"        Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"guangxuan"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"guangxuan"},"content":"        return task;","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"guangxuan"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"guangxuan"},"content":"     * Deletes an element of Tasklist","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"guangxuan"},"content":"     * @param i index of task to be removed, 0 indexed","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"guangxuan"},"content":"     * @return task that has been removed","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"guangxuan"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"guangxuan"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"guangxuan"},"content":"    public Task removeTask(int i) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"guangxuan"},"content":"        if (i \u003c 0 || i \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"guangxuan"},"content":"            throw new DukeException(\"removeTask index out of range.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"guangxuan"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"guangxuan"},"content":"        Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"guangxuan"},"content":"        tasks.remove(i);","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"guangxuan"},"content":"        return task;","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"guangxuan"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"guangxuan"},"content":"     * Searches for tasks that matches keyword","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"guangxuan"},"content":"     * @param key keyword used for searching tasks","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"guangxuan"},"content":"     * @return ArrayList of matching tasks","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"guangxuan"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"guangxuan"},"content":"    public ArrayList\u003cTask\u003e findTasks(String key) {","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"guangxuan"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"guangxuan"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"guangxuan"},"content":"            if (task.getDescription().contains(key)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"guangxuan"},"content":"                result.add(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"guangxuan"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"guangxuan"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"guangxuan"},"content":"        return result;","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"guangxuan"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"guangxuan"},"content":"        return tasks;","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"guangxuan"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"guangxuan"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"guangxuan"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"guangxuan":85}},{"path":"src/main/java/duke/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guangxuan"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"guangxuan"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"guangxuan"},"content":" * Represents type of task","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"guangxuan"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"guangxuan"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"guangxuan"},"content":"    TODO,","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"guangxuan"},"content":"    DEADLINE,","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"guangxuan"},"content":"    EVENT","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"guangxuan"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"guangxuan":10}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guangxuan"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"guangxuan"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"guangxuan"},"content":" * Basic task that can be initialized.","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"guangxuan"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"guangxuan"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"guangxuan"},"content":"    public Todo(String description) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"guangxuan"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"guangxuan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"guangxuan"},"content":"        return String.format(\"[T][%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"guangxuan"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"guangxuan"},"content":"    public TaskType getType() {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"guangxuan"},"content":"        return TaskType.TODO;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"guangxuan"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"guangxuan":18}},{"path":"src/main/java/duke/TriConsumer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guangxuan"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"guangxuan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"guangxuan"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"guangxuan"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"guangxuan"},"content":" * Represents a function interface callable with parameters taskList, ui, storage","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"guangxuan"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"guangxuan"},"content":"@FunctionalInterface","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"guangxuan"},"content":"public interface TriConsumer {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"guangxuan"},"content":"    void execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"guangxuan"},"content":"            throws DukeException, IOException, NumberFormatException, DateTimeParseException;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"guangxuan"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"guangxuan":13}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guangxuan"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"guangxuan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"guangxuan"},"content":"/**","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"guangxuan"},"content":" * Handles the System input and output","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"guangxuan"},"content":" */","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"guangxuan"},"content":"public class Ui {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"guangxuan"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"guangxuan"},"content":"    public Ui() {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"guangxuan"},"content":"        scanner \u003d new Scanner(System.in);  // Create a Scanner object","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"guangxuan"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"guangxuan"},"content":"        String botName \u003d \"HuAI\";","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"guangxuan"},"content":"        System.out.printf(\"Hello! I\u0027m %s\\n\", botName);","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"guangxuan"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"guangxuan"},"content":"    public void showBye() {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"guangxuan"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"guangxuan"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"guangxuan"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"guangxuan"},"content":"    public void showln(String s) {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"guangxuan"},"content":"        System.out.println(s);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"guangxuan"},"content":"    public void showTask(Task task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"guangxuan"},"content":"        System.out.println(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"guangxuan"},"content":"    public void showTaskCount(int taskCount) {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"guangxuan"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\\n\", taskCount);","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"guangxuan"},"content":"    public void showDivider() {","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"guangxuan"},"content":"        String bar \u003d \"\";","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"guangxuan"},"content":"        for (int i \u003d 0; i \u003c 50; i++) {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"guangxuan"},"content":"            bar +\u003d \"_\";","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"guangxuan"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"guangxuan"},"content":"        System.out.println(bar);","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"guangxuan"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"guangxuan"},"content":"     * Prints error message from duke","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"guangxuan"},"content":"     * @param e Erorr thrown by Duke","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"guangxuan"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"guangxuan"},"content":"    public void showDukeException(DukeException e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"guangxuan"},"content":"        System.out.printf(\"HuAI Liddat!!! %s\\n\", e);","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"guangxuan"},"content":"    /**","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"guangxuan"},"content":"     * Prints stack trace of other error messages","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"guangxuan"},"content":"     * @param e Erorr thrown by Java","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"guangxuan"},"content":"     */","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"guangxuan"},"content":"    public void showException(Exception e) {","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"guangxuan"},"content":"        e.printStackTrace();","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"guangxuan"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"guangxuan":63}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guangxuan"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"guangxuan"},"content":"import duke.Event;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"guangxuan"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"guangxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"guangxuan"},"content":"public class EventTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"guangxuan"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"guangxuan"},"content":"    public void toString_normal() throws Exception{","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"guangxuan"},"content":"        Event todo \u003d new Event(\"task\", \"2021-08-21\");","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"guangxuan"},"content":"        Assertions.assertEquals(\"[E][ ] task (at: Aug 21 2021)\", todo.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"guangxuan"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"guangxuan"},"content":"    public void constructor_emptyDescription_dukeException() {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"guangxuan"},"content":"        Throwable exception \u003d Assertions.assertThrows(Exception.class, () -\u003e new Event(\"task\", \"\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"guangxuan"},"content":"        Assertions.assertEquals(\"Text \u0027\u0027 could not be parsed at index 0\", exception.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"guangxuan"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"guangxuan":17}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"guangxuan"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"guangxuan"},"content":"import duke.Todo;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"guangxuan"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"guangxuan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"guangxuan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"guangxuan"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"guangxuan"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"guangxuan"},"content":"    public void toString_normal() throws Exception{","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"guangxuan"},"content":"        Todo todo \u003d new Todo(\"task\");","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"guangxuan"},"content":"        Assertions.assertEquals(\"[T][ ] task\", todo.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"guangxuan"},"content":"    @Test","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"guangxuan"},"content":"    public void constructor_emptyDescription_dukeException() {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"guangxuan"},"content":"        Throwable exception \u003d Assertions.assertThrows(DukeException.class, () -\u003e new Todo(\"\"));","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"guangxuan"},"content":"        Assertions.assertEquals(\"The description of a todo cannot be empty.\", exception.getMessage());","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"guangxuan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"guangxuan"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"guangxuan":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"guangxuan"},"content":"todo read book","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"guangxuan"},"content":"todo borrow book","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"guangxuan"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"guangxuan"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"guangxuan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"guangxuan"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"guangxuan"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"guangxuan"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"guangxuan"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"guangxuan"},"content":"done 4","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"guangxuan"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"guangxuan"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"guangxuan"},"content":"delete 3","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"guangxuan"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"guangxuan"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"guangxuan"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"guangxuan"},"content":"deadline a","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"guangxuan"},"content":"deadline /at","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"guangxuan"},"content":"deadline /at a","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"guangxuan"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"guangxuan"},"content":"event a","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"guangxuan"},"content":"event /by","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"guangxuan"},"content":"event /by a","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"guangxuan"},"content":"done 0","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"guangxuan"},"content":"done 100","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"guangxuan"},"content":"delete 0","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"guangxuan"},"content":"delete 100","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"guangxuan"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"guangxuan":28}}]
