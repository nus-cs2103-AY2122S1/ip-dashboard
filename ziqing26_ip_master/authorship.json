[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"# Catobot","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"![example workflow](https://github.com/ziqing26/ip/actions/workflows/main.yml/badge.svg)","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"This is a java project named Catobot. Given below are instructions on how to use it.","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"                      /^--^\\     /^--^\\     /^--^\\","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"                      \\____/     \\____/     \\____/","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"                     /      \\   /      \\   /      \\","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"CATOBOT             |        | |        | |        |","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"                     \\__  __/   \\__  __/   \\__  __/","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"|^|^|^|^|^|^|^|^|^|^|^|^\\ \\^|^|^|^/ /^|^|^|^|^\\ \\^|^|^|^|^|^|^|^|^|^|^|^|","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"| | | | | | | | | | | | |\\ \\| | |/ /| | | | | | \\ \\ | | | | | | | | | | |","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"########################/ /######\\ \\###########/ /#######################","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"| | | | | | | | | | | | \\/| | | | \\/| | | | | |\\/ | | | | | | | | | | | |","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|_|","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"```","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"3. After that, locate the `src/main/java/catobot/Launcher.java` file, right-click it, and choose `Run Launcher` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see a window pop up with a cat saying hi to you.","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ziqing26":16,"-":12}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"    mainClassName \u003d \"catobot.Launcher\"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"    archiveBaseName \u003d \"catobot\"","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"checkstyleMain {","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"    source \u003d\u0027src/main/java\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"checkstyleTest {","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"    source \u003d\u0027src/test/java\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ziqing26":26,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"### Interactive User Command Line Input","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"- Receive user command and respond.","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"- See examples of valid input when input is invalid.","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"- Exit the app and update local storage using command.","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"### Basic Task Management","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"- Create, delete three types of tasks: todo, event and deadline.","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"- Mark a task as done.","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"- View the list of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"### Advanced Task Management","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"- Find a matching task using descriptions.","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"- Filter and sort different types of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"### Storage","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"- Store the current list of tasks locally.","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"- Load local storage of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"### `list` - List tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"List all current tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"Format and example of usage: `list`","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"Here are Ihe lasks in your list:","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"  1. [T][✓] eat ","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"  2. [E][✗] code (at 02 Sep 2021 05:00 PM)","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"  3. [D][✗] sleep (by: 01 Aug 2021 06:00 AM)","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"### `deadline` - Add deadline","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"Add a deadline with description and due date.","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"Format: `deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd HHmm\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"Example of usage: `deadline study /by 2024-05-01 2359`","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"Got it meow! I\u0027ve added this task:","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"    [D][✗] study (by: 01 May 2024 11:59 PM)","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"### `event` - Add event","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"Add an event with description and happening date.","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"Format: `event \u003cdescription\u003e /at \u003cyyyy-MM-dd HHmm\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":" `event study /at 2024-05-01 2359`","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"Got it meow! I\u0027ve added this task:","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"    [E][✗] study (at: 01 May 2024 11:59 PM)","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"### `todo` - Add todo","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"Add a todo with description.","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"Format: `todo \u003cdescription\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":"Example of usage: `todo sleep`","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"ziqing26"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"ziqing26"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"ziqing26"},"content":"Got it meow! I\u0027ve added this task:","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"ziqing26"},"content":"    [T][✗] sleep","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"ziqing26"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"ziqing26"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"ziqing26"},"content":"### `delete` - Delete a task","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"ziqing26"},"content":"Delete a task from the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"ziqing26"},"content":"Format: `delete \u003cindex\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"ziqing26"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"ziqing26"},"content":" `delete 1`","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"ziqing26"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"ziqing26"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"ziqing26"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"ziqing26"},"content":"    [T][✓] eat ","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"ziqing26"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"ziqing26"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"ziqing26"},"content":"### `done` - Mark a task as done","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"ziqing26"},"content":"Delete a task from the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"ziqing26"},"content":"Format: `done \u003cindex\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"ziqing26"},"content":"Example of usage:","lastModifiedDate":"2021-09-14"},{"lineNumber":110,"author":{"gitId":"ziqing26"},"content":" `done 3`","lastModifiedDate":"2021-09-14"},{"lineNumber":111,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"ziqing26"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"ziqing26"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"ziqing26"},"content":"Noted. I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"ziqing26"},"content":"    [D][✓] sleep (by: 01 Aug 2021 06:00 AM)","lastModifiedDate":"2021-09-14"},{"lineNumber":117,"author":{"gitId":"ziqing26"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":118,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":119,"author":{"gitId":"ziqing26"},"content":"### `sort` - Sort a type of tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":120,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":121,"author":{"gitId":"ziqing26"},"content":"Sort a specific type of tasks in the list. If type is `deadline` or `event`, it will sort chronologically with the latest first.","lastModifiedDate":"2021-09-14"},{"lineNumber":122,"author":{"gitId":"ziqing26"},"content":"If type is `todo`, it will sort lexicographically.","lastModifiedDate":"2021-09-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":124,"author":{"gitId":"ziqing26"},"content":"Format: `sort \u003ctask_type\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"ziqing26"},"content":"`sort deadline`","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":129,"author":{"gitId":"ziqing26"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":130,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":131,"author":{"gitId":"ziqing26"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":132,"author":{"gitId":"ziqing26"},"content":"Here are the sorted deadline in your list:","lastModifiedDate":"2021-09-14"},{"lineNumber":133,"author":{"gitId":"ziqing26"},"content":"    1. [D][x] graduation (by: 01 May 2020 11:59 PM) ","lastModifiedDate":"2021-09-14"},{"lineNumber":134,"author":{"gitId":"ziqing26"},"content":"    2. [D][x] sleep (by: 01 Oct 2021 06:00 AM) ","lastModifiedDate":"2021-09-14"},{"lineNumber":135,"author":{"gitId":"ziqing26"},"content":"    3. [D][✓] hello (by: 31 Aug 2021 06:00 AM) ","lastModifiedDate":"2021-09-14"},{"lineNumber":136,"author":{"gitId":"ziqing26"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":137,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":138,"author":{"gitId":"ziqing26"},"content":"### `find` - Find a task","lastModifiedDate":"2021-09-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":140,"author":{"gitId":"ziqing26"},"content":"Find tasks that match with the given description.","lastModifiedDate":"2021-09-14"},{"lineNumber":141,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":142,"author":{"gitId":"ziqing26"},"content":"Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2021-09-14"},{"lineNumber":143,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":144,"author":{"gitId":"ziqing26"},"content":"Example of usage: `find life`","lastModifiedDate":"2021-09-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":148,"author":{"gitId":"ziqing26"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":149,"author":{"gitId":"ziqing26"},"content":"Here are the sorted deadline in your list:","lastModifiedDate":"2021-09-14"},{"lineNumber":150,"author":{"gitId":"ziqing26"},"content":"    1. [T][x] no life","lastModifiedDate":"2021-09-14"},{"lineNumber":151,"author":{"gitId":"ziqing26"},"content":"    2. [E][x] have fun in life (by: 01 Oct 2023 06:00 AM) ","lastModifiedDate":"2021-09-14"},{"lineNumber":152,"author":{"gitId":"ziqing26"},"content":"    3. [D][✓] lifestyle (by: 31 Aug 2021 06:00 AM) ","lastModifiedDate":"2021-09-14"},{"lineNumber":153,"author":{"gitId":"ziqing26"},"content":"```","lastModifiedDate":"2021-09-14"},{"lineNumber":154,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":155,"author":{"gitId":"ziqing26"},"content":"### `bye` - Exit the app","lastModifiedDate":"2021-09-14"},{"lineNumber":156,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":157,"author":{"gitId":"ziqing26"},"content":"Exit the app. The list data will automatically be saved.","lastModifiedDate":"2021-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":159,"author":{"gitId":"ziqing26"},"content":"Format and example of usage: `exit`","lastModifiedDate":"2021-09-14"},{"lineNumber":160,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":161,"author":{"gitId":"ziqing26"},"content":"Expected outcome:","lastModifiedDate":"2021-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":163,"author":{"gitId":"ziqing26"},"content":"Bye meow! I will always wait here meow(\u003e^^\u003c)","lastModifiedDate":"2021-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"ziqing26":137,"-":27}},{"path":"src/main/java/catobot/BotDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"// Solution below are adapted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"// Solution below are adapted from https://github.com/lll-jy/ip/blob/master/src/main/java/DialogBox.java","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"package catobot;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.BotException;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":" * Represents the User Dialog Box.","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"public class BotDialogBox extends HBox {","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"    private BotDialogBox(String text, Image img) {","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"                    MainWindow.class.getResource(\"/view/BotDialogBox.fxml\"));","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"        if (text.startsWith(BotException.INDICATOR)) {","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"            setExceptionStyle();","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"    private void setExceptionStyle() {","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"        String backgroundSetting \u003d \"-fx-background-color: #FCD5CB; -fx-text-fill: #8C062B;\";","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"        String otherSetting \u003d \"-fx-label-padding: 8; -fx-border-radius: 5; -fx-background-radius: 5\";","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"        dialog.setStyle(backgroundSetting + otherSetting);","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"     * Gets the bot dialog box.","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"     * @param img The profile image of bot.","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"     * @return The dialog box for bot response.","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"    public static BotDialogBox getBotDialog(String text, Image img) {","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"        var db \u003d new BotDialogBox(text, img);","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ziqing26":76}},{"path":"src/main/java/catobot/Catobot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import catobot.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import catobot.command.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.BotException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.LoadingException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"import catobot.item.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":" * Represents a Catobot.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"public class Catobot {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    /** The name of Catobot. */","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"    public static final String NAME \u003d \"Catobot\";","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    /** The welcome message of Catobot. */","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"    public static final String WELCOME \u003d","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"            String.format(\"Hello I am %s (\u003e^^\u003c)\\nWhat can I do for you meow?\", Catobot.NAME);","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    /** The exit message of Catobot. */","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"    public static final String BYE \u003d","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"            \"Bye meow! I will always wait here meow(\u003e^^\u003c)\";","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    /** Storage of the tasks. */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"    /** List of tasks for the Catobot. */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"     * Constructor for Catobot.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"     * @param filePath Location of the local memory.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"    Catobot(String filePath) {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"        } catch (LoadingException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"     * Gets the responses for user input.","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"     * @param input The input from the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"     * @return The text to display in the window.","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"            return c.execute(tasks, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"        } catch (BotException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ziqing26":59}},{"path":"src/main/java/catobot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ziqing26":13}},{"path":"src/main/java/catobot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":" * A GUI for Catobot using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    private final Catobot catobot \u003d new Catobot(\"./data/Catobot.txt\");","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     * Starts the scene.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"     * @param stage The stage that has this scene.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"            // fix for font","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"            scene.getRoot().setStyle(\"-fx-font-family: \u0027Arial\u0027\");","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"            stage.setTitle(\"Catobot\");","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setCatobot(catobot);","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ziqing26":41}},{"path":"src/main/java/catobot/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"    private Catobot catobot;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"    private final Image userImage \u003d new Image(","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(\"/image/kuma-2.png\")));","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"    private final Image dukeImage \u003d new Image(","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"            Objects.requireNonNull(this.getClass().getResourceAsStream(\"/image/neko-2.png\")));","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"     * Initializes the displaying window.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"                BotDialogBox.getBotDialog(Catobot.WELCOME, dukeImage)","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"     * Creates two dialog boxes, one echoing user input and the other","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"     * containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"        String response \u003d catobot.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"                UserDialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"                BotDialogBox.getBotDialog(response, dukeImage)","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"        );","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"    public void setCatobot(Catobot c) {","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"        catobot \u003d c;","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ziqing26":60}},{"path":"src/main/java/catobot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.EmptyCommandException;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.LoadingException;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"import catobot.item.Deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"import catobot.item.Event;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"import catobot.item.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"import catobot.item.Todo;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":" * Represents the local memory of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    /** The path to the file. */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"    /** The file storing the tasks. */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"    private final File storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"     * @param filePath The path to the local memory.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"     * @throws LoadingException If the file cannot be loaded properly.","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"    public Storage(String filePath) throws LoadingException {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"        this.storage \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"            if (!storage.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"                storage.getParentFile().mkdirs();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"                storage.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"            throw new LoadingException();","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"     * Loads the tasks from local memory to Catobot.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"     * @return The list of tasks from local memory.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"     * @throws LoadingException If the tasks cannot be loaded from storage.","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"    public List\u003cTask\u003e load() throws LoadingException {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"            Scanner s \u003d new Scanner(storage);","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"                String rawTask \u003d s.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"                String[] input \u003d rawTask.split(\" \\\\| \", 4);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"                loadTask(input, taskList);","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"        } catch (FileNotFoundException | EmptyCommandException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"            throw new LoadingException();","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"        return taskList;","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"    private void loadTask(String[] input, ArrayList\u003cTask\u003e taskList) throws EmptyCommandException {","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"        String type \u003d input[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"        int isDone \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":"        assert (isDone \u003d\u003d 0 || isDone \u003d\u003d 1) : \"isDone should be either 0 or 1\";","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"ziqing26"},"content":"        String description \u003d input[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"ziqing26"},"content":"        assert !description.equals(\"\") : \"description cannot be empty\";","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"ziqing26"},"content":"        DateTimeFormatter formatter \u003d Task.DATE_FORMAT_DOC;","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"ziqing26"},"content":"        switch (type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"ziqing26"},"content":"        case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"ziqing26"},"content":"            Deadline deadline \u003d Deadline.of(description, LocalDateTime.parse(input[3], formatter));","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"ziqing26"},"content":"            addToList(deadline, taskList, isDone);","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"ziqing26"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"ziqing26"},"content":"        case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"ziqing26"},"content":"            Event event \u003d Event.of(description, LocalDateTime.parse(input[3], formatter));","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"ziqing26"},"content":"            addToList(event, taskList, isDone);","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"ziqing26"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"ziqing26"},"content":"        case \"T\":","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"ziqing26"},"content":"            Todo todo \u003d Todo.of(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"ziqing26"},"content":"            addToList(todo, taskList, isDone);","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"ziqing26"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"ziqing26"},"content":"        default:","lastModifiedDate":"2021-09-01"},{"lineNumber":97,"author":{"gitId":"ziqing26"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"ziqing26"},"content":"    private void addToList(Task task, ArrayList\u003cTask\u003e list, int isDone) {","lastModifiedDate":"2021-09-01"},{"lineNumber":102,"author":{"gitId":"ziqing26"},"content":"        if (isDone \u003d\u003d 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":103,"author":{"gitId":"ziqing26"},"content":"            task.markAsDone();","lastModifiedDate":"2021-09-01"},{"lineNumber":104,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"ziqing26"},"content":"        list.add(task);","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"ziqing26"},"content":"     * Writes the list of tasks to the local memory.","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"ziqing26"},"content":"     * @param tasks The list of tasks to be written.","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"ziqing26"},"content":"     * @throws IOException If the file is not found.","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"ziqing26"},"content":"    public void write(String tasks) throws IOException {","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"ziqing26"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"ziqing26"},"content":"        fw.write(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"ziqing26"},"content":"        fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ziqing26":119}},{"path":"src/main/java/catobot/UserDialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"// Solution below are adapted from https://se-education.org/guides/tutorials/javaFx.html","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"package catobot;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":" * Represents the User Dialog Box.","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"public class UserDialogBox extends HBox {","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"    @FXML","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    private Label dialog;","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"    @FXML","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    private UserDialogBox(String text, Image img) {","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"                    MainWindow.class.getResource(\"/view/UserDialogBox.fxml\"));","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"     * Gets the user dialog box.","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"     * @param text The text to be displayed.","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"     * @param img The profile image of user.","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"     * @return The dialog box for user input.","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"    public static UserDialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"        return new UserDialogBox(text, img);","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"ziqing26":50}},{"path":"src/main/java/catobot/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import catobot.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.BotException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.InvalidCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"import catobot.item.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":" * Represents a command from the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"public class Command implements Executable {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"    /** The date format for commands. */","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    public static final DateTimeFormatter DATE_FORMAT \u003d","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     * Executes the command given.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"     * @param tasks The list of tasks to be worked on.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"     * @param storage The storage of the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"     * @return The text to display.","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"     * @throws BotException If the command is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"    public String execute(TaskList tasks, Storage storage) throws BotException {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"        throw new InvalidCommandException();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ziqing26":30}},{"path":"src/main/java/catobot/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":" * Represents the types of commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"public enum CommandType {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"    CLOSE(\"bye\"),","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"    DONE(\"done\"),","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    FIND(\"find\"),","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"    INVALID(\"\"),","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    LIST(\"list\"),","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    SORT(\"sort\"),","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"    TODO(\"todo\");","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"    /** Content of the command. */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    private final String command;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"     * Constructor for a command.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"     * @param command The content of the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"    CommandType(String command) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"     * Finds the matching Command of a request.","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"     * @param request The request from raw input line.","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"     * @return The corresponding Command to a request.","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"    public static CommandType find(String request) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"        String command \u003d request.split(\" \")[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"        for (CommandType req : CommandType.values()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"            if (command.equals(req.command)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"                return req;","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"        return INVALID;","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"    public String getValue() {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"        return command;","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":52}},{"path":"src/main/java/catobot/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import catobot.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.BotException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.InvalidDateTimeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.InvalidDeadlineException;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"import catobot.item.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"import catobot.item.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":" * Represents the commands to add a deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"    private static final String DEADLINE_INDICATOR \u003d \"/by\";","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"    /** Content of the command. */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    private final String description;","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"    /** Raw input of the date of deadline. */","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"    private final String rawDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"     * Constructor for DeadlineCommand.","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"     * @param content The content of the request.","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"    protected DeadlineCommand(String content) throws BotException {","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"        String[] details \u003d Parser.parseMultipleArgument(","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"                content, CommandType.DEADLINE, DEADLINE_INDICATOR, new InvalidDeadlineException());","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"        String description \u003d details[0].trim();","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"        String rawDate \u003d details[1].trim();","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"        this.rawDate \u003d rawDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"     * Adds a deadline to a list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"     * @param tasks The list of tasks to be worked on.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"     * @param storage The storage of the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"     * @return The text to display.","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"     * @throws BotException If the description is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"    public String execute(TaskList tasks, Storage storage) throws BotException {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(rawDate, Command.DATE_FORMAT);","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"            return tasks.add(Deadline.of(description, date));","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"            throw new InvalidDateTimeException();","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ziqing26":55}},{"path":"src/main/java/catobot/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import catobot.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.BotException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.InvalidCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import catobot.item.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":" * Represents the command to delete a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    /** Content of the command. */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"    private final int index;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     * @param content The content of DeleteCommand.","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"    protected DeleteCommand(String content) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"        String description \u003d Parser.parseSingleArgument(content, CommandType.DELETE);","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"        this.index \u003d Integer.parseInt(description);","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"     * Deletes a task.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"     * @param tasks The list of tasks to be worked on.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"     * @param storage The storage of the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"     * @return The text to display.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"     * @throws BotException If the command does not give a valid index number.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"    public String execute(TaskList tasks, Storage storage) throws BotException {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"            return tasks.deleteTask(index);","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ziqing26":43}},{"path":"src/main/java/catobot/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import catobot.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.BotException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.InvalidCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import catobot.item.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":" * Represents the command to mark a task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    /** Content of the command. */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"    private final int index;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"     * Constructor for DoneCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     * @param content The content of the DoneCommand.","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"    protected DoneCommand(String content) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"        String description \u003d Parser.parseSingleArgument(content, CommandType.DONE);","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"        this.index \u003d Integer.parseInt(description);","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"     * @param tasks The list of tasks to be worked on.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"     * @param storage The storage of the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"     * @return The text to display.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"     * @throws BotException If the command does not give a valid index number.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"    public String execute(TaskList tasks, Storage storage) throws BotException {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"            return tasks.completeTask(index);","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ziqing26":43}},{"path":"src/main/java/catobot/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import catobot.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.BotException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.InvalidDateTimeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.InvalidEventException;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"import catobot.item.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"import catobot.item.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":" * Represents the command to add an event to tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"    private static final String EVENT_INDICATOR \u003d \"/at\";","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"    /** Content of the command. */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"    private final String description;","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"    /** Raw input of the date of event. */","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    private final String rawDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"     * Constructor for EventCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"     * @param content The content of the request.","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"    protected EventCommand(String content) throws BotException {","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"        String[] details \u003d Parser.parseMultipleArgument(","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"                content, CommandType.EVENT, EVENT_INDICATOR, new InvalidEventException());","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"        String description \u003d details[0].trim();","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"        String rawDate \u003d details[1].trim();","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"        this.rawDate \u003d rawDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"     * Adds an event to a list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"     * @param tasks The list of tasks to be worked on.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"     * @param storage The storage of the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"     * @return The text to display.","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"     * @throws BotException If the description is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"    public String execute(TaskList tasks, Storage storage) throws BotException {","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(rawDate, Command.DATE_FORMAT);","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"            return tasks.add(Event.of(description, date));","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"            throw new InvalidDateTimeException();","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ziqing26":58}},{"path":"src/main/java/catobot/command/Executable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import catobot.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.BotException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import catobot.item.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":" * Represents the interface of an executable object.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"public interface Executable {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"     * Executes the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"     * @param tasks The list of tasks to be worked on.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"     * @param storage The storage of the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"     * @return The text to display.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"     * @throws BotException If the command is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    String execute(TaskList tasks, Storage storage) throws BotException;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ziqing26":21}},{"path":"src/main/java/catobot/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import catobot.Catobot;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import catobot.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.BotException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"import catobot.item.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":" * Represents the command to exit from Ui.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"    private static final String ERROR \u003d \"Meow! There is an error occured when trying to save the tasks \u003e.\u003c\";","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     * @param tasks The list of tasks to be worked on.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"     * @param storage The storage of the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"     * @return The text to display.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"     * @throws BotException If the command is not valid.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"    public String execute(TaskList tasks, Storage storage) throws BotException {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"            storage.write(tasks.toStringInDoc());","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"            return Catobot.BYE;","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"            return ERROR;","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ziqing26":33}},{"path":"src/main/java/catobot/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.command;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import catobot.Storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.BotException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import catobot.item.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":" * Represents the command to search a key word.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    private final String keyword;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"     * Constructor for find command.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"     * @param content The content of the command.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"    protected FindCommand(String content) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"        this.keyword \u003d Parser.parseSingleArgument(content, CommandType.FIND);","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"     * Finds tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"     * @param tasks The list of tasks to be worked on.","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"     * @param storage The storage of the tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"     * @return The result of the search.","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"     * @throws BotException If the command is not valid.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"    public String execute(TaskList tasks, Storage storage) throws BotException {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"        return tasks.search(keyword);","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ziqing26":36}},{"path":"src/main/java/catobot/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import catobot.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.BotException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import catobot.item.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":" * Represents the command to list the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"     * Constructor for a ListCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    protected ListCommand() {}","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"     * @param tasks The list of tasks to be worked on.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"     * @param storage The storage of the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"     * @return The text to display.","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"     * @throws BotException If the command is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"    public String execute(TaskList tasks, Storage storage) throws BotException {","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"        return tasks.display();","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ziqing26":29}},{"path":"src/main/java/catobot/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.BotException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.EmptyCommandException;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.InvalidCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":" * Represents the processor of raw input content into commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"     * Parses the input into corresponding commands.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"     * @param content The full content from a line of input.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"     * @return The corresponding command of the input.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"     * @throws BotException If the request is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    public static Command parse(String content) throws BotException {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"        CommandType commandType \u003d CommandType.find(content);","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"        switch (commandType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"        case LIST:","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"        case DONE:","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"            return new DoneCommand(content);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"        case DELETE:","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"            return new DeleteCommand(content);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"        case FIND:","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"            return new FindCommand(content);","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"        case SORT:","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"            return new SortCommand(content);","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"        case TODO:","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"            return new TodoCommand(content);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"            return new DeadlineCommand(content);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"        case EVENT:","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"            return new EventCommand(content);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"        case CLOSE:","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"    protected static String[] parseMultipleArgument(","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"            String content, CommandType type, String indicator, BotException exception) throws BotException {","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"        String name \u003d type.getValue();","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"        // If the command is empty","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"        if (content.split(\" \").length \u003d\u003d 1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"            throw new EmptyCommandException(name);","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"        String rawInputs \u003d content.split(name)[1].trim();","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"        // If the command does not have \"/indicator\"","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"        if (!rawInputs.contains(indicator)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"            throw exception;","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"        String[] details \u003d rawInputs.split(indicator);","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"        // if there is no description or date","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"        if (details.length \u003c 2) {","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"            throw exception;","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"        return details;","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"    protected static String parseSingleArgument(String content, CommandType type) {","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"        String name \u003d type.getValue();","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"        return content.substring(name.length()).trim();","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ziqing26":75}},{"path":"src/main/java/catobot/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.command;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import catobot.Storage;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.BotException;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.InvalidCommandException;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"import catobot.item.Deadline;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"import catobot.item.Event;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"import catobot.item.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"import catobot.item.TaskList;","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"import catobot.item.TaskType;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"import catobot.item.Todo;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":" * Represents the command to sort a type of tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    private final TaskType taskType;","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"     * Constructor for SortCommand.","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"     * @param content The content of the command.","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"    protected SortCommand(String content) {","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"        String name \u003d Parser.parseSingleArgument(content, CommandType.SORT);","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"        this.taskType \u003d TaskType.find(name);","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"     * Sorts a specific type of tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"     * @param tasks The list of tasks to be worked on.","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"     * @param storage The storage of the tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"     * @return If taskType is deadline or event, sort chronologically with the latest first.","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"     *         If taskType is todo, sort lexicographically.","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"     * @throws BotException If the command is not valid.","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"    public String execute(TaskList tasks, Storage storage) throws BotException {","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"        Predicate\u003cTask\u003e condition;","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"            condition \u003d ((t) -\u003e t instanceof Deadline);","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"            break;","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"        case EVENT:","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"            condition \u003d ((t) -\u003e t instanceof Event);","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"            break;","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"        case TODO:","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"            condition \u003d ((t) -\u003e t instanceof Todo);","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"            break;","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"        default:","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"        return tasks.sort(taskType, condition);","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ziqing26":61}},{"path":"src/main/java/catobot/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import catobot.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.BotException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import catobot.item.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import catobot.item.Todo;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":" * Represents the command to add a todo to tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    /** Content of the command. */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"    private final String description;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"     * Constructor for TodoCommand.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     * @param content The content of the command.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"    protected TodoCommand(String content) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"        this.description \u003d Parser.parseSingleArgument(content, CommandType.TODO);","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"     * Adds a todo to a list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"     * @param tasks The list of tasks to be worked on.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"     * @param storage The storage of the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"     * @return The text to display.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"     * @throws BotException If the description is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"    public String execute(TaskList tasks, Storage storage) throws BotException {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"        return tasks.add(Todo.of(description));","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"ziqing26":38}},{"path":"src/main/java/catobot/exception/BotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":" * Represents exceptions thrown by Catobot classes.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"public class BotException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"    /** String indicator of error message. */","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"    public static final String INDICATOR \u003d \"Meow! \";","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"     * Constructor for BotException.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"     * @param errorMessage The error message.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    public BotException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"     * Gets the message of the BotException.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"     * @return The error message.","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"        return INDICATOR + super.getMessage();","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":29}},{"path":"src/main/java/catobot/exception/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":" * Represents exceptions when the command details are empty.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"public class EmptyCommandException extends BotException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"     * Constructor for EmptyCommandException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"     * @param item The place where the description is empty.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    public EmptyCommandException(String item) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"        super(String.format(\"OOPS!!! The description of a / an %s cannot be empty.\", item));","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":15}},{"path":"src/main/java/catobot/exception/EmptyTaskListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":" * Represents exception when the task list is empty.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"public class EmptyTaskListException extends BotException {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"     * Constructor for EmptyTaskListException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"    public EmptyTaskListException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"        super(\"There are no tasks currently! Try to add one!\");","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ziqing26":13}},{"path":"src/main/java/catobot/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":" * Represents the exception when the command is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"public class InvalidCommandException extends BotException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"     * Constructor for InvalidCommandException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"        super(\"I don\u0027t understand this command \u003e.\u003c\");","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":14}},{"path":"src/main/java/catobot/exception/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":" * Represents exception thrown when the date format is wrong.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"public class InvalidDateTimeException extends BotException {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"     * Constructor for InvalidDateTimeException.","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"    public InvalidDateTimeException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"        super(\"I only know kindergarten math, \"","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"                + \"so please pass in format like 2021-08-12 1800\");","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ziqing26":15}},{"path":"src/main/java/catobot/exception/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":" * Represents exception when creating deadline with invalid input.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"public class InvalidDeadlineException extends BotException {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"     * Constructor for InvalidDeadlineException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"    public InvalidDeadlineException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"        super(\"Don\u0027t cheat me, give me a due time so I can watch you \u003e.\u003c\");","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ziqing26":13}},{"path":"src/main/java/catobot/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":" *  * Represents exception when creating event with invalid input.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"public class InvalidEventException extends BotException {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"     * Constructor for InvalidEventException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"    public InvalidEventException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"        super(\"Oh no, please give me a valid event with date \u003e.\u003c\");","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ziqing26":13}},{"path":"src/main/java/catobot/exception/LoadingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.exception;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":" * Represents exception when the initial loading of files has problem.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"public class LoadingException extends BotException {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"     * Constructor for LoadingException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"    public LoadingException() {","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"        super(\"This is an error when loading the file! \"","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"                + \"You will have a new task list meow \u003e.\u003c\");","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ziqing26":14}},{"path":"src/main/java/catobot/exception/OutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":" * Represents exception when value is out of valid range.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"public class OutOfBoundException extends BotException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"     * Constructor for OutOfBoundException.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"     * @param expected The expected range of values.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"     * @param actual The actual value.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    public OutOfBoundException(String expected, String actual) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"        super(String.format(\"Expect %s but you give me %s\", expected, actual));","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":16}},{"path":"src/main/java/catobot/item/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.item;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.EmptyCommandException;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":" * Represents a type of Task which has a due time.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"    /** The datetime of the deadline. */","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"     * @param description The details of deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"     * @param by The due datetime.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     * @throws EmptyCommandException If the description is empty.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"    private Deadline(String description, LocalDateTime by) throws EmptyCommandException {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"     * Creates a Deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"     * @param description The description of Deadline details.","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"     * @param by The due date of the Deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"     * @return The created Deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"     * @throws EmptyCommandException if the description is empty.","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"    public static Deadline of(String description, LocalDateTime by) throws EmptyCommandException {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"            throw new EmptyCommandException(\"deadline\");","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"            return new Deadline(description, by);","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"     * Returns the string representation of Deadline.","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"     * @return The string format of Deadline, including status, description and due time.","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), by.format(DATE_FORMAT_DISPLAY));","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"     * Represents the format of deadline in storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"     * @return The string representation of deadline in storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"    public String toStringInDoc() {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"        String s \u003d super.toStringInDoc();","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"        return String.format(\"D | %s | %s\", s, this.by.format(DATE_FORMAT_DOC));","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"     * Compares two deadlines chronologically (the latest first).","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"     * @param o Another task being compared with.","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"     * @return -1 if the datetime is later than the other","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"     *         1 if the datetime is earlier than the other","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"     *         0 if the datetimes are the same.","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"    public int compareTo(Task o) {","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"        if (o instanceof Deadline) {","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"            Deadline ddl \u003d (Deadline) o;","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"            return ddl.by.compareTo(by);","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":"        return super.compareTo(o);","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":80}},{"path":"src/main/java/catobot/item/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.item;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.EmptyCommandException;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":" * Represents a type of Task which happen at a specific timing.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    /** The time of the event. */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    private final LocalDateTime at;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"     * @param description The details of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     * @param at The time of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"     * @throws EmptyCommandException If the description is empty.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"    private Event(String description, LocalDateTime at) throws EmptyCommandException {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"     * Creates an event.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"     * @param description The description of Event details.","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"     * @param at The time when the Event happens.","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"     * @return The created Event.","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"     * @throws EmptyCommandException if the description is empty.","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"    public static Event of(String description, LocalDateTime at) throws EmptyCommandException {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"            throw new EmptyCommandException(\"event\");","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"            return new Event(description, at);","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"     * Returns the string representation of Event.","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"     * @return The string representation of Event, including status, description and time.","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), at.format(DATE_FORMAT_DISPLAY));","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"     * Represents the format of event in storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"     * @return The string representation of event in storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"    public String toStringInDoc() {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"        String s \u003d super.toStringInDoc();","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"        return String.format(\"E | %s | %s\", s, this.at.format(formatter));","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"     * Compares two events chronologically (the latest first).","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"     * @param o Another task being compared with.","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"     * @return -1 if the datetime is later than the other","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"     *         1 if the datetime is earlier than the other","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"     *         0 if the datetimes are the same.","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"    public int compareTo(Task o) {","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"        if (o instanceof Event) {","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"            Event ddl \u003d (Event) o;","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":"            return at.compareTo(ddl.at);","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"ziqing26"},"content":"        return super.compareTo(o);","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":81}},{"path":"src/main/java/catobot/item/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.item;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.EmptyCommandException;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":" * Represents items which can be done.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"public class Task implements Comparable\u003cTask\u003e {","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"    public static final DateTimeFormatter DATE_FORMAT_DOC \u003d","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    public static final DateTimeFormatter DATE_FORMAT_DISPLAY \u003d","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"            DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\");","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    /** Details of the task. */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    private final String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"    /** Status of whether the task is done. */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"     * Constructor for Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"     * @param description The task description.","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"     * @throws EmptyCommandException if the description is empty.","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"    public Task(String description) throws EmptyCommandException {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"            throw new EmptyCommandException(\"task\");","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"        assert !this.description.equals(\"\") : \"description of a task cannot be empty\";","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"        return (isDone ? \"X\" : \"  \"); // mark done task with X","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"     * Marks the Task as Done.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"     * Checks if the task contains a keyword.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"     * @return True if the task description contains the keyword, false otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"        return description.contains(keyword);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"     * Represents Task in the format of string.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"     * @return The string representation of Task, including status and description.","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"     * Represents the format of task in storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"     * @return The string representation of task in storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"    protected String toStringInDoc() {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"        return String.format(\"%s | %s\", this.isDone ? 1 : 0, this.description);","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"     * Compare two tasks lexicographically.","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":"     * @param o Another task being compared with.","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"ziqing26"},"content":"     * @return -1 if the description is lexicographically less than the other,","lastModifiedDate":"2021-09-08"},{"lineNumber":80,"author":{"gitId":"ziqing26"},"content":"     *         1 if the description is lexicographically greater than the other,","lastModifiedDate":"2021-09-08"},{"lineNumber":81,"author":{"gitId":"ziqing26"},"content":"     *         0 if the description are the same.","lastModifiedDate":"2021-09-08"},{"lineNumber":82,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":83,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":84,"author":{"gitId":"ziqing26"},"content":"    public int compareTo(Task o) {","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"ziqing26"},"content":"        return description.compareTo(o.description);","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":87}},{"path":"src/main/java/catobot/item/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.item;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import java.util.List;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.EmptyTaskListException;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.OutOfBoundException;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":" * Represents a list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"public class TaskList {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    /** List of tasks. */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"     * @param taskList The lists of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"     * @param tasks Various number of tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"    public TaskList(Task ...tasks) {","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"        taskList.addAll(Arrays.asList(tasks));","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"        assert taskList.size() !\u003d 0 : \"taskList cannot be empty\";","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"     * Adds a task into the TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"     * @param item The task to be added.","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"     * @return The response message after adding the catobot.item.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"    public String add(Task item) {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"        this.taskList.add(item);","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"        String front \u003d \"Got it meow! I\u0027ve added this task:\";","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"        String back \u003d checkSize();","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"        return String.format(\"%s\\n      %s\\n%s\", front, item, back);","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"     * Displays the current list of tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"     * @return The bullet point lists of current tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"    public String display() {","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"            return \"Meow currently no tasks!\";","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"        return String.format(\"Here are the tasks in your list:%s\", this);","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"     * Marks a specific task as completed.","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"     * @param index The index of the task in the TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"     * @return The response message after completing the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"     * @throws OutOfBoundException If the index is out of valid range of TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"     * @throws EmptyTaskListException If the TaskList is empty.","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":"    public String completeTask(int index) throws OutOfBoundException, EmptyTaskListException {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"ziqing26"},"content":"        checkRange(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"ziqing26"},"content":"        Task t \u003d taskList.get(index - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"ziqing26"},"content":"        t.markAsDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"ziqing26"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n      %s\", t);","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"ziqing26"},"content":"     * Deletes a task from current TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"ziqing26"},"content":"     * @param index The index of the task in the TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"ziqing26"},"content":"     * @return The response message after deleting the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"ziqing26"},"content":"     * @throws OutOfBoundException If the index is out of valid range of TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"ziqing26"},"content":"     * @throws EmptyTaskListException If the TaskList is empty.","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"ziqing26"},"content":"    public String deleteTask(int index) throws OutOfBoundException, EmptyTaskListException {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"ziqing26"},"content":"        checkRange(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"ziqing26"},"content":"        Task temp \u003d taskList.get(index - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"ziqing26"},"content":"        taskList.remove(temp);","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"ziqing26"},"content":"        return String.format(","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"ziqing26"},"content":"                \"Noted. I\u0027ve removed this task:\\n      %s\\n%s\", temp, checkSize());","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"ziqing26"},"content":"     * Searches the list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"ziqing26"},"content":"     * @param keyword The keyword used for searching.","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"ziqing26"},"content":"     * @return A list of matching tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"ziqing26"},"content":"    public String search(String keyword) {","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"ziqing26"},"content":"        TaskList filtered \u003d new TaskList();","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"ziqing26"},"content":"        this.taskList","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"ziqing26"},"content":"                .stream()","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"ziqing26"},"content":"                .filter((s) -\u003e s.contains(keyword))","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"ziqing26"},"content":"                .forEach(filtered::add);","lastModifiedDate":"2021-09-07"},{"lineNumber":113,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"ziqing26"},"content":"        if (filtered.taskList.isEmpty()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"ziqing26"},"content":"            return \"Meow! No tasks found!\";","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"ziqing26"},"content":"        return String.format(","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"ziqing26"},"content":"                \"Here are the matching tasks in your list:%s\",","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"ziqing26"},"content":"                filtered);","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":124,"author":{"gitId":"ziqing26"},"content":"     * Sorts filtered tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":125,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":126,"author":{"gitId":"ziqing26"},"content":"     * @param taskType The type of tasks to work on.","lastModifiedDate":"2021-09-08"},{"lineNumber":127,"author":{"gitId":"ziqing26"},"content":"     * @param condition The conditions for filtering relevant tasks to sort.","lastModifiedDate":"2021-09-08"},{"lineNumber":128,"author":{"gitId":"ziqing26"},"content":"     * @return The filtered list of tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":129,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":130,"author":{"gitId":"ziqing26"},"content":"    public String sort(TaskType taskType, Predicate\u003cTask\u003e condition) {","lastModifiedDate":"2021-09-08"},{"lineNumber":131,"author":{"gitId":"ziqing26"},"content":"        TaskList filtered \u003d new TaskList();","lastModifiedDate":"2021-09-08"},{"lineNumber":132,"author":{"gitId":"ziqing26"},"content":"        this.taskList","lastModifiedDate":"2021-09-08"},{"lineNumber":133,"author":{"gitId":"ziqing26"},"content":"                .stream()","lastModifiedDate":"2021-09-08"},{"lineNumber":134,"author":{"gitId":"ziqing26"},"content":"                .filter(condition)","lastModifiedDate":"2021-09-08"},{"lineNumber":135,"author":{"gitId":"ziqing26"},"content":"                .sorted()","lastModifiedDate":"2021-09-08"},{"lineNumber":136,"author":{"gitId":"ziqing26"},"content":"                .forEach(filtered::add);","lastModifiedDate":"2021-09-08"},{"lineNumber":137,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":138,"author":{"gitId":"ziqing26"},"content":"        if (filtered.taskList.isEmpty()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":139,"author":{"gitId":"ziqing26"},"content":"            return \"Meow! No tasks found!\";","lastModifiedDate":"2021-09-08"},{"lineNumber":140,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":141,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":142,"author":{"gitId":"ziqing26"},"content":"        return String.format(","lastModifiedDate":"2021-09-08"},{"lineNumber":143,"author":{"gitId":"ziqing26"},"content":"                \"Here are the sorted %s in your list:%s\",","lastModifiedDate":"2021-09-08"},{"lineNumber":144,"author":{"gitId":"ziqing26"},"content":"                taskType.getName(),","lastModifiedDate":"2021-09-08"},{"lineNumber":145,"author":{"gitId":"ziqing26"},"content":"                filtered);","lastModifiedDate":"2021-09-08"},{"lineNumber":146,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":147,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":148,"author":{"gitId":"ziqing26"},"content":"    private void checkRange(int index) throws OutOfBoundException, EmptyTaskListException {","lastModifiedDate":"2021-08-25"},{"lineNumber":149,"author":{"gitId":"ziqing26"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":150,"author":{"gitId":"ziqing26"},"content":"            throw new EmptyTaskListException();","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"ziqing26"},"content":"        if (index \u003c 1 || index \u003e taskList.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"ziqing26"},"content":"            String expected \u003d String.format(\"%d - %d\", 1, taskList.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":155,"author":{"gitId":"ziqing26"},"content":"            String actual \u003d String.format(\"%d\", index);","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"ziqing26"},"content":"            throw new OutOfBoundException(expected, actual);","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":159,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":160,"author":{"gitId":"ziqing26"},"content":"    private String checkSize() {","lastModifiedDate":"2021-08-18"},{"lineNumber":161,"author":{"gitId":"ziqing26"},"content":"        return String.format(\"Now you have %d tasks in the list.\", taskList.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":162,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":163,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":165,"author":{"gitId":"ziqing26"},"content":"     * Returns a string representing the TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":166,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"ziqing26"},"content":"     * @return The string representation of the TaskList in bullet points.","lastModifiedDate":"2021-08-18"},{"lineNumber":168,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":169,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":170,"author":{"gitId":"ziqing26"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":171,"author":{"gitId":"ziqing26"},"content":"        StringBuilder s \u003d new StringBuilder(\"\");","lastModifiedDate":"2021-08-17"},{"lineNumber":172,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":173,"author":{"gitId":"ziqing26"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":174,"author":{"gitId":"ziqing26"},"content":"            s.append(\"\\n    \");","lastModifiedDate":"2021-08-17"},{"lineNumber":175,"author":{"gitId":"ziqing26"},"content":"            s.append(String.format(\"%d. %s\", i + 1, this.taskList.get(i)));","lastModifiedDate":"2021-08-18"},{"lineNumber":176,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":177,"author":{"gitId":"ziqing26"},"content":"        return s.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":179,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":180,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":181,"author":{"gitId":"ziqing26"},"content":"     * Represents the format of TaskList in storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":182,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":183,"author":{"gitId":"ziqing26"},"content":"     * @return The string representation of TaskList in storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":184,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":185,"author":{"gitId":"ziqing26"},"content":"    public String toStringInDoc() {","lastModifiedDate":"2021-08-23"},{"lineNumber":186,"author":{"gitId":"ziqing26"},"content":"        StringBuilder s \u003d new StringBuilder(\"\");","lastModifiedDate":"2021-08-23"},{"lineNumber":187,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":188,"author":{"gitId":"ziqing26"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":189,"author":{"gitId":"ziqing26"},"content":"            s.append(this.taskList.get(i).toStringInDoc());","lastModifiedDate":"2021-08-23"},{"lineNumber":190,"author":{"gitId":"ziqing26"},"content":"            if (i \u003d\u003d taskList.size() - 1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":191,"author":{"gitId":"ziqing26"},"content":"                break;","lastModifiedDate":"2021-09-01"},{"lineNumber":192,"author":{"gitId":"ziqing26"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":193,"author":{"gitId":"ziqing26"},"content":"            s.append(\"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":194,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":195,"author":{"gitId":"ziqing26"},"content":"        return s.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":196,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":197,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ziqing26":197}},{"path":"src/main/java/catobot/item/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.item;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":" * Represents different types of tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"public enum TaskType {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"    TASK(\"task\"),","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"    INVALID(\"\");","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    private final String name;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    TaskType(String name) {","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"    public String getName() {","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"        return this.name;","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"     * Finds the matching TaskType of a name.","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"     * @param name The string of name of task.","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"     * @return The corresponding TaskType to the name.","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"    public static TaskType find(String name) {","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"        for (TaskType t : TaskType.values()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"            if (name.equals(t.name)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"                return t;","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"        return INVALID;","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ziqing26":37}},{"path":"src/main/java/catobot/item/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot.item;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.EmptyCommandException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":" * Represents a type of task which has description only.","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"     * Constructor for Todo.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"     * @param description The details of Todo.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"     * @throws EmptyCommandException If the description is empty.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    private Todo(String description) throws EmptyCommandException {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"     * Creates a Todo.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"     * @param description The description of the Todo.","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"     * @return The created Todo catobot.item.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"     * @throws EmptyCommandException if the description is empty.","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"    public static Todo of(String description) throws EmptyCommandException {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"            throw new EmptyCommandException(\"todo\");","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"            return new Todo(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"     * Returns the string representation of Todo.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"     * @return The string representation of Todo, including status and description.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"     * Represents the format of todo in storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"     * @return The string representation of todo in storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"    public String toStringInDoc() {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"        return String.format(\"T | %s\", super.toStringInDoc());","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":53}},{"path":"src/main/resources/view/BotDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" opacity\u003d\"0.89\"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"         prefWidth\u003d\"400.0\" style\u003d\" -fx-background-radius: 23; -fx-padding: 10;\" type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"         xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #d4f0f0; -fx-text-fill: #005caf;","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"        -fx-label-padding: 8; -fx-border-radius: 5; -fx-background-radius: 5;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"                \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"                \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"            \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"50.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"    \u003ccursor\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"        \u003cCursor fx:constant\u003d\"OPEN_HAND\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"    \u003c/cursor\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ziqing26":30}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\"","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"catobot.MainWindow\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"\u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"6.0\" layoutY\u003d\"661.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"35.0\"","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"               prefWidth\u003d\"316.0\" AnchorPane.bottomAnchor\u003d\"4.0\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"        \u003cfont\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"        \u003c/font\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"        \u003c/opaqueInsets\u003e\u003c/TextField\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"329.0\" layoutY\u003d\"661.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"            prefHeight\u003d\"35.0\" prefWidth\u003d\"61.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"        \u003cfont\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"        \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"655.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"        \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"653.0\" prefWidth\u003d\"390.0\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"        \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"\u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ziqing26":34}},{"path":"src/main/resources/view/UserDialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" opacity\u003d\"0.89\"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"         prefWidth\u003d\"400.0\" style\u003d\"-fx-background-radius: 23; -fx-padding: 0;\"","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: #c4d8c0; -fx-text-fill: #2d593d; -fx-label-padding: 8;","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"        -fx-border-radius: 5; -fx-background-radius: 5;\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"                \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"                \u003cInsets right\u003d\"0.0\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"            \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"50.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"    \u003ccursor\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"        \u003cCursor fx:constant\u003d\"OPEN_HAND\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"    \u003c/cursor\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ziqing26":30}},{"path":"src/test/java/catobot/CatobotTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package catobot;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"import catobot.command.Command;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"import catobot.command.Parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.BotException;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.EmptyCommandException;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.EmptyTaskListException;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.InvalidCommandException;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"import catobot.exception.OutOfBoundException;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"import catobot.item.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"import catobot.item.TaskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"import catobot.item.Todo;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"public class CatobotTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"    private static final String filePath \u003d \"./data/Catobot.txt\";","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    public void taskList_addTodo_todoAddedToTaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"        String description \u003d \"todo demo_description\";","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"        String expected \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"        String actual \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"            Task todo \u003d Todo.of(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"            expected \u003d todo.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"            actual \u003d new TaskList().add(todo).split(\"\\n\")[1].trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"        } catch (BotException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"            actual \u003d e.getMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"    public void parser_invalidCommand_invalidCommandExceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"        String expected \u003d new InvalidCommandException().getMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"        String actual \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"            Parser.parse(\"helloworld 1\");","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"        } catch (BotException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"            actual \u003d e.getMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"    public void deadline_emptyCommand_emptyCommandExceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"        String expected \u003d new EmptyCommandException(\"deadline\").getMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"        String actual \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"            Command c \u003d Parser.parse(\"deadline\");","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"            c.execute(new TaskList(), new Storage(filePath));","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"        } catch (BotException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"            actual \u003d e.getMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"    public void taskList_deleteEmptyTaskList_emptyTaskListExceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"        String expected \u003d new EmptyTaskListException().getMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"        String actual \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"            Command c \u003d Parser.parse(\"delete 1\");","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"            c.execute(new TaskList(), new Storage(filePath));","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"        } catch (BotException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"            actual \u003d e.getMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":"    public void doneCommand_invalidIndex_outOfBoundExceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":"        String expected \u003d new OutOfBoundException(\"1 - 1\", \"2\").getMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"ziqing26"},"content":"        String actual \u003d \"\";","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"ziqing26"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"ziqing26"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"ziqing26"},"content":"            tasks.add(Todo.of(\"demo\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"ziqing26"},"content":"            Command c \u003d Parser.parse(\"done 2\");","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"ziqing26"},"content":"            c.execute(new TaskList(tasks), new Storage(filePath));","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"ziqing26"},"content":"        } catch (BotException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"ziqing26"},"content":"            actual \u003d e.getMessage();","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ziqing26":91}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"todo Eat, code, and sleep","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"todo hello world!","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"event project meeting /at 2021-08-19","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"deadline cs2103 ip /by 2021-12-23","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"deadline cs2040s assignment /by 2021-12-23","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"event graduation /at 2021-05-01","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"done 3","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"delete 3","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"event /by","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"event project meeting /at Monday 2-3pm","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"deadline description","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"done 10","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"delete 10","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"find cs","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"find ../src/main/java/*/*.java  \u003e sources.txt","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin @sources.txt","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"#if ! javac -cp ../src/main/java/catobot -Xlint:none -d ../bin ../src/main/java/catobot/*.java","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"java -classpath ../bin catobot/Catobot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ziqing26":5,"-":36}}]
