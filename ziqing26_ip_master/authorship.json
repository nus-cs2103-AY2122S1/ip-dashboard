[{"path":"src/main/java/Catobot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"import exception.BotException;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"import item.*;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"public class Catobot {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"        // creates an object of Scanner","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"        TaskList taskGroup \u003d new TaskList();","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"        TaskListRequestHandler handler \u003d new TaskListRequestHandler(taskGroup);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"        // takes input from the keyboard","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"        String request \u003d sc.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"        Command command \u003d Command.find(request);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"        while (command !\u003d Command.CLOSE) {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"                handler.decideResponse(command, request);","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"            } catch (BotException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"                handler.respond(e.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"            } finally {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"                request \u003d sc.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"                command \u003d Command.find(request);","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"        handler.exit();","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"        // closes the scanner","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"        sc.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":32}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"public enum Command {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"    LIST    (\"list\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"    DONE    (\"done\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"    DELETE  (\"delete\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"    TODO    (\"todo\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"    EVENT   (\"event\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"    CLOSE   (\"bye\"),","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"    INVALID (\"\");","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    private final String command;","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    Command(String command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"     * Find the matching Command of a request.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     * @param request The request from raw input line.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"     * @return The corresponding Command to a request.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"    public static Command find(String request) {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"        String command \u003d request.split(\" \")[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"        for(Command req : Command.values()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"            if (command.equals(req.command)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"                return req;","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"        return INVALID;","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":32}},{"path":"src/main/java/RequestHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"import exception.BotException;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":" * RequestHandler is the controller for handling of requests.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"public abstract class RequestHandler {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"    private static final String name \u003d \"Catobot\";","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"    private static final String banner \u003d \"(\u003d^^\u003d)(\u003d^^\u003d)(\u003d^^\u003d)(\u003d^^\u003d)\";","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"    private static final String greeting","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"            \u003d \"Hello I am \" + name + \" (\u003e^^\u003c)\\n    What can I do for you meow?\";","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    private static final String byeMessage","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"            \u003d \"Bye meow! I will always wait here meow(\u003e^^\u003c)\";","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    protected RequestHandler() {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"        initialize();","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"    protected void respond(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"        String s \u003d String.format(\"    %s\\n    %s\\n    %s\", banner, message, banner);","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"        System.out.println(s);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"    };","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"     * Send an initialization message.","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"        respond(greeting);","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"     * Send an exit message.","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"    public void exit() {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"        respond(byeMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"     * Decide the response to the requests.","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"     * @param command The action word at the start of request.","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"     * @param request The full request message from a line of input.","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"     * @throws BotException if the request is invalid.","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"    public abstract void decideResponse(","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"            Command command, String request) throws BotException;","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":46}},{"path":"src/main/java/TaskListRequestHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"import exception.BotException;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"import exception.EmptyCommandException;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import exception.InvalidCommandException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import item.*;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"public class TaskListRequestHandler extends RequestHandler{","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"     * Constructor for a TaskListRequestHandler","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"     * @param taskList The TaskList that the handler is responsible for.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    public TaskListRequestHandler(TaskList taskList) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"        super();","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     * Respond to the request/","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"     * @param command The action word at the start of request.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"     * @param request The full request message from a line of input.","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"     * @throws BotException if the request is invalid.","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"    public void decideResponse(Command command, String request) throws BotException {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"        switch (command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"            case LIST:","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"                processList();","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"            case DONE:","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"                processDone(request);","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"            case DELETE:","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"                processDelete(request);","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"            case TODO:","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"                processTodo(request);","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"            case DEADLINE:","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"                processDeadline(request);","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"            case EVENT:","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"                processEvent(request);","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"            default:","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"     * Display the list of tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"    private void processList() {","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"        super.respond(taskList.display());","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"     * Mark a task as Done.","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"     * @param request The full request message from a line of input.","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"     * @throws BotException if the request is invalid.","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"    private void processDone(String request) throws BotException {","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"            int index \u003d Integer.parseInt(request.substring(\"done\".length()).trim());","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"            respond(taskList.completeTask(index));","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"        } catch(NumberFormatException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"     * Delete a task from the TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"     * @param request The full request message from a line of input.","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"     * @throws BotException if the request is invalid.","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":"    private void processDelete(String request) throws BotException {","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"ziqing26"},"content":"            int index \u003d Integer.parseInt(request.substring(\"delete\".length()).trim());","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"ziqing26"},"content":"            respond(taskList.deleteTask(index));","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"ziqing26"},"content":"        } catch(NumberFormatException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"ziqing26"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"ziqing26"},"content":"     * Add a Todo to TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"ziqing26"},"content":"     * @param request The full request message from a line of input.","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"ziqing26"},"content":"     * @throws BotException if the request is invalid.","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"ziqing26"},"content":"    private void processTodo(String request) throws BotException {","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"ziqing26"},"content":"        String description \u003d request.substring(\"todo\".length()).trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"ziqing26"},"content":"        super.respond(taskList.add(Todo.of(description)));","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"ziqing26"},"content":"     * Add a Deadline to TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"ziqing26"},"content":"     * @param request The full request message from a line of input.","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"ziqing26"},"content":"     * @throws BotException if the request is invalid.","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"ziqing26"},"content":"    private void processDeadline(String request) throws BotException {","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"ziqing26"},"content":"        if (!request.contains(\"/by\") || request.split(\"/by\").length \u003c 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"ziqing26"},"content":"            throw new InvalidCommandException(\"Don\u0027t cheat me, give me a due time so I can watch you \u003e.\u003c\");","lastModifiedDate":"2021-08-18"},{"lineNumber":104,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"ziqing26"},"content":"        String[] inputs \u003d request.split(\"deadline\")[1].trim().split(\" /by \");","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"ziqing26"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"ziqing26"},"content":"            throw new EmptyCommandException(\"deadline\");","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"ziqing26"},"content":"        String description \u003d inputs[0].trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"ziqing26"},"content":"        String date \u003d inputs[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"ziqing26"},"content":"        respond(taskList.add(Deadline.of(description, date)));","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":115,"author":{"gitId":"ziqing26"},"content":"     * Add an Event to TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":116,"author":{"gitId":"ziqing26"},"content":"     * @param request The full request message from a line of input.","lastModifiedDate":"2021-08-18"},{"lineNumber":117,"author":{"gitId":"ziqing26"},"content":"     * @throws BotException if the request is invalid.","lastModifiedDate":"2021-08-18"},{"lineNumber":118,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"ziqing26"},"content":"    private void processEvent(String request) throws BotException {","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"ziqing26"},"content":"        if (!request.contains(\"/at\") || request.split(\"/at\").length \u003c 2) {","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"ziqing26"},"content":"            throw new InvalidCommandException(\"Oh no, I am not sure when this is happening \u003e.\u003c\");","lastModifiedDate":"2021-08-18"},{"lineNumber":122,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"ziqing26"},"content":"        String[] inputs \u003d request.split(\"event\")[1].trim().split(\" /at \");","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"ziqing26"},"content":"        if (inputs.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"ziqing26"},"content":"            throw new EmptyCommandException(\"event\");","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"ziqing26"},"content":"        String description \u003d inputs[0].trim();","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"ziqing26"},"content":"        String date \u003d inputs[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"ziqing26"},"content":"        respond(taskList.add(Event.of(description, date)));","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":131}},{"path":"src/main/java/exception/BotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package exception;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":" * BotException are possible exceptions thrown by Catobot.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"public class BotException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"     * Create a BotException.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"     * @param errorMessage The error message.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"    public BotException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"     * Get the message of the BotException","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"     * @return The error message.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"        return super.getMessage();","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":23}},{"path":"src/main/java/exception/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package exception;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":" * EmptyCommandException is thrown when the expected command details are empty.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"public class EmptyCommandException extends BotException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"     * Create an EmptyCommandException.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"     * @param item The item where the description is empty.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"    public EmptyCommandException(String item) {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"        super(String.format(\"OOPS!!! The description of a / an %s cannot be empty.\", item));","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":14}},{"path":"src/main/java/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package exception;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":" * InvalidCommandException is thrown when the command is invalid.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"public class InvalidCommandException extends BotException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"     * Create a default InvalidCommandException.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"     * Create a InvalidCommandException.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"     * @param errorMessage The customized error message.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    public InvalidCommandException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":21}},{"path":"src/main/java/exception/OutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package exception;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":" * OutOfBoundException is thrown when a value is out of valid range.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"public class OutOfBoundException extends BotException {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"     * Create an OutOfBoundException.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"     * @param expected The expected range of values.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"     * @param actual The actual value.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    public OutOfBoundException(String expected, String actual) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"        super(String.format(\"OOPS!!! The expected value is %s but you give me %s\", expected, actual));","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"     * Create an OutOfBoundException.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"     * @param errorMessage The customized error message.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    public OutOfBoundException(String errorMessage) {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":23}},{"path":"src/main/java/item/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package item;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import exception.BotException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import exception.EmptyCommandException;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":" * Deadline is a type of Task which has a due time.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"    protected String by;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    private Deadline(String description, String by) throws EmptyCommandException {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"     * Create a Deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     * @param description The description of Deadline details.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"     * @param by The due date of the Deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"     * @return The created Deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"     * @throws EmptyCommandException if the description is empty.","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    public static Deadline of(String description, String by) throws EmptyCommandException {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"            throw new EmptyCommandException(\"deadline\");","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"            return new Deadline(description, by);","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"     * Return the string representation of Deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"     * @return The string format of Deadline, including status, description and due time.","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":40}},{"path":"src/main/java/item/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package item;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import exception.BotException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import exception.EmptyCommandException;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":" * Event is a type of Task which happen at a specific timing.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"    protected String at;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    private Event(String description, String at) throws EmptyCommandException {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"     * Create an event.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     * @param description The description of Event details.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"     * @param at The time when the Event happens.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"     * @return The created Event.","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"     * @throws EmptyCommandException if the description is empty.","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    public static Event of(String description, String at) throws EmptyCommandException {","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"            throw new EmptyCommandException(\"event\");","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"            return new Event(description, at);","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"     * Return the string representation of Event.","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"     * @return The string representation of Event, including status, description and time.","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":40}},{"path":"src/main/java/item/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package item;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import exception.BotException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import exception.EmptyCommandException;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":" * Task contains items which can be done.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"    protected String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"     * Constructor for Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"     * @param description The task description.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"     * @throws EmptyCommandException if the description is empty.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    public Task(String description) throws EmptyCommandException {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"            throw new EmptyCommandException(\"task\");","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"     * Mark the Task as Done.","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"     * Return the string representation of Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"     * @return The string representation of Task, including status and description.","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"        String s \u003d String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"        return s;","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":46}},{"path":"src/main/java/item/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package item;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import exception.BotException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import exception.InvalidCommandException;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import exception.OutOfBoundException;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"import java.util.*;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":" * TaskList contains a list of tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"public class TaskList {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    public List\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"     * Constructor for a TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"     * Add a task into the TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"     * @param item The task to be added.","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"     * @return The response message after adding the item.","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"    public String add(Task item) {","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"        this.taskList.add(item);","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"        String front \u003d \"Got it meow! I\u0027ve added this task:\";","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"        String back \u003d checkSize();","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"        return String.format(\"%s\\n      %s\\n    %s\", front, item, back);","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"     * Display the current list of tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"     * @return The bullet point lists of current tasks.","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"    public String display() {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"            return \"Meow currently no tasks!\";","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"        return String.format(\"Here are the tasks in your list:%s\", this);","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"     * Mark a specific task as completed.","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"     * @param index The index of the task in the TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"     * @return The response message after completing the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"     * @throws OutOfBoundException if the index is out of valid range of TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"    public String completeTask(int index) throws OutOfBoundException {","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"        checkRange(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"        Task t \u003d taskList.get(index - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"        t.markAsDone();","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n      %s\", t);","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"     * Delete a task from current TaskList","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"     * @param index The index of the task in the TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"     * @return The response message after deleting the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"     * @throws BotException if the index is out of valid range of TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"    public String deleteTask(int index) throws OutOfBoundException {","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"        checkRange(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"        Task temp \u003d taskList.get(index - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"        taskList.remove(temp);","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"        return String.format(","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"                \"Noted. I\u0027ve removed this task:\\n      %s\\n      %s\", temp, checkSize());","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"    private void checkRange(int index) throws OutOfBoundException {","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"            throw new OutOfBoundException(\"There is no tasks currently! Try to add one!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":"        if (index \u003c 1 || index \u003e taskList.size()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":"            String expected \u003d String.format(\"%d - %d\", 1, taskList.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"ziqing26"},"content":"            String actual \u003d String.format(\"%d\", index);","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"ziqing26"},"content":"            throw new OutOfBoundException(expected, actual);","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"ziqing26"},"content":"    private String checkSize() {","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"ziqing26"},"content":"        return String.format(\"Now you have %d tasks in the list.\", taskList.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"ziqing26"},"content":"     * Returns a string representing the TaskList.","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"ziqing26"},"content":"     * @return The string representation of the TaskList in bullet points.","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"ziqing26"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"ziqing26"},"content":"        StringBuilder s \u003d new StringBuilder(\"\");","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"ziqing26"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"ziqing26"},"content":"            s.append(\"\\n    \");","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"ziqing26"},"content":"            s.append(String.format(\"%d. %s\", i + 1, this.taskList.get(i)));","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"ziqing26"},"content":"        return s.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ziqing26":101}},{"path":"src/main/java/item/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package item;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import exception.BotException;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import exception.EmptyCommandException;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":" * Todo is a type of task which has description only.","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"    private Todo(String description) throws EmptyCommandException {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"     * Create a Todo","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"     * @param description The description of the Todo.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"     * @return The created Todo item.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"     * @throws EmptyCommandException if the description is empty.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    public static Todo of(String description) throws EmptyCommandException {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"            throw new EmptyCommandException(\"todo\");","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"            return new Todo(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"     * Return the string representation of Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"     * @return The string representation of Task, including status and description.","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"        return \"[T]\" + super.toString() ;","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"todo Eat, code, and sleep","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"event project meeting /at Monday 2-3pm","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"deadline cs2103 ip /by Thursday 2359","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"done 2","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"event /by","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"event /by monday","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"deadline description","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"done 5","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"delete 5","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"ziqing26":14}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"java -classpath ../bin Catobot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ziqing26":1,"-":37}}]
