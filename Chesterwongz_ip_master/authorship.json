[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chesterwongz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Chesterwongz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Chesterwongz"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"Chesterwongz"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"Chesterwongz"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Chesterwongz"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"Chesterwongz"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"Chesterwongz"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Chesterwongz"},"content":"    public String toData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Chesterwongz"},"content":"        return \"D|\" + super.toData() + \"|\" + by.format(DateTimeFormatter.ofPattern(\"dd-MM-yyy HH:mm\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Chesterwongz"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"Chesterwongz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"Chesterwongz"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"Chesterwongz"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"Chesterwongz":21}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chesterwongz"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Chesterwongz"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Chesterwongz"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Chesterwongz"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Chesterwongz"},"content":"import java.lang.String;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Chesterwongz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Chesterwongz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Chesterwongz"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Chesterwongz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Chesterwongz"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Chesterwongz"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"Chesterwongz"},"content":" * The Duke class encapsulates the Duke project\u0027s chat-bot for CS2103T individual project 1.","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"Chesterwongz"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"Chesterwongz"},"content":" * @author Chesterwongz","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"Chesterwongz"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"Chesterwongz"},"content":"    private static final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"Chesterwongz"},"content":"    private static final String FILEPATH \u003d \"DukeList.txt\";","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Chesterwongz"},"content":"    private static final String DATE_TIME_FORMAT \u003d \"dd-MM-yyyy HH:mm\";","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"Chesterwongz"},"content":"     * Prints the Duke logo.","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"Chesterwongz"},"content":"    private static void logo(){","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"Chesterwongz"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\";","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"Chesterwongz"},"content":"        echo(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"Chesterwongz"},"content":"     * Prints our greeting.","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"Chesterwongz"},"content":"    private static void greet() {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"Chesterwongz"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"Chesterwongz"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"Chesterwongz"},"content":"        echo(greeting);","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"Chesterwongz"},"content":"     * Prints our goodbye.","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"Chesterwongz"},"content":"    private static void bye() {","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"Chesterwongz"},"content":"        String bye \u003d \"Bye! Hope to see you again soon!\";","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"Chesterwongz"},"content":"        echo(bye);","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"Chesterwongz"},"content":"     * Adds a task to the taskList.","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"Chesterwongz"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"Chesterwongz"},"content":"     * @param task the task to be added to the list.","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"Chesterwongz"},"content":"    private static void addToList(Task task) {","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"Chesterwongz"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"Chesterwongz"},"content":"        writeFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Chesterwongz"},"content":"        echo(\"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"Chesterwongz"},"content":"                + task + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"Chesterwongz"},"content":"     * Adds a To-do task to the taskList.","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"Chesterwongz"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"Chesterwongz"},"content":"     * @param input The String array containing the to-do description at index 1.","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"Chesterwongz"},"content":"     * @throws DukeException The exception to be thrown when input is not as expected.","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"Chesterwongz"},"content":"    private static void addToDo(String[] input) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"Chesterwongz"},"content":"        if (input.length \u003e 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"Chesterwongz"},"content":"            addToList(new ToDo(input[1]));","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"Chesterwongz"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"Chesterwongz"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty ☹\");","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"Chesterwongz"},"content":"     * Adds a deadline task to the taskList.","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"Chesterwongz"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"Chesterwongz"},"content":"     * @param input The String array containing the deadline description at index 1.","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"Chesterwongz"},"content":"     * @throws DukeException The exception to be thrown when input is not as expected.","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"Chesterwongz"},"content":"    private static void addDeadline(String[] input) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"Chesterwongz"},"content":"        String formatErrorMsg \u003d \"OOPS!!! Please add the deadline with the right format:\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Chesterwongz"},"content":"                + \"  deadline \u003cdescription\u003e /by \u003c\" + DATE_TIME_FORMAT + \"\u003e\";","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Chesterwongz"},"content":"        if (input.length \u003e 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"Chesterwongz"},"content":"            String[] deadline \u003d input[1].split(\"/\", 2);","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"Chesterwongz"},"content":"            if (deadline.length \u003e 1 \u0026\u0026 deadline[1].length() \u003e 3) {","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"Chesterwongz"},"content":"                try {","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Chesterwongz"},"content":"                    DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"Chesterwongz"},"content":"                    addToList(new Deadline(deadline[0], LocalDateTime.parse(deadline[1].substring(3), format)));","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"Chesterwongz"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"Chesterwongz"},"content":"                    throw new DukeException(formatErrorMsg);","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"Chesterwongz"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"Chesterwongz"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"Chesterwongz"},"content":"                throw new DukeException(formatErrorMsg);","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Chesterwongz"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"Chesterwongz"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"Chesterwongz"},"content":"            throw new DukeException(formatErrorMsg);","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"Chesterwongz"},"content":"     * Adds an event task to the taskList.","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"Chesterwongz"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"Chesterwongz"},"content":"     * @param input The String array containing the event description at index 1.","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"Chesterwongz"},"content":"     * @throws DukeException The exception to be thrown when input is not as expected.","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"Chesterwongz"},"content":"    private static void addEvent(String[] input) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"Chesterwongz"},"content":"        String formatErrorMsg \u003d \"OOPS!!! Please add the event with the right format:\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"Chesterwongz"},"content":"                + \"  event \u003cdescription\u003e /at \u003c\" + DATE_TIME_FORMAT + \"\u003e\";","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"Chesterwongz"},"content":"        if (input.length \u003e 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"Chesterwongz"},"content":"            String[] event \u003d input[1].split(\"/\", 2);","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"Chesterwongz"},"content":"            if (event.length \u003e 1 \u0026\u0026 event[1].length() \u003e 3) {","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"Chesterwongz"},"content":"                try {","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"Chesterwongz"},"content":"                    DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2021-08-22"},{"lineNumber":117,"author":{"gitId":"Chesterwongz"},"content":"                    addToList(new Event(event[0], LocalDateTime.parse(event[1].substring(3), format)));","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"Chesterwongz"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"Chesterwongz"},"content":"                    throw new DukeException(formatErrorMsg);","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"Chesterwongz"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"Chesterwongz"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"Chesterwongz"},"content":"                throw new DukeException(formatErrorMsg);","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"Chesterwongz"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"Chesterwongz"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"Chesterwongz"},"content":"            throw new DukeException(formatErrorMsg);","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":130,"author":{"gitId":"Chesterwongz"},"content":"     * Marks task as done in taskList.","lastModifiedDate":"2021-08-16"},{"lineNumber":131,"author":{"gitId":"Chesterwongz"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"Chesterwongz"},"content":"     * @param input The String array with the index of the task to be done in input[1], if it is there.","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"Chesterwongz"},"content":"     * @throws DukeException The exception to be thrown when input is not as expected.","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":135,"author":{"gitId":"Chesterwongz"},"content":"    private static void doTask(String[] input) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"Chesterwongz"},"content":"        if (input.length \u003c 2) {","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"Chesterwongz"},"content":"            throw new DukeException(\"OOPS!!! Please input the task number to be marked as done ☹\");","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"Chesterwongz"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"Chesterwongz"},"content":"            int taskID \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":141,"author":{"gitId":"Chesterwongz"},"content":"            if (0 \u003c\u003d taskID \u0026\u0026 taskID \u003c taskList.size()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":142,"author":{"gitId":"Chesterwongz"},"content":"                taskList.get(taskID).markAsDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":143,"author":{"gitId":"Chesterwongz"},"content":"                echo(\"Nice! I\u0027ve marked this task as done:\\n  \"","lastModifiedDate":"2021-08-17"},{"lineNumber":144,"author":{"gitId":"Chesterwongz"},"content":"                        + taskList.get(taskID).toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":145,"author":{"gitId":"Chesterwongz"},"content":"            } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":146,"author":{"gitId":"Chesterwongz"},"content":"                throw new DukeException(\"OOPS!!! Please enter a valid task number ☹\");","lastModifiedDate":"2021-08-17"},{"lineNumber":147,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":148,"author":{"gitId":"Chesterwongz"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":149,"author":{"gitId":"Chesterwongz"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"Chesterwongz"},"content":"            throw new DukeException(\"OOPS!!! Please enter a valid task number ☹\");","lastModifiedDate":"2021-08-17"},{"lineNumber":151,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":152,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":153,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":154,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"Chesterwongz"},"content":"     * Removes a task from the task list.","lastModifiedDate":"2021-08-17"},{"lineNumber":156,"author":{"gitId":"Chesterwongz"},"content":"     *","lastModifiedDate":"2021-08-17"},{"lineNumber":157,"author":{"gitId":"Chesterwongz"},"content":"     * @param input The String array with the index of the task to be removed in input[1], if it is there.","lastModifiedDate":"2021-08-17"},{"lineNumber":158,"author":{"gitId":"Chesterwongz"},"content":"     * @throws DukeException The exception to be thrown when input is not as expected.","lastModifiedDate":"2021-08-17"},{"lineNumber":159,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":160,"author":{"gitId":"Chesterwongz"},"content":"    private static void deleteTask(String[] input) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":161,"author":{"gitId":"Chesterwongz"},"content":"        if (input.length \u003c 2) {","lastModifiedDate":"2021-08-17"},{"lineNumber":162,"author":{"gitId":"Chesterwongz"},"content":"            throw new DukeException(\"OOPS!!! Please input the task number to be removed ☹\");","lastModifiedDate":"2021-08-17"},{"lineNumber":163,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":164,"author":{"gitId":"Chesterwongz"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":165,"author":{"gitId":"Chesterwongz"},"content":"            int index \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":166,"author":{"gitId":"Chesterwongz"},"content":"            if (0 \u003c\u003d index \u0026\u0026 index \u003c taskList.size()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":167,"author":{"gitId":"Chesterwongz"},"content":"                echo(\"Got it. I\u0027ve removed this task:\\n  \"","lastModifiedDate":"2021-08-17"},{"lineNumber":168,"author":{"gitId":"Chesterwongz"},"content":"                        + taskList.remove(index) + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":169,"author":{"gitId":"Chesterwongz"},"content":"                writeFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":170,"author":{"gitId":"Chesterwongz"},"content":"            } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":171,"author":{"gitId":"Chesterwongz"},"content":"                throw new DukeException(\"OOPS!!! Please enter a valid task number ☹\");","lastModifiedDate":"2021-08-17"},{"lineNumber":172,"author":{"gitId":"Chesterwongz"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":173,"author":{"gitId":"Chesterwongz"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":174,"author":{"gitId":"Chesterwongz"},"content":"            throw new DukeException(\"OOPS!!! Please enter a valid task number ☹\");","lastModifiedDate":"2021-08-17"},{"lineNumber":175,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":176,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":177,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":178,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":179,"author":{"gitId":"Chesterwongz"},"content":"     * Frames the message with underscore lines and prints it.","lastModifiedDate":"2021-08-16"},{"lineNumber":180,"author":{"gitId":"Chesterwongz"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":181,"author":{"gitId":"Chesterwongz"},"content":"     * @param msg The String we want to frame.","lastModifiedDate":"2021-08-16"},{"lineNumber":182,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":183,"author":{"gitId":"Chesterwongz"},"content":"    private static void echo(String msg) {","lastModifiedDate":"2021-08-16"},{"lineNumber":184,"author":{"gitId":"Chesterwongz"},"content":"        String line \u003d \"__________________________________________________________\";","lastModifiedDate":"2021-08-17"},{"lineNumber":185,"author":{"gitId":"Chesterwongz"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-16"},{"lineNumber":186,"author":{"gitId":"Chesterwongz"},"content":"        System.out.println(msg);","lastModifiedDate":"2021-08-16"},{"lineNumber":187,"author":{"gitId":"Chesterwongz"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-16"},{"lineNumber":188,"author":{"gitId":"Chesterwongz"},"content":"        System.out.println();","lastModifiedDate":"2021-08-16"},{"lineNumber":189,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":190,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":191,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":192,"author":{"gitId":"Chesterwongz"},"content":"     * Prints out the todolist.","lastModifiedDate":"2021-08-16"},{"lineNumber":193,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":194,"author":{"gitId":"Chesterwongz"},"content":"    private static void printList() {","lastModifiedDate":"2021-08-16"},{"lineNumber":195,"author":{"gitId":"Chesterwongz"},"content":"        String line \u003d \"__________________________________________________________\";","lastModifiedDate":"2021-08-17"},{"lineNumber":196,"author":{"gitId":"Chesterwongz"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-16"},{"lineNumber":197,"author":{"gitId":"Chesterwongz"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":198,"author":{"gitId":"Chesterwongz"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":199,"author":{"gitId":"Chesterwongz"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-08-17"},{"lineNumber":200,"author":{"gitId":"Chesterwongz"},"content":"            System.out.println((index++) + \".\" + task);","lastModifiedDate":"2021-08-17"},{"lineNumber":201,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":202,"author":{"gitId":"Chesterwongz"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-16"},{"lineNumber":203,"author":{"gitId":"Chesterwongz"},"content":"        System.out.println();","lastModifiedDate":"2021-08-16"},{"lineNumber":204,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":205,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":206,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":207,"author":{"gitId":"Chesterwongz"},"content":"     * Reads and loads the taskList from txt file. Creates new file if it does not exist.","lastModifiedDate":"2021-08-22"},{"lineNumber":208,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":209,"author":{"gitId":"Chesterwongz"},"content":"    private static void readFile() {","lastModifiedDate":"2021-08-22"},{"lineNumber":210,"author":{"gitId":"Chesterwongz"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":211,"author":{"gitId":"Chesterwongz"},"content":"            File myObj \u003d new File(FILEPATH);","lastModifiedDate":"2021-08-22"},{"lineNumber":212,"author":{"gitId":"Chesterwongz"},"content":"            Scanner myReader \u003d new Scanner(myObj);","lastModifiedDate":"2021-08-22"},{"lineNumber":213,"author":{"gitId":"Chesterwongz"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":214,"author":{"gitId":"Chesterwongz"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":215,"author":{"gitId":"Chesterwongz"},"content":"                switch (data.charAt(0)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":216,"author":{"gitId":"Chesterwongz"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2021-08-22"},{"lineNumber":217,"author":{"gitId":"Chesterwongz"},"content":"                    Task toDoTask \u003d new ToDo(data.substring(4));","lastModifiedDate":"2021-08-22"},{"lineNumber":218,"author":{"gitId":"Chesterwongz"},"content":"                    if (data.charAt(2) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-22"},{"lineNumber":219,"author":{"gitId":"Chesterwongz"},"content":"                        toDoTask.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":220,"author":{"gitId":"Chesterwongz"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":221,"author":{"gitId":"Chesterwongz"},"content":"                    taskList.add(toDoTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":222,"author":{"gitId":"Chesterwongz"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":223,"author":{"gitId":"Chesterwongz"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2021-08-22"},{"lineNumber":224,"author":{"gitId":"Chesterwongz"},"content":"                    readDeadline(data);","lastModifiedDate":"2021-08-22"},{"lineNumber":225,"author":{"gitId":"Chesterwongz"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":226,"author":{"gitId":"Chesterwongz"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2021-08-22"},{"lineNumber":227,"author":{"gitId":"Chesterwongz"},"content":"                    readEvent(data);","lastModifiedDate":"2021-08-22"},{"lineNumber":228,"author":{"gitId":"Chesterwongz"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":229,"author":{"gitId":"Chesterwongz"},"content":"                default:","lastModifiedDate":"2021-08-22"},{"lineNumber":230,"author":{"gitId":"Chesterwongz"},"content":"                    // Do nothing and continue to scan the next line.","lastModifiedDate":"2021-08-22"},{"lineNumber":231,"author":{"gitId":"Chesterwongz"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":232,"author":{"gitId":"Chesterwongz"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":233,"author":{"gitId":"Chesterwongz"},"content":"            myReader.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":234,"author":{"gitId":"Chesterwongz"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":235,"author":{"gitId":"Chesterwongz"},"content":"            createFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":236,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":237,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":238,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":239,"author":{"gitId":"Chesterwongz"},"content":"    private static void readEvent(String data) {","lastModifiedDate":"2021-08-22"},{"lineNumber":240,"author":{"gitId":"Chesterwongz"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":241,"author":{"gitId":"Chesterwongz"},"content":"            String[] splitEvent \u003d data.split(\"\\\\|\", 4);","lastModifiedDate":"2021-08-22"},{"lineNumber":242,"author":{"gitId":"Chesterwongz"},"content":"            if (splitEvent.length \u003d\u003d 4) {","lastModifiedDate":"2021-08-22"},{"lineNumber":243,"author":{"gitId":"Chesterwongz"},"content":"                DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2021-08-22"},{"lineNumber":244,"author":{"gitId":"Chesterwongz"},"content":"                LocalDateTime at \u003d LocalDateTime.parse(splitEvent[3], format);","lastModifiedDate":"2021-08-22"},{"lineNumber":245,"author":{"gitId":"Chesterwongz"},"content":"                Task eventTask \u003d new Event(splitEvent[2], at);","lastModifiedDate":"2021-08-22"},{"lineNumber":246,"author":{"gitId":"Chesterwongz"},"content":"                if (data.charAt(2) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-22"},{"lineNumber":247,"author":{"gitId":"Chesterwongz"},"content":"                    eventTask.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":248,"author":{"gitId":"Chesterwongz"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":249,"author":{"gitId":"Chesterwongz"},"content":"                taskList.add(eventTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":250,"author":{"gitId":"Chesterwongz"},"content":"            } // Else invalid data, do nothing.","lastModifiedDate":"2021-08-22"},{"lineNumber":251,"author":{"gitId":"Chesterwongz"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":252,"author":{"gitId":"Chesterwongz"},"content":"            // Invalid data, do nothing.","lastModifiedDate":"2021-08-22"},{"lineNumber":253,"author":{"gitId":"Chesterwongz"},"content":"            System.out.println(\"Date format wrong\");","lastModifiedDate":"2021-08-22"},{"lineNumber":254,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":255,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":256,"author":{"gitId":"Chesterwongz"},"content":"    private static void readDeadline(String data) {","lastModifiedDate":"2021-08-22"},{"lineNumber":257,"author":{"gitId":"Chesterwongz"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":258,"author":{"gitId":"Chesterwongz"},"content":"            String[] splitDeadline \u003d data.split(\"\\\\|\", 4);","lastModifiedDate":"2021-08-22"},{"lineNumber":259,"author":{"gitId":"Chesterwongz"},"content":"            if (splitDeadline.length \u003d\u003d 4) {","lastModifiedDate":"2021-08-22"},{"lineNumber":260,"author":{"gitId":"Chesterwongz"},"content":"                DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2021-08-22"},{"lineNumber":261,"author":{"gitId":"Chesterwongz"},"content":"                LocalDateTime by \u003d LocalDateTime.parse(splitDeadline[3], format);","lastModifiedDate":"2021-08-22"},{"lineNumber":262,"author":{"gitId":"Chesterwongz"},"content":"                Task deadlineTask \u003d new Deadline(splitDeadline[2], by);","lastModifiedDate":"2021-08-22"},{"lineNumber":263,"author":{"gitId":"Chesterwongz"},"content":"                if (data.charAt(2) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-08-22"},{"lineNumber":264,"author":{"gitId":"Chesterwongz"},"content":"                    deadlineTask.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":265,"author":{"gitId":"Chesterwongz"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":266,"author":{"gitId":"Chesterwongz"},"content":"                taskList.add(deadlineTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":267,"author":{"gitId":"Chesterwongz"},"content":"            } // Else, invalid data, do nothing.","lastModifiedDate":"2021-08-22"},{"lineNumber":268,"author":{"gitId":"Chesterwongz"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":269,"author":{"gitId":"Chesterwongz"},"content":"            // Invalid data, do nothing.","lastModifiedDate":"2021-08-22"},{"lineNumber":270,"author":{"gitId":"Chesterwongz"},"content":"            System.out.println(\"Date format wrong\");","lastModifiedDate":"2021-08-22"},{"lineNumber":271,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":272,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":273,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":274,"author":{"gitId":"Chesterwongz"},"content":"     * Creates a file. Called in readFile().","lastModifiedDate":"2021-08-22"},{"lineNumber":275,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":276,"author":{"gitId":"Chesterwongz"},"content":"    private static void createFile() {","lastModifiedDate":"2021-08-22"},{"lineNumber":277,"author":{"gitId":"Chesterwongz"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":278,"author":{"gitId":"Chesterwongz"},"content":"            File myObj \u003d new File(FILEPATH);","lastModifiedDate":"2021-08-22"},{"lineNumber":279,"author":{"gitId":"Chesterwongz"},"content":"            if (myObj.createNewFile()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":280,"author":{"gitId":"Chesterwongz"},"content":"                echo(\"Successfully created a save file!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":281,"author":{"gitId":"Chesterwongz"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":282,"author":{"gitId":"Chesterwongz"},"content":"                echo(\"OOPS!!! An error occurred when creating a file!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":283,"author":{"gitId":"Chesterwongz"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":284,"author":{"gitId":"Chesterwongz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":285,"author":{"gitId":"Chesterwongz"},"content":"            echo(\"OOPS!!! An error occurred when creating a file!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":286,"author":{"gitId":"Chesterwongz"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":287,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":288,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":289,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":290,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":291,"author":{"gitId":"Chesterwongz"},"content":"     * Overwrites task list in txt file with updated list.","lastModifiedDate":"2021-08-22"},{"lineNumber":292,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":293,"author":{"gitId":"Chesterwongz"},"content":"    private static void writeFile() {","lastModifiedDate":"2021-08-22"},{"lineNumber":294,"author":{"gitId":"Chesterwongz"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":295,"author":{"gitId":"Chesterwongz"},"content":"            FileWriter myWriter \u003d new FileWriter(FILEPATH); // Overwrite mode.","lastModifiedDate":"2021-08-22"},{"lineNumber":296,"author":{"gitId":"Chesterwongz"},"content":"            StringBuilder fileContent \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":297,"author":{"gitId":"Chesterwongz"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":298,"author":{"gitId":"Chesterwongz"},"content":"                fileContent.append(task.toData()).append(\"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":299,"author":{"gitId":"Chesterwongz"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":300,"author":{"gitId":"Chesterwongz"},"content":"            myWriter.write(fileContent.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":301,"author":{"gitId":"Chesterwongz"},"content":"            myWriter.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":302,"author":{"gitId":"Chesterwongz"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":303,"author":{"gitId":"Chesterwongz"},"content":"            echo(\"OOPS!!! An error occurred when writing a file!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":304,"author":{"gitId":"Chesterwongz"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-22"},{"lineNumber":305,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":306,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":307,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":308,"author":{"gitId":"Chesterwongz"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-16"},{"lineNumber":309,"author":{"gitId":"Chesterwongz"},"content":"        readFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":310,"author":{"gitId":"Chesterwongz"},"content":"        logo();","lastModifiedDate":"2021-08-16"},{"lineNumber":311,"author":{"gitId":"Chesterwongz"},"content":"        greet();","lastModifiedDate":"2021-08-16"},{"lineNumber":312,"author":{"gitId":"Chesterwongz"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":313,"author":{"gitId":"Chesterwongz"},"content":"        boolean isExited \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":314,"author":{"gitId":"Chesterwongz"},"content":"        while (!isExited) {","lastModifiedDate":"2021-08-16"},{"lineNumber":315,"author":{"gitId":"Chesterwongz"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":316,"author":{"gitId":"Chesterwongz"},"content":"                String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":317,"author":{"gitId":"Chesterwongz"},"content":"                switch (input) {","lastModifiedDate":"2021-08-17"},{"lineNumber":318,"author":{"gitId":"Chesterwongz"},"content":"                case \"bye\":","lastModifiedDate":"2021-08-17"},{"lineNumber":319,"author":{"gitId":"Chesterwongz"},"content":"                    isExited \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":320,"author":{"gitId":"Chesterwongz"},"content":"                    bye();","lastModifiedDate":"2021-08-16"},{"lineNumber":321,"author":{"gitId":"Chesterwongz"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":322,"author":{"gitId":"Chesterwongz"},"content":"                case \"list\":","lastModifiedDate":"2021-08-17"},{"lineNumber":323,"author":{"gitId":"Chesterwongz"},"content":"                    printList();","lastModifiedDate":"2021-08-16"},{"lineNumber":324,"author":{"gitId":"Chesterwongz"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":325,"author":{"gitId":"Chesterwongz"},"content":"                default:","lastModifiedDate":"2021-08-17"},{"lineNumber":326,"author":{"gitId":"Chesterwongz"},"content":"                    String[] split \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-17"},{"lineNumber":327,"author":{"gitId":"Chesterwongz"},"content":"                    switch (split[0]) {","lastModifiedDate":"2021-08-17"},{"lineNumber":328,"author":{"gitId":"Chesterwongz"},"content":"                    case \"done\":","lastModifiedDate":"2021-08-17"},{"lineNumber":329,"author":{"gitId":"Chesterwongz"},"content":"                        doTask(split);","lastModifiedDate":"2021-08-17"},{"lineNumber":330,"author":{"gitId":"Chesterwongz"},"content":"                        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":331,"author":{"gitId":"Chesterwongz"},"content":"                    case \"todo\":","lastModifiedDate":"2021-08-17"},{"lineNumber":332,"author":{"gitId":"Chesterwongz"},"content":"                        addToDo(split);","lastModifiedDate":"2021-08-17"},{"lineNumber":333,"author":{"gitId":"Chesterwongz"},"content":"                        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":334,"author":{"gitId":"Chesterwongz"},"content":"                    case \"deadline\":","lastModifiedDate":"2021-08-17"},{"lineNumber":335,"author":{"gitId":"Chesterwongz"},"content":"                        addDeadline(split);","lastModifiedDate":"2021-08-17"},{"lineNumber":336,"author":{"gitId":"Chesterwongz"},"content":"                        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":337,"author":{"gitId":"Chesterwongz"},"content":"                    case \"event\":","lastModifiedDate":"2021-08-17"},{"lineNumber":338,"author":{"gitId":"Chesterwongz"},"content":"                        addEvent(split);","lastModifiedDate":"2021-08-17"},{"lineNumber":339,"author":{"gitId":"Chesterwongz"},"content":"                        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":340,"author":{"gitId":"Chesterwongz"},"content":"                    case \"delete\":","lastModifiedDate":"2021-08-17"},{"lineNumber":341,"author":{"gitId":"Chesterwongz"},"content":"                        deleteTask(split);","lastModifiedDate":"2021-08-17"},{"lineNumber":342,"author":{"gitId":"Chesterwongz"},"content":"                        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":343,"author":{"gitId":"Chesterwongz"},"content":"                    default:","lastModifiedDate":"2021-08-17"},{"lineNumber":344,"author":{"gitId":"Chesterwongz"},"content":"                        echo(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means ☹ \");","lastModifiedDate":"2021-08-17"},{"lineNumber":345,"author":{"gitId":"Chesterwongz"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":346,"author":{"gitId":"Chesterwongz"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":347,"author":{"gitId":"Chesterwongz"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":348,"author":{"gitId":"Chesterwongz"},"content":"                echo(e.getMessage());","lastModifiedDate":"2021-08-17"},{"lineNumber":349,"author":{"gitId":"Chesterwongz"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":350,"author":{"gitId":"Chesterwongz"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Chesterwongz":345,"-":7}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chesterwongz"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"Chesterwongz"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"Chesterwongz"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"Chesterwongz"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"Chesterwongz":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chesterwongz"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Chesterwongz"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Chesterwongz"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"Chesterwongz"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"Chesterwongz"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Chesterwongz"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"Chesterwongz"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"Chesterwongz"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Chesterwongz"},"content":"    public String toData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Chesterwongz"},"content":"        return \"E|\" + super.toData() + \"|\" + at.format(DateTimeFormatter.ofPattern(\"dd-MM-yyy HH:mm\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Chesterwongz"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"Chesterwongz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"Chesterwongz"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"Chesterwongz"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"Chesterwongz":21}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chesterwongz"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Chesterwongz"},"content":"    protected String description;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"Chesterwongz"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"Chesterwongz"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"Chesterwongz"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"Chesterwongz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"Chesterwongz"},"content":"     * Gets the status icon of a task.","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"Chesterwongz"},"content":"     * @return \"X\" if isDone is true and \" \" if isDone is false.","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"Chesterwongz"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"Chesterwongz"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"Chesterwongz"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"Chesterwongz"},"content":"     * Set isDone to true.","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"Chesterwongz"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"Chesterwongz"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"Chesterwongz"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"Chesterwongz"},"content":"    public String toData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Chesterwongz"},"content":"        return getStatusIcon() + \"|\" + description;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Chesterwongz"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"Chesterwongz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"Chesterwongz"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"Chesterwongz"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"Chesterwongz":33}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chesterwongz"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"Chesterwongz"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"Chesterwongz"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"Chesterwongz"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Chesterwongz"},"content":"    public String toData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Chesterwongz"},"content":"        return \"T|\" + super.toData();","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Chesterwongz"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Chesterwongz"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"Chesterwongz"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"Chesterwongz"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"Chesterwongz"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"Chesterwongz"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"Chesterwongz":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Chesterwongz"},"content":"todo","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"Chesterwongz"},"content":"todo 1st task /","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"Chesterwongz"},"content":"deadline","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"Chesterwongz"},"content":"deadline 2nd task","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"Chesterwongz"},"content":"deadline 2nd task /","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"Chesterwongz"},"content":"deadline 2nd task /by today","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"Chesterwongz"},"content":"event 3rd task","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"Chesterwongz"},"content":"event 3rd task /","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"Chesterwongz"},"content":"event 3rd task /at home","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"Chesterwongz"},"content":"done","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"Chesterwongz"},"content":"done -1","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"Chesterwongz"},"content":"done -X","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"Chesterwongz"},"content":"done 10000","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"Chesterwongz"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"Chesterwongz"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"Chesterwongz"},"content":"delete","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"Chesterwongz"},"content":"delete -1","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"Chesterwongz"},"content":"delete -X","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"Chesterwongz"},"content":"delete 10000","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"Chesterwongz"},"content":"delete 2","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"Chesterwongz"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"Chesterwongz"},"content":"wrong input","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"Chesterwongz"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"Chesterwongz":23}}]
