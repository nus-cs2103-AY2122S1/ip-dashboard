[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"    String dlineString;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"    LocalDate dlineDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"    public Deadline(String input) {","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"        super(input.substring(0, input.indexOf(\"/by \") - 1));","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"        String dline \u003d input.substring(input.indexOf(\"/by \") + 4);","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"            this.dlineDate \u003d LocalDate.parse(dline);","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"            this.dlineString \u003d dline;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    public Deadline(String name, String dline) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"        super(name);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"            this.dlineDate \u003d LocalDate.parse(dline);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"            this.dlineString \u003d dline;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"        String msg \u003d \"[D]\" + super.toString() + \" (by: \";","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"        if (dlineString \u003d\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"            msg \u003d msg + dlineDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"            msg \u003d msg + dlineString + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"        return msg;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"    public String printToFile() {","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"        String msg \u003d \"D | \" + (this.isDone ? 1 : 0) + \" | \" + this.name + \" | \";","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"        if (dlineString \u003d\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"            msg \u003d msg + dlineDate.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"            msg \u003d msg + dlineString;","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"        return msg;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"luminousleek":49}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"import java.util.ListIterator;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-13"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"     * Wraps a given message above and below with lines and prints it.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"     * @param msg the message to wrap and print","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"    private static void wrapPrint(String msg) {","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"        String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"        System.out.println(msg);","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"        System.out.println(line);","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"     * Lists the elements of a given ArrayList of Tasks and enumerates them.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"     * @param lst the given array of Tasks","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"     * @return a String that looks like an ordered list of Tasks","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"    private static String listTaskArr(ArrayList\u003cTask\u003e lst) {","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"        ListIterator\u003cTask\u003e iter \u003d lst.listIterator();","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"        while (iter.hasNext()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"            res.append(iter.nextIndex() + 1).append(\".\").append(iter.next());","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"            if (iter.hasNext()) {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"                res.append(\"\\n\");","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-13"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"        return res.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"     * Reads the taskList.txt file and returns an ArrayList\u003cTask\u003e based on it.","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"     * Returns an empty ArrayList if the file does not exist.","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"     * @return An ArrayList containing the tasks in the text file","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"    private static ArrayList\u003cTask\u003e readTaskList() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"        // directory and file names","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"        Path directory \u003d Paths.get(\"data\");","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"        Path taskFile \u003d directory.resolve(\"taskList.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"        // check if directory and file exist","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"        // if not return an empty ArrayList\u003cTask\u003e","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"        if (Files.notExists(directory) || Files.notExists(taskFile)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"            return result;","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"        // parse each line","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"            Files.lines(taskFile).forEach(line -\u003e {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"                    Task newTask \u003d parseInput(line);","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"                    if (newTask !\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"                        result.add(newTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"            );","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"luminousleek"},"content":"        return result;","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"     * Parses a given string and returns a Task based on that string.","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"     * @param str the given string to parse","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"     * @return The Task based on the string. Returns null if the string is invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"luminousleek"},"content":"    private static Task parseInput(String str) {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"luminousleek"},"content":"        String[] strArr \u003d str.split(\" \\\\| \");","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"luminousleek"},"content":"        Task newTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"luminousleek"},"content":"        // create new task according to input","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"luminousleek"},"content":"        switch (strArr[0]) {","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"luminousleek"},"content":"        case \"T\":","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"luminousleek"},"content":"            newTask \u003d new ToDo(strArr[2]);","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"luminousleek"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"luminousleek"},"content":"        case \"D\":","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"luminousleek"},"content":"            newTask \u003d new Deadline(strArr[2], strArr[3]);","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"luminousleek"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"luminousleek"},"content":"        case \"E\":","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"luminousleek"},"content":"            newTask \u003d new Event(strArr[2], strArr[3]);","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"luminousleek"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"luminousleek"},"content":"        default:","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"luminousleek"},"content":"            newTask \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"luminousleek"},"content":"            break;","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"luminousleek"},"content":"        return newTask;","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"luminousleek"},"content":"     * Saves the given ArrayList of Tasks into data/taskList.txt.","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"luminousleek"},"content":"     * Creates a new directory and file if they do not exist.","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"luminousleek"},"content":"     * @param lst the given ArrayList of Tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"luminousleek"},"content":"     * @throws DukeException","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"luminousleek"},"content":"    private static void saveToFile(ArrayList\u003cTask\u003e lst) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"luminousleek"},"content":"        // directory and file names","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"luminousleek"},"content":"        Path directory \u003d Paths.get(\"data\");","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"luminousleek"},"content":"        Path taskFile \u003d directory.resolve(\"taskList.txt\");","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"luminousleek"},"content":"        // to create string that\u0027s to be saved in the file","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"luminousleek"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"luminousleek"},"content":"        ListIterator\u003cTask\u003e iter \u003d lst.listIterator();","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"luminousleek"},"content":"            // check if directory exists, if it does not then create it","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"luminousleek"},"content":"            if (Files.notExists(directory)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"luminousleek"},"content":"                Files.createDirectories(directory);","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"luminousleek"},"content":"            // check if file exists, if it does not then create it","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"luminousleek"},"content":"            if (Files.notExists(taskFile)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"luminousleek"},"content":"                Files.createFile(taskFile);","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"luminousleek"},"content":"            // create string of tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"luminousleek"},"content":"            while (iter.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"luminousleek"},"content":"                res.append(iter.next().printToFile());","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"luminousleek"},"content":"                if (iter.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"luminousleek"},"content":"                    res.append(\"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"luminousleek"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":145,"author":{"gitId":"luminousleek"},"content":"            // write string of tasks into file","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"luminousleek"},"content":"            Files.writeString(taskFile, res.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"luminousleek"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"luminousleek"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":154,"author":{"gitId":"luminousleek"},"content":"        // initialise scanner and String array","lastModifiedDate":"2021-08-13"},{"lineNumber":155,"author":{"gitId":"luminousleek"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-13"},{"lineNumber":156,"author":{"gitId":"luminousleek"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":157,"author":{"gitId":"luminousleek"},"content":"        ArrayList\u003cTask\u003e prevList;","lastModifiedDate":"2021-08-23"},{"lineNumber":158,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":159,"author":{"gitId":"luminousleek"},"content":"            taskList \u003d readTaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":160,"author":{"gitId":"luminousleek"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":161,"author":{"gitId":"luminousleek"},"content":"            wrapPrint(\"error reading from taskList file!\\nError: \" + e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":162,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":163,"author":{"gitId":"luminousleek"},"content":"        prevList \u003d new ArrayList\u003c\u003e(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":164,"author":{"gitId":"luminousleek"},"content":"        String msg \u003d \"\";","lastModifiedDate":"2021-08-13"},{"lineNumber":165,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":166,"author":{"gitId":"luminousleek"},"content":"        // Greet","lastModifiedDate":"2021-08-13"},{"lineNumber":167,"author":{"gitId":"luminousleek"},"content":"        wrapPrint(\"Hello! I\u0027m Bob\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-13"},{"lineNumber":168,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":169,"author":{"gitId":"luminousleek"},"content":"        // Add, List and Mark done","lastModifiedDate":"2021-08-13"},{"lineNumber":170,"author":{"gitId":"luminousleek"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-13"},{"lineNumber":171,"author":{"gitId":"luminousleek"},"content":"        while (!input.equals(\"bye\")){","lastModifiedDate":"2021-08-13"},{"lineNumber":172,"author":{"gitId":"luminousleek"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":173,"author":{"gitId":"luminousleek"},"content":"                if (input.equals(\"list\")) {","lastModifiedDate":"2021-08-13"},{"lineNumber":174,"author":{"gitId":"luminousleek"},"content":"                    msg \u003d listTaskArr(taskList);","lastModifiedDate":"2021-08-13"},{"lineNumber":175,"author":{"gitId":"luminousleek"},"content":"                    if (msg.isBlank()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":176,"author":{"gitId":"luminousleek"},"content":"                        msg \u003d \"No tasks in the list!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":177,"author":{"gitId":"luminousleek"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":178,"author":{"gitId":"luminousleek"},"content":"                } else if (input.startsWith(\"done \")) {","lastModifiedDate":"2021-08-13"},{"lineNumber":179,"author":{"gitId":"luminousleek"},"content":"                    // input validation","lastModifiedDate":"2021-08-16"},{"lineNumber":180,"author":{"gitId":"luminousleek"},"content":"                    int num \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2021-08-13"},{"lineNumber":181,"author":{"gitId":"luminousleek"},"content":"                    if (num \u003c 1 || num \u003e taskList.size()) throw new DukeException(\"you typed an invalid number: \" + num);","lastModifiedDate":"2021-08-16"},{"lineNumber":182,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":183,"author":{"gitId":"luminousleek"},"content":"                    taskList.get(num - 1).markDone();","lastModifiedDate":"2021-08-16"},{"lineNumber":184,"author":{"gitId":"luminousleek"},"content":"                    saveToFile(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":185,"author":{"gitId":"luminousleek"},"content":"                    msg \u003d \"Nice! I\u0027ve marked this task as done:\\n  \" + taskList.get(num - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":186,"author":{"gitId":"luminousleek"},"content":"                } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2021-08-13"},{"lineNumber":187,"author":{"gitId":"luminousleek"},"content":"                    // input validation","lastModifiedDate":"2021-08-16"},{"lineNumber":188,"author":{"gitId":"luminousleek"},"content":"                    if (input.length() \u003c 5 || input.substring(5).isBlank()) throw new DukeException(\"the description of the todo cannot be empty!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":189,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":190,"author":{"gitId":"luminousleek"},"content":"                    ToDo newTodo \u003d new ToDo(input.substring(5));","lastModifiedDate":"2021-08-16"},{"lineNumber":191,"author":{"gitId":"luminousleek"},"content":"                    taskList.add(newTodo);","lastModifiedDate":"2021-08-16"},{"lineNumber":192,"author":{"gitId":"luminousleek"},"content":"                    saveToFile(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":193,"author":{"gitId":"luminousleek"},"content":"                    msg \u003d \"Got it. I\u0027ve added this task:\\n  \" + newTodo + \"\\nNow you have \" + taskList.size();","lastModifiedDate":"2021-08-16"},{"lineNumber":194,"author":{"gitId":"luminousleek"},"content":"                    msg \u003d taskList.size() \u003d\u003d 1 ? msg + \" task in the list\" : msg + \" tasks in the list.\";","lastModifiedDate":"2021-08-16"},{"lineNumber":195,"author":{"gitId":"luminousleek"},"content":"                } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2021-08-13"},{"lineNumber":196,"author":{"gitId":"luminousleek"},"content":"                    // input validation","lastModifiedDate":"2021-08-16"},{"lineNumber":197,"author":{"gitId":"luminousleek"},"content":"                    if (input.length() \u003c 9 || input.substring(9).isBlank()) throw new DukeException(\"the description of the deadline cannot be empty!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":198,"author":{"gitId":"luminousleek"},"content":"                    if (!input.contains(\"/by\")) throw new DukeException(\"you are missing the /by keyword\");","lastModifiedDate":"2021-08-16"},{"lineNumber":199,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":200,"author":{"gitId":"luminousleek"},"content":"                    Deadline newDeadline \u003d new Deadline(input.substring(9));","lastModifiedDate":"2021-08-16"},{"lineNumber":201,"author":{"gitId":"luminousleek"},"content":"                    taskList.add(newDeadline);","lastModifiedDate":"2021-08-16"},{"lineNumber":202,"author":{"gitId":"luminousleek"},"content":"                    saveToFile(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":203,"author":{"gitId":"luminousleek"},"content":"                    msg \u003d \"Got it. I\u0027ve added this task:\\n  \" + newDeadline + \"\\nNow you have \" + taskList.size();","lastModifiedDate":"2021-08-16"},{"lineNumber":204,"author":{"gitId":"luminousleek"},"content":"                    msg \u003d taskList.size() \u003d\u003d 1 ? msg + \" task in the list\" : msg + \" tasks in the list.\";","lastModifiedDate":"2021-08-16"},{"lineNumber":205,"author":{"gitId":"luminousleek"},"content":"                } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2021-08-13"},{"lineNumber":206,"author":{"gitId":"luminousleek"},"content":"                    // input validation","lastModifiedDate":"2021-08-16"},{"lineNumber":207,"author":{"gitId":"luminousleek"},"content":"                    if (input.length() \u003c 6 || input.substring(6).isBlank()) throw new DukeException(\"the description of the event cannot be empty!\");","lastModifiedDate":"2021-08-16"},{"lineNumber":208,"author":{"gitId":"luminousleek"},"content":"                    if (!input.contains(\"/at\")) throw new DukeException(\"you are missing the /at keyword\");","lastModifiedDate":"2021-08-16"},{"lineNumber":209,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":210,"author":{"gitId":"luminousleek"},"content":"                    Event newEvent \u003d new Event(input.substring(6));","lastModifiedDate":"2021-08-16"},{"lineNumber":211,"author":{"gitId":"luminousleek"},"content":"                    taskList.add(newEvent);","lastModifiedDate":"2021-08-16"},{"lineNumber":212,"author":{"gitId":"luminousleek"},"content":"                    saveToFile(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":213,"author":{"gitId":"luminousleek"},"content":"                    msg \u003d \"Got it. I\u0027ve added this task:\\n  \" + newEvent + \"\\nNow you have \" + taskList.size();","lastModifiedDate":"2021-08-16"},{"lineNumber":214,"author":{"gitId":"luminousleek"},"content":"                    msg \u003d taskList.size() \u003d\u003d 1 ? msg + \" task in the list\" : msg + \" tasks in the list.\";","lastModifiedDate":"2021-08-16"},{"lineNumber":215,"author":{"gitId":"luminousleek"},"content":"                } else if (input.startsWith(\"remove \")) {","lastModifiedDate":"2021-08-16"},{"lineNumber":216,"author":{"gitId":"luminousleek"},"content":"                    // input validation","lastModifiedDate":"2021-08-16"},{"lineNumber":217,"author":{"gitId":"luminousleek"},"content":"                    int num \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2021-08-16"},{"lineNumber":218,"author":{"gitId":"luminousleek"},"content":"                    if (num \u003c 1 || num \u003e taskList.size()) throw new DukeException(\"you typed an invalid number: \" + num);","lastModifiedDate":"2021-08-16"},{"lineNumber":219,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":220,"author":{"gitId":"luminousleek"},"content":"                    Task removed \u003d taskList.remove(num - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":221,"author":{"gitId":"luminousleek"},"content":"                    saveToFile(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":222,"author":{"gitId":"luminousleek"},"content":"                    msg \u003d \"Noted. I\u0027ve removed this task:\\n  \" + removed + \"\\nNow you have \" + taskList.size();","lastModifiedDate":"2021-08-16"},{"lineNumber":223,"author":{"gitId":"luminousleek"},"content":"                    msg \u003d taskList.size() \u003d\u003d 1 ? msg + \" task in the list\" : msg + \" tasks in the list.\";","lastModifiedDate":"2021-08-16"},{"lineNumber":224,"author":{"gitId":"luminousleek"},"content":"                } else if (input.equals(\"clear\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":225,"author":{"gitId":"luminousleek"},"content":"                    // clears taskList and saves the previous one to prevList","lastModifiedDate":"2021-08-23"},{"lineNumber":226,"author":{"gitId":"luminousleek"},"content":"                    prevList \u003d new ArrayList\u003c\u003e(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":227,"author":{"gitId":"luminousleek"},"content":"                    taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":228,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":229,"author":{"gitId":"luminousleek"},"content":"                    saveToFile(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":230,"author":{"gitId":"luminousleek"},"content":"                    msg \u003d \"All entries in the list of tasks have been removed. To undo, type restore\";","lastModifiedDate":"2021-08-23"},{"lineNumber":231,"author":{"gitId":"luminousleek"},"content":"                } else if (input.equals(\"restore\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":232,"author":{"gitId":"luminousleek"},"content":"                    taskList \u003d new ArrayList\u003c\u003e(prevList);","lastModifiedDate":"2021-08-23"},{"lineNumber":233,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":234,"author":{"gitId":"luminousleek"},"content":"                    saveToFile(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":235,"author":{"gitId":"luminousleek"},"content":"                    msg \u003d \"This task list was restored:\\n\" + listTaskArr(taskList);","lastModifiedDate":"2021-08-23"},{"lineNumber":236,"author":{"gitId":"luminousleek"},"content":"                } else {","lastModifiedDate":"2021-08-13"},{"lineNumber":237,"author":{"gitId":"luminousleek"},"content":"                    throw new DukeException(\"you typed in something i don\u0027t recognise\");","lastModifiedDate":"2021-08-16"},{"lineNumber":238,"author":{"gitId":"luminousleek"},"content":"                }","lastModifiedDate":"2021-08-13"},{"lineNumber":239,"author":{"gitId":"luminousleek"},"content":"                wrapPrint(msg);","lastModifiedDate":"2021-08-13"},{"lineNumber":240,"author":{"gitId":"luminousleek"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":241,"author":{"gitId":"luminousleek"},"content":"                wrapPrint(\"oh no! you typed in an invalid input! \" + e.getMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":242,"author":{"gitId":"luminousleek"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":243,"author":{"gitId":"luminousleek"},"content":"                wrapPrint(e.getMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":244,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":245,"author":{"gitId":"luminousleek"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2021-08-13"},{"lineNumber":246,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":247,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":248,"author":{"gitId":"luminousleek"},"content":"        // Exit","lastModifiedDate":"2021-08-13"},{"lineNumber":249,"author":{"gitId":"luminousleek"},"content":"        wrapPrint(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-13"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"luminousleek":247,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"        super(\"oh no! \" + msg);","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"luminousleek":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"    String timeString;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"    LocalDate timeDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"    public Event(String input) {","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"        super(input.substring(0, input.indexOf(\"/at \") - 1));","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"        String time \u003d input.substring(input.indexOf(\"/at \") + 4);","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"            this.timeDate \u003d LocalDate.parse(time);","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"            this.timeString \u003d time;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    public Event(String name, String time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"        super(name);","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"            this.timeDate \u003d LocalDate.parse(time);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"            this.timeString \u003d time;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"        String msg \u003d \"[E]\" + super.toString() + \" (at: \";","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"        if (timeString \u003d\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"            msg \u003d msg + timeDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"            msg \u003d msg + timeString + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"        return msg;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"    public String printToFile() {","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"        String msg \u003d \"E | \" + (this.isDone ? 1 : 0) + \" | \" + this.name + \" | \";","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"        if (timeString \u003d\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"            msg \u003d msg + timeDate.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"            msg \u003d msg + timeString;","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"        return msg;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"luminousleek":49}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"    String name;","lastModifiedDate":"2021-08-13"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"    boolean isDone;","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"     * Constructor for a Task object","lastModifiedDate":"2021-08-13"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"     * @param name the name of the task","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"     * Returns a string representing the task","lastModifiedDate":"2021-08-13"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"     * @return a string representing the task","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"            return \"[X] \" + this.name;","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"        return \"[ ] \" + this.name;","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"     * Marks a task as done","lastModifiedDate":"2021-08-13"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-13"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-13"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"    abstract public String printToFile();","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"luminousleek":37}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-13"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"        super(name);","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    public String printToFile() {","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"        return \"T | \" + (this.isDone ? 1 : 0) + \" | \" + this.name;","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"luminousleek":15}},{"path":"text-ui-test/data/taskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"T | 0 | a","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"T | 0 | b","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"T | 0 | b","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"D | 0 | c | 2021-11-13","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"E | 0 | d | tomorrow","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"luminousleek":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"clear","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"todo a","lastModifiedDate":"2021-08-13"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"todo b","lastModifiedDate":"2021-08-13"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"deadline c /by today","lastModifiedDate":"2021-08-13"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"event d /at 2021-09-12","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"done 2","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"deadline e","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"done abc","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"done 10","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"deadline f /by 2021-03-11","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"done 4","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"remove 3","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"remove 3","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"remove 6","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"remove aaa","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"restore","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"bye","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"luminousleek":22}}]
