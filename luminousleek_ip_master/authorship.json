[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"luminousleek":15,"-":46}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"import java.util.concurrent.Executors;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"import java.util.concurrent.ScheduledExecutorService;","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":" * The Duke program is an application that can store the Tasks you need to do!","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"public class Duke extends Application {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"    private Scene scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"     * Constructor for a Duke object.","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"     * @param filePath the path to store the taskList.txt file in.","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"            ui.wrapPrint(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"     * Constructor for a Duke object with the default filePath","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"    public Duke() {","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"        this.storage \u003d new Storage(\"data/taskList.txt\");","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"            this.tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"            ui.wrapPrint(e.getMessage());","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"     * The method that runs the Duke application.","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"    public void run() {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"luminousleek"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"luminousleek"},"content":"            try {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"luminousleek"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"                ui.printMsg(c.execute(tasks, ui, storage));","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"                ui.printError(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"            } finally {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"luminousleek"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":89,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":90,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":91,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"luminousleek"},"content":"     * GUI for Duke, using JavaFX","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"luminousleek"},"content":"     * @param stage the Stage to show Scenes on","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"luminousleek"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"luminousleek"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"luminousleek"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"luminousleek"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"luminousleek"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"luminousleek"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"luminousleek"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"luminousleek"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"luminousleek"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"luminousleek"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"luminousleek"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-08-30"},{"lineNumber":112,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":113,"author":{"gitId":"luminousleek"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-08-30"},{"lineNumber":114,"author":{"gitId":"luminousleek"},"content":"        stage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":115,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":116,"author":{"gitId":"luminousleek"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2021-08-30"},{"lineNumber":117,"author":{"gitId":"luminousleek"},"content":"        stage.setTitle(\"Bob\");","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"luminousleek"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-08-30"},{"lineNumber":119,"author":{"gitId":"luminousleek"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"luminousleek"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":122,"author":{"gitId":"luminousleek"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":123,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":124,"author":{"gitId":"luminousleek"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2021-08-30"},{"lineNumber":125,"author":{"gitId":"luminousleek"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-08-30"},{"lineNumber":126,"author":{"gitId":"luminousleek"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-08-30"},{"lineNumber":127,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":128,"author":{"gitId":"luminousleek"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":129,"author":{"gitId":"luminousleek"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-08-30"},{"lineNumber":130,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":131,"author":{"gitId":"luminousleek"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-08-30"},{"lineNumber":132,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":133,"author":{"gitId":"luminousleek"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":134,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":135,"author":{"gitId":"luminousleek"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":136,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":137,"author":{"gitId":"luminousleek"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":138,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":139,"author":{"gitId":"luminousleek"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":140,"author":{"gitId":"luminousleek"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":141,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":142,"author":{"gitId":"luminousleek"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":143,"author":{"gitId":"luminousleek"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2021-08-30"},{"lineNumber":144,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":145,"author":{"gitId":"luminousleek"},"content":"        // Show welcome message","lastModifiedDate":"2021-08-30"},{"lineNumber":146,"author":{"gitId":"luminousleek"},"content":"        dialogContainer.getChildren().add(ui.showWelcomeGui());","lastModifiedDate":"2021-08-30"},{"lineNumber":147,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":148,"author":{"gitId":"luminousleek"},"content":"        // Handle when Send button is pressed","lastModifiedDate":"2021-08-30"},{"lineNumber":149,"author":{"gitId":"luminousleek"},"content":"        sendButton.setOnAction(action -\u003e {","lastModifiedDate":"2021-08-30"},{"lineNumber":150,"author":{"gitId":"luminousleek"},"content":"            handleInput(dialogContainer, userInput, scrollPane);","lastModifiedDate":"2021-08-30"},{"lineNumber":151,"author":{"gitId":"luminousleek"},"content":"        });","lastModifiedDate":"2021-08-30"},{"lineNumber":152,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":153,"author":{"gitId":"luminousleek"},"content":"        // Handle when enter key is pressed in userInput","lastModifiedDate":"2021-08-30"},{"lineNumber":154,"author":{"gitId":"luminousleek"},"content":"        userInput.setOnKeyPressed(event -\u003e {","lastModifiedDate":"2021-08-30"},{"lineNumber":155,"author":{"gitId":"luminousleek"},"content":"            if (event.getCode().equals(KeyCode.ENTER)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":156,"author":{"gitId":"luminousleek"},"content":"                handleInput(dialogContainer, userInput, scrollPane);","lastModifiedDate":"2021-08-30"},{"lineNumber":157,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":158,"author":{"gitId":"luminousleek"},"content":"        });","lastModifiedDate":"2021-08-30"},{"lineNumber":159,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":160,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":161,"author":{"gitId":"luminousleek"},"content":"    private void handleInput(VBox container, TextField inputField, ScrollPane scrollPane) {","lastModifiedDate":"2021-08-30"},{"lineNumber":162,"author":{"gitId":"luminousleek"},"content":"        Label outputLabel \u003d ui.errorMsgLabel(\"something went wrong\");","lastModifiedDate":"2021-08-30"},{"lineNumber":163,"author":{"gitId":"luminousleek"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-30"},{"lineNumber":164,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":165,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":166,"author":{"gitId":"luminousleek"},"content":"            // echo user input","lastModifiedDate":"2021-08-30"},{"lineNumber":167,"author":{"gitId":"luminousleek"},"content":"            String fullCommand \u003d inputField.getText();","lastModifiedDate":"2021-08-30"},{"lineNumber":168,"author":{"gitId":"luminousleek"},"content":"            Label inputLabel \u003d ui.inputMsgLabel(fullCommand);","lastModifiedDate":"2021-08-30"},{"lineNumber":169,"author":{"gitId":"luminousleek"},"content":"            inputLabel.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2021-08-30"},{"lineNumber":170,"author":{"gitId":"luminousleek"},"content":"            container.getChildren().add(inputLabel);","lastModifiedDate":"2021-08-30"},{"lineNumber":171,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":172,"author":{"gitId":"luminousleek"},"content":"            // generate and show program output","lastModifiedDate":"2021-08-30"},{"lineNumber":173,"author":{"gitId":"luminousleek"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-30"},{"lineNumber":174,"author":{"gitId":"luminousleek"},"content":"            outputLabel \u003d ui.outputMsgLabel(c.execute(tasks, ui, storage));","lastModifiedDate":"2021-08-30"},{"lineNumber":175,"author":{"gitId":"luminousleek"},"content":"            isExit \u003d c.isExit();","lastModifiedDate":"2021-08-30"},{"lineNumber":176,"author":{"gitId":"luminousleek"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":177,"author":{"gitId":"luminousleek"},"content":"            outputLabel \u003d ui.errorMsgLabel(e.getMessage());","lastModifiedDate":"2021-08-30"},{"lineNumber":178,"author":{"gitId":"luminousleek"},"content":"        } finally {","lastModifiedDate":"2021-08-30"},{"lineNumber":179,"author":{"gitId":"luminousleek"},"content":"            container.getChildren().add(outputLabel);","lastModifiedDate":"2021-08-30"},{"lineNumber":180,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":181,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":182,"author":{"gitId":"luminousleek"},"content":"        // cleaning up and scrolling down","lastModifiedDate":"2021-08-30"},{"lineNumber":183,"author":{"gitId":"luminousleek"},"content":"        inputField.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":184,"author":{"gitId":"luminousleek"},"content":"        scrollPane.vvalueProperty().bind(container.heightProperty());","lastModifiedDate":"2021-08-30"},{"lineNumber":185,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":186,"author":{"gitId":"luminousleek"},"content":"        // if exit, wait 1 second and close program","lastModifiedDate":"2021-08-30"},{"lineNumber":187,"author":{"gitId":"luminousleek"},"content":"        if (isExit) {","lastModifiedDate":"2021-08-30"},{"lineNumber":188,"author":{"gitId":"luminousleek"},"content":"            ScheduledExecutorService executorService \u003d Executors.newSingleThreadScheduledExecutor();","lastModifiedDate":"2021-08-30"},{"lineNumber":189,"author":{"gitId":"luminousleek"},"content":"            executorService.schedule(Platform::exit, 1, TimeUnit.SECONDS);","lastModifiedDate":"2021-08-30"},{"lineNumber":190,"author":{"gitId":"luminousleek"},"content":"            executorService.schedule(() -\u003e {","lastModifiedDate":"2021-08-30"},{"lineNumber":191,"author":{"gitId":"luminousleek"},"content":"                System.exit(0);","lastModifiedDate":"2021-08-30"},{"lineNumber":192,"author":{"gitId":"luminousleek"},"content":"            }, 1, TimeUnit.SECONDS);","lastModifiedDate":"2021-08-30"},{"lineNumber":193,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":194,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":195,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":196,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"luminousleek"},"content":"     * The main method that makes use of the run method.","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"luminousleek"},"content":"     * @param args Unused.","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"luminousleek"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"luminousleek":201,"-":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"public class Launcher {","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"luminousleek":10}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":" * The DukeException encapsulates all Exceptions that are thrown when using Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"        super(msg);","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"luminousleek":11}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import duke.command.ClearCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"import duke.command.RemoveCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"import duke.command.RestoreCommand;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"import duke.task.TaskTypes;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":" * The Parser class encapsulates methods related to parsing user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"     * Parses a given string representing user input and returns the related Command.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"     * Throws a DukeException when an invalid command is received.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"     * @param str The given user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"     * @return a Command corresponding to the user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"     * @throws DukeException when the given user input is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    public static Command parse(String str) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"        String[] strArr \u003d str.split(\"\\\\s\", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"        switch (strArr[0]) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"            if (strArr.length \u003c 2 || strArr[1].isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"                throw new DukeException(\"you are missing arguments for the add command!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"            return prepareAdd(strArr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"        case DoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"            if (strArr.length \u003c 2 || strArr[1].isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"                throw new DukeException(\"you did not specify a task number to mark done!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"            return prepareDone(strArr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"            if (strArr.length \u003e 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"                throw new DukeException(\"you typed in something i cannot recognise!\\ndid you mean to type list?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"        case RemoveCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"            if (strArr.length \u003c 2 || strArr[1].isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"                throw new DukeException(\"you did not specify a task number to remove!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"            return prepareRemove(strArr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"            if (strArr.length \u003e 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"                throw new DukeException(\"you typed in something i cannot recognise!\\ndid you mean to type clear?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"            return new ClearCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"        case RestoreCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"            if (strArr.length \u003e 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"                throw new DukeException(\"you typed in something i cannot recognise!\\ndid you mean to type restore?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"            return new RestoreCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"            if (strArr.length \u003e 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"                throw new DukeException(\"you typed in something i cannot recognise!\\ndid you mean to type bye?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"            if (strArr.length \u003c 2 || strArr[1].isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"                throw new DukeException(\"you did not specify a keyword to find!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"            return new FindCommand(strArr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"            throw new DukeException(\"you typed in something i cannot recognise!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"luminousleek"},"content":"    private static Command prepareAdd(String args) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"luminousleek"},"content":"        String[] argArr \u003d args.split(\"\\\\s\", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"        if (argArr.length \u003c 2 || argArr[1].isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"            throw new DukeException(\"the description of a task cannot be empty!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"        String taskArgs \u003d argArr[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"        switch (argArr[0]) {","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"luminousleek"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"luminousleek"},"content":"            return new AddCommand(TaskTypes.TODO, taskArgs);","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"luminousleek"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"luminousleek"},"content":"            if (!taskArgs.contains(\"/by\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"luminousleek"},"content":"                throw new DukeException(\"you are missing the /by keyword\");","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"luminousleek"},"content":"            return new AddCommand(TaskTypes.DEADLINE, taskArgs);","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"luminousleek"},"content":"        case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"luminousleek"},"content":"            if (!taskArgs.contains(\"/at\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"luminousleek"},"content":"                throw new DukeException(\"you are missing the /at keyword\");","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"luminousleek"},"content":"            return new AddCommand(TaskTypes.EVENT, taskArgs);","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"luminousleek"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"luminousleek"},"content":"            throw new DukeException(\"you typed in a task type i cannot recognise!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"luminousleek"},"content":"    private static Command prepareDone(String args) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"luminousleek"},"content":"        int num \u003d parseNum(args);","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"luminousleek"},"content":"        return new DoneCommand(num - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"luminousleek"},"content":"    private static Command prepareRemove(String args) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"luminousleek"},"content":"        int num \u003d parseNum(args);","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"luminousleek"},"content":"        return new RemoveCommand(num - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"luminousleek"},"content":"    private static int parseNum(String args) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"luminousleek"},"content":"            int num \u003d Integer.parseInt(args);","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"luminousleek"},"content":"            if (num \u003c 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"luminousleek"},"content":"                throw new DukeException(\"you typed an invalid number: \" + num);","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"luminousleek"},"content":"            return num;","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"luminousleek"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"luminousleek"},"content":"            throw new DukeException(\"you typed in an invalid input! \" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luminousleek":124}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"import java.util.ListIterator;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":" * The Storage class encapsulates methods related to saving and loading","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":" * into a text file containing the list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"public class Storage {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    private String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"     * Saves the given ArrayList of Tasks into data/taskList.txt.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"     * Creates a new directory and file if they do not exist.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"     * @param lst the given ArrayList of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"     * @throws DukeException when there is a problem with creating directories or files.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"    public void save(TaskList lst) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"        // directory and file names","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"        Path directory \u003d Paths.get(\"data\");","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"        Path taskFile \u003d directory.resolve(\"taskList.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"        // to create string that\u0027s to be saved in the file","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"        ListIterator\u003cTask\u003e iter \u003d lst.makeIterator();","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"            // check if directory exists, if it does not then create it","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"            if (Files.notExists(directory)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"                Files.createDirectories(directory);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"            // check if file exists, if it does not then create it","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"            if (Files.notExists(taskFile)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"                Files.createFile(taskFile);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"            // create string of tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"            while (iter.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"                res.append(iter.next().printToFile());","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"                if (iter.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"                    res.append(\"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"            // write string of tasks into file","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"            Files.writeString(taskFile, res.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"     * Reads the taskList.txt file and returns an ArrayList of Tasks based on it.","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"     * Throws a DukeException if the file does not exist.","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"     * @return An ArrayList containing the tasks in the text file.","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"luminousleek"},"content":"     * @throws DukeException when the file does not exist.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"luminousleek"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"        // directory and file names","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"        Path taskFile \u003d Paths.get(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"        // check if directory and file exist","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"        // if not return an empty ArrayList\u003cTask\u003e","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"luminousleek"},"content":"        if (Files.notExists(taskFile)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"luminousleek"},"content":"            throw new DukeException(\"text file given does not exist!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"luminousleek"},"content":"        // parse each line","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"luminousleek"},"content":"            Files.lines(taskFile).forEach(line -\u003e {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"luminousleek"},"content":"                Task newTask \u003d parseInput(line);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"luminousleek"},"content":"                if (newTask !\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"luminousleek"},"content":"                        result.add(newTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"luminousleek"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"luminousleek"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"luminousleek"},"content":"            );","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"luminousleek"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"luminousleek"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"luminousleek"},"content":"        return result;","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"luminousleek"},"content":"     * Parses a given string and returns a Task based on that string.","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"luminousleek"},"content":"     * @param str the given string to parse.","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"luminousleek"},"content":"     * @return The Task based on the string. Returns null if the string is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"luminousleek"},"content":"    private static Task parseInput(String str) {","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"luminousleek"},"content":"        String[] strArr \u003d str.split(\" \\\\| \");","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"luminousleek"},"content":"        Task newTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"luminousleek"},"content":"        // create new task according to input","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"luminousleek"},"content":"        switch (strArr[0]) {","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"luminousleek"},"content":"        case \"T\":","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"luminousleek"},"content":"            newTask \u003d new ToDo(strArr[2]);","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"luminousleek"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"luminousleek"},"content":"        case \"D\":","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"luminousleek"},"content":"            newTask \u003d new Deadline(strArr[2], strArr[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"luminousleek"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"luminousleek"},"content":"        case \"E\":","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"luminousleek"},"content":"            newTask \u003d new Event(strArr[2], strArr[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"luminousleek"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"luminousleek"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"luminousleek"},"content":"            newTask \u003d null;","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"luminousleek"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"luminousleek"},"content":"        return newTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luminousleek":134}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"import javafx.scene.control.ContentDisplay;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":" * The Ui class encapsulates all the methods for user input and printing to the terminal.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"public class Ui {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    private static final Insets OUTPUT_MSG_INSETS \u003d new Insets(10, 100, 0, 10);","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    private static final Insets INPUT_MSG_INSETS \u003d new Insets(10, 10, 0, 100);","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    private static final String WELCOME_MSG \u003d \"Hello! I\u0027m Bob\\nWhat can I do for you?\";","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    private static final String BOB_IMG_PATH \u003d \"resources/images/bobthebuilder.jpg\";","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    private static final String PERSON_IMG_PATH \u003d \"resources/images/personicon.png\";","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    private Image bobImage;","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"    private Image personImage;","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"     * Constructor for a Ui object.","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"     * Tries to load the images of Bob the Builder and the person icon.","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"     * If images are not found, set the Images to null.","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"            FileInputStream bobIconInput \u003d new FileInputStream(BOB_IMG_PATH);","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"            FileInputStream personIconInput \u003d new FileInputStream(PERSON_IMG_PATH);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"            bobImage \u003d new Image(bobIconInput);","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"            personImage \u003d new Image(personIconInput);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"            bobImage \u003d null;","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"            personImage \u003d null;","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"     * Wraps a given message above and below with lines and prints it.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"     * @param msg the message to wrap and print.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"    public void wrapPrint(String msg) {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"        showLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"        System.out.println(msg);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"        showLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"     * Prints the divider line in the terminal.","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"     * Prints a given String in the terminal.","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"     * @param msg the given String.","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"    public void printMsg(String msg) {","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"        System.out.println(msg);","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"luminousleek"},"content":"     * Reads the user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"luminousleek"},"content":"     * @return a String representing the input of the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"    public String readCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"     * Prints a given error message, prefixing it with \"oh no!\"","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"luminousleek"},"content":"     * @param msg the given error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"luminousleek"},"content":"    public void printError(String msg) {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"luminousleek"},"content":"        System.out.println(\"oh no! \" + msg);","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"luminousleek"},"content":"     * Prints the welcome message on the terminal.","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"luminousleek"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"luminousleek"},"content":"        wrapPrint(WELCOME_MSG);","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"luminousleek"},"content":"     * Creates a Label for a message in the GUI","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"luminousleek"},"content":"     * @param msg the given message for the label","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"luminousleek"},"content":"     * @return a label representing the message in the GUI.","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"luminousleek"},"content":"    private Label createMessageLabel(String msg) {","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"luminousleek"},"content":"        Label lbl \u003d new Label(msg);","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"luminousleek"},"content":"        lbl.setMaxWidth(385);","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"luminousleek"},"content":"        lbl.setPrefWidth(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"luminousleek"},"content":"        lbl.setWrapText(true);","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"luminousleek"},"content":"        return lbl;","lastModifiedDate":"2021-08-30"},{"lineNumber":112,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":113,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":114,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":115,"author":{"gitId":"luminousleek"},"content":"     * Creates a Label representing user input","lastModifiedDate":"2021-08-30"},{"lineNumber":116,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":117,"author":{"gitId":"luminousleek"},"content":"     * @param msg the text of the Label","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"luminousleek"},"content":"     * @return a Label with the user icon and input","lastModifiedDate":"2021-08-30"},{"lineNumber":119,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"luminousleek"},"content":"    public Label inputMsgLabel(String msg) {","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"luminousleek"},"content":"        Label lbl \u003d createMessageLabel(msg);","lastModifiedDate":"2021-08-30"},{"lineNumber":122,"author":{"gitId":"luminousleek"},"content":"        VBox.setMargin(lbl, INPUT_MSG_INSETS);","lastModifiedDate":"2021-08-30"},{"lineNumber":123,"author":{"gitId":"luminousleek"},"content":"        if (personImage !\u003d null) {","lastModifiedDate":"2021-08-30"},{"lineNumber":124,"author":{"gitId":"luminousleek"},"content":"            ImageView personView \u003d new ImageView(personImage);","lastModifiedDate":"2021-08-30"},{"lineNumber":125,"author":{"gitId":"luminousleek"},"content":"            lbl.setGraphic(personView);","lastModifiedDate":"2021-08-30"},{"lineNumber":126,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":127,"author":{"gitId":"luminousleek"},"content":"        lbl.setContentDisplay(ContentDisplay.RIGHT);","lastModifiedDate":"2021-08-30"},{"lineNumber":128,"author":{"gitId":"luminousleek"},"content":"        return lbl;","lastModifiedDate":"2021-08-30"},{"lineNumber":129,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":130,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":131,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":132,"author":{"gitId":"luminousleek"},"content":"     * Creates a Label representing program output","lastModifiedDate":"2021-08-30"},{"lineNumber":133,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":134,"author":{"gitId":"luminousleek"},"content":"     * @param msg the output of running Duke","lastModifiedDate":"2021-08-30"},{"lineNumber":135,"author":{"gitId":"luminousleek"},"content":"     * @return a Label with program output and the Bob the Builder image","lastModifiedDate":"2021-08-30"},{"lineNumber":136,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":137,"author":{"gitId":"luminousleek"},"content":"    public Label outputMsgLabel(String msg) {","lastModifiedDate":"2021-08-30"},{"lineNumber":138,"author":{"gitId":"luminousleek"},"content":"        Label lbl \u003d createMessageLabel(msg);","lastModifiedDate":"2021-08-30"},{"lineNumber":139,"author":{"gitId":"luminousleek"},"content":"        VBox.setMargin(lbl, OUTPUT_MSG_INSETS);","lastModifiedDate":"2021-08-30"},{"lineNumber":140,"author":{"gitId":"luminousleek"},"content":"        if (bobImage !\u003d null) {","lastModifiedDate":"2021-08-30"},{"lineNumber":141,"author":{"gitId":"luminousleek"},"content":"            ImageView bobView \u003d new ImageView(bobImage);","lastModifiedDate":"2021-08-30"},{"lineNumber":142,"author":{"gitId":"luminousleek"},"content":"            lbl.setGraphic(bobView);","lastModifiedDate":"2021-08-30"},{"lineNumber":143,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":144,"author":{"gitId":"luminousleek"},"content":"        return lbl;","lastModifiedDate":"2021-08-30"},{"lineNumber":145,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":146,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":147,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":148,"author":{"gitId":"luminousleek"},"content":"     * Creates a Label representing a program error","lastModifiedDate":"2021-08-30"},{"lineNumber":149,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":150,"author":{"gitId":"luminousleek"},"content":"     * @param msg the message of the error","lastModifiedDate":"2021-08-30"},{"lineNumber":151,"author":{"gitId":"luminousleek"},"content":"     * @return a Label with the error message, with no icon","lastModifiedDate":"2021-08-30"},{"lineNumber":152,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":153,"author":{"gitId":"luminousleek"},"content":"    public Label errorMsgLabel(String msg) {","lastModifiedDate":"2021-08-30"},{"lineNumber":154,"author":{"gitId":"luminousleek"},"content":"        Label lbl \u003d createMessageLabel(\"oh no! \" + msg);","lastModifiedDate":"2021-08-30"},{"lineNumber":155,"author":{"gitId":"luminousleek"},"content":"        VBox.setMargin(lbl, OUTPUT_MSG_INSETS);","lastModifiedDate":"2021-08-30"},{"lineNumber":156,"author":{"gitId":"luminousleek"},"content":"        return lbl;","lastModifiedDate":"2021-08-30"},{"lineNumber":157,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":158,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":159,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":160,"author":{"gitId":"luminousleek"},"content":"     * Returns a JavaFX Label with the welcome message","lastModifiedDate":"2021-08-30"},{"lineNumber":161,"author":{"gitId":"luminousleek"},"content":"     * @return a JavaFX Label with the welcome message","lastModifiedDate":"2021-08-30"},{"lineNumber":162,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":163,"author":{"gitId":"luminousleek"},"content":"    public Label showWelcomeGui() {","lastModifiedDate":"2021-08-30"},{"lineNumber":164,"author":{"gitId":"luminousleek"},"content":"        return outputMsgLabel(WELCOME_MSG);","lastModifiedDate":"2021-08-30"},{"lineNumber":165,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luminousleek":166}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"import duke.task.TaskTypes;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":" * The AddCommand encapsulates a Command that adds Tasks to a TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    private TaskTypes type;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    private String args;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"     * Constructor of an AddCommand.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"     * @param type the type of the Task to add.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"     * @param args the arguments to create the Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    public AddCommand(TaskTypes type, String args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"        this.args \u003d args;","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"     * Will add the Task corresponding to this AddCommand to the given TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"     * Will also store the updated TaskList to taskList.txt.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"     * @param tasks the given TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"     * @param ui the given Ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"     * @param storage the given Storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"     * @return the string for the Ui to print.","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"     * @throws DukeException when a Task cannot be created.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"        Task newTask;","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"        switch (type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"        case TODO:","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"            newTask \u003d new ToDo(args);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"            newTask \u003d new Deadline(args);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"        case EVENT:","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"            newTask \u003d new Event(args);","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"            throw new DukeException(\"something went wrong with adding a task!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"        return generateMsg(newTask, tasks);","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"    private String generateMsg(Task tsk, TaskList tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"        String msg \u003d \"Got it. I\u0027ve added this task:\\n  \" + tsk + \"\\nNow you have \" + tasks.numTasks();","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"        msg \u003d tasks.numTasks() \u003d\u003d 1 ? msg + \" task in the list\" : msg + \" tasks in the list.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"        return msg;","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luminousleek":72}},{"path":"src/main/java/duke/command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":" * The ClearCommand is the Command given to clear the TaskList of its tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    public ClearCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"     * Clears the given TaskList of its tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"     * Will also save the empty TaskList to taskList.txt.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"     * @param tasks the given TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"     * @param ui the given Ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"     * @param storage the given Storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"     * @return the string for the Ui to print.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"     * @throws DukeException when something goes wrong with the saving of the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"        tasks.clear();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"        return \"All entries in the list of tasks have been removed. To undo, type restore\";","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luminousleek":35}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":" * The Command class encapsulates a command to be executed by Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":" * Each Command has a unique command word associated with it.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"     * Executes the Command based on a given TaskList, Ui and Storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"     * @param tasks the given TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"     * @param ui the given Ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"     * @param storage the given Storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"     * @return the string for the Ui to print.","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"     * @throws DukeException when the Command cannot be executed.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"     * Returns true if the Command is the ExitCommand, false otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"     * @return true if the Command is the ExitCommand, false otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luminousleek":33}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":" * The DoneCommand is given when a Task needs to be marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    private int taskNum;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"    public DoneCommand(int taskNum) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"     * Marks the specified Task corresponding to the given index in the TaskList as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"     * Also saves the updated TaskList to taskList.txt","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"     * @param tasks the given TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"     * @param ui the given Ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"     * @param storage the given Storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"     * @return the string for the Ui to print.","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"     * @throws DukeException when the index given is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"        if (taskNum \u003e\u003d tasks.numTasks()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"            throw new DukeException(\"you typed an invalid number: \" + (taskNum + 1));","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"        tasks.markTask(taskNum);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + tasks.getTask(taskNum);","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luminousleek":39}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":" * The ExitCommand is given when the user wants to exit Duke.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    public static final String EXIT_MSG \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"     * Prints the Exit Message.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"     * @param tasks the given TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"     * @param ui the given Ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"     * @param storage the given Storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"     * @return the string for the Ui to print.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"     * @throws DukeException shouldn\u0027t happen.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"        return EXIT_MSG;","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"     * Returns true since this is the exit Command.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"     * @return true.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luminousleek":43}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"    private String key;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    public FindCommand(String key) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"        this.key \u003d key;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"        return tasks.findTasks(key);","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luminousleek":21}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":" * The ListCommand is used when displaying all the Tasks of the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"     * Prints all the tasks in the given TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"     * If there are no tasks in the TaskList, will print a message saying so.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"     * @param tasks the given TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"     * @param ui the given Ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"     * @param storage the given Storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"     * @return the string for the Ui to print.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"     * @throws DukeException shouldn\u0027t happen.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"        String msg \u003d tasks.listTaskArr();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"        if (msg.isBlank()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"            msg \u003d \"No tasks in the list!\";","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"        return msg;","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luminousleek":38}},{"path":"src/main/java/duke/command/RemoveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":" * The RemoveCommand is given when the user wants to remove a Task from the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    public static final String COMMAND_WORD \u003d \"remove\";","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    private int taskNum;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    public RemoveCommand(int taskNum) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"        this.taskNum \u003d taskNum;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"     * Removes the Task corresponding to a given index from the given TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"     * @param tasks the given TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"     * @param ui the given Ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"     * @param storage the given Storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"     * @return the string for the Ui to print.","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"     * @throws DukeException when the given index is invalid.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"        if (taskNum \u003e\u003d tasks.numTasks()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"            throw new DukeException(\"you typed an invalid number: \" + (taskNum + 1));","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"        String msg;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"        Task removed \u003d tasks.remove(taskNum);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"        msg \u003d \"Noted. I\u0027ve removed this task:\\n  \" + removed + \"\\nNow you have \" + tasks.numTasks();","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"        msg \u003d tasks.numTasks() \u003d\u003d 1 ? msg + \" task in the list\" : msg + \" tasks in the list.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"        return msg;","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luminousleek":43}},{"path":"src/main/java/duke/command/RestoreCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":" * The RestoreCommand is given when the user wants to revert to a previously saved TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"public class RestoreCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    public static final String COMMAND_WORD \u003d \"restore\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    public RestoreCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"     * Restores the TaskList to a previously saved one.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"     * Also saves the restored TaskList in taskList.txt.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"     * @param tasks the given TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"     * @param ui the given Ui.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"     * @param storage the given Storage.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"     * @return the string for the Ui to print.","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"     * @throws DukeException when something goes wrong in the saving process.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"        tasks.restore();","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"        return \"This task list was restored:\\n\" + tasks.listTaskArr();","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luminousleek":35}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":" * The Deadline class encapsulates a Task to be done by a given deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    private String dlineString;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    private LocalDate dlineDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"     * Constructor for a Deadline Task given a String with the /by keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"     * @param input the given String to parse","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    public Deadline(String input) {","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"        super(input.substring(0, input.indexOf(\"/by \") - 1));","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"        String dline \u003d input.substring(input.indexOf(\"/by \") + 4);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"            this.dlineDate \u003d LocalDate.parse(dline);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"            this.dlineString \u003d dline;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"     * Overloaded constructor for a Deadline task.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"     * Used only when reading from taskList.txt.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"     * @param name the given name of the Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"     * @param dline the given deadline of the Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"    public Deadline(String name, String dline) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"        super(name);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"            this.dlineDate \u003d LocalDate.parse(dline);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"            this.dlineString \u003d dline;","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"     * Returns a String representing the Deadline Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"     * @return a String representing the Deadline Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"        String msg \u003d \"[D]\" + super.toString() + \" (by: \";","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"        if (dlineString \u003d\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"            msg \u003d msg + dlineDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"            msg \u003d msg + dlineString + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"        return msg;","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"     * Returns a String representing the Deadline Task to be saved in the taskList.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"     * @return a String representing the Deadline Task to be saved in the taskList.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"    public String printToFile() {","lastModifiedDate":"2021-08-20"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"        String msg \u003d \"D | \" + (this.getDone() ? 1 : 0) + \" | \" + this.getName() + \" | \";","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"        if (dlineString \u003d\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"            msg \u003d msg + dlineDate.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"            msg \u003d msg + dlineString;","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"        return msg;","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":76,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"luminousleek":76}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":" * The Event class encapsulates an event that happens at a certain time.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    private String timeString;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    private LocalDate timeDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"     * Constructor for an Event Task given a String with the /at keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"     * @param input the given String to parse","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    public Event(String input) {","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"        super(input.substring(0, input.indexOf(\"/at \") - 1));","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"        String time \u003d input.substring(input.indexOf(\"/at \") + 4);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"            this.timeDate \u003d LocalDate.parse(time);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"            this.timeString \u003d time;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"     * Overloaded constructor for an Event task.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"     * Used only when reading from taskList.txt.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"     * @param name the given name of the Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"     * @param time the given time of the Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"    public Event(String name, String time) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"        super(name);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"            this.timeDate \u003d LocalDate.parse(time);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"            this.timeString \u003d time;","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"     * Returns a String representing the Event Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"     * @return a String representing the Event Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"        String msg \u003d \"[E]\" + super.toString() + \" (at: \";","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"        if (timeString \u003d\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"            msg \u003d msg + timeDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"            msg \u003d msg + timeString + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"        return msg;","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"     * Returns a String representing the Event Task to be saved in the taskList.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"     * @return a String representing the Event Task to be saved in the taskList.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"    public String printToFile() {","lastModifiedDate":"2021-08-20"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"        String msg \u003d \"E | \" + (this.getDone() ? 1 : 0) + \" | \" + this.getName() + \" | \";","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"        if (timeString \u003d\u003d null) {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"            msg \u003d msg + timeDate.toString();","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"            msg \u003d msg + timeString;","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"        return msg;","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":76,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"luminousleek":76}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":" * The Task class encapsulates a task with a name and an indicator of its completion.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":" * As every Task is one of various types of Tasks, this class is abstract.","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"    private String name;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"     * @param name the name of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-13"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"     * Returns a string representing the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"     * @return a string representing the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-13"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"            return \"[X] \" + this.name;","lastModifiedDate":"2021-08-13"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-13"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"        return \"[ ] \" + this.name;","lastModifiedDate":"2021-08-13"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-13"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-13"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-13"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-13"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"     * Returns a String that will be stored in the taskList.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"     * @return a String to be stored in the taskList.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"    public abstract String printToFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"    public String getName() {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"        return this.name;","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"    public boolean getDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"luminousleek":56}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import java.util.ListIterator;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":" * The TaskList encapsulates a list of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    private ArrayList\u003cTask\u003e prev;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"     * Constructor for a TaskList object with a given ArrayList of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"     * @param tasks the given ArrayList of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"        this.prev \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"     * Removes a Task corresponding to the given index and returns it.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"     * @param num the index of the Task to be removed.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"     * @return the removed Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"    public Task remove(int num) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"        return tasks.remove(num);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"     * Adds a given Task to the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"     * @param tsk the Task to be added to the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"     * @return true if the Task was successfully added, false otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"    public boolean add(Task tsk) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"        return tasks.add(tsk);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"     * Retrieves a Task corresponding to the given index.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"     * @param num the index corresponding to the desired Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"     * @return the Task corresponding to the given index.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"    public Task getTask(int num) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"        return tasks.get(num);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"     * Returns the number of Tasks in the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"     * @return the number of Tasks in the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"    public int numTasks() {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"     * Marks the Task corresponding to the given index as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"     * @param num the index corresponding to the Task to be marked as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"    public void markTask(int num) {","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"        tasks.get(num).markDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"luminousleek"},"content":"     * Saves a copy of the TaskList, and then clears it of all its Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"    public void clear() {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"        // clears taskList and saves the previous one to prevList","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"        prev \u003d new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"luminousleek"},"content":"     * Restores the current TaskList to a previously saved TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"luminousleek"},"content":"    public void restore() {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"luminousleek"},"content":"        tasks \u003d new ArrayList\u003c\u003e(prev);","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"luminousleek"},"content":"     * Returns an ordered list of all the Tasks in the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"luminousleek"},"content":"     * @return a String containing an ordered list of all the Tasks in the TaskList","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"luminousleek"},"content":"    public String listTaskArr() {","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"luminousleek"},"content":"        return listTasks(tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"luminousleek"},"content":"    private String listTasks(ArrayList\u003cTask\u003e lst) {","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"luminousleek"},"content":"        StringBuilder res \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"luminousleek"},"content":"        ListIterator\u003cTask\u003e iter \u003d lst.listIterator();","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"luminousleek"},"content":"        while (iter.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"luminousleek"},"content":"            res.append(iter.nextIndex() + 1).append(\".\").append(iter.next());","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"luminousleek"},"content":"            if (iter.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"luminousleek"},"content":"                res.append(\"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"luminousleek"},"content":"        return res.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"luminousleek"},"content":"     * Returns a ListIterator of the Tasks in the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"luminousleek"},"content":"     * @return a ListIterator of the Tasks in the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"luminousleek"},"content":"    public ListIterator\u003cTask\u003e makeIterator() {","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"luminousleek"},"content":"        return tasks.listIterator();","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"luminousleek"},"content":"     * Finds Tasks with names matching a given key and returns an ordered list of the matching tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"luminousleek"},"content":"     * @param key the given key to match with.","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"luminousleek"},"content":"     * @return an ordered list of matching Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"luminousleek"},"content":"    public String findTasks(String key) {","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"luminousleek"},"content":"        ListIterator\u003cTask\u003e iter \u003d tasks.listIterator();","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"luminousleek"},"content":"        ArrayList\u003cTask\u003e found \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"luminousleek"},"content":"        while (iter.hasNext()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"luminousleek"},"content":"            Task t \u003d iter.next();","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"luminousleek"},"content":"            if (t.getName().contains(key)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"luminousleek"},"content":"                found.add(t);","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"luminousleek"},"content":"        if (found.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"luminousleek"},"content":"            return \"no matching tasks found\";","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"luminousleek"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"luminousleek"},"content":"            return \"Here are the matching tasks in your list:\\n\" + listTasks(found);","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luminousleek":147}},{"path":"src/main/java/duke/task/TaskTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":" * Enumerates the possible types of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"public enum TaskTypes {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luminousleek":8}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":" * The ToDo class encapsulates an item to be done.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-13"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"        super(name);","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"     * Returns a String representing the ToDo Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"     * @return a String representing the ToDo Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-08-13"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"    public String toString() {","lastModifiedDate":"2021-08-13"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-13"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-13"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"     * Returns a String representing the ToDo Task to be saved in the taskList.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"     * @return a String representing the ToDo Task to be saved in the taskList.txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    public String printToFile() {","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"        return \"T | \" + (this.getDone() ? 1 : 0) + \" | \" + this.getName();","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"luminousleek":30}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"public class EventTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"    public void testStringConversion() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"        assertEquals(\"[E][ ] abc def (at: today)\", new Event(\"abc def /at today\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"        assertEquals(\"[E][ ] abc def (at: 123)\", new Event(\"abc def /at 123\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"        assertEquals(\"[E][ ] abc def (at: 13-12-2021)\", new Event(\"abc def /at 13-12-2021\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    public void testDateHandling() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"        assertEquals(\"[E][ ] abc def (at: 05/12/2021)\", new Event(\"abc def /at 2021-12-05\").toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    public void testMarkDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"        Event e \u003d new Event(\"abc def /at today\");","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"        assertEquals(\"[E][ ] abc def (at: today)\", e.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"        e.markDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"        assertEquals(\"[E][X] abc def (at: today)\", e.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    public void testPrintToFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"        Event e \u003d new Event(\"abc def /at today\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"        assertEquals(\"E | 0 | abc def | today\", e.printToFile());","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"        e.markDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"        assertEquals(\"E | 1 | abc def | today\", e.printToFile());","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"        assertEquals(\"E | 0 | abc def | 2021-12-05\", new Event(\"abc def /at 2021-12-05\").printToFile());","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luminousleek":38}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    public void parse_unrecognisedCommand_exceptionThrown() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"            assertEquals(0, Parser.parse(\"abc\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"            fail(); // should not reach this line","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"            assertEquals(\"you typed in something i cannot recognise!\", e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"luminousleek":21}},{"path":"text-ui-test/data/taskList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"T | 0 | a","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"T | 0 | b","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"T | 0 | b","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"D | 0 | c | 2021-11-13","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"E | 0 | d | tomorrow","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"luminousleek":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"clear","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"add todo a","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"add todo b","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"add deadline c /by today","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"add event d /at 2021-09-12","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"done 2","lastModifiedDate":"2021-08-13"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"add deadline e","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"add todo","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"done abc","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"done 10","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"add deadline f /by 2021-03-11","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"done 4","lastModifiedDate":"2021-08-13"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"list","lastModifiedDate":"2021-08-13"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"remove 3","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"remove 3","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"remove 6","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"remove aaa","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"restore","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"bye","lastModifiedDate":"2021-08-13"}],"authorContributionMap":{"luminousleek":22}}]
