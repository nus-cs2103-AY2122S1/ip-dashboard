{"authorDailyContributionsMap":{"luminousleek":[{"date":"2021-08-13","commitResults":[{"hash":"31848599afbb51ada954a2f644497bbe3410ca11","messageTitle":"Implement Greet, Echo and Exit","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":6}}},{"hash":"3bff772ad3c9bc0aa5f33105819f0cdb625bc874","messageTitle":"Implement ability to store text and display stored text in an ordered list","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":34,"deletions":7}}},{"hash":"b124aaf59fbd84517da1c3a03d2b0b7b912a32d3","messageTitle":"Add ability to mark tasks as done. Also added a Task class","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":10}}},{"hash":"723b128829bc3abfbaf0f6f7508a6c1985b834cf","messageTitle":"add Deadline, Event and ToDo classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":0}}},{"hash":"869173eb0e1b1bd256fb121e506875a83c712188","messageTitle":"fix bugs in Deadline and Event","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"acc6c0a4bf17d4e4aa3520af6f02edebd9b6ca69","messageTitle":"Add support for ToDo, Deadline and Event","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":4}}},{"hash":"124fb9e9bc12bc0ee5552b04409ef54b70632487","messageTitle":"Add test cases for Duke","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":0}}}]},{"date":"2021-08-16","commitResults":[{"hash":"642077fa0c93c86e76b1834c5e1b38998a0cccd0","messageTitle":"added DukeException and error handling, add more test cases","messageBody":"","tags":["Level-5-BUGGY","Level-5"],"fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0},"java":{"insertions":43,"deletions":26}}},{"hash":"ab8dfff0ed9c41b0ec61641643aa6fde44bf4a9f","messageTitle":"change Task array to ArrayList, fix bug for validating Event input","messageBody":"","tags":["Level-5++"],"fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":27}}},{"hash":"381dbb06fe2d2b29f82eac31b9c6c6e48511f454","messageTitle":"fix bug when list did not have newline characters","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"8a8d672360e58f3daf87d203718e82d3253fa9be","messageTitle":"added ability to remove tasks, more testcases","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":0},"java":{"insertions":8,"deletions":0}}}]},{"date":"2021-08-20","commitResults":[{"hash":"963952ceda6e8653c0190e07686b2aa72d112d00","messageTitle":"Make Task an abstract class with abstract printToFile method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"f455bca9c3629f9276245e33d2d7d6ac30bd9552","messageTitle":"Implement printToFile method in subclasses","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}},{"hash":"7511f31b0d253461a32c9507dc48f3bfff640f6d","messageTitle":"Remove commented out Duke logo","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":7}}}]},{"date":"2021-08-23","commitResults":[{"hash":"6e3c71226d7eac2c7e4c9fc29a323da543c60b6b","messageTitle":"Add overloaded constructors for Deadline and Event","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"661913c5a85a2208264e3e11ffabaf636b73e919","messageTitle":"Add ability to save and load task list from a local file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":149,"deletions":7}}},{"hash":"dd245bc6016df78e62f95d87632725f032496ae9","messageTitle":"Update tests to take saving and loading into account","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0}}},{"hash":"288c2d3a70e21382f4e985d343a2d9adfb561a52","messageTitle":"Remove commented out logo","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":7}}},{"hash":"db07f6851b9ec57afc72055ba7e21845f3e5b202","messageTitle":"Add ability to store Dates in Events and Deadlines","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":6}}},{"hash":"00b225cc50cd5b3c1e61b6fd2b4bbdb0f0c02ab7","messageTitle":"Update Deadline and Event to work with saving to file","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":62,"deletions":10}}},{"hash":"66d0c5989c799aa3a9e27790e543029115c9b96d","messageTitle":"Update tests to test Date handling","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":2}}}]},{"date":"2021-08-24","commitResults":[{"hash":"4706f6fc0f83a77c7e25f3e1c04dd3906f64ee2c","messageTitle":"Add Parser, Storage, TaskList and Ui classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":326,"deletions":0}}},{"hash":"d4f0291165e396d39dbabb507682ea120f9246fe","messageTitle":"Add Command class and subclasses","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":158,"deletions":0}}},{"hash":"f610e22a16edec8cb77abb4f38de6c84d629fd78","messageTitle":"Add TaskTypes enum","messageBody":"","tags":["A-Enums"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"b63d1608f100af808898e0276b586e25f815dec5","messageTitle":"Modify Duke to make use of new classes","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":238}}},{"hash":"54aa2037ff588100d2ab32535829faa50643a8f3","messageTitle":"Update tests","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":7}}},{"hash":"7465219e968760de31071418173e596a8a98394d","messageTitle":"Organise classes into packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":0}}},{"hash":"16ec542cda84eb18daebfb33d915b6ebe699564b","messageTitle":"Add JUnit tests for Event and Parser classes","messageBody":"","tags":["A-JUnit","0.1"],"fileTypesAndContributionMap":{"java":{"insertions":58,"deletions":0}}},{"hash":"053ef1b97bdb970f66061eb3b53e2cdfc3676500","messageTitle":"Add JavaDocs to all the classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":260,"deletions":9}}},{"hash":"32f4dd06a98f47550a9347df0a4b081c3c138aeb","messageTitle":"Edit files to match coding standard","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":49}}},{"hash":"ce2904798b4144ffe637fdcefff331fb62f2c47a","messageTitle":"Add ability to find tasks containing a given keyword","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":6}}},{"hash":"5e8cc7dc4820995c9a273a6fee29cd7d362b28d1","messageTitle":"Make findTask use the Task.getName() method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"afb34d51e389d67a8d120fc5c6d9aa39a5c041e5","messageTitle":"Add missing JavaDocs and fix style","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":9}}}]},{"date":"2021-08-28","commitResults":[{"hash":"23526526568954c9fec07058c83ca38525584333","messageTitle":"Add missing JavaDoc so Gradle can build","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"26ed2ec513fb762a88831d90c9929a05b0ae6ca8","messageTitle":"Change order of import statements so Gradle can build","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":5}}}]},{"date":"2021-08-30","commitResults":[{"hash":"c71e1d13c8354e6e3b374bdbbdccf6942adde49a","messageTitle":"Add JavaFX dependencies to build.gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0}}},{"hash":"f2f19d586b8781bc79159c5db7ec707f97ff48df","messageTitle":"Add GUI using JavaFX","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":280,"deletions":22}}}]},{"date":"2021-09-04","commitResults":[{"hash":"697392e422a5c3bdf29db062434f7821a4f040ad","messageTitle":"Add assertion to AddCommand","messageBody":"AddCommand has no way to verify if a Task will be added to the TaskList.\n\nWe want to ensure that a Task will be added to the TaskList instead of a\nnull value.\n\nLet\u0027s add an assert statement to verify the assumption that a Task will be\nadded.\n\nThis is done with an assertion statement so I can fulfill the\nrequirement for week 5 :/\n\nThanks for your patience and understanding.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"b26026d5cc4e7217c270a873d1f2f59971ec8c47","messageTitle":"Remove dead code for text-based UI","messageBody":"The files still contained code for the old text-based UI.\n\nThis code is now redundant with the GUI, and causes the code to be\nharder to read.\n\nLet\u0027s remove this redundant code.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":78}}},{"hash":"1fe105a561da76c4c99053630657a0f814220fb5","messageTitle":"Remove magic literals for Event and Deadline and abstract formatDate","messageBody":"The keywords for Event and Deadline were literals, and the code\nto format the date for printing was duplicated.\n\nThis is bad for changing the keywords for Event and Deadline in\nthe future. It\u0027s also bad for changing the date format for printing\nas someone might forget to change the format in both classes.\n\nLet\u0027s\n* Make the keywords a constant class field of the respective classes\n* Abstract out the function to format the date\n* Make the date format a constant of Task\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":6}}},{"hash":"39f05ca13bb6a0fb1fdf3de696fef00ecef537fc","messageTitle":"Add Exception subclasses","messageBody":"There used to be only one DukeException class to encapsulate all\nthe errors in Duke.\n\nThis made throwing a new error tedious as a new error message had\nto be passed in every time, and editing error messages would also\nbe a pain.\n\nLet\u0027s\n* Create new exceptions for common exceptions\n* Move all these new exceptions to the duke.exception package\n","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":12}}},{"hash":"f9cdcf528b878f3cd81fcd70b8336508392c8904","messageTitle":"Implement new DukeException subclasses","messageBody":"The previous commit did not contain the constructors and details\nfor the new DukeEception subclasses.\n\nThis means they wouldn\u0027t work.\n\nLet\u0027s actually make them work.\n","fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":6}}},{"hash":"cea97f7f9f50e045393200db13ab8a4f2af329c2","messageTitle":"Make Parser follow SLAP","messageBody":"The parse method in Parser was quite clunky with multiple layers of\nabstraction.\n\nThis made it hard to read and understand, and also had duplicated\ncode segments.\n\nLet\u0027s\n* Create new methods for parsing each command in the similar style\nas prepareAdd\n* Abstract out the code to check string array lengths as functions\n* Use the new DukeException subclasses\n* Amend the import statements accordingly\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":94,"deletions":61}}},{"hash":"08b9322be7d4fe73eaa9198eae2306d06765dea8","messageTitle":"Create a constant COMMAND_WORD class level field","messageBody":"Previously the command words for Tasks were literals.\n\nThis made changing the command words difficult.\n\nLet\u0027s make class level COMMAND_WORD fields in each Task subclass.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"0f0440984e7d55ee50751458e5b58ad10d874381","messageTitle":"Use new DukeException subclasses","messageBody":"Previously only the parent DukeException class was used.\n\nThis meant that new error messages had to be used for different\ntypes of errors.\n\nLet\u0027s\n* Implement the new DukeException subclasses\n* Amend the import statements accordingly\n","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":17}}},{"hash":"f9c4b17dd8569938dbc3232406671d686ec16560","messageTitle":"Remove unary constructor for Event and Deadline","messageBody":"The current unary constructors for Events and Deadlines use the\nString.substring() method so that it can call the constructor of\ntheir superclass.\n\nThis is pretty clunky because the same thing can be done with the\nString.split() method which is a lot more understandable.\n\nLet\u0027s\n* Add methods in AddCommand to split the input strings for Deadlines\nand Events\n* Shift the method to check whether the keyword exists from Parser\nto AddCommand\n* Remove the unary constructor\n* Update EventTest with the new constructor\n","fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":54}}},{"hash":"67dcb042b07349886ea6de2342d7b1dacb48b30f","messageTitle":"Remove Ui from Command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":26}}},{"hash":"15c3a2343609756696ccf9c3b678fcc9af33a046","messageTitle":"Remove Ui from JavaDocs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"a227d682c168a666af190fe50b28a123fbb2ae21","messageTitle":"Refactor GUI code","messageBody":"The current code to display the JavaFX Nodes for the GUI is mostly\nin the Duke and Ui classes.\n\nThis makes it very hard to read, and also difficult to adjust the\nvarious UI components.\n\nLet\u0027s\n* Abstract out all the components as new subclasses\n* Rewrite the Ui class to encapsulate everything for the GUI\n* Shift the handleInput method to the Ui class\n* Put all the UI components into the ui package\n* Simplify the Duke class massively\n\nThis took way too long. I\u0027m done with this branch.\n","fileTypesAndContributionMap":{"java":{"insertions":343,"deletions":249}}},{"hash":"36afabf23f5ab7a6d05ca34260d24c9404f49f59","messageTitle":"Add TimeTask abstract class","messageBody":"Deadlines and Events are subclasses of TimeTask\n","fileTypesAndContributionMap":{"java":{"insertions":94,"deletions":72}}},{"hash":"b066dc375d317015c4e964391a5a0ceb453d59b3","messageTitle":"Add function to edit names and times of tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":109,"deletions":14}}},{"hash":"86b37e7757f895ffb969f13e549e43c9785615de","messageTitle":"Add space between numbers and tasks in listTaskArr()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"luminousleek":{"java":1703,"md":0,"fxml":0,"sh":0,"bat":0,"gradle":15,"txt":27}},"authorContributionVariance":{"luminousleek":141432.16},"authorDisplayNameMap":{"luminousleek":"CS2103T-T13-1 LEE ..SAAC"}}
