[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":" * A task that the user wants to complete by a certain point in time.","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"    protected String deadline;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"     * Constructor for Deadline class.","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"     * @param description Description for the task at hand.","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"     * @param deadline Time the task has to be completed by.","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"     * Provides a String representation of the Deadline.","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"     * @return A String representation of the Deadline.","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"        return \"[D][\" + this.getStatusIcon() + \"] \" + this.description + \"(by: \" + this.deadline + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LZher385":24}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"    private static final ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"    private static final Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Hello, I\u0027m Duke\");","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"        String command;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"        do {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"            System.out.print(\"\u003e\u003e \");","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"            command \u003d in.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"            handleInput(command);","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"        while(!command.equals(\"bye\"));","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Bye, hope to see you again!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"     * Handles the different input commands to Duke.","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"     * @param command input command from the user","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"    public static void handleInput(String command) {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"        // first element is the instruction, second element is the rest of the command","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"        String[] inputWords \u003d command.split(\" \", 2);","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"            switch (inputWords[0]) {","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"                case \"bye\":","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"                case \"list\":","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"                    printTasks();","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"                case \"done\": {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"                    if (inputWords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"                        throw new DukeException(\"☹ OOPS!!! Please provide a task ID that exists.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"                    int taskId \u003d Integer.parseInt(inputWords[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"                    if (taskId \u003c 1 || taskId \u003e arr.size()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"                        throw new DukeException(\"☹ OOPS!!! Please provide a task ID that exists.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"                    markTaskAsDone(taskId);","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"                    if (inputWords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"                    addTodo(inputWords[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"LZher385"},"content":"                    if (inputWords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"LZher385"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"LZher385"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"LZher385"},"content":"                    addDeadline(inputWords[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"LZher385"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"LZher385"},"content":"                case \"event\":","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"LZher385"},"content":"                    if (inputWords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"LZher385"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"LZher385"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"LZher385"},"content":"                    addEvent(inputWords[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"LZher385"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"LZher385"},"content":"                case \"delete\":","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"LZher385"},"content":"                    if (inputWords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"LZher385"},"content":"                        throw new DukeException(\"☹ OOPS!!! Please provide a task ID that exists.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"LZher385"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"LZher385"},"content":"                    int taskId \u003d Integer.parseInt(inputWords[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"LZher385"},"content":"                    if (taskId \u003c 1 || taskId \u003e arr.size()) {","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"LZher385"},"content":"                        throw new DukeException(\"☹ OOPS!!! Please provide a task ID that exists.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"LZher385"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"LZher385"},"content":"                    deleteTask(taskId);","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"LZher385"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"LZher385"},"content":"                default:","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"LZher385"},"content":"                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"LZher385"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"LZher385"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"LZher385"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"LZher385"},"content":"     * Lists out all the tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"LZher385"},"content":"    public static void printTasks() {","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"LZher385"},"content":"        for (int i \u003d 0; i \u003c arr.size(); i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"LZher385"},"content":"            System.out.println(i + 1 + \": \" + arr.get(i));","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"LZher385"},"content":"     * Mark a task as done.","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"LZher385"},"content":"     * @param taskId ID of the task we are marking as done.","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"LZher385"},"content":"    public static void markTaskAsDone(int taskId) {","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"LZher385"},"content":"        arr.get(taskId - 1).setIsDone(true);","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"   \" + arr.get(taskId - 1));","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"LZher385"},"content":"     * Adds a Todo task.","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"LZher385"},"content":"     * @param description Description of the Todo.","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"LZher385"},"content":"    public static void addTodo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"LZher385"},"content":"        arr.add(new Todo(description));","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"LZher385"},"content":"        printAfterAdding();","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"LZher385"},"content":"     * Adds a Deadline task.","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"LZher385"},"content":"     * @param fullDescription String that contains the description and deadline of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"LZher385"},"content":"    public static void addDeadline(String fullDescription) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"LZher385"},"content":"        int sepIndex \u003d fullDescription.indexOf(\"/by\");","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"LZher385"},"content":"        if (fullDescription.charAt(sepIndex + 3) !\u003d \u0027 \u0027 || sepIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"LZher385"},"content":"            throw new DukeException(\"☹ OOPS!!! Please input with the correct format e.g. deadline return books\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"LZher385"},"content":"                    \" /by Sunday\");","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"LZher385"},"content":"        String description \u003d fullDescription.substring(0, sepIndex);","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"LZher385"},"content":"        String deadline \u003d fullDescription.substring(sepIndex + 4);","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"LZher385"},"content":"        arr.add(new Deadline(description, deadline));","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"LZher385"},"content":"        printAfterAdding();","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"LZher385"},"content":"     * Adds an Event task.","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"LZher385"},"content":"     * @param fullDescription String that contains the description and time of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"LZher385"},"content":"    public static void addEvent(String fullDescription) throws DukeException {","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"LZher385"},"content":"        int sepIndex \u003d fullDescription.indexOf(\"/at\");","lastModifiedDate":"2021-08-17"},{"lineNumber":131,"author":{"gitId":"LZher385"},"content":"        if (fullDescription.charAt(sepIndex + 3) !\u003d \u0027 \u0027 || sepIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"LZher385"},"content":"            throw new DukeException(\"☹ OOPS!!! Please input with the correct format e.g. event read books\" +","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"LZher385"},"content":"                    \" /at Saturday 9am\");","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"LZher385"},"content":"        String description \u003d fullDescription.substring(0, sepIndex);","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"LZher385"},"content":"        String time \u003d fullDescription.substring(sepIndex + 4);","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"LZher385"},"content":"        arr.add(new Event(description, time));","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"LZher385"},"content":"        printAfterAdding();","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":141,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":142,"author":{"gitId":"LZher385"},"content":"     * Prints information about the latest element that was just added.","lastModifiedDate":"2021-08-17"},{"lineNumber":143,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":144,"author":{"gitId":"LZher385"},"content":"    public static void printAfterAdding() {","lastModifiedDate":"2021-08-17"},{"lineNumber":145,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":146,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"   \" + arr.get(arr.size() - 1));","lastModifiedDate":"2021-08-17"},{"lineNumber":147,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Now you have \" + arr.size() + \" task(s) in the list.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":148,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":149,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":151,"author":{"gitId":"LZher385"},"content":"     * Deletes a specific task.","lastModifiedDate":"2021-08-17"},{"lineNumber":152,"author":{"gitId":"LZher385"},"content":"     * @param taskId ID of the task to be deleted.","lastModifiedDate":"2021-08-17"},{"lineNumber":153,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":154,"author":{"gitId":"LZher385"},"content":"    public static void deleteTask(int taskId) {","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Noted. I have removed this task:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":156,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"   \" + arr.get(taskId - 1));","lastModifiedDate":"2021-08-17"},{"lineNumber":157,"author":{"gitId":"LZher385"},"content":"        arr.remove(taskId - 1);","lastModifiedDate":"2021-08-17"},{"lineNumber":158,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Now you have \" + arr.size() + \" task(s) in the list.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"LZher385":155,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":" * Custom class for exceptions related to Duke.","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"     * Constructor for the DukeException class.","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"     * @param error Error message for the exception.","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"    public DukeException(String error) {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"        super(error);","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LZher385":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":" * A task that is scheduled for a specific time.","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"    protected String time;","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"     * Constructor for the Event class.","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"     * @param description Description of the task at hand.","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"     * @param time Time the event is scheduled to take place at.","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"     * Provides a String representation of the Event.","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"     * @return A String reprsentation of the Event.","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"        return \"[E][\" + this.getStatusIcon() + \"] \" + this.description + \"(at: \" + this.time + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LZher385":24}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":" * This class represents a Task object, which has a description for the current task and also a boolean value which","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":" * indicates if the task is done or not.","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"     * Outputs \"X\" if the task is done, else output \" \".","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"     * @return A String which represents whether the task is done or not.","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"     * Provides a String representation for each Task object.","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"     * @return A String that describes the current Task object.","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"    public abstract String toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"     * Sets whether the current Task is done or not.","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"     * @param value Boolean value to set isDone to.","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"    public void setIsDone(boolean value) {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"        this.isDone \u003d value;","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LZher385":39}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":" * A task with no time constraint associated with.","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"     * @param description Description of the task at hand.","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"     * Provides a String representation of the Todo.","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"     * @return A String representation of the Todo.","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"        return \"[T][\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LZher385":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"todo run test","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LZher385":3}}]
