[{"path":"src/main/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"1: [T][ ] task","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"2: [D][ ] task 2 (by: Apr 2 2021 08:32 PM)","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"3: [D][ ] task 3 (by: Apr 5 2022)","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"4: [E][ ] task 4 (at: Apr 2 2023 03:34 PM)","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"5: [E][ ] task 5 (at: Mar 3 2022)","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"LZher385":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":" * A task that the user wants to complete by a certain point in time.","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"    protected boolean timeBool;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"    protected DateTimeFormatter formatInput;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"    protected DateTimeFormatter formatOutputTime \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:m a\");","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"    protected DateTimeFormatter formatOutputNoTime \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"    public Deadline(String description, String dateString, DateTimeFormatter formatInput, boolean timeBool) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"        this.formatInput \u003d formatInput;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"        this.timeBool \u003d timeBool;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"        if (!timeBool) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"            this.date \u003d LocalDate.parse(dateString, formatInput);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"            this.dateTime \u003d LocalDateTime.parse(dateString, formatInput);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"     * Provides a String representation of the Deadline.","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"     * @return A String representation of the Deadline.","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"        if (timeBool) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"            return \"[D][\" + this.getStatusIcon() + \"] \" + this.description + \" (by: \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"                    formatOutputTime.format(this.dateTime) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"            return \"[D][\" + this.getStatusIcon() + \"] \" + this.description + \" (by: \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"                    formatOutputNoTime.format(this.date) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LZher385":42}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"    public Duke(String dirPath, String fileName) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"        storage \u003d new Storage(dirPath, fileName);","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"        tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"    public void run() {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"        String[] inputWords \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"        Ui.greet();","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"        do {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"            inputWords \u003d Parser.parse(Ui.readCommand());","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"                switch (inputWords[0]) {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"                    case \"bye\":","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"                        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"                    case \"list\":","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"                        tasks.printTasks();","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"                        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"                    case \"done\": {","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"                        if (inputWords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"                            throw new DukeException(\"â˜¹ OOPS!!! Please provide a task ID that exists.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"                        }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"                        int taskId \u003d Integer.parseInt(inputWords[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"                        tasks.markTaskAsDone(taskId);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"                        storage.saveFile(tasks.tasksAsString());","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"                        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"                    case \"todo\":","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"                        if (inputWords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"                            throw new DukeException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"                        }","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"                        tasks.addTodo(inputWords[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"                        storage.saveFile(tasks.tasksAsString());","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"                        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"                    case \"deadline\":","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"                        if (inputWords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"                            throw new DukeException(\"â˜¹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"                        }","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"                        tasks.addDeadline(inputWords[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"                        storage.saveFile(tasks.tasksAsString());","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"                        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"                    case \"event\":","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"                        if (inputWords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"LZher385"},"content":"                            throw new DukeException(\"â˜¹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"LZher385"},"content":"                        }","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"LZher385"},"content":"                        tasks.addEvent(inputWords[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"LZher385"},"content":"                        storage.saveFile(tasks.tasksAsString());","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"LZher385"},"content":"                        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"LZher385"},"content":"                    case \"delete\":","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"LZher385"},"content":"                        if (inputWords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"LZher385"},"content":"                            throw new DukeException(\"â˜¹ OOPS!!! Please provide a task ID that exists.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"LZher385"},"content":"                        }","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"LZher385"},"content":"                        int taskId \u003d Integer.parseInt(inputWords[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"LZher385"},"content":"                        tasks.deleteTask(taskId);","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"LZher385"},"content":"                        storage.saveFile(tasks.tasksAsString());","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"LZher385"},"content":"                        break;","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"LZher385"},"content":"                    default:","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"LZher385"},"content":"                        throw new DukeException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"LZher385"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"LZher385"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"LZher385"},"content":"                Ui.printError(\"Please provide date/time in the correct format: yyyy-mm-dd HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"LZher385"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"LZher385"},"content":"                Ui.printError(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"LZher385"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"LZher385"},"content":"        while(!inputWords[0].equals(\"bye\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Bye, hope to see you again!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"LZher385"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"LZher385"},"content":"        new Duke(\"./src/main/data/\", \"duke.txt\").run();","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"LZher385":78,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":" * Custom class for exceptions related to Duke.","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"     * Constructor for the DukeException class.","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"     * @param error Error message for the exception.","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"    public DukeException(String error) {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"        super(error);","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LZher385":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":" * A task that is scheduled for a specific time.","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":" */public class Event extends Task{","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"    protected boolean timeBool;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"    protected DateTimeFormatter formatInput;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"    protected DateTimeFormatter formatOutputTime \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:m a\");","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"    protected DateTimeFormatter formatOutputNoTime \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"    public Event(String description, String dateString, DateTimeFormatter formatInput, boolean timeBool) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"        this.formatInput \u003d formatInput;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"        this.timeBool \u003d timeBool;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"        if (!timeBool) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"            this.date \u003d LocalDate.parse(dateString, formatInput);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"            this.dateTime \u003d LocalDateTime.parse(dateString, formatInput);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"     * Provides a String representation of the Deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"     * @return A String representation of the Deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"        if (timeBool) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"            return \"[E][\" + this.getStatusIcon() + \"] \" + this.description + \" (at: \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"                    formatOutputTime.format(this.dateTime) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"            return \"[E][\" + this.getStatusIcon() + \"] \" + this.description + \" (at: \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"                    formatOutputNoTime.format(this.date) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LZher385":42}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"    public static String[] parse(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"        return command.split(\" \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"LZher385":7}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"    private static final DateTimeFormatter FORMAT_TIME_FILE \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:m a\");","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"    private static final DateTimeFormatter FORMAT_NO_TIME_FILE \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"    File dir;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"    File txtFile;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"    String filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"    public Storage(String dirPath, String fileName) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"        this.dir \u003d new File(dirPath);","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"        dir.mkdir();","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"        this.filePath \u003d dirPath + fileName;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"        this.txtFile \u003d new File(this.filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"    public ArrayList\u003cTask\u003e loadFile() throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"        if (!this.txtFile.createNewFile()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"            Scanner s \u003d new Scanner(this.txtFile);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"                switch (line.charAt(4)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"                    case \u0027T\u0027:","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"                        arr.add(new Todo(line.substring(10)));","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"                        break;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"                    case \u0027D\u0027: {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"                        int index \u003d line.indexOf(\" (by: \");","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"                        String description \u003d line.substring(10, index);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"                        String dateTime \u003d line.substring(index + 6, line.length() - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"                        String[] dateTimeArray \u003d dateTime.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"                        if (dateTimeArray.length \u003e 3) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"                            arr.add(new Deadline(description, dateTime, FORMAT_TIME_FILE, true));","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"                        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"                            arr.add(new Deadline(description, dateTime, FORMAT_NO_TIME_FILE, false));","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"                        }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"                        break;","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"                    case \u0027E\u0027:","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"                        int index \u003d line.indexOf(\" (at: \");","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"                        String description \u003d line.substring(10, index);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"                        String dateTime \u003d line.substring(index + 6, line.length() - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"                        String[] dateTimeArray \u003d dateTime.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"                        if (dateTimeArray.length \u003e 3) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"                            arr.add(new Event(description, dateTime, FORMAT_TIME_FILE, true));","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"LZher385"},"content":"                        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"LZher385"},"content":"                            arr.add(new Event(description, dateTime, FORMAT_NO_TIME_FILE, false));","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"LZher385"},"content":"                        }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"LZher385"},"content":"                        break;","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"LZher385"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"LZher385"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"LZher385"},"content":"        return arr;","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"LZher385"},"content":"    public void saveFile(String textToSave) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"LZher385"},"content":"        FileWriter fileWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"LZher385"},"content":"        fileWriter.write(textToSave);","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"LZher385"},"content":"        fileWriter.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"LZher385":67}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":" * This class represents a Task object, which has a description for the current task and also a boolean value which","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":" * indicates if the task is done or not.","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"     * Outputs \"X\" if the task is done, else output \" \".","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"     * @return A String which represents whether the task is done or not.","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"     * Provides a String representation for each Task object.","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"     * @return A String that describes the current Task object.","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"    public abstract String toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"     * Sets whether the current Task is done or not.","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"     * @param value Boolean value to set isDone to.","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"    public void setIsDone(boolean value) {","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"        this.isDone \u003d value;","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LZher385":39}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"    private static final DateTimeFormatter FORMAT_TIME \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"    private static final DateTimeFormatter FORMAT_NO_TIME \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"     * Lists out all the tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"    public void printTasks() {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"            System.out.println(i + 1 + \": \" + tasks.get(i));","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"    public String tasksAsString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"            result +\u003d (i + 1 + \": \" + tasks.get(i) + System.lineSeparator());","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"        return result;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"     * Mark a task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"     * @param taskId ID of the task we are marking as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"    public void markTaskAsDone(int taskId) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"        if (taskId \u003c 1 || taskId \u003e tasks.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! Please provide a task ID that exists.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"        tasks.get(taskId - 1).setIsDone(true);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"   \" + tasks.get(taskId - 1));","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"     * Adds a Todo task.","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"     * @param description Description of the Todo.","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"    public void addTodo(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"        tasks.add(new Todo(description));","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"        printAfterAdding();","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"LZher385"},"content":"     * Adds a Deadline task.","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"LZher385"},"content":"     * @param fullDescription String that contains the description and deadline of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"LZher385"},"content":"    public void addDeadline(String fullDescription) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"LZher385"},"content":"        int sepIndex \u003d fullDescription.indexOf(\"/by\");","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"LZher385"},"content":"        if (fullDescription.charAt(sepIndex + 3) !\u003d \u0027 \u0027 || sepIndex \u003d\u003d -1 || sepIndex \u003d\u003d 0 ||","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"LZher385"},"content":"                fullDescription.charAt(sepIndex - 1) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"LZher385"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! Please input with the correct format e.g. deadline return books\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"LZher385"},"content":"                    \" /by 2023-04-05 18:40 (yyyy-mm-dd hh:mm, where time is optional)\");","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"LZher385"},"content":"        String description \u003d fullDescription.substring(0, sepIndex - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"LZher385"},"content":"        String dateTime \u003d fullDescription.substring(sepIndex + 4);","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"LZher385"},"content":"        String[] datetasksay \u003d dateTime.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"LZher385"},"content":"        if (datetasksay.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"LZher385"},"content":"            System.out.println(dateTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"LZher385"},"content":"            tasks.add(new Deadline(description, dateTime, FORMAT_TIME, true));","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"LZher385"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"LZher385"},"content":"            tasks.add(new Deadline(description, dateTime, FORMAT_NO_TIME, false));","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"LZher385"},"content":"        };","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"LZher385"},"content":"        printAfterAdding();","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"LZher385"},"content":"     * Adds an Event task.","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"LZher385"},"content":"     * @param fullDescription String that contains the description and time of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"LZher385"},"content":"    public void addEvent(String fullDescription) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"LZher385"},"content":"        int sepIndex \u003d fullDescription.indexOf(\"/at\");","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"LZher385"},"content":"        if (fullDescription.charAt(sepIndex + 3) !\u003d \u0027 \u0027 || sepIndex \u003d\u003d -1 || sepIndex \u003d\u003d 0 ||","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"LZher385"},"content":"                fullDescription.charAt(sepIndex - 1) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"LZher385"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! Please input with the correct format e.g. event read books\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"LZher385"},"content":"                    \" /at 2021-09-08 09:30 (yyyy-mm-dd hh:mm, where time is optional)\");","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"LZher385"},"content":"        String description \u003d fullDescription.substring(0, sepIndex - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"LZher385"},"content":"        String dateTime \u003d fullDescription.substring(sepIndex + 4);","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"LZher385"},"content":"        String[] datetasksay \u003d dateTime.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"LZher385"},"content":"        if (datetasksay.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"LZher385"},"content":"            tasks.add(new Event(description, dateTime, FORMAT_TIME, true));","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"LZher385"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"LZher385"},"content":"            tasks.add(new Event(description, dateTime, FORMAT_NO_TIME, false));","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"LZher385"},"content":"        printAfterAdding();","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"LZher385"},"content":"     * Prints information about the latest element that was just added.","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"LZher385"},"content":"    public void printAfterAdding() {","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"   \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"LZher385"},"content":"     * Deletes a specific task.","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"LZher385"},"content":"     * @param taskId ID of the task to be deleted.","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"LZher385"},"content":"    public void deleteTask(int taskId) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"LZher385"},"content":"        if (taskId \u003c 1 || taskId \u003e tasks.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"LZher385"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! Please provide a task ID that exists.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Noted. I have removed this task:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"   \" + tasks.get(taskId - 1));","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"LZher385"},"content":"        tasks.remove(taskId - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"LZher385":120}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":" * A task with no time constraint associated with.","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"     * @param description Description of the task at hand.","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"     * Provides a String representation of the Todo.","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"     * @return A String representation of the Todo.","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"        return \"[T][\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LZher385":20}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"    private static final Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"    public static String readCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"        System.out.print(\"\u003e\u003e \");","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"        String command \u003d in.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"        return command;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"    public static void greet() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Hello, how can I help you?\");","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"    public static void printError(String message) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"LZher385":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"todo run test","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LZher385":3}}]
