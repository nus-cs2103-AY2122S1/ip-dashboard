[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LZher385":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LZher385":1,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"1: [T][ ] more code","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"2: [D][ ] eat food (by: Apr 5 2021 09:30 PM)","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"3: [E][ ] code again (at: Apr 3 2021)","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"LZher385":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":" * Represents the main class for duke.Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"     * Constructor for duke.Duke class.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"     * @param dirPath  Directory path of the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"     * @param fileName Name of the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"    public Duke(String dirPath, String fileName) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"            storage \u003d new Storage(dirPath, fileName);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"            tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"     * Starts interaction with the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"    public void run() {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"        String[] inputWords \u003d null;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"        Ui.greet();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"        do {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"            inputWords \u003d Parser.parse(Ui.readCommand());","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"                switch (inputWords[0]) {","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"                case \"bye\":","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"                case \"list\":","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"                    tasks.printTasks();","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"                case \"done\": {","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"                    if (inputWords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"                        throw new DukeException(\"☹ OOPS!!! Please provide a task ID that exists.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"LZher385"},"content":"                    int taskId \u003d Integer.parseInt(inputWords[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"LZher385"},"content":"                    tasks.markTaskAsDone(taskId);","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"LZher385"},"content":"                    storage.saveFile(tasks.tasksAsString());","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"LZher385"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"LZher385"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"LZher385"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"LZher385"},"content":"                    if (inputWords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"LZher385"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"LZher385"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"LZher385"},"content":"                    tasks.addTodo(inputWords[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"LZher385"},"content":"                    storage.saveFile(tasks.tasksAsString());","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"LZher385"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"LZher385"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"LZher385"},"content":"                    if (inputWords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"LZher385"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"LZher385"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"LZher385"},"content":"                    tasks.addDeadline(inputWords[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"LZher385"},"content":"                    storage.saveFile(tasks.tasksAsString());","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"LZher385"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"LZher385"},"content":"                case \"event\":","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"LZher385"},"content":"                    if (inputWords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"LZher385"},"content":"                        throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"LZher385"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"LZher385"},"content":"                    tasks.addEvent(inputWords[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"LZher385"},"content":"                    storage.saveFile(tasks.tasksAsString());","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"LZher385"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"LZher385"},"content":"                case \"delete\":","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"LZher385"},"content":"                    if (inputWords.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"LZher385"},"content":"                        throw new DukeException(\"☹ OOPS!!! Please provide a task ID that exists.\");","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"LZher385"},"content":"                    }","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"LZher385"},"content":"                    int taskId \u003d Integer.parseInt(inputWords[1]);","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"LZher385"},"content":"                    tasks.deleteTask(taskId);","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"LZher385"},"content":"                    storage.saveFile(tasks.tasksAsString());","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"LZher385"},"content":"                    break;","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"LZher385"},"content":"                case \"find\":","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"LZher385"},"content":"                    if (inputWords.length !\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"LZher385"},"content":"                        throw new DukeException(\"☹ OOPS!!! Please provide a only one keyword.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"LZher385"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"LZher385"},"content":"                    tasks.findTask(inputWords[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"LZher385"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"LZher385"},"content":"                default:","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"LZher385"},"content":"                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"LZher385"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"LZher385"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"LZher385"},"content":"                Ui.printError(\"Please provide date/time in the correct format: yyyy-mm-dd HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"LZher385"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"LZher385"},"content":"                Ui.printError(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"LZher385"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"LZher385"},"content":"        while (!inputWords[0].equals(\"bye\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Bye, hope to see you again!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"LZher385"},"content":"     * Creates an instance of duke.Duke and starts the user interaction.","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"LZher385"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"LZher385"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"LZher385"},"content":"        new Duke(\"./data/\", \"duke.txt\").run();","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"LZher385":112,"-":2}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":" * Custom class for exceptions related to duke.Duke.","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"     * Constructor for the duke.exception.DukeException class.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"     * @param error Error message for the exception.","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"    public DukeException(String error) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"        super(error);","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LZher385":15}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package duke.parser;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":" * Contains methods which parse the user\u0027s input.","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"     * Parse the user\u0027s input","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"     * @param command Command from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"     * @return An array with the first element being the instruction.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"    public static String[] parse(String command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"        return command.split(\" \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"LZher385":16}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package duke.storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":" * Contains methods which saves/deletes the list to a file.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"    private static final DateTimeFormatter FORMAT_TIME_FILE \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:m a\");","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"    private static final DateTimeFormatter FORMAT_NO_TIME_FILE \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"    File dir;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"    File txtFile;","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"    String filePath;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"     * Constructor for the Storage class.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"     * @param dirPath  Path of the directory the file is in.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"     * @param fileName Name of the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"    public Storage(String dirPath, String fileName) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"        this.dir \u003d new File(dirPath);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"        dir.mkdir();","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"        this.filePath \u003d dirPath + fileName;","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"        this.txtFile \u003d new File(this.filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"     * Loads the file containing a list into the program.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"     * @return An ArrayList with the tasks loaded.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"     * @throws IOException If file is not found.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"    public ArrayList\u003cTask\u003e loadFile() throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"        if (!this.txtFile.createNewFile()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"            Scanner s \u003d new Scanner(this.txtFile);","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"                switch (line.charAt(4)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"LZher385"},"content":"                    arr.add(new Todo(line.substring(10)));","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"LZher385"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"LZher385"},"content":"                case \u0027D\u0027: {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"LZher385"},"content":"                    int index \u003d line.indexOf(\" (by: \");","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"LZher385"},"content":"                    String description \u003d line.substring(10, index);","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"LZher385"},"content":"                    String dateTime \u003d line.substring(index + 6, line.length() - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"LZher385"},"content":"                    String[] dateTimeArray \u003d dateTime.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"LZher385"},"content":"                    if (dateTimeArray.length \u003e 3) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"LZher385"},"content":"                        arr.add(new Deadline(description, dateTime, FORMAT_TIME_FILE, true));","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"LZher385"},"content":"                    } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"LZher385"},"content":"                        arr.add(new Deadline(description, dateTime, FORMAT_NO_TIME_FILE, false));","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"LZher385"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"LZher385"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"LZher385"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"LZher385"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"LZher385"},"content":"                    int index \u003d line.indexOf(\" (at: \");","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"LZher385"},"content":"                    String description \u003d line.substring(10, index);","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"LZher385"},"content":"                    String dateTime \u003d line.substring(index + 6, line.length() - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"LZher385"},"content":"                    String[] dateTimeArray \u003d dateTime.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"LZher385"},"content":"                    if (dateTimeArray.length \u003e 3) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"LZher385"},"content":"                        arr.add(new Event(description, dateTime, FORMAT_TIME_FILE, true));","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"LZher385"},"content":"                    } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"LZher385"},"content":"                        arr.add(new Event(description, dateTime, FORMAT_NO_TIME_FILE, false));","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"LZher385"},"content":"                    }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"LZher385"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"LZher385"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"LZher385"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"LZher385"},"content":"        return arr;","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"LZher385"},"content":"     * Saves a list to the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"LZher385"},"content":"     * @param textToSave Text representing the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"LZher385"},"content":"     * @throws IOException If file is not found.","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"LZher385"},"content":"    public void saveFile(String textToSave) throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"LZher385"},"content":"        FileWriter fileWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"LZher385"},"content":"        fileWriter.write(textToSave);","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"LZher385"},"content":"        fileWriter.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"LZher385":93}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":" * A task that the user wants to complete by a certain point in time.","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"    protected boolean hasTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"    protected DateTimeFormatter formatInput;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"    protected DateTimeFormatter formatOutputTime \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:m a\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"    protected DateTimeFormatter formatOutputNoTime \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"     * Constructor for the Deadline class.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"     * @param dateString  Date and time of the deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"     * @param formatInput How the input is formatted.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"     * @param hasTime     Boolean for whether time was supplied.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"    public Deadline(String description, String dateString, DateTimeFormatter formatInput, boolean hasTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"        this.formatInput \u003d formatInput;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"        this.hasTime \u003d hasTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"        if (!hasTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"            this.date \u003d LocalDate.parse(dateString, formatInput);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"            this.dateTime \u003d LocalDateTime.parse(dateString, formatInput);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"     * Provides a String representation of the duke.task.Deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"     * @return A String representation of the duke.task.Deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"        if (this.hasTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"            return \"[D][\" + this.getStatusIcon() + \"] \" + this.description + \" (by: \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"                    formatOutputTime.format(this.dateTime) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"            return \"[D][\" + this.getStatusIcon() + \"] \" + this.description + \" (by: \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"                    formatOutputNoTime.format(this.date) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LZher385":52}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":" * A task that is scheduled for a specific time.","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"    protected boolean hasTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"    protected DateTimeFormatter formatInput;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"    protected DateTimeFormatter formatOutputTime \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:m a\");","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"    protected DateTimeFormatter formatOutputNoTime \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"     * Constructor for event.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"     * @param dateString  Date and time of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"     * @param formatInput Format of the date and time inputted.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"     * @param hasTime     Whether time was supplied.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"    public Event(String description, String dateString, DateTimeFormatter formatInput, boolean hasTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"        this.formatInput \u003d formatInput;","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"        this.hasTime \u003d hasTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"        if (!hasTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"            this.date \u003d LocalDate.parse(dateString, formatInput);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"            this.dateTime \u003d LocalDateTime.parse(dateString, formatInput);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"     * Provides a String representation of the duke.task.Deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"     * @return A String representation of the duke.task.Deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"        if (hasTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"            return \"[E][\" + this.getStatusIcon() + \"] \" + this.description + \" (at: \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"                    formatOutputTime.format(this.dateTime) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"            return \"[E][\" + this.getStatusIcon() + \"] \" + this.description + \" (at: \" +","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"                    formatOutputNoTime.format(this.date) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LZher385":53}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":" * This class represents a duke.task.Task object, which has a description for the current task and also a boolean value which","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":" * indicates if the task is done or not.","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"    protected String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"     * Constructor for the duke.task.Task class.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"     * Outputs \"X\" if the task is done, else output \" \".","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"     * @return A String which represents whether the task is done or not.","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"     * Provides a String representation for each duke.task.Task object.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"     * @return A String that describes the current duke.task.Task object.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"    public abstract String toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"     * Sets whether the current duke.task.Task is done or not.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"     * @param value Boolean value to set isDone to.","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"    public void setIsDone(boolean value) {","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"        this.isDone \u003d value;","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"     * Returns the description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"     * @return The task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"LZher385"},"content":"        return this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LZher385":54}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":" * A task with no time constraint associated with.","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"     * Constructor for the duke.task.Task class.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"     * @param description Description of the task at hand.","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"     * Provides a String representation of the duke.task.Todo.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"     * @return A String representation of the duke.task.Todo.","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"        return \"[T][\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LZher385":25}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package duke.tasklist;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":" * Represents the list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"public class TaskList {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"    private static final DateTimeFormatter FORMAT_TIME \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"    private static final DateTimeFormatter FORMAT_NO_TIME \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"     * @param tasks ArrayList of Tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"     * Lists out all the tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"    public void printTasks() {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"            System.out.println(i + 1 + \": \" + tasks.get(i));","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"     * Prints a task with the index specified.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"     * @param index Index of the task to print.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"    public void printTask(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"        System.out.println(index + 1 + \": \" + tasks.get(index));","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"LZher385"},"content":"     * Returns a string of all the tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"LZher385"},"content":"     * @return A string of all tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"LZher385"},"content":"    public String tasksAsString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"LZher385"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"LZher385"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"LZher385"},"content":"            result +\u003d (i + 1 + \": \" + tasks.get(i) + System.lineSeparator());","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"LZher385"},"content":"        return result;","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"LZher385"},"content":"     * Mark a task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"LZher385"},"content":"     * @param taskId ID of the task we are marking as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"LZher385"},"content":"    public void markTaskAsDone(int taskId) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"LZher385"},"content":"        if (taskId \u003c 1 || taskId \u003e tasks.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"LZher385"},"content":"            throw new DukeException(\"☹ OOPS!!! Please provide a task ID that exists.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"LZher385"},"content":"        tasks.get(taskId - 1).setIsDone(true);","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"   \" + tasks.get(taskId - 1));","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"LZher385"},"content":"     * Adds a duke.task.Todo task.","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"LZher385"},"content":"     * @param description Description of the duke.task.Todo.","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"LZher385"},"content":"    public void addTodo(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"LZher385"},"content":"        tasks.add(new Todo(description));","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"LZher385"},"content":"        printAfterAdding();","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"LZher385"},"content":"     * Adds a duke.task.Deadline task.","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"LZher385"},"content":"     * @param fullDescription String that contains the description and deadline of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"LZher385"},"content":"    public void addDeadline(String fullDescription) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"LZher385"},"content":"        int sepIndex \u003d fullDescription.indexOf(\"/by\");","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"LZher385"},"content":"        if (fullDescription.charAt(sepIndex + 3) !\u003d \u0027 \u0027 || sepIndex \u003d\u003d -1 || sepIndex \u003d\u003d 0 ||","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"LZher385"},"content":"                fullDescription.charAt(sepIndex - 1) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"LZher385"},"content":"            throw new DukeException(\"☹ OOPS!!! Please input with the correct format e.g. deadline return books\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"LZher385"},"content":"                    \" /by 2023-04-05 18:40 (yyyy-mm-dd hh:mm, where time is optional)\");","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"LZher385"},"content":"        String description \u003d fullDescription.substring(0, sepIndex - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"LZher385"},"content":"        String dateTime \u003d fullDescription.substring(sepIndex + 4);","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"LZher385"},"content":"        String[] datetasksay \u003d dateTime.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"LZher385"},"content":"        if (datetasksay.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"LZher385"},"content":"            System.out.println(dateTime);","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"LZher385"},"content":"            tasks.add(new Deadline(description, dateTime, FORMAT_TIME, true));","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"LZher385"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"LZher385"},"content":"            tasks.add(new Deadline(description, dateTime, FORMAT_NO_TIME, false));","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"LZher385"},"content":"        printAfterAdding();","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"LZher385"},"content":"     * Adds an duke.task.Event task.","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"LZher385"},"content":"     * @param fullDescription String that contains the description and time of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"LZher385"},"content":"    public void addEvent(String fullDescription) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"LZher385"},"content":"        int sepIndex \u003d fullDescription.indexOf(\"/at\");","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"LZher385"},"content":"        if (fullDescription.charAt(sepIndex + 3) !\u003d \u0027 \u0027 || sepIndex \u003d\u003d -1 || sepIndex \u003d\u003d 0 ||","lastModifiedDate":"2021-08-23"},{"lineNumber":118,"author":{"gitId":"LZher385"},"content":"                fullDescription.charAt(sepIndex - 1) !\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-23"},{"lineNumber":119,"author":{"gitId":"LZher385"},"content":"            throw new DukeException(\"☹ OOPS!!! Please input with the correct format e.g. event read books\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":120,"author":{"gitId":"LZher385"},"content":"                    \" /at 2021-09-08 09:30 (yyyy-mm-dd hh:mm, where time is optional)\");","lastModifiedDate":"2021-08-23"},{"lineNumber":121,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"LZher385"},"content":"        String description \u003d fullDescription.substring(0, sepIndex - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":123,"author":{"gitId":"LZher385"},"content":"        String dateTime \u003d fullDescription.substring(sepIndex + 4);","lastModifiedDate":"2021-08-23"},{"lineNumber":124,"author":{"gitId":"LZher385"},"content":"        String[] datetasksay \u003d dateTime.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":125,"author":{"gitId":"LZher385"},"content":"        if (datetasksay.length \u003d\u003d 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":126,"author":{"gitId":"LZher385"},"content":"            tasks.add(new Event(description, dateTime, FORMAT_TIME, true));","lastModifiedDate":"2021-08-23"},{"lineNumber":127,"author":{"gitId":"LZher385"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"LZher385"},"content":"            tasks.add(new Event(description, dateTime, FORMAT_NO_TIME, false));","lastModifiedDate":"2021-08-23"},{"lineNumber":129,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":130,"author":{"gitId":"LZher385"},"content":"        printAfterAdding();","lastModifiedDate":"2021-08-23"},{"lineNumber":131,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":132,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":134,"author":{"gitId":"LZher385"},"content":"     * Prints information about the latest element that was just added.","lastModifiedDate":"2021-08-23"},{"lineNumber":135,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"LZher385"},"content":"    public void printAfterAdding() {","lastModifiedDate":"2021-08-23"},{"lineNumber":137,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":138,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"   \" + tasks.get(tasks.size() - 1));","lastModifiedDate":"2021-08-23"},{"lineNumber":139,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":140,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":141,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":142,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":143,"author":{"gitId":"LZher385"},"content":"     * Deletes a specific task.","lastModifiedDate":"2021-08-23"},{"lineNumber":144,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"LZher385"},"content":"     * @param taskId ID of the task to be deleted.","lastModifiedDate":"2021-08-23"},{"lineNumber":146,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":147,"author":{"gitId":"LZher385"},"content":"    public void deleteTask(int taskId) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":148,"author":{"gitId":"LZher385"},"content":"        if (taskId \u003c 1 || taskId \u003e tasks.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"LZher385"},"content":"            throw new DukeException(\"☹ OOPS!!! Please provide a task ID that exists.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":150,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":151,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Noted. I have removed this task:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":152,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"   \" + tasks.get(taskId - 1));","lastModifiedDate":"2021-08-23"},{"lineNumber":153,"author":{"gitId":"LZher385"},"content":"        tasks.remove(taskId - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":154,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":156,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"LZher385"},"content":"     * Prints tasks that match a certain keyword.","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"LZher385"},"content":"     * @param keyword Keyword supplied by the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"LZher385"},"content":"    public void findTask(String keyword) {","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"LZher385"},"content":"        ArrayList\u003cInteger\u003e taskIndexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"LZher385"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"LZher385"},"content":"            if (tasks.get(i).getDescription().toLowerCase(Locale.ROOT).contains(keyword.toLowerCase(Locale.ROOT))) {","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"LZher385"},"content":"                taskIndexes.add(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"LZher385"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"LZher385"},"content":"        if (taskIndexes.isEmpty()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"LZher385"},"content":"            System.out.println(\"No matches found!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"LZher385"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"LZher385"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"LZher385"},"content":"            for (int i : taskIndexes) {","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"LZher385"},"content":"                printTask(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"LZher385"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"LZher385":178}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package duke.ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":" * Class containing methods forshowing text to the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"    private static final Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"     * Reads a command from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"     * @return Command from the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"    public static String readCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"        System.out.print(\"\u003e\u003e \");","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"        String command \u003d in.nextLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"        return command;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"     * Greets the user.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"    public static void greet() {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"Hello, how can I help you?\");","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"     * Prints an error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"     * @param message Error message.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"    public static void printError(String message) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"        System.out.println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"LZher385":38}},{"path":"src/test/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"class TodoTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"    void testToString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"        assertEquals(\"[T][ ] task\", new Todo(\"task\").toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"LZher385":13}},{"path":"src/test/duke/tasklist/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"package duke.tasklist;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"LZher385"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"LZher385"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"LZher385"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"LZher385"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"LZher385"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"LZher385"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"LZher385"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"LZher385"},"content":"class TaskListTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"LZher385"},"content":"    class todoStub extends Todo {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"LZher385"},"content":"        public todoStub() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"LZher385"},"content":"            super(\"task\");","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"LZher385"},"content":"    class eventStub extends Event {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"LZher385"},"content":"        public eventStub() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"LZher385"},"content":"            super(\"task\", \"2021-09-11 21:30\", DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"LZher385"},"content":"                    true);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"LZher385"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"LZher385"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"LZher385"},"content":"    void tasksAsString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"LZher385"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"LZher385"},"content":"        arr.add(new todoStub());","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"LZher385"},"content":"        arr.add(new eventStub());","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"LZher385"},"content":"        TaskList tasks \u003d new TaskList(arr);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"LZher385"},"content":"        assertEquals(\"1: [T][ ] task\\r\\n\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"LZher385"},"content":"                \"2: [E][ ] task (at: Sep 11 2021 09:30 PM)\\r\\n\", tasks.tasksAsString());","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"LZher385"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"LZher385"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"LZher385"},"content":"    void markTaskAsDone() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"LZher385"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"LZher385"},"content":"        arr.add(new todoStub());","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"LZher385"},"content":"        arr.add(new eventStub());","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"LZher385"},"content":"        TaskList tasks \u003d new TaskList(arr);","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"LZher385"},"content":"        tasks.markTaskAsDone(1);","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"LZher385"},"content":"        assertEquals(\"1: [T][X] task\\r\\n\" +","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"LZher385"},"content":"                \"2: [E][ ] task (at: Sep 11 2021 09:30 PM)\\r\\n\", tasks.tasksAsString());","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"LZher385"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"LZher385"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"LZher385":48}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LZher385"},"content":"todo run test","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"LZher385"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"LZher385"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"LZher385":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"LZher385"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LZher385":1,"-":20}}]
