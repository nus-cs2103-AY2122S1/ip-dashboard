[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"twothicc":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"import duke.Ui.Commands;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":" * Handles initialization of storage and tasks and running of chatbot.","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"    private static final String SAVE_FILENAME \u003d \"dukeSave.txt\";","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"    public Duke(String fileName) {","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"        storage \u003d new Storage(fileName);","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"        // Read tasks from save file.","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"            tasks \u003d storage.readTasksFromData(ui);","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"        } catch (DukeException dukeException) {","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"            System.out.println(dukeException);","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"            // If failed to read tasks from save, initialize a new duke.task.Task ArrayList.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"            tasks \u003d new TaskList(ui);","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"twothicc"},"content":"    public void run() {","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"        // Initialize scanner object.","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-14"},{"lineNumber":36,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"        // Prints greeting to user.","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"        this.ui.showWelcome();","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"twothicc"},"content":"        // Scans user inputs and prints corresponding outputs until a \"Bye\" input is received.","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"        String userInput \u003d sc.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"twothicc"},"content":"        while (!userInput.equals(Commands.BYE.getCommand())) {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"twothicc"},"content":"            Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"twothicc"},"content":"            command.execute(this.tasks, this.ui, this.storage);","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"twothicc"},"content":"            userInput \u003d sc.nextLine();","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-14"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"twothicc"},"content":"        // Prints goodbye message to user.","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"twothicc"},"content":"        this.ui.showGoodbye();","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"twothicc"},"content":"        // Closes scanner object.","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"twothicc"},"content":"        sc.close();","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":54,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"twothicc"},"content":"    /**","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"twothicc"},"content":"     * The main method is runs the duke.Duke chatbot.","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"twothicc"},"content":"     *","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"twothicc"},"content":"     * @param args duke.command.Command line arguments.","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"twothicc"},"content":"     */","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"twothicc"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"twothicc"},"content":"        Duke duke \u003d new Duke(SAVE_FILENAME);","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"twothicc"},"content":"        duke.run();","lastModifiedDate":"2021-08-20"},{"lineNumber":63,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":64,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"twothicc":63,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"    private String errorMessage;","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"        super(errorMessage);","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"        return \"\\uD83D\\uDE41 OOPS!!! \" + this.errorMessage;","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"twothicc":15}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"import duke.Ui.Commands;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"import duke.Ui.Descriptors;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"import duke.command.DateCommand;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":" * Deals with making sense of user commands and inputs.","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"public class Parser {","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"    public static Command parse(String userInput) {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"        if (userInput.equals(Commands.LIST.getCommand())) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"            // Print tasks","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"            return new ListCommand(userInput);","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"            if (userInput.startsWith(Commands.DONE.getCommand())) {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"                // Mark task as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"                return new MarkCommand(userInput);","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"            } else if (userInput.startsWith(Commands.DELETE.getCommand())) {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"twothicc"},"content":"                // Delete a task.","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"                return new DeleteCommand(userInput);","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"            } else if (userInput.startsWith(Commands.DATE.getCommand())) {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"twothicc"},"content":"                // Print tasks that fall on given date.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"                return new DateCommand(userInput);","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"            } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"twothicc"},"content":"                // Add a task to tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"twothicc"},"content":"                return new AddCommand(userInput);","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"twothicc"},"content":"    private static String padZeros(String original, int expected) throws DukeException {","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"        String output \u003d original;","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"        if (original.length() \u003c expected) {","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"twothicc"},"content":"            for (int i \u003d 0; i \u003c (expected - original.length()); i++) {","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"twothicc"},"content":"                output \u003d \"0\" + original;","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":51,"author":{"gitId":"twothicc"},"content":"        } else if (original.length() \u003e expected) {","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"twothicc"},"content":"            throw new DukeException(Ui.exceptionInvalidDateTimeFormat());","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":54,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"twothicc"},"content":"        return output;","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"twothicc"},"content":"    public static String parseLocalDate(LocalDate localDate) throws DukeException {","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"twothicc"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"twothicc"},"content":"            return localDate.format(DateTimeFormatter.ofPattern(\"d MMMM yyyy\"));","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"twothicc"},"content":"        } catch (DateTimeException dateTimeException) {","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"twothicc"},"content":"            throw new DukeException(Ui.exceptionInvalidLocalDate());","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":64,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"twothicc"},"content":"    public static LocalDate toLocalDate(String dateString) throws DukeException {","lastModifiedDate":"2021-08-20"},{"lineNumber":67,"author":{"gitId":"twothicc"},"content":"        String[] split \u003d dateString.split(\"[/\\\\s]\");","lastModifiedDate":"2021-08-20"},{"lineNumber":68,"author":{"gitId":"twothicc"},"content":"        String date \u003d padZeros(split[0], 2);","lastModifiedDate":"2021-08-20"},{"lineNumber":69,"author":{"gitId":"twothicc"},"content":"        String month \u003d padZeros(split[1], 2);","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"twothicc"},"content":"        String year \u003d padZeros(split[2], 4);","lastModifiedDate":"2021-08-20"},{"lineNumber":71,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":72,"author":{"gitId":"twothicc"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-20"},{"lineNumber":73,"author":{"gitId":"twothicc"},"content":"        stringBuilder.append(year).append(\"-\");","lastModifiedDate":"2021-08-20"},{"lineNumber":74,"author":{"gitId":"twothicc"},"content":"        stringBuilder.append(month).append(\"-\");","lastModifiedDate":"2021-08-20"},{"lineNumber":75,"author":{"gitId":"twothicc"},"content":"        stringBuilder.append(date);","lastModifiedDate":"2021-08-20"},{"lineNumber":76,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":77,"author":{"gitId":"twothicc"},"content":"        LocalDate localDate;","lastModifiedDate":"2021-08-20"},{"lineNumber":78,"author":{"gitId":"twothicc"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":79,"author":{"gitId":"twothicc"},"content":"            localDate \u003d LocalDate.parse(stringBuilder.toString());","lastModifiedDate":"2021-08-20"},{"lineNumber":80,"author":{"gitId":"twothicc"},"content":"        } catch (DateTimeParseException dateTimeParseException) {","lastModifiedDate":"2021-08-20"},{"lineNumber":81,"author":{"gitId":"twothicc"},"content":"            throw new DukeException(Ui.exceptionInvalidDateTimeFormat());","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":83,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":84,"author":{"gitId":"twothicc"},"content":"        return localDate;","lastModifiedDate":"2021-08-20"},{"lineNumber":85,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":86,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":87,"author":{"gitId":"twothicc"},"content":"    public static int parseUserNumInput(String userInput, Commands command) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"twothicc"},"content":"        // Parses integer in user input. Invalid user input could throw NumberFormatException.","lastModifiedDate":"2021-08-20"},{"lineNumber":89,"author":{"gitId":"twothicc"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":90,"author":{"gitId":"twothicc"},"content":"            // Add 1 as user\u0027s number input is separated from command by 1 space.","lastModifiedDate":"2021-08-20"},{"lineNumber":91,"author":{"gitId":"twothicc"},"content":"            return Integer.parseInt(userInput.substring(command.getLength() + 1));","lastModifiedDate":"2021-08-20"},{"lineNumber":92,"author":{"gitId":"twothicc"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-08-20"},{"lineNumber":93,"author":{"gitId":"twothicc"},"content":"            // Invalid user input cannot be parsed into Integer.","lastModifiedDate":"2021-08-20"},{"lineNumber":94,"author":{"gitId":"twothicc"},"content":"            throw new DukeException(Ui.exceptionInvalidNumberInput(command));","lastModifiedDate":"2021-08-21"},{"lineNumber":95,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":96,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":97,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":98,"author":{"gitId":"twothicc"},"content":"    private static int findIndex(String s, Character c) {","lastModifiedDate":"2021-08-20"},{"lineNumber":99,"author":{"gitId":"twothicc"},"content":"        for (int i \u003d 0; i \u003c s.length(); i++) {","lastModifiedDate":"2021-08-20"},{"lineNumber":100,"author":{"gitId":"twothicc"},"content":"            if (s.charAt(i) \u003d\u003d c) {","lastModifiedDate":"2021-08-20"},{"lineNumber":101,"author":{"gitId":"twothicc"},"content":"                return i;","lastModifiedDate":"2021-08-20"},{"lineNumber":102,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":103,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":104,"author":{"gitId":"twothicc"},"content":"        return -1;","lastModifiedDate":"2021-08-20"},{"lineNumber":105,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":106,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":107,"author":{"gitId":"twothicc"},"content":"    public static String[] parseUserDescriptionInput(String userDescription, Descriptors descriptor,","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"twothicc"},"content":"                                                      Character separator, Commands command) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"twothicc"},"content":"        // Index of separator in userDescription.","lastModifiedDate":"2021-08-20"},{"lineNumber":110,"author":{"gitId":"twothicc"},"content":"        int separatorIdx \u003d findIndex(userDescription, separator);","lastModifiedDate":"2021-08-20"},{"lineNumber":111,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":112,"author":{"gitId":"twothicc"},"content":"        // Index of space after descriptor","lastModifiedDate":"2021-08-20"},{"lineNumber":113,"author":{"gitId":"twothicc"},"content":"        int indexDescriptorSpace \u003d separatorIdx + descriptor.getLength() + 1;","lastModifiedDate":"2021-08-20"},{"lineNumber":114,"author":{"gitId":"twothicc"},"content":"        if ((separatorIdx \u003d\u003d -1) || (userDescription.length() \u003c\u003d indexDescriptorSpace)) {","lastModifiedDate":"2021-08-20"},{"lineNumber":115,"author":{"gitId":"twothicc"},"content":"            throw new DukeException(Ui.exceptionMissingDescriptor(descriptor, command));","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":117,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":118,"author":{"gitId":"twothicc"},"content":"        // Index of first character following space after descriptor.","lastModifiedDate":"2021-08-20"},{"lineNumber":119,"author":{"gitId":"twothicc"},"content":"        int indexAfterDescriptorSpace \u003d separatorIdx + descriptor.getLength() + 2;","lastModifiedDate":"2021-08-20"},{"lineNumber":120,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":121,"author":{"gitId":"twothicc"},"content":"        // User\u0027s time input.","lastModifiedDate":"2021-08-20"},{"lineNumber":122,"author":{"gitId":"twothicc"},"content":"        String time \u003d userDescription.substring(indexAfterDescriptorSpace);","lastModifiedDate":"2021-08-20"},{"lineNumber":123,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":124,"author":{"gitId":"twothicc"},"content":"        // User\u0027s task description. Decrement by 1 as there is a space between task description and separator","lastModifiedDate":"2021-08-20"},{"lineNumber":125,"author":{"gitId":"twothicc"},"content":"        String commandDescription \u003d userDescription.substring(0, separatorIdx - 1);","lastModifiedDate":"2021-08-20"},{"lineNumber":126,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":127,"author":{"gitId":"twothicc"},"content":"        // Events and duke.task.Deadline could have empty tasks but taken as they do due to their descriptors and time.","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"twothicc"},"content":"        // Need to run another check on whether their task descriptions are empty.","lastModifiedDate":"2021-08-20"},{"lineNumber":129,"author":{"gitId":"twothicc"},"content":"        if (commandDescription.equals(\"\")) {","lastModifiedDate":"2021-08-20"},{"lineNumber":130,"author":{"gitId":"twothicc"},"content":"            throw new DukeException(Ui.exceptionMissingTaskDescription(command.getCommand()));","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":132,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":133,"author":{"gitId":"twothicc"},"content":"        // Returns a String array with the task description and user input after descriptor.","lastModifiedDate":"2021-08-20"},{"lineNumber":134,"author":{"gitId":"twothicc"},"content":"        return new String[] {commandDescription, time};","lastModifiedDate":"2021-08-20"},{"lineNumber":135,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":136,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"twothicc":136}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"import java.util.List;","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":" * Deals with loading tasks from save file and saving tasks in the file.","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"public class Storage {","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"    // File name for saved tasks.","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"    private final String SAVE_FILENAME;","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"        this.SAVE_FILENAME \u003d fileName;","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"    // | is a special character that has to be escaped.","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"    private static final String SAVE_SEPARATOR \u003d \" ~ \";","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"twothicc"},"content":"    private static String toSaveDateFormat(LocalDate localDate) throws DukeException {","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"            return localDate.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"twothicc"},"content":"        } catch (DateTimeException dateTimeException) {","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"            throw new DukeException(Ui.exceptionInvalidLocalDate());","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"    private static String toSaveFormat(Task task) throws DukeException {","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"twothicc"},"content":"        // Initialize StringBuilder.","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"twothicc"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"twothicc"},"content":"        // Get task type, done status of task.","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"        String taskType \u003d task.getTaskType();","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"        int done \u003d task.getIsDone() ? 1 : 0;","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"twothicc"},"content":"        // Build corresponding save string from task.","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"twothicc"},"content":"        stringBuilder.append(taskType).append(SAVE_SEPARATOR);","lastModifiedDate":"2021-08-20"},{"lineNumber":51,"author":{"gitId":"twothicc"},"content":"        stringBuilder.append(done).append(SAVE_SEPARATOR);","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"twothicc"},"content":"        stringBuilder.append(task.getDescription());","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":54,"author":{"gitId":"twothicc"},"content":"        // duke.task.Deadline tasks have time, so it is obtained and appended via stringBuilder.","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"twothicc"},"content":"        if (taskType.equals(\"D\")) {","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"twothicc"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"twothicc"},"content":"            LocalDate localDate \u003d deadline.getTime();","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"twothicc"},"content":"            String time \u003d toSaveDateFormat(localDate);","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"twothicc"},"content":"            stringBuilder.append(SAVE_SEPARATOR).append(time);","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"twothicc"},"content":"        // duke.task.Event tasks have time, so it is obtained and appended via stringBuilder.","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"twothicc"},"content":"        if (taskType.equals(\"E\")) {","lastModifiedDate":"2021-08-20"},{"lineNumber":64,"author":{"gitId":"twothicc"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"twothicc"},"content":"            LocalDate localDate \u003d event.getTime();","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"twothicc"},"content":"            String time \u003d toSaveDateFormat(localDate);","lastModifiedDate":"2021-08-20"},{"lineNumber":67,"author":{"gitId":"twothicc"},"content":"            stringBuilder.append(SAVE_SEPARATOR).append(time);","lastModifiedDate":"2021-08-20"},{"lineNumber":68,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":69,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"twothicc"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2021-08-20"},{"lineNumber":71,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":72,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":73,"author":{"gitId":"twothicc"},"content":"    private static Task parseSaveFormat(String save) throws DukeException {","lastModifiedDate":"2021-08-20"},{"lineNumber":74,"author":{"gitId":"twothicc"},"content":"        // Split save string by the save separator.","lastModifiedDate":"2021-08-20"},{"lineNumber":75,"author":{"gitId":"twothicc"},"content":"        String[] saveSplit \u003d save.split(SAVE_SEPARATOR);","lastModifiedDate":"2021-08-20"},{"lineNumber":76,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":77,"author":{"gitId":"twothicc"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":78,"author":{"gitId":"twothicc"},"content":"            // Get the task type, done status, description of task from saveSplit.","lastModifiedDate":"2021-08-20"},{"lineNumber":79,"author":{"gitId":"twothicc"},"content":"            String taskType \u003d saveSplit[0];","lastModifiedDate":"2021-08-20"},{"lineNumber":80,"author":{"gitId":"twothicc"},"content":"            // Save would be corrupt if done status cannot be parsed to int.","lastModifiedDate":"2021-08-20"},{"lineNumber":81,"author":{"gitId":"twothicc"},"content":"            int isDone \u003d Integer.parseInt(saveSplit[1]);","lastModifiedDate":"2021-08-20"},{"lineNumber":82,"author":{"gitId":"twothicc"},"content":"            String description \u003d saveSplit[2];","lastModifiedDate":"2021-08-20"},{"lineNumber":83,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":84,"author":{"gitId":"twothicc"},"content":"            // Create corresponding duke.task.Task object.","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"twothicc"},"content":"            // Save would be corrupt if duke.task.Deadline and duke.task.Event tasks do not have time.","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"twothicc"},"content":"            Task task;","lastModifiedDate":"2021-08-20"},{"lineNumber":87,"author":{"gitId":"twothicc"},"content":"            switch (taskType) {","lastModifiedDate":"2021-08-20"},{"lineNumber":88,"author":{"gitId":"twothicc"},"content":"            case \"T\":","lastModifiedDate":"2021-08-20"},{"lineNumber":89,"author":{"gitId":"twothicc"},"content":"                task \u003d new Todo(description);","lastModifiedDate":"2021-08-20"},{"lineNumber":90,"author":{"gitId":"twothicc"},"content":"                break;","lastModifiedDate":"2021-08-20"},{"lineNumber":91,"author":{"gitId":"twothicc"},"content":"            case \"D\":","lastModifiedDate":"2021-08-20"},{"lineNumber":92,"author":{"gitId":"twothicc"},"content":"                LocalDate by \u003d Parser.toLocalDate(saveSplit[3]);","lastModifiedDate":"2021-08-20"},{"lineNumber":93,"author":{"gitId":"twothicc"},"content":"                task \u003d new Deadline(description, by);","lastModifiedDate":"2021-08-20"},{"lineNumber":94,"author":{"gitId":"twothicc"},"content":"                break;","lastModifiedDate":"2021-08-20"},{"lineNumber":95,"author":{"gitId":"twothicc"},"content":"            case \"E\":","lastModifiedDate":"2021-08-20"},{"lineNumber":96,"author":{"gitId":"twothicc"},"content":"                LocalDate at \u003d Parser.toLocalDate(saveSplit[3]);","lastModifiedDate":"2021-08-20"},{"lineNumber":97,"author":{"gitId":"twothicc"},"content":"                task \u003d new Event(description, at);","lastModifiedDate":"2021-08-20"},{"lineNumber":98,"author":{"gitId":"twothicc"},"content":"                break;","lastModifiedDate":"2021-08-20"},{"lineNumber":99,"author":{"gitId":"twothicc"},"content":"            default:","lastModifiedDate":"2021-08-20"},{"lineNumber":100,"author":{"gitId":"twothicc"},"content":"                throw new DukeException(Ui.exceptionCorruptSaveFile());","lastModifiedDate":"2021-08-21"},{"lineNumber":101,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":102,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":103,"author":{"gitId":"twothicc"},"content":"            if (isDone \u003d\u003d 1) {","lastModifiedDate":"2021-08-20"},{"lineNumber":104,"author":{"gitId":"twothicc"},"content":"                task.markAsDone();","lastModifiedDate":"2021-08-20"},{"lineNumber":105,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":106,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":107,"author":{"gitId":"twothicc"},"content":"            return task;","lastModifiedDate":"2021-08-20"},{"lineNumber":108,"author":{"gitId":"twothicc"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":109,"author":{"gitId":"twothicc"},"content":"            throw new DukeException(Ui.exceptionCorruptSaveFile());","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":111,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":112,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":113,"author":{"gitId":"twothicc"},"content":"    public TaskList readTasksFromData(Ui ui) throws DukeException {","lastModifiedDate":"2021-08-20"},{"lineNumber":114,"author":{"gitId":"twothicc"},"content":"        // Initialize an ArrayList for duke.task.Task objects.","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"twothicc"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-20"},{"lineNumber":116,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":117,"author":{"gitId":"twothicc"},"content":"        // Get absolute path to save file.","lastModifiedDate":"2021-08-20"},{"lineNumber":118,"author":{"gitId":"twothicc"},"content":"        String cwd \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-20"},{"lineNumber":119,"author":{"gitId":"twothicc"},"content":"        Path absolutePathToSaveFile \u003d Paths.get(cwd, \"data\", this.SAVE_FILENAME);","lastModifiedDate":"2021-08-20"},{"lineNumber":120,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":121,"author":{"gitId":"twothicc"},"content":"        // Check if save file exists.","lastModifiedDate":"2021-08-20"},{"lineNumber":122,"author":{"gitId":"twothicc"},"content":"        boolean isSaveFileExist \u003d Files.exists(absolutePathToSaveFile);","lastModifiedDate":"2021-08-20"},{"lineNumber":123,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":124,"author":{"gitId":"twothicc"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":125,"author":{"gitId":"twothicc"},"content":"            // If save file does not exist, create save file;","lastModifiedDate":"2021-08-20"},{"lineNumber":126,"author":{"gitId":"twothicc"},"content":"            if (!isSaveFileExist) {","lastModifiedDate":"2021-08-20"},{"lineNumber":127,"author":{"gitId":"twothicc"},"content":"                saveTasksToData(new TaskList(ui, tasks));","lastModifiedDate":"2021-08-20"},{"lineNumber":128,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":129,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":130,"author":{"gitId":"twothicc"},"content":"            // Read from save file.","lastModifiedDate":"2021-08-20"},{"lineNumber":131,"author":{"gitId":"twothicc"},"content":"            List\u003cString\u003e rawTasks \u003d Files.readAllLines(absolutePathToSaveFile);","lastModifiedDate":"2021-08-20"},{"lineNumber":132,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":133,"author":{"gitId":"twothicc"},"content":"            // Parse each line into a duke.task.Task object and save to tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"twothicc"},"content":"            for (int i \u003d 0; i \u003c rawTasks.size(); i++) {","lastModifiedDate":"2021-08-20"},{"lineNumber":135,"author":{"gitId":"twothicc"},"content":"                Task task \u003d parseSaveFormat(rawTasks.get(i));","lastModifiedDate":"2021-08-20"},{"lineNumber":136,"author":{"gitId":"twothicc"},"content":"                tasks.add(task);","lastModifiedDate":"2021-08-20"},{"lineNumber":137,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":138,"author":{"gitId":"twothicc"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-08-20"},{"lineNumber":139,"author":{"gitId":"twothicc"},"content":"            // Failure to read from save file.","lastModifiedDate":"2021-08-20"},{"lineNumber":140,"author":{"gitId":"twothicc"},"content":"            throw new DukeException(Ui.exceptionCannotReadFile());","lastModifiedDate":"2021-08-21"},{"lineNumber":141,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":142,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":143,"author":{"gitId":"twothicc"},"content":"        return new TaskList(ui, tasks);","lastModifiedDate":"2021-08-20"},{"lineNumber":144,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":145,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":146,"author":{"gitId":"twothicc"},"content":"    public void saveTasksToData(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-20"},{"lineNumber":147,"author":{"gitId":"twothicc"},"content":"        // Extracts ArrayList from duke.TaskList object.","lastModifiedDate":"2021-08-21"},{"lineNumber":148,"author":{"gitId":"twothicc"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2021-08-20"},{"lineNumber":149,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":150,"author":{"gitId":"twothicc"},"content":"        // Get the absolute path to data subdirectory of project directory.","lastModifiedDate":"2021-08-20"},{"lineNumber":151,"author":{"gitId":"twothicc"},"content":"        String cwd \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-08-20"},{"lineNumber":152,"author":{"gitId":"twothicc"},"content":"        Path absolutePathToDataDir \u003d Paths.get(cwd, \"data\");","lastModifiedDate":"2021-08-20"},{"lineNumber":153,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":154,"author":{"gitId":"twothicc"},"content":"        // Check if data directory exists.","lastModifiedDate":"2021-08-20"},{"lineNumber":155,"author":{"gitId":"twothicc"},"content":"        boolean isDirectoryExist \u003d Files.exists(absolutePathToDataDir);","lastModifiedDate":"2021-08-20"},{"lineNumber":156,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":157,"author":{"gitId":"twothicc"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":158,"author":{"gitId":"twothicc"},"content":"            // If data directory does not exist, create one.","lastModifiedDate":"2021-08-20"},{"lineNumber":159,"author":{"gitId":"twothicc"},"content":"            if (!isDirectoryExist) {","lastModifiedDate":"2021-08-20"},{"lineNumber":160,"author":{"gitId":"twothicc"},"content":"                Files.createDirectory(absolutePathToDataDir);","lastModifiedDate":"2021-08-20"},{"lineNumber":161,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":162,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":163,"author":{"gitId":"twothicc"},"content":"            // Get absolute path to save file.","lastModifiedDate":"2021-08-20"},{"lineNumber":164,"author":{"gitId":"twothicc"},"content":"            Path absolutePathToSaveFile \u003d Paths.get(absolutePathToDataDir.toString(), this.SAVE_FILENAME);","lastModifiedDate":"2021-08-20"},{"lineNumber":165,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":166,"author":{"gitId":"twothicc"},"content":"            // Check if file exists.","lastModifiedDate":"2021-08-20"},{"lineNumber":167,"author":{"gitId":"twothicc"},"content":"            boolean isSaveFileExist \u003d Files.exists(absolutePathToSaveFile);","lastModifiedDate":"2021-08-20"},{"lineNumber":168,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":169,"author":{"gitId":"twothicc"},"content":"            // If file does not exist, create it.","lastModifiedDate":"2021-08-20"},{"lineNumber":170,"author":{"gitId":"twothicc"},"content":"            if (!isSaveFileExist) {","lastModifiedDate":"2021-08-20"},{"lineNumber":171,"author":{"gitId":"twothicc"},"content":"                Files.createFile(absolutePathToSaveFile);","lastModifiedDate":"2021-08-20"},{"lineNumber":172,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":173,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":174,"author":{"gitId":"twothicc"},"content":"            // Stop if there are no tasks to be saved.","lastModifiedDate":"2021-08-20"},{"lineNumber":175,"author":{"gitId":"twothicc"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-20"},{"lineNumber":176,"author":{"gitId":"twothicc"},"content":"                return;","lastModifiedDate":"2021-08-20"},{"lineNumber":177,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":178,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":179,"author":{"gitId":"twothicc"},"content":"            // Generate string to be saved to save file.","lastModifiedDate":"2021-08-20"},{"lineNumber":180,"author":{"gitId":"twothicc"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-20"},{"lineNumber":181,"author":{"gitId":"twothicc"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-20"},{"lineNumber":182,"author":{"gitId":"twothicc"},"content":"                String save \u003d toSaveFormat(tasks.get(i));","lastModifiedDate":"2021-08-20"},{"lineNumber":183,"author":{"gitId":"twothicc"},"content":"                stringBuilder.append(save);","lastModifiedDate":"2021-08-20"},{"lineNumber":184,"author":{"gitId":"twothicc"},"content":"                // If last task in tasks, no need to append newline.","lastModifiedDate":"2021-08-20"},{"lineNumber":185,"author":{"gitId":"twothicc"},"content":"                if (i \u003c (tasks.size() - 1)) {","lastModifiedDate":"2021-08-20"},{"lineNumber":186,"author":{"gitId":"twothicc"},"content":"                    stringBuilder.append(\"\\n\");","lastModifiedDate":"2021-08-20"},{"lineNumber":187,"author":{"gitId":"twothicc"},"content":"                    ;","lastModifiedDate":"2021-08-20"},{"lineNumber":188,"author":{"gitId":"twothicc"},"content":"                }","lastModifiedDate":"2021-08-20"},{"lineNumber":189,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":190,"author":{"gitId":"twothicc"},"content":"            String textToSave \u003d stringBuilder.toString();","lastModifiedDate":"2021-08-20"},{"lineNumber":191,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":192,"author":{"gitId":"twothicc"},"content":"            // Write to save file.","lastModifiedDate":"2021-08-20"},{"lineNumber":193,"author":{"gitId":"twothicc"},"content":"            byte[] textToSaveToBytes \u003d textToSave.getBytes();","lastModifiedDate":"2021-08-20"},{"lineNumber":194,"author":{"gitId":"twothicc"},"content":"            Files.write(absolutePathToSaveFile, textToSaveToBytes);","lastModifiedDate":"2021-08-20"},{"lineNumber":195,"author":{"gitId":"twothicc"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-08-20"},{"lineNumber":196,"author":{"gitId":"twothicc"},"content":"            throw new DukeException(Ui.exceptionCannotSaveFile());","lastModifiedDate":"2021-08-21"},{"lineNumber":197,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":198,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":199,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"twothicc":199}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":" * Deals with interactions with user.","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":" * Responds accordingly to user commands and inputs.","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"public class TaskList {","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"    public TaskList(Ui ui) {","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"    public TaskList(Ui ui, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"    public int size() {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"    public Task get(int idx) {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"        return this.tasks.get(idx);","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"twothicc"},"content":"    public Task add(Task task) {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"        return task;","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"    public Task remove(int idx) {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"twothicc"},"content":"        Task tempTask \u003d this.tasks.get(idx);","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"twothicc"},"content":"        this.tasks.remove(idx);","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"        return tempTask;","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"twothicc"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"twothicc"},"content":"        return this.tasks;","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"twothicc":47}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package duke;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":" * Stores commands, descriptors and responses used by duke.Duke chatbot.","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"public class Ui {","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"    // Enums for duke.Duke chatbot descriptors","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"    public enum Descriptors {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"        AT(\"at\"),","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"        BY(\"by\");","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"        private final String DESCRIPTOR;","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"        public String getDescriptor() {","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"            return this.DESCRIPTOR;","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"        public int getLength() {","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"            return this.DESCRIPTOR.length();","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"        Descriptors(String descriptor) {","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"            this.DESCRIPTOR \u003d descriptor;","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"        @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"        public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"            return this.DESCRIPTOR;","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"    // Enums for duke.Duke chatbot commands","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"    public enum Commands {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"twothicc"},"content":"        TODO(\"todo\"),","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"        DEADLINE(\"deadline\"),","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"        EVENT(\"event\"),","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"twothicc"},"content":"        DONE(\"done\"),","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"twothicc"},"content":"        DELETE(\"delete\"),","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"        LIST(\"list\"),","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"twothicc"},"content":"        DATE(\"date\"),","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"twothicc"},"content":"        BYE(\"bye\");","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"twothicc"},"content":"        private final String COMMAND;","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"        public String getCommand() {","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"twothicc"},"content":"            return this.COMMAND;","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":51,"author":{"gitId":"twothicc"},"content":"        public int getLength() {","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"twothicc"},"content":"            return this.COMMAND.length();","lastModifiedDate":"2021-08-20"},{"lineNumber":53,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":54,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"twothicc"},"content":"        Commands(String command) {","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"twothicc"},"content":"            this.COMMAND \u003d command;","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"twothicc"},"content":"        @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"twothicc"},"content":"        public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"twothicc"},"content":"            return this.COMMAND;","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":63,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":64,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"twothicc"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"twothicc"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-20"},{"lineNumber":67,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":68,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":69,"author":{"gitId":"twothicc"},"content":"    public void showGoodbye() {","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"twothicc"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-20"},{"lineNumber":71,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":72,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":73,"author":{"gitId":"twothicc"},"content":"    public void showMarkSuccess(Task task) {","lastModifiedDate":"2021-08-20"},{"lineNumber":74,"author":{"gitId":"twothicc"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-20"},{"lineNumber":75,"author":{"gitId":"twothicc"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2021-08-20"},{"lineNumber":76,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":77,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":78,"author":{"gitId":"twothicc"},"content":"    public void showDeleteSuccess(Task task, int size) {","lastModifiedDate":"2021-08-20"},{"lineNumber":79,"author":{"gitId":"twothicc"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-20"},{"lineNumber":80,"author":{"gitId":"twothicc"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2021-08-20"},{"lineNumber":81,"author":{"gitId":"twothicc"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":82,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":83,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":84,"author":{"gitId":"twothicc"},"content":"    public void showAddSuccess(Task task, int size) {","lastModifiedDate":"2021-08-20"},{"lineNumber":85,"author":{"gitId":"twothicc"},"content":"        System.out.println(\"Got it. I have added this task:\");","lastModifiedDate":"2021-08-20"},{"lineNumber":86,"author":{"gitId":"twothicc"},"content":"        System.out.println(task.toString());","lastModifiedDate":"2021-08-20"},{"lineNumber":87,"author":{"gitId":"twothicc"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":88,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":89,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":90,"author":{"gitId":"twothicc"},"content":"    public void showListSuccess() {","lastModifiedDate":"2021-08-20"},{"lineNumber":91,"author":{"gitId":"twothicc"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-20"},{"lineNumber":92,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":93,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":94,"author":{"gitId":"twothicc"},"content":"    public void showDateListSuccess(String formattedDateString) {","lastModifiedDate":"2021-08-20"},{"lineNumber":95,"author":{"gitId":"twothicc"},"content":"        System.out.println(\"Here are the Deadlines or Events that fall on \" + formattedDateString + \":\");","lastModifiedDate":"2021-08-20"},{"lineNumber":96,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":97,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":98,"author":{"gitId":"twothicc"},"content":"    public void showDateListSummary(String formattedDateString, int counter, int deadlines, int events) {","lastModifiedDate":"2021-08-20"},{"lineNumber":99,"author":{"gitId":"twothicc"},"content":"        System.out.println(\"A total of \" + counter + \" events (\" + deadlines + \" deadlines and \" +","lastModifiedDate":"2021-08-20"},{"lineNumber":100,"author":{"gitId":"twothicc"},"content":"                events + \" events) fall on \" + formattedDateString);","lastModifiedDate":"2021-08-20"},{"lineNumber":101,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":102,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":103,"author":{"gitId":"twothicc"},"content":"    public static String exceptionInvalidUserCommand() {","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"twothicc"},"content":"        return \"I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-08-21"},{"lineNumber":105,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":106,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"twothicc"},"content":"    public static String exceptionMissingTaskDescription(String userCommand) {","lastModifiedDate":"2021-08-21"},{"lineNumber":108,"author":{"gitId":"twothicc"},"content":"        return \"The description of \" + userCommand + \" cannot be empty.\";","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":110,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":111,"author":{"gitId":"twothicc"},"content":"    public static String exceptionMissingIndexForDelete() {","lastModifiedDate":"2021-08-21"},{"lineNumber":112,"author":{"gitId":"twothicc"},"content":"        return \"An index must be provided to delete task at index.\";","lastModifiedDate":"2021-08-21"},{"lineNumber":113,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"twothicc"},"content":"    public static String exceptionInvalidIndexForDelete() {","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"twothicc"},"content":"        return \"Index provided for delete is either less than 1 or exceeds the length of the list, hence invalid.\";","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":119,"author":{"gitId":"twothicc"},"content":"    public static String exceptionMissingIndexForMarking() {","lastModifiedDate":"2021-08-21"},{"lineNumber":120,"author":{"gitId":"twothicc"},"content":"        return \"An index must be provided to mark task at the index as done.\";","lastModifiedDate":"2021-08-21"},{"lineNumber":121,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":122,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"twothicc"},"content":"    public static String exceptionInvalidIndexForMarking() {","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"twothicc"},"content":"        return \"Index provided for done is either less than 1 or exceeds the length of the list, hence invalid.\";","lastModifiedDate":"2021-08-21"},{"lineNumber":125,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":127,"author":{"gitId":"twothicc"},"content":"    public static String exceptionInvalidDateTimeFormat() {","lastModifiedDate":"2021-08-21"},{"lineNumber":128,"author":{"gitId":"twothicc"},"content":"        return \"Cannot read invalid datetime format\";","lastModifiedDate":"2021-08-21"},{"lineNumber":129,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":130,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":131,"author":{"gitId":"twothicc"},"content":"    public static String exceptionInvalidLocalDate() {","lastModifiedDate":"2021-08-21"},{"lineNumber":132,"author":{"gitId":"twothicc"},"content":"        return \"Stored date is corrupt and cannot be read.\";","lastModifiedDate":"2021-08-21"},{"lineNumber":133,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":134,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":135,"author":{"gitId":"twothicc"},"content":"    public static String exceptionInvalidNumberInput(Ui.Commands command) {","lastModifiedDate":"2021-08-21"},{"lineNumber":136,"author":{"gitId":"twothicc"},"content":"        return \"Index for \" + command.getCommand() + \" must be an integer.\";","lastModifiedDate":"2021-08-21"},{"lineNumber":137,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":138,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":139,"author":{"gitId":"twothicc"},"content":"    public static String exceptionMissingDescriptor(Ui.Descriptors descriptor, Ui.Commands command) {","lastModifiedDate":"2021-08-21"},{"lineNumber":140,"author":{"gitId":"twothicc"},"content":"        return \"/\" + descriptor.getDescriptor() +","lastModifiedDate":"2021-08-21"},{"lineNumber":141,"author":{"gitId":"twothicc"},"content":"                \" must be provided and not empty for \" + command.getCommand() + \".\";","lastModifiedDate":"2021-08-21"},{"lineNumber":142,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":143,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":144,"author":{"gitId":"twothicc"},"content":"    public static String exceptionCorruptSaveFile() {","lastModifiedDate":"2021-08-21"},{"lineNumber":145,"author":{"gitId":"twothicc"},"content":"        return \"Save files corrupted. Failed to read tasks from save file.\";","lastModifiedDate":"2021-08-21"},{"lineNumber":146,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":147,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":148,"author":{"gitId":"twothicc"},"content":"    public static String exceptionCannotReadFile() {","lastModifiedDate":"2021-08-21"},{"lineNumber":149,"author":{"gitId":"twothicc"},"content":"        return \"Failed to read tasks from save file.\";","lastModifiedDate":"2021-08-21"},{"lineNumber":150,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":151,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":152,"author":{"gitId":"twothicc"},"content":"    public static String exceptionCannotSaveFile() {","lastModifiedDate":"2021-08-21"},{"lineNumber":153,"author":{"gitId":"twothicc"},"content":"        return \"Failed to save tasks\";","lastModifiedDate":"2021-08-21"},{"lineNumber":154,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":155,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":156,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"twothicc":156}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"import duke.Ui.Commands;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"import duke.Ui.Descriptors;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"    private String userInput;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"    public AddCommand(String userInput) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"    private void addTask(TaskList tasks, Ui ui, Character separator) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"        // Checks for command given in user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"        String userCommand;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"        if (this.userInput.startsWith(Commands.TODO.getCommand())) {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"            userCommand \u003d Commands.TODO.getCommand();","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"        } else if (this.userInput.startsWith(Commands.DEADLINE.getCommand())) {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"            userCommand \u003d Commands.DEADLINE.getCommand();","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"        } else if (this.userInput.startsWith(Commands.EVENT.getCommand())) {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"            userCommand \u003d Commands.EVENT.getCommand();","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"twothicc"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"            throw new DukeException(Ui.exceptionInvalidUserCommand());","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"        // Checks if user input contains a task description and obtain it if it exists.","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"        if (this.userInput.length() \u003c\u003d userCommand.length() + 1) {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"twothicc"},"content":"            throw new DukeException(Ui.exceptionMissingTaskDescription(userCommand));","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"        String description \u003d this.userInput.substring(userCommand.length() + 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"twothicc"},"content":"        // Parses description and adds the corresponding task to tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"twothicc"},"content":"        if (userCommand.equals(Commands.TODO.getCommand())) {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"twothicc"},"content":"            // Adds to-do task to tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"            tasks.add(new Todo(description));","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"        } else if (userCommand.equals(Commands.DEADLINE.getCommand())) {","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"twothicc"},"content":"            // Parses description into task description and time.","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"twothicc"},"content":"            String[] descriptions \u003d","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"twothicc"},"content":"                    Parser.parseUserDescriptionInput(description, Descriptors.BY, separator, Commands.DEADLINE);","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"twothicc"},"content":"            // Convert time to LocalDate.","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"twothicc"},"content":"            LocalDate localDate \u003d Parser.toLocalDate(descriptions[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"twothicc"},"content":"            // Adds duke.task.Deadline task to tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"twothicc"},"content":"            tasks.add(new Deadline(descriptions[0], localDate));","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"twothicc"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"twothicc"},"content":"            // Parses description into task description and time.","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"twothicc"},"content":"            String[] descriptions \u003d","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"twothicc"},"content":"                    Parser.parseUserDescriptionInput(description, Descriptors.AT, separator, Commands.EVENT);","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"twothicc"},"content":"            // Convert time to LocalDate.","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"twothicc"},"content":"            LocalDate localDate \u003d Parser.toLocalDate(descriptions[1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"twothicc"},"content":"            // Adds duke.task.Event task to tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"twothicc"},"content":"            tasks.add(new Event(descriptions[0], localDate));","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"twothicc"},"content":"        // Prints response to user after successfully adding task to tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"twothicc"},"content":"        ui.showAddSuccess(tasks.get(tasks.size() - 1), tasks.size());","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"twothicc"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"twothicc"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"twothicc"},"content":"            // Add task according to user specifications.","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"twothicc"},"content":"            this.addTask(tasks, ui, \u0027/\u0027);","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":79,"author":{"gitId":"twothicc"},"content":"            // Saves edited duke.TaskList to save file.","lastModifiedDate":"2021-08-21"},{"lineNumber":80,"author":{"gitId":"twothicc"},"content":"            storage.saveTasksToData(tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":81,"author":{"gitId":"twothicc"},"content":"        } catch (DukeException dukeException) {","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"twothicc"},"content":"            System.out.println(dukeException);","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"twothicc":85}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"twothicc":9}},{"path":"src/main/java/duke/command/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"import duke.Ui.Commands;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"public class DateCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"    private String userInput;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"    public DateCommand(String userInput) {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"    private void printTaskAtDate(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"        // Initialize counters to track number of tasks, events and deadlines.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"        int events \u003d 0;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"        int deadlines \u003d 0;","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"        // Parses user input into LocalDate. User input for date will follow \"date\" command.","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"        String dateString \u003d this.userInput.substring(Commands.DATE.getLength() + 1);","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"        LocalDate localDate \u003d Parser.toLocalDate(dateString);","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"        String formattedDateString \u003d Parser.parseLocalDate(localDate);","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"        // Print to notify users of the date they are searching for.","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"        ui.showDateListSuccess(formattedDateString);","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"        // Print Deadlines and Events with LocalDate that matches date input from user.","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"        for (Task task : tasks.getTasks()) {","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"twothicc"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"twothicc"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"                if (localDate.equals(deadline.getTime())) {","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"twothicc"},"content":"                    counter++;","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"twothicc"},"content":"                    deadlines++;","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"twothicc"},"content":"                    System.out.println(counter + \".\" + deadline);","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"twothicc"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"twothicc"},"content":"            if (task instanceof Event) {","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"twothicc"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"twothicc"},"content":"                if (localDate.equals(event.getTime())) {","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"twothicc"},"content":"                    counter++;","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"twothicc"},"content":"                    events++;","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"twothicc"},"content":"                    System.out.println(counter + \".\" + event);","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"twothicc"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"twothicc"},"content":"        // Print a summary of matching tasks to the user.","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"twothicc"},"content":"        ui.showDateListSummary(formattedDateString, counter, deadlines, events);","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"twothicc"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"twothicc"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"twothicc"},"content":"            // Print tasks that fall on user specified date.","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"twothicc"},"content":"            this.printTaskAtDate(tasks, ui);","lastModifiedDate":"2021-08-21"},{"lineNumber":67,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"twothicc"},"content":"            // Saves edited duke.TaskList to save file.","lastModifiedDate":"2021-08-21"},{"lineNumber":69,"author":{"gitId":"twothicc"},"content":"            storage.saveTasksToData(tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"twothicc"},"content":"        } catch (DukeException dukeException) {","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"twothicc"},"content":"            System.out.println(dukeException);","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"twothicc":74}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"import duke.Ui.Commands;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"    private String userInput;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"    public DeleteCommand(String userInput) {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"    private void deleteTask(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"        if (this.userInput.length() \u003c\u003d (Commands.DELETE.getLength() + 1)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"            // Missing user input for index of task to be deleted.","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"            throw new DukeException(Ui.exceptionMissingIndexForDelete());","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"            // Parses integer in user input. 1 space is accounted for as it separates command and index.","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"            int userNumInput \u003d Parser.parseUserNumInput(this.userInput, Commands.DELETE);","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"            // Decrement integer from user input to match indexing of tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"            int idx \u003d userNumInput - 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"            // Checks for invalid index.","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"            if (idx \u003e\u003d tasks.size() || idx \u003c 0) {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"                throw new DukeException(Ui.exceptionInvalidIndexForDelete());","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"            // Deletes task at index and obtain the deleted task","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"twothicc"},"content":"            Task deletedTask \u003d tasks.remove(idx);","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"            // Prints response to user after successfully deleting task at index.","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"twothicc"},"content":"            ui.showDeleteSuccess(deletedTask, tasks.size());","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"twothicc"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"twothicc"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"            // Deletes task at user specified index.","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"            this.deleteTask(tasks, ui);","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"twothicc"},"content":"            // Saves edited duke.TaskList to save file.","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"twothicc"},"content":"            storage.saveTasksToData(tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"twothicc"},"content":"        } catch (DukeException dukeException) {","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"twothicc"},"content":"            System.out.println(dukeException);","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"twothicc":55}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"    private String userInput;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"    public ListCommand(String userInput) {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"    private void printTasks(TaskList tasks, Ui ui) {","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"        ui.showListSuccess();","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"            // Increment i by 1 so number matches display indexing which starts from 1.","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"            int idx \u003d i + 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"            // Format should be \"?. taskDescription\\n\"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"            System.out.printf(\"%d.%s%n\", idx, tasks.get(i).toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"        // Prints tasks in tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"        this.printTasks(tasks, ui);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"            // Saves edited duke.TaskList to save file.","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"twothicc"},"content":"            storage.saveTasksToData(tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"        } catch (DukeException dukeException) {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"            System.out.println(dukeException);","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"twothicc":38}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package duke.command;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"import duke.Ui.Commands;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"    private String userInput;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"    public MarkCommand(String userInput) {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"    private void markTask(TaskList tasks, Ui ui) throws DukeException {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"        if (userInput.length() \u003c\u003d (Commands.DONE.getLength() + 1)) {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"            // Missing user input for index of task to be marked as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"            throw new DukeException(Ui.exceptionMissingIndexForMarking());","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"        } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"            // Parses integer in user input.","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"            int userNumInput \u003d Parser.parseUserNumInput(this.userInput, Commands.DONE);","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"            // Decrement integer from user input to match indexing of tasks.","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"            int idx \u003d userNumInput - 1;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"            // Checks for invalid index.","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"            if (idx \u003e\u003d tasks.size() || idx \u003c 0) {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"                throw new DukeException(Ui.exceptionInvalidIndexForMarking());","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"twothicc"},"content":"            // Marks task at index as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"            tasks.get(idx).markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"twothicc"},"content":"            // Prints response to user after successfully marking task at index as done.","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"            ui.showMarkSuccess(tasks.get(idx));","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"twothicc"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"twothicc"},"content":"        try {","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"twothicc"},"content":"            // Marks duke.task.Task at user specified index in duke.TaskList.","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"twothicc"},"content":"            this.markTask(tasks, ui);","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"twothicc"},"content":"            // Saves edited duke.TaskList to save file.","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"twothicc"},"content":"            storage.saveTasksToData(tasks);","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"twothicc"},"content":"        } catch (DukeException dukeException) {","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"twothicc"},"content":"            System.out.println(dukeException);","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"twothicc":53}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"        return \"D\";","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"    public LocalDate getTime() {","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"        return this.by;","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + Parser.parseLocalDate(this.by) + \")\";","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"        } catch (DukeException dukeException) {","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"            return dukeException.toString();","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"twothicc":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"import duke.DukeException;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"import duke.Parser;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"    protected LocalDate at;","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"        return \"E\";","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"    public LocalDate getTime() {","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"        return this.at;","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"            return \"[E]\" + super.toString() + \" (at: \" + Parser.parseLocalDate(this.at) + \")\";","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"        } catch (DukeException dukeException) {","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"            return dukeException.toString();","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"twothicc":35}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"public class Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"    protected String description;","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"        return isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"        return description;","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-14"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"    public LocalDate getTime() {","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"        return null;","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-14"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":33,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"        return null;","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"twothicc"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":40,"author":{"gitId":"twothicc"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-14"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":42,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"twothicc":42}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"package duke.task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"        super(description);","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"        return \"T\";","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"    @Override","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"    public String toString() {","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"twothicc":18}},{"path":"test/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"/**","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":" * Contains JUnit5 tests for public members of duke.task.Task class.","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":" */","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"class TaskTest {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"    void getStatusIcon_undoneTask_uncheckedBox() {","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"        Task task \u003d new Task(\"duke.task.Task\");","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"        assertEquals(\"[ ]\", task.getStatusIcon());","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"    void markAsDone_undoneTask_checkedBox() {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"        Task task \u003d new Task(\"duke.task.Task\");","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"twothicc"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"twothicc"},"content":"        assertEquals(\"[X]\", task.getStatusIcon());","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"twothicc"},"content":"    void toString_undoneTask_descriptionWithCheckedBox() {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"twothicc"},"content":"        Task task \u003d new Task(\"duke.task.Task\");","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"twothicc"},"content":"        assertEquals(\"[ ] duke.task.Task\", task.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"twothicc"},"content":"    @Test","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"twothicc"},"content":"    void toString_doneTask_descriptionWithUncheckedBox() {","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"twothicc"},"content":"        Task task \u003d new Task(\"duke.task.Task\");","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"twothicc"},"content":"        task.markAsDone();","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"twothicc"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"twothicc"},"content":"        assertEquals(\"[X] duke.task.Task\", task.toString());","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"twothicc"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"twothicc"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"twothicc":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"twothicc"},"content":"todo hello world","lastModifiedDate":"2021-08-14"},{"lineNumber":2,"author":{"gitId":"twothicc"},"content":"deadline hello world /by time","lastModifiedDate":"2021-08-14"},{"lineNumber":3,"author":{"gitId":"twothicc"},"content":"event hello world /at time","lastModifiedDate":"2021-08-14"},{"lineNumber":4,"author":{"gitId":"twothicc"},"content":"done 2","lastModifiedDate":"2021-08-14"},{"lineNumber":5,"author":{"gitId":"twothicc"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"twothicc"},"content":"delete 2","lastModifiedDate":"2021-08-14"},{"lineNumber":7,"author":{"gitId":"twothicc"},"content":"list","lastModifiedDate":"2021-08-14"},{"lineNumber":8,"author":{"gitId":"twothicc"},"content":"todo","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"twothicc"},"content":"event","lastModifiedDate":"2021-08-14"},{"lineNumber":10,"author":{"gitId":"twothicc"},"content":"deadline","lastModifiedDate":"2021-08-14"},{"lineNumber":11,"author":{"gitId":"twothicc"},"content":"event hello","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"twothicc"},"content":"deadline hello","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"twothicc"},"content":"blah","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"twothicc"},"content":"done","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"twothicc"},"content":"done 100","lastModifiedDate":"2021-08-14"},{"lineNumber":16,"author":{"gitId":"twothicc"},"content":"done hi","lastModifiedDate":"2021-08-14"},{"lineNumber":17,"author":{"gitId":"twothicc"},"content":"delete","lastModifiedDate":"2021-08-14"},{"lineNumber":18,"author":{"gitId":"twothicc"},"content":"delete 100","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"twothicc"},"content":"delete hi","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"twothicc"},"content":"bye","lastModifiedDate":"2021-08-14"}],"authorContributionMap":{"twothicc":20}}]
