[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"[![Java CI with Gradle](https://github.com/Chang-CH/ip/actions/workflows/gradle.yml/badge.svg)](https://github.com/Chang-CH/ip/actions/workflows/gradle.yml)","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"# duke.Duke project template","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Chang-CH":3,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"    implementation \u0027junit:junit:4.12\u0027","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"    archiveBaseName \u003d \"duk\"","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":44,"Chang-CH":18}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"### Auto saving","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"Previous tasks are automatically loaded on start up, and saved on exit.","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"### Task recording","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"Add tasks, mark tasks as done, delete tasks, and list tasks.","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"### Task searching","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"Find tasks by names.","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"## Commands","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"### `help` - Display help message","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"Displays list of commands and respective names.","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"---","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"### `bye` - Exits Duk","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"Saves tasks to a file, then exits Duk.","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"---","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"### `list` - Display all tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"Displays list of all tasks currently stored in Duk.","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"---","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"### `done` - Mark task as done","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"Marks the task at a given index as done.","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"Example of usage: ","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"`done 1`","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"Task 1 is marked as done.","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"[T][X] task","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"---","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"### `delete` - Delete task","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"Deletes the task at the given index.","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"Example of usage: ","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"`delete 1`","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"Task 1 is deleted.","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"Chang-CH"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"Noted. I\u0027ve removed this task","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"[T][X] task","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"Now you have 0 tasks in the list.","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"---","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"Chang-CH"},"content":"### `find` - Finds tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"Chang-CH"},"content":"Finds tasks matching given search query.","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"Chang-CH"},"content":"`find some`","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"Chang-CH"},"content":"Finds tasks with \"some\" in the name.","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"ere are the matching tasks in your list:","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"[T][X] something","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":93,"author":{"gitId":"Chang-CH"},"content":"---","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":95,"author":{"gitId":"Chang-CH"},"content":"### `event` - Adds new Event","lastModifiedDate":"2021-09-13"},{"lineNumber":96,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"Chang-CH"},"content":"Adds a new event to the task list.","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"Chang-CH"},"content":"Example of usage: ","lastModifiedDate":"2021-09-13"},{"lineNumber":100,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"Chang-CH"},"content":"`event name /at 2019-01-02`","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"Chang-CH"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":104,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"Chang-CH"},"content":"Adds a new event with date specified.","lastModifiedDate":"2021-09-13"},{"lineNumber":106,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":107,"author":{"gitId":"Chang-CH"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":108,"author":{"gitId":"Chang-CH"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-13"},{"lineNumber":109,"author":{"gitId":"Chang-CH"},"content":"[E][ ] name (at: Jan 2 2019)","lastModifiedDate":"2021-09-13"},{"lineNumber":110,"author":{"gitId":"Chang-CH"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":111,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":112,"author":{"gitId":"Chang-CH"},"content":"---","lastModifiedDate":"2021-09-13"},{"lineNumber":113,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":114,"author":{"gitId":"Chang-CH"},"content":"### `deadline` - Adds new Deadline","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"Chang-CH"},"content":"Adds a new deadline to the task list.","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":118,"author":{"gitId":"Chang-CH"},"content":"Example of usage: ","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"Chang-CH"},"content":"`deadline name /by 2019-01-02`","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":122,"author":{"gitId":"Chang-CH"},"content":"Expected outcome:","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"Chang-CH"},"content":"Adds a new event with date specified.","lastModifiedDate":"2021-09-13"},{"lineNumber":125,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"Chang-CH"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":127,"author":{"gitId":"Chang-CH"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-13"},{"lineNumber":128,"author":{"gitId":"Chang-CH"},"content":"[D][ ] name (by: Jan 2 2019)","lastModifiedDate":"2021-09-13"},{"lineNumber":129,"author":{"gitId":"Chang-CH"},"content":"```","lastModifiedDate":"2021-09-13"},{"lineNumber":130,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"Chang-CH"},"content":"---","lastModifiedDate":"2021-09-13"},{"lineNumber":132,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":133,"author":{"gitId":"Chang-CH"},"content":"### `todo` - Adds new Todo","lastModifiedDate":"2021-09-13"},{"lineNumber":134,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":135,"author":{"gitId":"Chang-CH"},"content":"Adds a new todo to the task list.","lastModifiedDate":"2021-09-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":139,"author":{"gitId":"Chang-CH"},"content":"`todo name`","lastModifiedDate":"2021-09-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":143,"author":{"gitId":"Chang-CH"},"content":"Adds a new todo.","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":146,"author":{"gitId":"Chang-CH"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-13"},{"lineNumber":147,"author":{"gitId":"Chang-CH"},"content":"[T][ ] name","lastModifiedDate":"2021-09-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":27,"Chang-CH":121}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":" * DialogBox represents a UI container for text and profile images","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"     * Sole constructor for dialog box.","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"     * @param l label to display.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"     * @param iv picture to display.","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"    private DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"        assert l !\u003d null : \"Label should not be null.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"        assert iv !\u003d null : \"Image should not be null.\";","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"        final Circle clip \u003d new Circle(40, 40, 40);","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"        iv.setClip(clip);","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"        l.setWrapText(true);","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"        iv.setFitWidth(80.0);","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"        iv.setFitHeight(80.0);","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"        this.getChildren().addAll(l, iv);","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"    private void flip() {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"     * Creates a user dialog box","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"     * @param l label to display","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"     * @param iv image to display","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"     * @return dialog box for user inputs","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"        l.setStyle(\"-fx-background-color: #4cc5e2; \"","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"                + \"-fx-text-fill: #122448;\"","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"                + \"-fx-background-radius: 5; \"","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"                + \"-fx-padding: 5;\");","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"        db.flip();","lastModifiedDate":"2021-09-03"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"        return db;","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"     * Creates a Duk dialog box","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"Chang-CH"},"content":"     * @param l label to display","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"     * @param iv image to display","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"     * @return dialog box for Duk responses","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"        l.setStyle(\"-fx-background-color: #122448; \"","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"                + \"-fx-background-radius: 5;\"","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"Chang-CH"},"content":"                + \"-fx-padding: 5; \"","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"Chang-CH"},"content":"                + \"-fx-text-fill: #4cc5e2;\");","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"Chang-CH"},"content":"        return db;","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Chang-CH":80}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import javafx.scene.layout.BackgroundImage;","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import javafx.scene.layout.BackgroundSize;","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":" * Main class of the project.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"public class Duke extends Application {","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"    private static final double STAGE_WIDTH \u003d 600.0;","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"    private static final double STAGE_HEIGHT \u003d 400.0;","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"    private static final double SCROLL_WIDTH \u003d 385.0;","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"    private static final double SCOLL_HEIGHT \u003d 535.0;","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"    private static final double DEFAULT_PADDING \u003d 10.0;","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"    private static final double INPUT_WIDTH \u003d 325.0;","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"    private static final double BUTTON_WIDTH \u003d 55.0;","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"     * Class constructor for javafx.","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"     * Ui initialization is delayed to accept dialogContainer.","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"    public Duke() {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"        String userPath \u003d System.getProperty(\"user.dir\")","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"                + \"\\\\data\\\\save.txt\";","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"        storage \u003d new Storage(userPath);","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"        tasks \u003d storage.load();","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"     * Class constructor to initialize with file path.","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"     * @param filePath path to the log file to be read by Storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"    private Duke(String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"        tasks \u003d storage.load();","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"     * Starts Duk as a command line program.","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"        String userPath \u003d System.getProperty(\"user.dir\")","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"                + \"\\\\data\\\\save.txt\";","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"        new Duke(userPath).run();","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"     * Loops infinitely between user input and display output.","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"    private void run() {","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"        assert storage !\u003d null : \"Storage not properly initialized\";","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"Chang-CH"},"content":"        assert tasks !\u003d null : \"TaskList not properly initialized\";","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"Chang-CH"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-20"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"Chang-CH"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-20"},{"lineNumber":80,"author":{"gitId":"Chang-CH"},"content":"            ui.showLine();","lastModifiedDate":"2021-08-20"},{"lineNumber":81,"author":{"gitId":"Chang-CH"},"content":"            try {","lastModifiedDate":"2021-08-20"},{"lineNumber":82,"author":{"gitId":"Chang-CH"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-20"},{"lineNumber":83,"author":{"gitId":"Chang-CH"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-20"},{"lineNumber":84,"author":{"gitId":"Chang-CH"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-20"},{"lineNumber":85,"author":{"gitId":"Chang-CH"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-20"},{"lineNumber":86,"author":{"gitId":"Chang-CH"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-20"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"            ui.showLine();","lastModifiedDate":"2021-08-20"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":92,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"     * Starts the GUI display.","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"Chang-CH"},"content":"     * @param primaryStage jfx stage to be used.","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"Chang-CH"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"Chang-CH"},"content":"        // GUI components initialization","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"Chang-CH"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"Chang-CH"},"content":"        VBox dialogContainer \u003d new VBox();","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"Chang-CH"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"Chang-CH"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"Chang-CH"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"Chang-CH"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"Chang-CH"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"Chang-CH"},"content":"        // Initialize ui","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"Chang-CH"},"content":"        ui \u003d new Ui(dialogContainer);","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":112,"author":{"gitId":"Chang-CH"},"content":"        // Style ui","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"Chang-CH"},"content":"        setLayout(mainLayout, primaryStage, dialogContainer, sendButton);","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"Chang-CH"},"content":"        // javaFx lifecycle hooks","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"Chang-CH"},"content":"        sendButton.setOnMouseClicked((event) -\u003e processInput(userInput.getText()));","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"Chang-CH"},"content":"        userInput.setOnAction((event) -\u003e processInput(userInput.getText()));","lastModifiedDate":"2021-09-04"},{"lineNumber":118,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"Chang-CH"},"content":"        // Set theme","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"Chang-CH"},"content":"        scrollPane.setStyle(\"-fx-background: transparent; -fx-background-color: transparent;\");","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"Chang-CH"},"content":"        dialogContainer.setStyle(\"-fx-background-color: transparent; -fx-base: transparent;\");","lastModifiedDate":"2021-09-13"},{"lineNumber":122,"author":{"gitId":"Chang-CH"},"content":"        sendButton.setStyle(\"-fx-background-color: #2b2b2b; -fx-text-fill: white\");","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"Chang-CH"},"content":"        mainLayout.setStyle(\"-fx-control-inner-background: #2b2b2b;\");","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"Chang-CH"},"content":"        setBackground(mainLayout);","lastModifiedDate":"2021-09-13"},{"lineNumber":125,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"Chang-CH"},"content":"        // Starts display loop","lastModifiedDate":"2021-09-04"},{"lineNumber":127,"author":{"gitId":"Chang-CH"},"content":"        primaryStage.setScene(scene);","lastModifiedDate":"2021-09-04"},{"lineNumber":128,"author":{"gitId":"Chang-CH"},"content":"        primaryStage.show();","lastModifiedDate":"2021-09-04"},{"lineNumber":129,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":130,"author":{"gitId":"Chang-CH"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-04"},{"lineNumber":131,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":132,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":133,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":134,"author":{"gitId":"Chang-CH"},"content":"     * Sets the background of the ui.","lastModifiedDate":"2021-09-14"},{"lineNumber":135,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":136,"author":{"gitId":"Chang-CH"},"content":"     * @param anchorPane Ui element to be set.","lastModifiedDate":"2021-09-14"},{"lineNumber":137,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":138,"author":{"gitId":"Chang-CH"},"content":"    private void setBackground(AnchorPane anchorPane) {","lastModifiedDate":"2021-09-13"},{"lineNumber":139,"author":{"gitId":"Chang-CH"},"content":"        Image image \u003d new Image(this.getClass().getResourceAsStream(\"/images/bg.jpg\"));","lastModifiedDate":"2021-09-13"},{"lineNumber":140,"author":{"gitId":"Chang-CH"},"content":"        BackgroundSize size \u003d new BackgroundSize(STAGE_WIDTH,","lastModifiedDate":"2021-09-13"},{"lineNumber":141,"author":{"gitId":"Chang-CH"},"content":"                STAGE_HEIGHT,","lastModifiedDate":"2021-09-13"},{"lineNumber":142,"author":{"gitId":"Chang-CH"},"content":"                true,","lastModifiedDate":"2021-09-13"},{"lineNumber":143,"author":{"gitId":"Chang-CH"},"content":"                true,","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"Chang-CH"},"content":"                false,","lastModifiedDate":"2021-09-13"},{"lineNumber":145,"author":{"gitId":"Chang-CH"},"content":"                true);","lastModifiedDate":"2021-09-13"},{"lineNumber":146,"author":{"gitId":"Chang-CH"},"content":"        BackgroundImage backgroundImage \u003d new BackgroundImage(image,","lastModifiedDate":"2021-09-13"},{"lineNumber":147,"author":{"gitId":"Chang-CH"},"content":"                null,","lastModifiedDate":"2021-09-13"},{"lineNumber":148,"author":{"gitId":"Chang-CH"},"content":"                null,","lastModifiedDate":"2021-09-13"},{"lineNumber":149,"author":{"gitId":"Chang-CH"},"content":"                null,","lastModifiedDate":"2021-09-13"},{"lineNumber":150,"author":{"gitId":"Chang-CH"},"content":"                size);","lastModifiedDate":"2021-09-13"},{"lineNumber":151,"author":{"gitId":"Chang-CH"},"content":"        anchorPane.setBackground(new Background(backgroundImage));","lastModifiedDate":"2021-09-13"},{"lineNumber":152,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":153,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":154,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":155,"author":{"gitId":"Chang-CH"},"content":"     * Sets the ui layout.","lastModifiedDate":"2021-09-04"},{"lineNumber":156,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":157,"author":{"gitId":"Chang-CH"},"content":"     * @param mainLayout main AnchorPane.","lastModifiedDate":"2021-09-04"},{"lineNumber":158,"author":{"gitId":"Chang-CH"},"content":"     * @param primaryStage stage to be displayed.","lastModifiedDate":"2021-09-04"},{"lineNumber":159,"author":{"gitId":"Chang-CH"},"content":"     * @param dialogContainer VBox containing all dialog elements.","lastModifiedDate":"2021-09-04"},{"lineNumber":160,"author":{"gitId":"Chang-CH"},"content":"     * @param sendButton Send button.","lastModifiedDate":"2021-09-04"},{"lineNumber":161,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":162,"author":{"gitId":"Chang-CH"},"content":"    private void setLayout(AnchorPane mainLayout,","lastModifiedDate":"2021-09-04"},{"lineNumber":163,"author":{"gitId":"Chang-CH"},"content":"                           Stage primaryStage,","lastModifiedDate":"2021-09-04"},{"lineNumber":164,"author":{"gitId":"Chang-CH"},"content":"                           VBox dialogContainer,","lastModifiedDate":"2021-09-04"},{"lineNumber":165,"author":{"gitId":"Chang-CH"},"content":"                           Button sendButton) {","lastModifiedDate":"2021-09-04"},{"lineNumber":166,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":167,"author":{"gitId":"Chang-CH"},"content":"        // GUI window settings","lastModifiedDate":"2021-08-29"},{"lineNumber":168,"author":{"gitId":"Chang-CH"},"content":"        primaryStage.setTitle(\"Duk\");","lastModifiedDate":"2021-08-29"},{"lineNumber":169,"author":{"gitId":"Chang-CH"},"content":"        primaryStage.setResizable(false);","lastModifiedDate":"2021-08-29"},{"lineNumber":170,"author":{"gitId":"Chang-CH"},"content":"        primaryStage.setMinHeight(STAGE_WIDTH);","lastModifiedDate":"2021-09-04"},{"lineNumber":171,"author":{"gitId":"Chang-CH"},"content":"        primaryStage.setMinWidth(STAGE_HEIGHT);","lastModifiedDate":"2021-09-04"},{"lineNumber":172,"author":{"gitId":"Chang-CH"},"content":"        mainLayout.setPrefSize(STAGE_HEIGHT, STAGE_WIDTH);","lastModifiedDate":"2021-09-04"},{"lineNumber":173,"author":{"gitId":"Chang-CH"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2021-09-04"},{"lineNumber":174,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":175,"author":{"gitId":"Chang-CH"},"content":"        // GUI components styling","lastModifiedDate":"2021-08-29"},{"lineNumber":176,"author":{"gitId":"Chang-CH"},"content":"        scrollPane.setPrefSize(SCROLL_WIDTH, SCOLL_HEIGHT);","lastModifiedDate":"2021-09-04"},{"lineNumber":177,"author":{"gitId":"Chang-CH"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-08-29"},{"lineNumber":178,"author":{"gitId":"Chang-CH"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-08-29"},{"lineNumber":179,"author":{"gitId":"Chang-CH"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-08-29"},{"lineNumber":180,"author":{"gitId":"Chang-CH"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-08-29"},{"lineNumber":181,"author":{"gitId":"Chang-CH"},"content":"        dialogContainer.setPrefHeight(-1);","lastModifiedDate":"2021-09-13"},{"lineNumber":182,"author":{"gitId":"Chang-CH"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-08-31"},{"lineNumber":183,"author":{"gitId":"Chang-CH"},"content":"        dialogContainer.setPadding(new Insets(DEFAULT_PADDING, DEFAULT_PADDING, DEFAULT_PADDING, DEFAULT_PADDING));","lastModifiedDate":"2021-09-04"},{"lineNumber":184,"author":{"gitId":"Chang-CH"},"content":"        dialogContainer.setSpacing(DEFAULT_PADDING);","lastModifiedDate":"2021-09-04"},{"lineNumber":185,"author":{"gitId":"Chang-CH"},"content":"        userInput.setPrefWidth(INPUT_WIDTH);","lastModifiedDate":"2021-09-04"},{"lineNumber":186,"author":{"gitId":"Chang-CH"},"content":"        sendButton.setPrefWidth(BUTTON_WIDTH);","lastModifiedDate":"2021-09-04"},{"lineNumber":187,"author":{"gitId":"Chang-CH"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-08-29"},{"lineNumber":188,"author":{"gitId":"Chang-CH"},"content":"        AnchorPane.setBottomAnchor(sendButton, 10.0);","lastModifiedDate":"2021-09-13"},{"lineNumber":189,"author":{"gitId":"Chang-CH"},"content":"        AnchorPane.setRightAnchor(sendButton, 5.0);","lastModifiedDate":"2021-09-13"},{"lineNumber":190,"author":{"gitId":"Chang-CH"},"content":"        AnchorPane.setLeftAnchor(userInput , 5.0);","lastModifiedDate":"2021-09-13"},{"lineNumber":191,"author":{"gitId":"Chang-CH"},"content":"        AnchorPane.setBottomAnchor(userInput, 10.0);","lastModifiedDate":"2021-09-13"},{"lineNumber":192,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":193,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":194,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":195,"author":{"gitId":"Chang-CH"},"content":"     * Processes user input from GUI.","lastModifiedDate":"2021-09-14"},{"lineNumber":196,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":197,"author":{"gitId":"Chang-CH"},"content":"     * @param stringInput String supplied by user.","lastModifiedDate":"2021-08-29"},{"lineNumber":198,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":199,"author":{"gitId":"Chang-CH"},"content":"    private void processInput(String stringInput) {","lastModifiedDate":"2021-08-29"},{"lineNumber":200,"author":{"gitId":"Chang-CH"},"content":"        ui.printUserDialog(stringInput);","lastModifiedDate":"2021-09-06"},{"lineNumber":201,"author":{"gitId":"Chang-CH"},"content":"        assert stringInput !\u003d null : \"processInput requires non empty input string\";","lastModifiedDate":"2021-09-03"},{"lineNumber":202,"author":{"gitId":"Chang-CH"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":203,"author":{"gitId":"Chang-CH"},"content":"            Command parsedCommand \u003d Parser.parse(stringInput);","lastModifiedDate":"2021-08-29"},{"lineNumber":204,"author":{"gitId":"Chang-CH"},"content":"            parsedCommand.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-29"},{"lineNumber":205,"author":{"gitId":"Chang-CH"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":206,"author":{"gitId":"Chang-CH"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":207,"author":{"gitId":"Chang-CH"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-29"},{"lineNumber":208,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":209,"author":{"gitId":"Chang-CH"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-29"},{"lineNumber":210,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":211,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Chang-CH":211}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":" * Resolves classpath issues as a workaround.","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"public class Launcher {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Chang-CH":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"// Duke Commands","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"// Duke Exceptions","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"// Duke Tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":" * Parses string inputs from user.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"public class Parser {","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"    private static final int COMMAND_EVENT_LENGTH \u003d 6;","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"    private static final int COMMAND_DEADLINE_LENGTH \u003d 9;","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"    private static final int COMMAND_TODO_LENGTH \u003d 5;","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"     * Parses string inputs from user into a Command.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"     * @param input Input recieved from user.","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"     * @return Command corresponding to the input recieved.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"     * @throws DukeException Invalid inputs recieved.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"    protected static Command parse(String input) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"        assert input !\u003d null;","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"        String[] inputArray \u003d input.split(\" \");","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"        int selectedTask;","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"        switch (inputArray[0]) {","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"        case \"help\":","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"        case \"list\":","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"        case \"done\":","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"            selectedTask \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2021-08-20"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"            return new DoneCommand(selectedTask);","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-20"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"            selectedTask \u003d Integer.parseInt(inputArray[1]) - 1;","lastModifiedDate":"2021-08-20"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"            return new DeleteCommand(selectedTask);","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"        case \"find\":","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"            return new FindCommand(input.substring(5));","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"        case \"event\":","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"            return parseEvent(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"            return parseDeadline(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"            return parseTodo(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"        default:","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"     * Parses an event string.","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"     * @param input Input to be parsed.","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"     * @return Event representing input.","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"    private static Command parseEvent(String input) {","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"Chang-CH"},"content":"        String[] params;","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"Chang-CH"},"content":"        params \u003d input.split(\"/at\");","lastModifiedDate":"2021-08-20"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"        params[0] \u003d params[0].substring(COMMAND_EVENT_LENGTH,","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"Chang-CH"},"content":"                params[0].length() - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Chang-CH"},"content":"        params[1] \u003d params[1].substring(1);","lastModifiedDate":"2021-08-20"},{"lineNumber":80,"author":{"gitId":"Chang-CH"},"content":"        return new AddCommand(new Event(params[0],","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Chang-CH"},"content":"                LocalDate.parse(params[1])));","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"Chang-CH"},"content":"     * Parses a deadline string.","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":"     * @param input Input to be parsed.","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"     * @return Deadline representing input.","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"    private static Command parseDeadline(String input) {","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"        String[] params;","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"Chang-CH"},"content":"        params \u003d input.split(\"/by\");","lastModifiedDate":"2021-08-20"},{"lineNumber":93,"author":{"gitId":"Chang-CH"},"content":"        params[0] \u003d params[0].substring(COMMAND_DEADLINE_LENGTH,","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"                params[0].length() - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"Chang-CH"},"content":"        params[1] \u003d params[1].substring(1);","lastModifiedDate":"2021-08-20"},{"lineNumber":96,"author":{"gitId":"Chang-CH"},"content":"        return new AddCommand(new Deadline(params[0],","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Chang-CH"},"content":"                LocalDate.parse(params[1])));","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":100,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"Chang-CH"},"content":"     * Parses a todo string.","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"Chang-CH"},"content":"     * @param input Input to be parsed.","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"Chang-CH"},"content":"     * @return Todo representing input.","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"Chang-CH"},"content":"     * @throws DukeException If the string has an empty description.","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"Chang-CH"},"content":"    private static Command parseTodo(String input) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"Chang-CH"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":109,"author":{"gitId":"Chang-CH"},"content":"            String name \u003d input.substring(COMMAND_TODO_LENGTH);","lastModifiedDate":"2021-09-06"},{"lineNumber":110,"author":{"gitId":"Chang-CH"},"content":"            if (name.equals(\"\")) {","lastModifiedDate":"2021-08-20"},{"lineNumber":111,"author":{"gitId":"Chang-CH"},"content":"                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":112,"author":{"gitId":"Chang-CH"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":113,"author":{"gitId":"Chang-CH"},"content":"            return new AddCommand(new ToDo(name));","lastModifiedDate":"2021-08-20"},{"lineNumber":114,"author":{"gitId":"Chang-CH"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"Chang-CH"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-08-20"},{"lineNumber":116,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":117,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":118,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Chang-CH":118}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import java.io.File;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"// Duke Exceptions","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"// Duke Tasks","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":" * Reads and writes the task list on the disk.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"public class Storage {","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"    private static final String DONE_FLAG \u003d \"1\";","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"    private static final String STRING_SEPERATOR \u003d \"\\\\|\";","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"    private String path;","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"     * Sole constructor for invocation by Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"     * @param path Path to the log file to read from or write to.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"    protected Storage(String path) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"        assert path !\u003d null;","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"     * Reads the file to a TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"     * @return TaskList of the tasks stored in the file.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"    protected TaskList load() {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(this.path));","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"            String line;","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"            while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"                String[] arr;","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"                boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"                arr \u003d line.split(STRING_SEPERATOR);","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"                isDone \u003d arr[1].equals(DONE_FLAG);","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"                switch (arr[0]) {","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"                case \"T\":","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"                    tasks.add(new ToDo(isDone, arr[2]));","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"                    break;","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"                case \"E\":","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"                    tasks.add(new Event(isDone, arr[2], LocalDate.parse(arr[3])));","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"                    break;","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"                case \"D\":","lastModifiedDate":"2021-08-20"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"                    tasks.add(new Deadline(isDone, arr[2], LocalDate.parse(arr[3])));","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"                    break;","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"                default:","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"                    throw new DukeException(\"Unrecognized task flag\");","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"                }","lastModifiedDate":"2021-08-20"},{"lineNumber":68,"author":{"gitId":"Chang-CH"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2021-08-20"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"        return tasks;","lastModifiedDate":"2021-08-20"},{"lineNumber":75,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":76,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Chang-CH"},"content":"     * Writes the input TaskList to the specified file.","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Chang-CH"},"content":"     * @param tasks TaskList to be written to file.","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Chang-CH"},"content":"    public void saveFile(TaskList tasks) {","lastModifiedDate":"2021-08-20"},{"lineNumber":83,"author":{"gitId":"Chang-CH"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":84,"author":{"gitId":"Chang-CH"},"content":"            File f \u003d new File(this.path);","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"Chang-CH"},"content":"            if (!f.exists()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"Chang-CH"},"content":"                f.getParentFile().mkdirs();","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":"                f.createNewFile();","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.path);","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"            fileWriter.write(tasks.toString());","lastModifiedDate":"2021-08-20"},{"lineNumber":92,"author":{"gitId":"Chang-CH"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-20"},{"lineNumber":93,"author":{"gitId":"Chang-CH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":96,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":97,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Chang-CH":97}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":" * Stores and retrieves Tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":" * @author Chang-CH","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"public class TaskList {","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"     * Class constuctor.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"     * Returns string representation of the tasklist.","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"     * @return String containing all tasks separated by a newline character.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"    public String toString() {","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"            if (stringBuilder.length() !\u003d 0) {","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"                stringBuilder.append(\"\\n\");","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"            String save \u003d task.saveString();","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"            System.out.println(save);","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"            stringBuilder.append(save);","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"     * Returns the size of the list.","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"     * @return List size.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"     * @param index Index of the task to be retrieved.","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"     * @return Task at the index.","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"    public Task getIndex(int index) {","lastModifiedDate":"2021-08-20"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":68,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"     * Removes the task at the specified index.","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"     * @param index Index of the task to be removed.","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"    public void removeIndex(int index) {","lastModifiedDate":"2021-08-20"},{"lineNumber":75,"author":{"gitId":"Chang-CH"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Chang-CH"},"content":"     * Finds all tasks with description matching the regex.","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"Chang-CH"},"content":"     * @param regex Regex to match to.","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"Chang-CH"},"content":"     * @return TaskList containing all matching tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"Chang-CH"},"content":"    public TaskList findTasks(String regex) {","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"Chang-CH"},"content":"        TaskList result \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"Chang-CH"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":"            if (task.getDescription().contains(regex)) {","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"                result.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"        return result;","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":93,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Chang-CH":93}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":" * User interface class for controlling user interaction.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":" * Reads user inputs and displays outputs.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":" * @author Chang-CH","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"public class Ui {","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"    private Scanner inputReader \u003d null;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"    private VBox dialogContainer \u003d null;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"    private final Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/duk.jpg\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"     * Sole constructor for invocation by Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"    protected Ui() {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"        super();","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"        inputReader \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"     * Constructor for printing to Duke","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"     * @param dialogContainer Container to add components to.","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"    protected Ui(VBox dialogContainer) {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"        super();","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"        assert dialogContainer !\u003d null;","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"        inputReader \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"        this.dialogContainer \u003d dialogContainer;","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"     * Reads user input from scanner.","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"     * @return user input string.","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"    protected String readCommand() {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"        return inputReader.nextLine();","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"     * Displays a text in the GUI, if applicable.","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"     * @param text Message to be displayed.","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"    public void printDukeDialog(String text) {","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"        DialogBox dialogBox \u003d DialogBox.getDukeDialog(textToAdd, new ImageView(duke));","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"        dialogContainer.getChildren().add(dialogBox);","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"     * Prints out the user\u0027s input in the GUI","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"Chang-CH"},"content":"     * @param input User input.","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"Chang-CH"},"content":"    public void printUserDialog(String input) {","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"Chang-CH"},"content":"        Label textToAdd \u003d new Label(input);","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"Chang-CH"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"Chang-CH"},"content":"        DialogBox dialogBox \u003d DialogBox.getUserDialog(textToAdd, new ImageView(user));","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"Chang-CH"},"content":"        dialogContainer.getChildren().add(dialogBox);","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":77,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":78,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"Chang-CH"},"content":"     * Closes the scanner.","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"Chang-CH"},"content":"    public void exit() {","lastModifiedDate":"2021-08-20"},{"lineNumber":82,"author":{"gitId":"Chang-CH"},"content":"        inputReader.close();","lastModifiedDate":"2021-08-20"},{"lineNumber":83,"author":{"gitId":"Chang-CH"},"content":"        Stage stage \u003d (Stage) dialogContainer.getScene().getWindow();","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"Chang-CH"},"content":"        stage.close();","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":86,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":87,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"Chang-CH"},"content":"     * Prints a line to separate outputs more clearly.","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"Chang-CH"},"content":"    public void showLine() {","lastModifiedDate":"2021-08-20"},{"lineNumber":91,"author":{"gitId":"Chang-CH"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-20"},{"lineNumber":92,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":93,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":94,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"Chang-CH"},"content":"     * Displays a message.","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"Chang-CH"},"content":"     * @param message Message to be displayed.","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"Chang-CH"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2021-08-20"},{"lineNumber":100,"author":{"gitId":"Chang-CH"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-20"},{"lineNumber":101,"author":{"gitId":"Chang-CH"},"content":"        if (dialogContainer !\u003d null) {","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"Chang-CH"},"content":"            printDukeDialog(message);","lastModifiedDate":"2021-09-06"},{"lineNumber":103,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":105,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":106,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":107,"author":{"gitId":"Chang-CH"},"content":"     * Displays an error.","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"Chang-CH"},"content":"     * @param message Error message to be displayed.","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"Chang-CH"},"content":"    public void showError(String message) {","lastModifiedDate":"2021-08-20"},{"lineNumber":112,"author":{"gitId":"Chang-CH"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-20"},{"lineNumber":113,"author":{"gitId":"Chang-CH"},"content":"        if (dialogContainer !\u003d null) {","lastModifiedDate":"2021-08-29"},{"lineNumber":114,"author":{"gitId":"Chang-CH"},"content":"            printDukeDialog(message);","lastModifiedDate":"2021-09-06"},{"lineNumber":115,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":116,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":117,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":118,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"Chang-CH"},"content":"     * Displays the welcome splash screen.","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"Chang-CH"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-20"},{"lineNumber":122,"author":{"gitId":"Chang-CH"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-20"},{"lineNumber":123,"author":{"gitId":"Chang-CH"},"content":"                + \"|  _ \\\\ _   _| | _\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"Chang-CH"},"content":"                + \"| | | | | | | |/ /\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"Chang-CH"},"content":"                + \"| |_| | |_| |   \u003c  \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"Chang-CH"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"Chang-CH"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"Chang-CH"},"content":"        String greeting \u003d \"Hello! I\u0027m Duk\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":130,"author":{"gitId":"Chang-CH"},"content":"                + \"What must I do for you?\\n\";","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"Chang-CH"},"content":"        System.out.println(greeting);","lastModifiedDate":"2021-08-20"},{"lineNumber":132,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"Chang-CH"},"content":"        if (dialogContainer !\u003d null) {","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"Chang-CH"},"content":"            printDukeDialog(greeting);","lastModifiedDate":"2021-09-06"},{"lineNumber":135,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":136,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":137,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Chang-CH":137}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke.command;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":" * Adds a task to the task list provided.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"    private final Task task;","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"     * Adds the task to the task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"     * @param tasks TaskList for task to be added to.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"     * @param ui Ui to display command message to.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"     * @param storage Storage to interact with, not necessary.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"        ui.showMessage(this.getMessage(tasks));","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"     * Returns the message to be displayed while performing the task.","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"     * @param tasks TaskList of current tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"     * @return Message to display to the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"    public String getMessage(TaskList tasks) {","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"        return \"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"                + task.toString()","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"                + \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Chang-CH":48}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke.command;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":" * Abstract command class providing the skeleton of all commands","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"    //TODO: Add alternative constructor without storage parameter.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"     * Performs the command.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"     * @param tasks TaskList to be manipulated if necessary.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"     * @param ui Ui to display command message to.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"     * @param storage Storage to interact with if necessary.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"     * Checks whether the command should terminate Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"     * @return Whether Duke should exit.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"        return false;","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"     * Returns the message to be displayed while performing the task.","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"     * @param tasks TaskList of current tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"     * @return Message to display to the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"    protected abstract String getMessage(TaskList tasks);","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Chang-CH":37}},{"path":"src/main/java/duke/command/CommandStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":" * Stub class for testing classes reliant on Command.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"public class CommandStub extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"     * Displays a dummy message on the UI.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"     * @param tasks TaskList to be manipulated, not necessary.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"     * @param ui Ui to interact with.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"     * @param storage Storage to interact with, not necessary.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"        ui.showMessage(getMessage(tasks));","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"     * Returns the message to be displayed while performing the task.","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"     * @param tasks TaskList of current tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"     * @return Message to display to the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"    public String getMessage(TaskList tasks) {","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"        return \"Stub message\";","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Chang-CH":33}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke.command;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":" * Deletes a task from the task list provided.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"    private final int index;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"     * @param index Index of the task to be deleted.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"     * Deletes the task from the task list provided.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"     * @param tasks TaskList to be manipulated.","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"     * @param ui Ui to display command message to.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"     * @param storage Storage to interact with, not necessary.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.getSize()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"            ui.showError(\"Index error: please select the correct index\");","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"            return;","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"        ui.showMessage(this.getMessage(tasks));","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"        tasks.removeIndex(index);","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"     * Returns the message to be displayed while performing the task.","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"     * @param tasks TaskList of current tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"     * @return Message to display to the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"    public String getMessage(TaskList tasks) {","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"                + tasks.getIndex(index).toString() + \"\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"                + \"Now you have \" + (tasks.getSize() - 1) + \" tasks in the list.\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Chang-CH":51}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke.command;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":" * Command to mark a task as done.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"    private final int index;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"     * @param index Index of task to be marked as done.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"     * @param tasks TaskList containing the task to be marked.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"     * @param ui Ui to display command message to.","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"     * @param storage Storage to interact with, not necessary.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"        tasks.getIndex(index).setDone();","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"        ui.showMessage(getMessage(tasks));","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"     * Returns the message to be displayed while performing the task.","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"     * @param tasks TaskList of current tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"     * @return Message to display to the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"    public String getMessage(TaskList tasks) {","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"                + tasks.getIndex(index).toString()","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"                + \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Chang-CH":46}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke.command;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":" * Command to trigger Duke to exit.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"     * Exits Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"     * @param tasks TaskList to be be saved.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"     * @param ui Ui to display command message to.","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"     * @param storage Storage to store the current task list.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"        storage.saveFile(tasks);","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"        ui.showMessage(this.getMessage(tasks));","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"        ui.exit();","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"     * Returns the message to be displayed while performing the task.","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"     * @param tasks TaskList of current tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"     * @return Message to display to the user.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"    public String getMessage(TaskList tasks) {","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"        return \"Bye. Don\u0027t come again!\";","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"     * Returns exit flag to Duke to terminate the loop.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"     * @return Exit flag for Duke to terminate the loop.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"        return true;","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Chang-CH":44}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":" * Finds a task by its description.","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"    private TaskList results;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"    private final String regex;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"     * @param regex Regex to match to.","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"    public FindCommand(String regex) {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"        this.regex \u003d regex;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"     * Finds the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"     * @param tasks TaskList to be searched.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"     * @param ui Ui to display the results in.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"     * @param storage Storage to interact with, not necessary.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"        results \u003d tasks.findTasks(this.regex);","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"        ui.showMessage(this.getMessage(results));","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"     * Returns the message to be displayed while performing the task.","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"     * @param tasks TaskList of current tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"     * @return Message to display to the user.","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"    public String getMessage(TaskList tasks) {","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"        stringBuilder.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"            stringBuilder.append(String.format(\"%d. %s\\n\", i + 1, tasks.getIndex(i).toString()));","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Chang-CH":51}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":" * Command to display the help message.","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"     * Displays the help message.","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"     * @param tasks Optional, nullable.","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"     * @param ui Ui to display help message to.","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"     * @param storage Optional, nullable.","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"        ui.showMessage(getMessage(null));","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"     * Returns the message to be displayed while performing the task.","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"     * @param tasks TaskList of current tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"     * @return Message to display to the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"    public String getMessage(TaskList tasks) {","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"        String message \u003d \"Duk docs: \\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"                + \"help: lists all commands\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"                + \"bye: Exits Duk\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"                + \"list: Lists all tasks saved\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"                + \"done {n}: Marks the n-th task as done\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"                + \"delete {n}: Deletes the n-th task\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"                + \"find {str}: Finds a task with description matching str\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"                + \"event {desc} /at {date}: Adds a new event task with\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"                + \"description desc occuring at date\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"                + \"deadline {desc} /by {date}: Adds a new deadline task with\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"                + \"description desc to be done by date\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"                + \"todo {desc}: Adds a new todo task with\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"                + \"description desc\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"        return message;","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"Chang-CH":46}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke.command;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import duke.Storage;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import duke.Ui;","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":" * Command to display all tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"     * Displays all tasks","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"     * @param tasks TaskList to be manipulated if necessary.","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"     * @param ui Ui to display command message to.","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"     * @param storage Storage to interact with if necessary.","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"        ui.showMessage(this.getMessage(tasks));","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"     * Returns the message to be displayed while performing the task.","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"     * @param tasks TaskList of current tasks.","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"     * @return Message to display to the user.","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"    public String getMessage(TaskList tasks) {","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"            stringBuilder.append(String.format(\"%d. %s\\n\",","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"                    i + 1,","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"                    tasks.getIndex(i).toString()));","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Chang-CH":39}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke.exception;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":" * Represents problems encountered specifically with Duke.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"    private final String message;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"     * @param message Exception message to be displayed.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"     * Returns the exception message","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"     * @return Exception message.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"    public String getMessage() {","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"        return this.message;","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Chang-CH":26}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke.task;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":" * Tasks that require a due date.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"    private final LocalDate by;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"     * @param by Deadline task must be done by.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"     * Alternative constructor for initializing from storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"     * @param isDone Whether the task is already checked.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"     * @param by Deadline task must be done by.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"    public Deadline(boolean isDone, String description, LocalDate by) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"        super(isDone, description);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"     * Returns a string representation of the deadline task.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"     * @return String representation of the deadline task.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"        return \"[D]\"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"                + super.toString()","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"                + \" (by: \"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"                + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"     * Returns a string representation of the Deadline to be saved as.","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"     * @return String representation of the deadline to be saved as.","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"        return \"D|\" + super.saveString() + \"|\" + by;","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Chang-CH":58}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke.task;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":" * Tasks that occur at a specified time.","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"    private final LocalDate at;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"     * @param at Time the task occurs.","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"     * Alternative constructor for initializing from storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"     * @param isDone Whether the task is already checked.","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"     * @param at Time the task occurs.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"    public Event(boolean isDone, String description, LocalDate at) {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"        super(isDone, description);","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"     * Returns a string representation of the event task.","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"     * @return String representation of the event task.","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"        return \"[E]\"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"                + super.toString()","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"                + \" (at: \"","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"                + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"                + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"     * Returns a string representation of the event to be saved as.","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"     * @return String representation of the event to be saved as.","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"        return \"E|\" + super.saveString() + \"|\" + at;","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Chang-CH":58}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke.task;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":" * Abstract class providing the skeleton of all Tasks.","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"    private final String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"     * Alternative constructor for storage to load tasks already done.","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"     * @param isDone Whether the task is done.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"    public Task(boolean isDone, String description) {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"     * Returns a string representation of the task for display.","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"     * @return String representation of the task for display.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"        char indicator \u003d \u0027 \u0027;","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"            indicator \u003d \u0027X\u0027;","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"        return \"[\" + indicator + \"] \" + this.description;","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"Chang-CH"},"content":"     * Returns a string representation of the task to be saved as.","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"Chang-CH"},"content":"     * @return String representation of the task to be saved as.","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"Chang-CH"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"Chang-CH"},"content":"        char indicator \u003d \u00270\u0027;","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"Chang-CH"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"Chang-CH"},"content":"            indicator \u003d \u00271\u0027;","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"Chang-CH"},"content":"        return indicator + \"|\" + this.description;","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"Chang-CH"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"Chang-CH"},"content":"        return this.description;","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Chang-CH":66}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke.task;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":" * Normal tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"     * Class constructor.","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"     * Alternative constructor for initializing from storage.","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"     * @param isDone Whether the task is already checked.","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"    public ToDo(boolean isDone, String description) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"        super(isDone, description);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Chang-CH"},"content":"     * Returns a string representation of the todo task.","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Chang-CH"},"content":"     * @return String representation of the todo task.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"Chang-CH"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"Chang-CH"},"content":"        return \"[T]\"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Chang-CH"},"content":"                + super.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"Chang-CH"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"Chang-CH"},"content":"     * Returns a string representation of the todo to be saved as.","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"Chang-CH"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"Chang-CH"},"content":"     * @return String representation of the todo to be saved as.","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"Chang-CH"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"Chang-CH"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"Chang-CH"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"Chang-CH"},"content":"        return \"T|\"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Chang-CH"},"content":"                + super.saveString();","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Chang-CH":48}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static org.junit.Assert.assertTrue;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"    public void parse_eventString_success() throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"            Parser.parse(\"todo todo description\").execute(tasks, null, null);","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"            assertTrue(tasks.getIndex(0) instanceof ToDo);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Chang-CH":22}},{"path":"src/test/java/duke/command/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"package duke.command;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Chang-CH"},"content":"import duke.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Chang-CH"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Chang-CH"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Chang-CH"},"content":"public class AddCommandTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Chang-CH"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"Chang-CH"},"content":"    public void addTask_eventTask_success() {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"Chang-CH"},"content":"        Task event \u003d new Event(\"Test event\", LocalDate.parse(\"1939-09-01\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"Chang-CH"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Chang-CH"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Chang-CH"},"content":"        Command addCommand \u003d new AddCommand(event);","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"Chang-CH"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Chang-CH"},"content":"            addCommand.execute(tasks, null, null);","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"Chang-CH"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"Chang-CH"},"content":"            assertEquals(tasks.getIndex(0), event);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Chang-CH"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Chang-CH"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Chang-CH"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Chang-CH":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Chang-CH"},"content":"todo fail 2103T","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Chang-CH"},"content":"todo","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Chang-CH"},"content":"todo","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Chang-CH"},"content":"blah","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Chang-CH"},"content":"deadline fail 2103T /by 2077 something","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Chang-CH"},"content":"event fail 2103T /at 2077 something","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Chang-CH"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Chang-CH":7}}]
