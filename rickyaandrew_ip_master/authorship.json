[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"3. After that, locate the `src/main/java/seedu/duke/Launcher.java` file, right-click it, and choose `Run Launcher.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"Duke is an App which allows you to save and store your todo list. You can add a Todo, Event or a Deadline into the list. Once you have completed the item which you have listed, you can make it as DONE.","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"Eventually, you can delete those items from the list as well. Let me teach you how to use Duke.","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"Instruction:","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"1. First you can add `Task` into the `TaskList` by writing these commands:","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"   1. For `ToDos` type: \"**todo {your task}**\"","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"   1. For `Deadline` type: \"**deadline {your task} /by {a deadline}**\"","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"   1. For `Events` type: \"**event {your task} /at {date and location}**\"","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"1. You can see the list of the `TaskList` by entering the command: \"**list**\". It will list out all the `Task` with the index number beside it.","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"1. Once a `Task` is added into the `TaskList`, you can mark those `Task` as DONE when you have completed the `Task`","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"   1. To mark a `Task` as DONE, you can enter this command: \"**done {task index number}**\"","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"1. If you want to delete the `Task` from the `TaskList`, you can enter this command: \"**delete {task index number}**\"","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"1. Once you are done with using Duke, just say \"**bye**\" to Duke and he will send you off.","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"# SHHHEEEEESHHHHH!!!!","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"rickyaandrew":18,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    ","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    testImplementation group: \u0027org.junit.platform\u0027, name: \u0027junit-platform-launcher\u0027, version: \u00271.5.2\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rickyaandrew":17,"-":45}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":" * An example of a custom control using FXML. This control represents a dialog","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":" * box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"        Rectangle clip \u003d new Rectangle(displayPicture.getFitWidth(), displayPicture.getFitHeight());","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"        clip.setArcWidth(100);","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"        clip.setArcHeight(100);","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"        dialog.autosize();","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"     * right.","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"    private void flip() {","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"        db.flip();","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"        return db;","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"rickyaandrew":69}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"public class Launcher {","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"rickyaandrew":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"public class Main extends Application {","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"            Image icon \u003d new Image(\"/icons/duke.jpg\");","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"            stage.getIcons().add(icon);","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"            stage.setTitle(\"DukeSHEESH\");","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"            stage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rickyaandrew":33}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.Duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    private Stage stage;","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    private Duke duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/challenge.jpg\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/teacher.jpg\"));","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"    public void setDuke(Duke duke) {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"        this.duke.loadDataFromStorage();","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"     * Duke\u0027s reply and then appends them to the dialog container. Clears the user","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"     * input after processing.","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"        stage \u003d (Stage) dialogContainer.getScene().getWindow();","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"                DialogBox.getDukeDialog(response, dukeImage));","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"        if (isBye(input)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"            stage.close();","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"        userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"    private boolean isBye(String input) {","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"        return input.equals(\"bye\");","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"rickyaandrew":63}},{"path":"src/main/java/seedu/data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"T | 1 | do nothing","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"T | 1 | reading","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"rickyaandrew":2}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.commands.Parser;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.commands.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.storage.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.tasks.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    private String response;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"     * Class Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    public Duke() {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"    public void loadDataFromStorage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"        ArrayList\u003cTask\u003e savedTasks \u003d storage.loadData();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"        taskList.loadFromStorage(savedTasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"        // Ui.printIntro();","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"            Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"            Command command \u003d parser.parseCommands(userInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"            this.response \u003d command.execute(taskList, storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"            return this.response;","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"            return Ui.printMessage(Ui.ERROR_MSG_EMPTY_DESCRIPTION);","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"rickyaandrew":43,"-":2}},{"path":"src/main/java/seedu/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.exceptions.storage.DukeStorageSaveException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.storage.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.tasks.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"    private final Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"     * Primary Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"     * @param task is the {@code Task} that will be added into the list of tasks and","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"     *             the database.","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     * Adds {@code Task} into the {@code TaskList} when this function is executed.","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskList contains an {@code ArrayList\u003cTask\u003e} where all {@code Task} is","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"     *                 stored.","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"     * @param storage  the database where the tasks are being saved for progression.","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"            taskList.addTask(this.task);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"            storage.appendToData(getInputStorageDescription());","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"            return getReplyMessage(taskList);","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"        } catch (DukeStorageSaveException err) {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"            throw new DukeStorageSaveException(err.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"    private String getInputStorageDescription() {","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"        String inputToStorage \u003d this.task.getSymbol() + Command.DATA_STORAGE_ISDONE_FALSE + this.task.getDescription();","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"        if (!this.task.getSymbol().equals(Command.DATA_STORAGE_TASK_SYMBOL)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"            inputToStorage +\u003d \" | \" + this.task.getDateTime();","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"        return inputToStorage;","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"    private String getReplyMessage(TaskList taskList) {","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"        return Ui.printMessage(\"Got it. I\u0027ve added this task:\\n\" + this.task.toString() + \"\\n\" + \"Now you have \"","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"                + taskList.getTaskList().size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if the user wants to exit from the applications.","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"     * @return {@code false} as this command is not ready for user to exit the","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"     *         application.","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":65}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.storage.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"    protected static final String DATA_STORAGE_ISDONE_FALSE \u003d \" | 0 | \";","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    protected static final String DATA_STORAGE_TASK_SYMBOL \u003d \"T\";","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskList contains an {@code ArrayList\u003cTask\u003e} where all {@code Task} is","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"     *                 stored.","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"     * @param storage  the database where the Tasks are being saved for progression.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    public abstract String execute(TaskList taskList, Storage storage);","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     * @return a boolean whether the user wants to exit the application.","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":25}},{"path":"src/main/java/seedu/duke/commands/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"public enum CommandType {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"    LIST(\"list\"),","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"    DONE(\"done\"),","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    FIND(\"find\"),","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    EMPTY(\"empty\"),","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    TIMEDTASK(\"timedtask\"),","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    PERIODTASK(\"periodtask\"),","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    INVALID(\"invalid\");","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    private String command;","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    private CommandType(String command) {","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    public String getCommand() {","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"        return this.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    public static CommandType getCommandType(String command) {","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"        switch(command) {","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"            return CommandType.BYE;","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"        case \"list\":","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"            return CommandType.LIST;","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"        case \"done\":","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"            return CommandType.DONE;","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"            return CommandType.TODO;","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"            return CommandType.DEADLINE;","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"        case \"event\":","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"            return CommandType.EVENT;","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"            return CommandType.DELETE;","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"        case \"find\":","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"            return CommandType.FIND;","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"        case \"timedtask\":","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"            return CommandType.TIMEDTASK;","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"        case \"periodtask\":","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"            return CommandType.PERIODTASK;","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"        case \"\":","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"            return CommandType.EMPTY;","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"        default:","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"            return CommandType.INVALID;","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"rickyaandrew":55}},{"path":"src/main/java/seedu/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.exceptions.storage.DukeStorageDeleteException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.storage.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.tasks.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"    private final String taskId;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"     * Primary Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskId is the id of the task that will be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    public DeleteCommand(String taskId) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * Deletes the {@code Task} from {@code TaskList} when this function is","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     * executed.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskList contains an {@code ArrayList\u003cTask\u003e} where all {@code Task} is","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"     *                 stored.","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"     * @param storage  the database where the Tasks are being saved for progression.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"            int index \u003d Integer.parseInt(this.taskId) - 1;","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"            Task deletedTask \u003d taskList.deleteItem(index);","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"            storage.deleteTaskFromData(index);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"            return getReplyMessage(taskList, deletedTask);","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"        } catch (DukeStorageDeleteException err) {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"            throw new DukeStorageDeleteException(err.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"    private String getReplyMessage(TaskList taskList, Task deletedTask) {","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"        return Ui.printMessage(\"Noted. I\u0027ve removed this task:\\n\" + deletedTask.toString() + \"\\n\" + \"Now you have \"","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"                + taskList.getTaskList().size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"     * @return {@code false} as this command is not ready for user to exit the","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"     *         application.","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"    };","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":56}},{"path":"src/main/java/seedu/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.exceptions.storage.DukeStorageUpdateException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.storage.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.tasks.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"    private final String taskId;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"     * Primary Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskId is the task that will be updated as done in the list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    public DoneCommand(String taskId) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * Updates the {@code Task} in the {@code TaskList} as done when this function","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     * is executed.","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskList contains an {@code ArrayList\u003cTask\u003e} where all {@code Task} is","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"     *                 stored.","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"     * @param storage  the database where the Tasks are being saved for progression.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"        int index \u003d Integer.parseInt(this.taskId) - 1;","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"            Task updatedTask \u003d taskList.doneItem(index);","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"            storage.updateDone(index);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"            return getReplyMessage(taskList, updatedTask);","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"        } catch (DukeStorageUpdateException err) {","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"            throw new DukeStorageUpdateException(err.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"    private String getReplyMessage(TaskList taskList, Task updatedTask) {","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"        return Ui.printMessage(Ui.DONE_MESSAGE + \"\\n\" + updatedTask.toString());","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"     * @return {@code false} as this command is not ready for user to exit the","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"     *         application.","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":56}},{"path":"src/main/java/seedu/duke/commands/EmptyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.storage.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"public class EmptyCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"     * Empty Command that does nothing.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskList contains an {@code ArrayList\u003cTask\u003e} where all {@code Task} is","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"     *                 stored.","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     * @param storage  the database where the Tasks are being saved for progression.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"        return Ui.EMPTY_COMMAND_REPLY;","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     * @return {@code false} as this command is not ready for user to exit the","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     *         application.","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":29}},{"path":"src/main/java/seedu/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.storage.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"     * Replies with an Exit message when this function is triggered.","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskList contains an {@code ArrayList\u003cTask\u003e} where all {@code Task} is","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"     *                 stored.","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     * @param storage  the database where the Tasks are being saved for progression.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"        return Ui.printMessage(Ui.BYE_MESSAGE);","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     * @return {@code true} as this command is ready for user to exit the","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"     *         application.","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    };","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":30}},{"path":"src/main/java/seedu/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.storage.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.tasks.Task;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"    private final String word;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    public FindCommand(String word) {","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"        this.word \u003d word;","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"     * Finds an {@code ArrayList\u003cTask\u003e} which matches the user description when this","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"     * command is executed.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskList contains an {@code ArrayList\u003cTask\u003e} where all {@code Task} is","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     *                 stored.","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     * @param storage  the database where the Tasks are being saved for progression.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"        ArrayList\u003cTask\u003e foundList \u003d taskList.find(this.word);","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"        return Ui.printList(foundList, Ui.FIND_ZERO_SIZE, Ui.FIND_LIST_MESSAGE);","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"     * @return {@code false} as this command is not ready for user to exit the","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"     *         application.","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":40}},{"path":"src/main/java/seedu/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.storage.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"     * Prints the list of {@code Task} that is on hand from {@code TaskList}.","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskList contains an {@code ArrayList\u003cTask\u003e} where all {@code Task} is","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"     *                 stored.","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     * @param storage  the database where the Tasks are being saved for progression.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"        return Ui.printList(taskList.getTaskList(), Ui.NO_TASK_MESSAGE, Ui.LIST_MESSAGE);","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     * @return {@code false} as this command is not ready for user to exit the","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"     *         application.","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":30}},{"path":"src/main/java/seedu/duke/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.tasks.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.tasks.Events;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.tasks.PeriodTask;","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.tasks.TimedTask;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.tasks.ToDos;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"     * Triggers and run the desired command which the user entered. Interpreting","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"     * what the user wants.","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"     * @param fullCommand is the command line which the user have entered.","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"     * @return a Command which can be run to trigger it.","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    public Command parseCommands(String fullCommand) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"        String descriptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"        String[] actionDescription \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"        String action \u003d actionDescription[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"        CommandType commandType \u003d CommandType.getCommandType(action);","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"        switch (commandType) {","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"        case BYE:","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"        case LIST:","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"            return new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"        case DONE:","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"            return new DoneCommand(getDescriptions(actionDescription));","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"        case TODO:","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"            descriptions \u003d getDescriptions(actionDescription);","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"            if (isBlank(descriptions)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"                return new UiCommand(Ui.ERROR_MSG_EMPTY_DESCRIPTION);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"            ToDos todos \u003d new ToDos(descriptions);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"            return new AddCommand(todos);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"            descriptions \u003d getDescriptions(actionDescription);","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"            if (isBlank(descriptions)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"                return new UiCommand(Ui.ERROR_MSG_EMPTY_DESCRIPTION);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"            Deadline deadline \u003d new Deadline(getOnlyDescription(descriptions), getDeadlineDateTime(descriptions));","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"            return new AddCommand(deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"        case EVENT:","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"            descriptions \u003d getDescriptions(actionDescription);","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"            if (isBlank(descriptions)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"                return new UiCommand(Ui.ERROR_MSG_EMPTY_DESCRIPTION);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"            Events event \u003d new Events(getOnlyDescription(descriptions), getEventDateTime(descriptions));","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"            return new AddCommand(event);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"        case TIMEDTASK:","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"            descriptions \u003d getDescriptions(actionDescription);","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"            if (isBlank(descriptions)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"                return new UiCommand(Ui.ERROR_MSG_EMPTY_DESCRIPTION);","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"            TimedTask timedTask \u003d new TimedTask(getOnlyDescription(descriptions), getTimeNeeded(descriptions));","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"            return new AddCommand(timedTask);","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"rickyaandrew"},"content":"        case PERIODTASK:","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"rickyaandrew"},"content":"            descriptions \u003d getDescriptions(actionDescription);","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"rickyaandrew"},"content":"            if (isBlank(descriptions)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"rickyaandrew"},"content":"                return new UiCommand(Ui.ERROR_MSG_EMPTY_DESCRIPTION);","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"rickyaandrew"},"content":"            PeriodTask periodTask \u003d new PeriodTask(getOnlyDescription(descriptions), periodTaskGetFrom(descriptions),","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"rickyaandrew"},"content":"            periodTaskGetTo(descriptions));","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"rickyaandrew"},"content":"            return new AddCommand(periodTask);","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":79,"author":{"gitId":"rickyaandrew"},"content":"        case DELETE:","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"rickyaandrew"},"content":"            return new DeleteCommand(getDescriptions(actionDescription));","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"rickyaandrew"},"content":"        case FIND:","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"rickyaandrew"},"content":"            return new FindCommand(getDescriptions(actionDescription));","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"rickyaandrew"},"content":"        case EMPTY:","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"rickyaandrew"},"content":"            return new EmptyCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"rickyaandrew"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"rickyaandrew"},"content":"            return new UiCommand(Ui.ERROR_MSG_UNKOWN_MSG);","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"rickyaandrew"},"content":"    private String dateTimeFormatter(String unformattedDate) {","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"rickyaandrew"},"content":"        String stringDate \u003d unformattedDate.split(\" \")[0];","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"rickyaandrew"},"content":"        String time \u003d unformattedDate.split(\" \")[1];","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"rickyaandrew"},"content":"        LocalDate date \u003d LocalDate.of(Integer.parseInt(stringDate.split(\"/\")[2]),","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"rickyaandrew"},"content":"                Integer.parseInt(stringDate.split(\"/\")[1]), Integer.parseInt(stringDate.split(\"/\")[0]));","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":101,"author":{"gitId":"rickyaandrew"},"content":"        LocalDateTime dateTime \u003d date.atTime(Integer.parseInt(time.substring(0, 2)),","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"rickyaandrew"},"content":"                Integer.parseInt(time.substring(2, 4)));","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"rickyaandrew"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"rickyaandrew"},"content":"    private String getDescriptions(String[] actionDescription) {","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"rickyaandrew"},"content":"        return actionDescription[1];","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"rickyaandrew"},"content":"    private String getOnlyDescription(String descriptions) {","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"rickyaandrew"},"content":"        return descriptions.split(\" /\")[0];","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"rickyaandrew"},"content":"    private String getDeadlineDateTime(String descriptions) {","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"rickyaandrew"},"content":"        String dateTime \u003d descriptions.split(\" /by \")[1];","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"rickyaandrew"},"content":"        dateTime \u003d dateTimeFormatter(dateTime);","lastModifiedDate":"2021-09-04"},{"lineNumber":118,"author":{"gitId":"rickyaandrew"},"content":"        return dateTime;","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":120,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"rickyaandrew"},"content":"    private String getEventDateTime(String descriptions) {","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"rickyaandrew"},"content":"        return descriptions.split(\" /at \")[1];","lastModifiedDate":"2021-09-04"},{"lineNumber":123,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"rickyaandrew"},"content":"    private boolean isBlank(String descriptions) {","lastModifiedDate":"2021-09-04"},{"lineNumber":126,"author":{"gitId":"rickyaandrew"},"content":"        return descriptions.equals(\"\");","lastModifiedDate":"2021-09-04"},{"lineNumber":127,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":128,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":129,"author":{"gitId":"rickyaandrew"},"content":"    private String getTimeNeeded(String descriptions) {","lastModifiedDate":"2021-09-08"},{"lineNumber":130,"author":{"gitId":"rickyaandrew"},"content":"        return descriptions.split(\" /needs \")[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":131,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":132,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":133,"author":{"gitId":"rickyaandrew"},"content":"    private String periodTaskGetFrom(String descriptions) {","lastModifiedDate":"2021-09-08"},{"lineNumber":134,"author":{"gitId":"rickyaandrew"},"content":"        String period \u003d descriptions.split(\" /between \")[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":135,"author":{"gitId":"rickyaandrew"},"content":"        System.out.println(period);","lastModifiedDate":"2021-09-08"},{"lineNumber":136,"author":{"gitId":"rickyaandrew"},"content":"        return period.split(\" and \")[0];","lastModifiedDate":"2021-09-08"},{"lineNumber":137,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":138,"author":{"gitId":"rickyaandrew"},"content":"    ","lastModifiedDate":"2021-09-08"},{"lineNumber":139,"author":{"gitId":"rickyaandrew"},"content":"    private String periodTaskGetTo(String descriptions) {","lastModifiedDate":"2021-09-08"},{"lineNumber":140,"author":{"gitId":"rickyaandrew"},"content":"        String period \u003d descriptions.split(\" /between \")[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":141,"author":{"gitId":"rickyaandrew"},"content":"        System.out.println(period);","lastModifiedDate":"2021-09-08"},{"lineNumber":142,"author":{"gitId":"rickyaandrew"},"content":"        return period.split(\" and \")[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":143,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":144,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":144}},{"path":"src/main/java/seedu/duke/commands/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.tasks.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    public static final String DATA_LOCATION \u003d \"src/main/java/seedu/data/data.txt\";","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"    public static final String logo \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\" + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    public static final String INTRODUCTION \u003d \"Hello! I\u0027m Ricky\\n\" + \"What can I do for you?\";","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    public static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    public static final String DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    public static final String LIST_MESSAGE \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    public static final String ERROR_MSG_UNKOWN_MSG \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    public static final String ERROR_MSG_EMPTY_DESCRIPTION \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    public static final String NO_TASK_MESSAGE \u003d \"Good day! You have no task in hand right now.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    public static final String FIND_ZERO_SIZE \u003d \"We are not able to find anything with that keyword. Please try again.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    public static final String FIND_LIST_MESSAGE \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    public static final String EMPTY_COMMAND_REPLY \u003d \"Hi how can I help you?\";","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    public static final String ERROR_MESSAGE_FILE_NOT_FOUND \u003d \"DukeStorageLoadException: File not found in the given file path.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    public static final String ERROR_MESSAGE_STORAGE_DELETE \u003d \"DukeStorageDeleteException: Unable to delete following task from the storage.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    public static final String ERROR_MESSAGE_STORAGE_UPDATE \u003d \"DukeStorageUpdateException: Unable to update data into the storage.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    public static final String ERROR_MESSAGE_STORAGE_SAVE \u003d \"DukeStorageSaveException: Unable to write data into storage.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"    public static final String ERROR_MESSAGE_STORAGE_LOAD \u003d \"DukeStorageLoadException: Unable to locate and load the data from storage.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    public static final String ERROR_MESSAGE_STORAGE_LOAD_OUT_OF_BOUND \u003d \"DukeStorageLoadException: Data must have saved in a wrong format.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    public static final String ERROR_MESSAGE_ACTION_OUT_OF_BOUND \u003d \"DukeActionOutOfBoundException: There is no such index from the storage.\";","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"     * Prints out the common Ui Messages with proper formatting.","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"     * @param message is the message which will be printed.","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"    public static String printMessage(String message) {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"        String appendedLine \u003d message + \"\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"        return appendedLine;","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"     * Prints the introduction message.","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"    public static void printIntro() {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"        System.out.println(Ui.logo);","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"        Ui.printMessage(Ui.INTRODUCTION);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"     * Prints the list of tasks with numbering from the given taskList passed to","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"     * this function.","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskList    is the list of tasks that will be printed out into a list.","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"     * @param zeroSizeMsg is the message when the size of the list is zero.","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"     * @param listMsg     message when the size of list is not zero.","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"    public static String printList(ArrayList\u003cTask\u003e taskList, String zeroSizeMsg, String listMsg) {","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"        String message \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"            return Ui.printMessage(zeroSizeMsg);","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"        message \u003d listMsg + \"\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"            message +\u003d (i + 1) + \". \" + taskList.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"        return message;","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rickyaandrew":67}},{"path":"src/main/java/seedu/duke/commands/UiCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.commands;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.storage.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.storage.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"public class UiCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"    private final String uiMsg;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"     * Primary Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"     * @param uiMsg is the message that the Ui will print for the user to read.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    public UiCommand(String uiMsg) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"        this.uiMsg \u003d uiMsg;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"     * Prints UI message for the user when command is executed.","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskList contains an {@code ArrayList\u003cTask\u003e} where all {@code Task} is","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     *                 stored.","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     * @param storage  the database where the Tasks are being saved for progression.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"        return Ui.printMessage(this.uiMsg);","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"     * @return {@code false} as this command is not ready for user to exit the","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"     *         application.","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":40}},{"path":"src/main/java/seedu/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"    private final String err;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"     * Primary Constructor for Duke Exception.","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"     * @param err is the error message.","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    public DukeException(String err) {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"        this.err \u003d err;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"        return this.err;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rickyaandrew":21}},{"path":"src/main/java/seedu/duke/exceptions/action/DukeActionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.exceptions.action;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"public class DukeActionException extends DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"    public DukeActionException(String err) {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"        super(err);","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rickyaandrew":9}},{"path":"src/main/java/seedu/duke/exceptions/action/DukeActionOutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.exceptions.action;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"public class DukeActionOutOfBoundException extends DukeActionException {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"    public DukeActionOutOfBoundException(String err) {","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"        super(err);","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rickyaandrew":7}},{"path":"src/main/java/seedu/duke/exceptions/storage/DukeStorageDeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.exceptions.storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.commands.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"public class DukeStorageDeleteException extends DukeStorageException {","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"    public DukeStorageDeleteException(String err) {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"        super(Ui.ERROR_MESSAGE_STORAGE_DELETE);","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rickyaandrew":9}},{"path":"src/main/java/seedu/duke/exceptions/storage/DukeStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.exceptions.storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"public class DukeStorageException extends DukeException {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"    public DukeStorageException(String err) {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"        super(err);","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rickyaandrew":9}},{"path":"src/main/java/seedu/duke/exceptions/storage/DukeStorageLoadException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.exceptions.storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"public class DukeStorageLoadException extends DukeStorageException {","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"    public DukeStorageLoadException(String err) {","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"        super(err);","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rickyaandrew":7}},{"path":"src/main/java/seedu/duke/exceptions/storage/DukeStorageSaveException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.exceptions.storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.commands.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"public class DukeStorageSaveException extends DukeStorageException {","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"    public DukeStorageSaveException(String err) {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"        super(Ui.ERROR_MESSAGE_STORAGE_SAVE);","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rickyaandrew":9}},{"path":"src/main/java/seedu/duke/exceptions/storage/DukeStorageUpdateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.exceptions.storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.commands.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"public class DukeStorageUpdateException extends DukeStorageException {","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"    public DukeStorageUpdateException(String err) {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"        super(Ui.ERROR_MESSAGE_STORAGE_UPDATE);","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"rickyaandrew":9}},{"path":"src/main/java/seedu/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.commands.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.exceptions.action.DukeActionOutOfBoundException;","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.exceptions.storage.DukeStorageDeleteException;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.exceptions.storage.DukeStorageLoadException;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.exceptions.storage.DukeStorageSaveException;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.exceptions.storage.DukeStorageUpdateException;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.tasks.Deadline;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.tasks.Events;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.tasks.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.tasks.ToDos;","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    private static final String STORAGE_ISDONE_FALSE \u003d \"| 0 |\";","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    private static final String STORAGE_ISDONE_TRUE \u003d \"| 1 |\";","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    private final File data;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"     * Primary Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    public Storage() {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"        this.data \u003d new File(Ui.DATA_LOCATION);","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"     * Loads the saved Tasks from the txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"     * @return an {@code ArrayList\u003cTask\u003e} that contains all the previous Tasks.","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"     * @throws DukeStorageLoadException when {@code File} is not found in the given","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"     *                                  location.","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"     * @see java.util.ArrayList","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"    public ArrayList\u003cTask\u003e loadData() throws DukeStorageLoadException {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"        ArrayList\u003cTask\u003e currList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"        String currLine;","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"        String eventType;","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"        String[] storageDataArray;","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"        String storageIsDone;","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"            Scanner sc \u003d new Scanner(data);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"                currLine \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"                storageDataArray \u003d currLine.replace(\"|\", \"/\").split(\" / \");","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"                eventType \u003d currLine.split(\"\")[0];","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"                storageIsDone \u003d storageDataArray[1];","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"                switch (eventType) {","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"                case \"T\":","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"                    ToDos todos \u003d new ToDos(getDescriptions(storageDataArray), getIsDoneFromStorage(storageIsDone));","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"                    currList.add(todos);","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"                case \"D\":","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"                    Deadline deadline \u003d new Deadline(getDescriptions(storageDataArray),","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"                            getDateTimeLocation(storageDataArray), getIsDoneFromStorage(storageIsDone));","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"                    currList.add(deadline);","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"                case \"E\":","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"rickyaandrew"},"content":"                    Events event \u003d new Events(getDescriptions(storageDataArray), getDateTimeLocation(storageDataArray),","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"rickyaandrew"},"content":"                            getIsDoneFromStorage(storageIsDone));","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"rickyaandrew"},"content":"                    currList.add(event);","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"rickyaandrew"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"rickyaandrew"},"content":"                default:","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"rickyaandrew"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"rickyaandrew"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"rickyaandrew"},"content":"            sc.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"rickyaandrew"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"rickyaandrew"},"content":"            throw new DukeStorageLoadException(Ui.ERROR_MESSAGE_STORAGE_LOAD);","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"rickyaandrew"},"content":"        } catch (ArrayIndexOutOfBoundsException err) {","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"rickyaandrew"},"content":"            throw new DukeStorageLoadException(Ui.ERROR_MESSAGE_STORAGE_LOAD_OUT_OF_BOUND);","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"rickyaandrew"},"content":"        return currList;","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"rickyaandrew"},"content":"     * Appends a new line in the txt file which saves all the Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"rickyaandrew"},"content":"     * @param textToAppend {@code String} to append into the txt file.","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"rickyaandrew"},"content":"     * @throws DukeStorageSaveException when FileWriter is not able to read or","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"rickyaandrew"},"content":"     *                                  locate the file from the given file path.","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"rickyaandrew"},"content":"    public void appendToData(String textToAppend) throws DukeStorageSaveException {","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"rickyaandrew"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.data, true);","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"rickyaandrew"},"content":"            fileWriter.append(textToAppend + \"\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"rickyaandrew"},"content":"            fileWriter.close();","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"rickyaandrew"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"rickyaandrew"},"content":"            throw new DukeStorageSaveException(err.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":104,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":105,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"rickyaandrew"},"content":"     * Updates the done status in the txt file.","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"rickyaandrew"},"content":"     * @param number is the {@code Task} id.","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"rickyaandrew"},"content":"     * @throws DukeStorageUpdateException when {@code Scanner} is not able to read","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"rickyaandrew"},"content":"     *                                    or locate the {@code File} from the given","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"rickyaandrew"},"content":"     *                                    file path.","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"rickyaandrew"},"content":"    public void updateDone(int index) throws DukeStorageUpdateException {","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"rickyaandrew"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":115,"author":{"gitId":"rickyaandrew"},"content":"        String currLine;","lastModifiedDate":"2021-08-22"},{"lineNumber":116,"author":{"gitId":"rickyaandrew"},"content":"        String stringToAppend \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"rickyaandrew"},"content":"            Scanner sc \u003d new Scanner(this.data);","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"rickyaandrew"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"rickyaandrew"},"content":"                currLine \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"rickyaandrew"},"content":"                count++;","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"rickyaandrew"},"content":"                if (count \u003d\u003d index) {","lastModifiedDate":"2021-08-30"},{"lineNumber":124,"author":{"gitId":"rickyaandrew"},"content":"                    currLine \u003d currLine.replace(Storage.STORAGE_ISDONE_FALSE, Storage.STORAGE_ISDONE_TRUE);","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"rickyaandrew"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"rickyaandrew"},"content":"                stringToAppend +\u003d currLine + \"\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":127,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"rickyaandrew"},"content":"            clearsFileAndWrite(stringToAppend);","lastModifiedDate":"2021-09-04"},{"lineNumber":129,"author":{"gitId":"rickyaandrew"},"content":"            sc.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"rickyaandrew"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"rickyaandrew"},"content":"            throw new DukeStorageUpdateException(err.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"rickyaandrew"},"content":"     * Deletes the Task from the saved txt file.","lastModifiedDate":"2021-09-04"},{"lineNumber":137,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"rickyaandrew"},"content":"     * @param number is the {@code Task} id.","lastModifiedDate":"2021-09-04"},{"lineNumber":139,"author":{"gitId":"rickyaandrew"},"content":"     * @throws DukeStorageDeleteException when {@code Scanner} is not able to read","lastModifiedDate":"2021-09-04"},{"lineNumber":140,"author":{"gitId":"rickyaandrew"},"content":"     *                                    or locate the {@code File} from the given","lastModifiedDate":"2021-09-04"},{"lineNumber":141,"author":{"gitId":"rickyaandrew"},"content":"     *                                    file path.","lastModifiedDate":"2021-09-04"},{"lineNumber":142,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"rickyaandrew"},"content":"    public void deleteTaskFromData(int index) throws DukeStorageDeleteException {","lastModifiedDate":"2021-09-01"},{"lineNumber":144,"author":{"gitId":"rickyaandrew"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":145,"author":{"gitId":"rickyaandrew"},"content":"        String currLine;","lastModifiedDate":"2021-08-22"},{"lineNumber":146,"author":{"gitId":"rickyaandrew"},"content":"        String stringToAppend \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":147,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":148,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":149,"author":{"gitId":"rickyaandrew"},"content":"            Scanner sc \u003d new Scanner(this.data);","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"rickyaandrew"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"rickyaandrew"},"content":"                currLine \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"rickyaandrew"},"content":"                if (count !\u003d index) {","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"rickyaandrew"},"content":"                    stringToAppend +\u003d currLine + \"\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":154,"author":{"gitId":"rickyaandrew"},"content":"                }","lastModifiedDate":"2021-09-04"},{"lineNumber":155,"author":{"gitId":"rickyaandrew"},"content":"                count++;","lastModifiedDate":"2021-09-05"},{"lineNumber":156,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":157,"author":{"gitId":"rickyaandrew"},"content":"            clearsFileAndWrite(stringToAppend);","lastModifiedDate":"2021-09-04"},{"lineNumber":158,"author":{"gitId":"rickyaandrew"},"content":"            sc.close();","lastModifiedDate":"2021-09-04"},{"lineNumber":159,"author":{"gitId":"rickyaandrew"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-09-04"},{"lineNumber":160,"author":{"gitId":"rickyaandrew"},"content":"            throw new DukeStorageLoadException(Ui.ERROR_MESSAGE_FILE_NOT_FOUND);","lastModifiedDate":"2021-09-04"},{"lineNumber":161,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":164,"author":{"gitId":"rickyaandrew"},"content":"    private boolean getIsDoneFromStorage(String storageIsDone) {","lastModifiedDate":"2021-09-04"},{"lineNumber":165,"author":{"gitId":"rickyaandrew"},"content":"        assert !storageIsDone.equals(null) : \"Storage isDone value should not be null\";","lastModifiedDate":"2021-09-04"},{"lineNumber":166,"author":{"gitId":"rickyaandrew"},"content":"        if (storageIsDone.contains(\"1\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":167,"author":{"gitId":"rickyaandrew"},"content":"            return true;","lastModifiedDate":"2021-09-04"},{"lineNumber":168,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":169,"author":{"gitId":"rickyaandrew"},"content":"        return false;","lastModifiedDate":"2021-09-04"},{"lineNumber":170,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":171,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":172,"author":{"gitId":"rickyaandrew"},"content":"    private String getDescriptions(String[] storageDataArray) {","lastModifiedDate":"2021-09-04"},{"lineNumber":173,"author":{"gitId":"rickyaandrew"},"content":"        assert storageDataArray.length \u003e 1 : \"storageDataArray length should be greater than 1\";","lastModifiedDate":"2021-09-04"},{"lineNumber":174,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":175,"author":{"gitId":"rickyaandrew"},"content":"            return storageDataArray[2];","lastModifiedDate":"2021-09-04"},{"lineNumber":176,"author":{"gitId":"rickyaandrew"},"content":"        } catch (ArrayIndexOutOfBoundsException err) {","lastModifiedDate":"2021-09-04"},{"lineNumber":177,"author":{"gitId":"rickyaandrew"},"content":"            throw new DukeActionOutOfBoundException(Ui.ERROR_MESSAGE_STORAGE_LOAD_OUT_OF_BOUND);","lastModifiedDate":"2021-09-04"},{"lineNumber":178,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":179,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":180,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":181,"author":{"gitId":"rickyaandrew"},"content":"    private String getDateTimeLocation(String[] storageDataArray) {","lastModifiedDate":"2021-09-04"},{"lineNumber":182,"author":{"gitId":"rickyaandrew"},"content":"        assert storageDataArray.length \u003e 2 : \"storageDataArray length should be greater than 2\";","lastModifiedDate":"2021-09-04"},{"lineNumber":183,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":184,"author":{"gitId":"rickyaandrew"},"content":"            return storageDataArray[3];","lastModifiedDate":"2021-09-04"},{"lineNumber":185,"author":{"gitId":"rickyaandrew"},"content":"        } catch (ArrayIndexOutOfBoundsException err) {","lastModifiedDate":"2021-09-04"},{"lineNumber":186,"author":{"gitId":"rickyaandrew"},"content":"            throw new DukeActionOutOfBoundException(Ui.ERROR_MESSAGE_STORAGE_LOAD_OUT_OF_BOUND);","lastModifiedDate":"2021-09-04"},{"lineNumber":187,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":188,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":189,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":190,"author":{"gitId":"rickyaandrew"},"content":"    private void clearsFileAndWrite(String stringToAppend) {","lastModifiedDate":"2021-09-04"},{"lineNumber":191,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":192,"author":{"gitId":"rickyaandrew"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.data, false);","lastModifiedDate":"2021-09-04"},{"lineNumber":193,"author":{"gitId":"rickyaandrew"},"content":"            fileWriter.append(stringToAppend);","lastModifiedDate":"2021-09-04"},{"lineNumber":194,"author":{"gitId":"rickyaandrew"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-04"},{"lineNumber":195,"author":{"gitId":"rickyaandrew"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-08-29"},{"lineNumber":196,"author":{"gitId":"rickyaandrew"},"content":"            throw new DukeStorageDeleteException(err.toString());","lastModifiedDate":"2021-08-29"},{"lineNumber":197,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":198,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":199,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rickyaandrew":199}},{"path":"src/main/java/seedu/duke/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.commands.Ui;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.exceptions.action.DukeActionOutOfBoundException;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.tasks.Task;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     * Primary Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     * Retrieves an {@code ArrayList\u003cTask\u003e} that is being stored in this","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * {@code TaskList}.","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     * @return an {@code ArrayList\u003cTask\u003e} which is being stored on this","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"     *         {@code TaskList}.","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"     * @see java.util.ArrayList","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"        return this.taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"     * Loads previous saved Tasks from a txt file. Save it in this current","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"     * {@code TaskList} in an {@code ArrayList\u003cTask\u003e}.","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"     * @param savedTasks this is the {@code ArrayList\u003cTask\u003e} coming from the txt","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"     *                   file.","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"     * @see java.util.ArrayList","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"    public void loadFromStorage(ArrayList\u003cTask\u003e savedTasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"        this.taskList.addAll(savedTasks);","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"     * Marks the {@code Task} in the {@code ArrayList\u003cTask\u003e} as done.","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"     * @param number is the {@code Task} id.","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"    public Task doneItem(int index) {","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"            Task doneTask \u003d this.taskList.get(index).markAsDone();","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"            this.taskList.set(index, doneTask);","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"            return doneTask;","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"            throw new DukeActionOutOfBoundException(Ui.ERROR_MESSAGE_ACTION_OUT_OF_BOUND);","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"     * Adds a particular {@code Task} given by the user into the {@code TaskList}.","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"     * @param task is the {@code Task} that is to be added into the","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"     *             {@code TaskList}.","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"        this.taskList.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"rickyaandrew"},"content":"     * Deletes a particular task that is present in the {@code TaskList}.","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"rickyaandrew"},"content":"     * @param number is the {@code Task} id.","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"    public Task deleteItem(int index) {","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"rickyaandrew"},"content":"            return this.taskList.remove(index);","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"rickyaandrew"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"rickyaandrew"},"content":"            throw new DukeActionOutOfBoundException(Ui.ERROR_MESSAGE_ACTION_OUT_OF_BOUND);","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"rickyaandrew"},"content":"     * Finds the specific {@code Task} from the {@code ArrayList\u003cTask\u003e} in","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"rickyaandrew"},"content":"     * {@code TaskList} based on the description given.","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"rickyaandrew"},"content":"     * @param find is the description coming from the user, which the list of","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"rickyaandrew"},"content":"     *             {@code Task} they would like to find.","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"rickyaandrew"},"content":"    public ArrayList\u003cTask\u003e find(String find) {","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"rickyaandrew"},"content":"        ArrayList\u003cTask\u003e foundList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-01"},{"lineNumber":91,"author":{"gitId":"rickyaandrew"},"content":"        this.taskList.stream().filter(task -\u003e task.getDescription().contains(find))","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"rickyaandrew"},"content":"                .forEach(filteredTask -\u003e foundList.add(filteredTask));","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"rickyaandrew"},"content":"        return foundList;","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":96,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rickyaandrew":97}},{"path":"src/main/java/seedu/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.tasks;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"     * Constructor. Default having the isDone parameter to be set as false.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"     * @param description description of the current {@code Deadline} object.","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"     * @param dateTime    is the description of the location and time for the","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"     *                    {@code Deadline}.","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    public Deadline(String description, String dateTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"        super(description, dateTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"     * Second Constructor which takes in additional boolean, to be able to set the","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"     * initial boolean status.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     * @param description is the description of the {@code Deadline}.","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * @param dateTime    is the description of the location and time for the","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     *                    current {@code Deadline}.","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     * @param isDone      determine whether the current {@code Deadline} is","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"     *                    completed or not.","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    public Deadline(String description, String dateTime, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"        super(description, dateTime, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"     * Retrieves the symbol of the current object. Different object and child have","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"     * different symbols that represents them.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"     * @return a fixed parent symbol \"D\".","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"    public String getSymbol() {","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"        return \"D\";","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"     * Marks the current {@code Deadline} as done.","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"     * @return a new {@code Deadline} object with the same description and by, but","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"     *         setting isDone property to be true","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"    public Deadline markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"        return new Deadline(this.getDescription(), this.getDateTime(), true);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"     * Describes the current {@code Deadline}.","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"     * @return a description of the current {@code Deadline}.","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"        return \"[D][\" + this.getStatusIcon() + \"] \" + this.getDescription() + \" (by: \" + this.getDateTime() + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rickyaandrew":61}},{"path":"src/main/java/seedu/duke/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.tasks;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"public class Events extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"     * Constructor. Default having the isDone parameter to be set as false.","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"     * @param description description of the current {@code Events} object.","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"     * @param dateTime    is the description of the location and time for the event.","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    public Events(String description, String dateTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"        super(description, dateTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"     * Second Constructor. Initialising the parameters of the Events.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"     * @param description is the description of the {@code Events}.","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"     * @param dateTime    is the description of the location and time for the","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     *                    {@code Events}.","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * @param isDone      determine whether the current {@code Events} is completed","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     *                    or not.","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    public Events(String description, String dateTime, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"        super(description, dateTime, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"     * Retrieves the symbol of the current object. Different object and child have","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"     * different symbols that represents them.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"     * @return a fixed parent symbol \"E\".","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"    public String getSymbol() {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"        return \"E\";","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"     * Marks the current {@code Events} as done.","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"     * @return a new {@code Events} object with the same description and dayTime,","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"     *         but setting isDone property to be true","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"    public Events markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"        return new Events(this.getDescription(), this.getDateTime(), true);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"     * Describes the current {@code Events} object.","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"     * @return a description of the current {@code Events} object.","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"        return \"[E][\" + this.getStatusIcon() + \"] \" + this.getDescription() + \" (at: \" + this.getDateTime() + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rickyaandrew":59}},{"path":"src/main/java/seedu/duke/tasks/PeriodTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"public class PeriodTask extends Task {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"    private final LocalDate from;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    private final LocalDate to;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"    public PeriodTask(String description, String from, String to) {","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"        super(description);","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"        System.out.println(from);","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"        System.out.println(to);","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"        this.from \u003d LocalDate.of(Integer.parseInt(from.split(\"-\")[2]), Integer.parseInt(from.split(\"-\")[1]),","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"                Integer.parseInt(from.split(\"-\")[0]));","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"        this.to \u003d LocalDate.of(Integer.parseInt(to.split(\"-\")[2]), Integer.parseInt(to.split(\"-\")[1]),","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"                Integer.parseInt(to.split(\"-\")[0]));","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    private PeriodTask(String description, LocalDate from, LocalDate to, boolean isDone) {","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"        this.from \u003d from;","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"        this.to \u003d to;","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"    public String getSymbol() {","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"        return \"PT\";","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"    public PeriodTask markAsDone() {","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"        return new PeriodTask(this.getDescription(), this.from, this.to, true);","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"    public String toString() {","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"        return \"[PT][\" + this.getStatusIcon() + \"] \" + this.getDescription() + \" between \"","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"                + from.format(DateTimeFormatter.ofPattern(\"dd/MM/yy\")) + \" and \"","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"                + to.format(DateTimeFormatter.ofPattern(\"dd/MM/yy\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"rickyaandrew":45}},{"path":"src/main/java/seedu/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.tasks;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"    protected final String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"    protected final String dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"    protected final boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"     * Constructor. Default having the isDone parameter to be set as false and","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"     * dateTime set as none.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"     * @param description is the description of the {@code Task}.","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"        this.dateTime \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * Second Constructor. Default having the isDone parameter to be set as false.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     * @param description is the description of the {@code Task}.","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"     * @param dateTime    is the description of the location and time for the","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"     *                    {@code Task}.","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    public Task(String description, String dateTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"     * Third Constructor. Default having the dateTime parameter to be set as empty","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"     * string as it is not needed.","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"     * @param description is the description of the {@code Task}.","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"     * @param isDone      determine whether the {@code Task} is completed or not.","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"        this.dateTime \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"     * Fourth Constructor. Initialising the parameters of the {@code Task}.","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"     * @param description is the description of the {@code Task}.","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"     * @param dateTime    is the description of the location and time for the","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"     *                    {@code Task}.","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"     * @param isDone      determine whether the {@code Task} is completed or not.","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"    public Task(String description, String dateTime, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"     * Retrieves the dateTime of the current {@code Task}.","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"     * @return a {@code String}, the dateTime of the current {@code Task}.","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"    public String getDateTime() {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"        return this.dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"rickyaandrew"},"content":"     * Retrieves the isDone property of the current {@code Task} object.","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"rickyaandrew"},"content":"     * @return the current isDone property of this object.","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"rickyaandrew"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":77,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":78,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"rickyaandrew"},"content":"     * Retrieves the symbol of the current object. Different object and child have","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"rickyaandrew"},"content":"     * different symbols that represents them.","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"rickyaandrew"},"content":"     * @return a fixed parent symbol \"parent-task\".","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"rickyaandrew"},"content":"    public String getSymbol() {","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"rickyaandrew"},"content":"        return \"parent-task\";","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":87,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":88,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"rickyaandrew"},"content":"     * Retrieves the description of the current {@code Task} object.","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"rickyaandrew"},"content":"     * @return a String which describes the current {@code Task} object.","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"rickyaandrew"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"rickyaandrew"},"content":"        return this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"rickyaandrew"},"content":"     * Retrieves the status icon which depends on the isDone status of the current","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"rickyaandrew"},"content":"     * object.","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"rickyaandrew"},"content":"     * @return \"X\" if isDone is true, else it will return \" \".","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"rickyaandrew"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"rickyaandrew"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"rickyaandrew"},"content":"     * Marks the current {@code Task} as done.","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"rickyaandrew"},"content":"     * @return a new {@code Task} object with the same description, but setting","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"rickyaandrew"},"content":"     *         isDone property to be true","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"rickyaandrew"},"content":"    public Task markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"rickyaandrew"},"content":"        return new Task(this.getDescription(), true);","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"rickyaandrew"},"content":"     * Describes the current {@code Task} object.","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"rickyaandrew"},"content":"     * @return a description of the current {@code Task} object.","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"rickyaandrew"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"rickyaandrew"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rickyaandrew":126}},{"path":"src/main/java/seedu/duke/tasks/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.tasks;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"public class TimedTask extends Task {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"    public TimedTask(String description, String dateTime) {","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"        super(description, dateTime);","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"    public TimedTask(String description, String dateTime, boolean isDone) {","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"        super(description, dateTime, isDone);","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    public String getSymbol() {","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"        return \"TT\";","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    public TimedTask markAsDone() {","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"        return new TimedTask(this.getDescription(), this.getDateTime(), true);","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    public String toString() {","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"        return \"[TT][\" + this.getStatusIcon() + \"] \" + this.getDescription() + \" (needs \" + this.getDateTime() + \")\";","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"rickyaandrew":28}},{"path":"src/main/java/seedu/duke/tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.tasks;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"public class ToDos extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"     * Constructor which inherits from the super class. Default having the isDone","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"     * parameter to be false.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"     * @param description is the description of the {@code ToDos} task.","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"    public ToDos(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"     * Second Constructor which takes in additional boolean, to be able to set the","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"     * initial boolean status.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"     * @param description is the description of the {@code ToDos} task.","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"     * @param isDone      determine whether the {@code ToDos} task is completed or","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     *                    not.","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    public ToDos(String description, boolean isDone) {","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"     * Get the symbol of this {@code ToDos} object. The symbol for {@code ToDos}","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"     * object is \"T\".","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"     * @return \"T\"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"    public String getSymbol() {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"        return \"T\";","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"     * Marks the current {@code ToDos} as done.","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"     * @return a new ToDos object with the same description, but setting isDone","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"     *         property to be true","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"    public ToDos markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"        return new ToDos(this.getDescription(), true);","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"     * Describes the current {@code ToDos} object.","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"     * @return a description of the current {@code ToDos} object.","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"        return \"[T][\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rickyaandrew":57}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"rickyaandrew":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"      \u003c/content\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"  \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"rickyaandrew":19}},{"path":"src/test/java/seedu/duke/storage/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import seedu.duke.tasks.ToDos;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    public void testDoneItem() {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"        taskList.addTask(new ToDos(\"UnitTesting\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"        assertFalse(taskList.getTaskList().get(0).getIsDone());","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"        taskList.doneItem(0);","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"        assertTrue(taskList.getTaskList().get(0).getIsDone());","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    public void testAddTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"        taskList.addTask(new ToDos(\"UnitTesting\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"        assertFalse(taskList.getTaskList().get(0).getIsDone());","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(\"[T][ ] UnitTesting\", taskList.getTaskList().get(0).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"        taskList.addTask(new ToDos(\"UnitTesting\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(1, taskList.getTaskList().size());","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"        taskList.deleteItem(0);","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(0, taskList.getTaskList().size());","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"rickyaandrew":42}},{"path":"src/test/java/seedu/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.tasks;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    public void testGetSymbol() {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"        Deadline deadline \u003d new Deadline(\"testGetSymbol description\", \"testGetSymbol by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(\"D\", deadline.getSymbol());","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    public void testGetBy() {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"        Deadline deadline \u003d new Deadline(\"testGetBy description\", \"testGetBy by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(\"testGetBy by\", deadline.getDateTime());","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"        Deadline deadline \u003d new Deadline(\"testMarkAsDone description\", \"testMarkAsDone by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"        assertTrue(deadline.markAsDone().getIsDone());","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"        Deadline deadline \u003d new Deadline(\"testToString description\", \"testToString by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(\"[D][ ] testToString description (by: testToString by)\", deadline.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rickyaandrew":37}},{"path":"src/test/java/seedu/duke/tasks/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.tasks;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"public class EventsTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"    public void testGetSymbol() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"        Events events \u003d new Events(\"testGetSymbol description\", \"testGetSymbol dayTime\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(\"E\", events.getSymbol());","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    public void testDayTime() {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"        Events events \u003d new Events(\"testDayTime description\", \"testDayTime dayTime\");","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(\"testDayTime dayTime\", events.getDateTime());","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"        Events events \u003d new Events(\"testMarkAsDone description\", \"testMarkAsDone dayTime\");","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"        assertTrue(events.markAsDone().getIsDone());","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"        Events events \u003d new Events(\"testToString description\", \"testToString dayTime\");","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(\"[E][ ] testToString description (at: testToString dayTime)\", events.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rickyaandrew":36}},{"path":"src/test/java/seedu/duke/tasks/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package seedu.duke.tasks;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"public class ToDosTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"    public void testGetSymbol() {","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"        ToDos todos \u003d new ToDos(\"testGetSymbol description\");","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(\"T\", todos.getSymbol());","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"        ToDos todos \u003d new ToDos(\"testGetBy description\");","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"        assertTrue(todos.markAsDone().getIsDone());","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"        ToDos todos \u003d new ToDos(\"testToString description\");","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(\"[T][ ] testToString description\", todos.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rickyaandrew":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"todo join sports club","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"done 5","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rickyaandrew":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rickyaandrew":1,"-":20}}]
