[{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-21"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"public class Main {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"     * Runs the main Duke ToDo Application","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"     * @param args","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"     * @throws FileNotFoundException when file is not found in the given location.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     * @throws IOException           when Scanner is not able to scan anything from","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"     *                               the given file path.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    public static void main(String[] args) throws FileNotFoundException, IOException {","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"        Duke duke \u003d new Duke(\"data/data.txt\");","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"        duke.start();","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rickyaandrew":20}},{"path":"src/main/java/data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"E | 1 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2021-08-21"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"D | 1 | return book | 02 Dec 2019 18:00","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"T | 1 | borrow book","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"T | 1 | borrow book","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"T | 1 | borrow hello","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"E | 0 | project meeting | Mon 2-4pm","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"D | 0 | return book | 02 Dec 2019 18:00","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"E | 1 | project meeting | Mon 2-4pm","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":8}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import duke.commands.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import duke.commands.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    private final Storage storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     * Class Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     * @param filePath path where the txt file, data base for this application, is","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     *                 being stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"     * Starts the application, allows the application to start taking in inputs from","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"     * the users.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"     * @throws FileNotFoundException when file is not found in the given location.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"    public void start() throws FileNotFoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"        ArrayList\u003cTask\u003e savedTasks \u003d storage.loadData();","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"        taskList.loadFromStorage(savedTasks);","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"        Ui.printIntro();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"        while (true) {","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"            userInput \u003d sc.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"            try {","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"                Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"                Command command \u003d parser.parseCommands(userInput);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"                command.execute(taskList, storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"                if (command.getIsExit()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"                    sc.close();","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"                    return;","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"                }","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"                Ui.printMessage(Ui.ERROR_MSG_EMPTY_DESCRIPTION);","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"                continue;","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"rickyaandrew":62,"-":3}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"    private final Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     * Primary Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"     * @param task is the task that will be added into the list of tasks and the","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"     *             database.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     * Helps to add the task into the list of tasks when this function is executed.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskList the list of Tasks which is being stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"     * @param storage  the database where the Tasks are being saved for progression.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"        String inputToStorage;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"            taskList.addTask(this.task);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"            inputToStorage \u003d this.task.getSymbol() + \" | 0 | \" + this.task.getDescription();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"            if (!this.task.getSymbol().equals(\"T\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"                inputToStorage +\u003d \" | \" + this.task.getDateTime();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"            storage.appendToData(inputToStorage);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"     * @return boolean whether the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"    };","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":54}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"     * Helps to execute the command.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskList the list of Tasks which is being stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"     * @param storage  the database where the Tasks are being saved for progression.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    public abstract void execute(TaskList taskList, Storage storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"     * @return boolean whether the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    public abstract boolean getIsExit();","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":21}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"    private final String taskId;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"     * Primary Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskId is the id of the task that will be deleted.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    public DeleteCommand(String taskId) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * Helps to delete the task from the list of tasks when this function is","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     * executed.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskList the list of Tasks which is being stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"     * @param storage  the database where the Tasks are being saved for progression.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"            taskList.deleteItem(this.taskId);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"            storage.deleteTaskFromData(this.taskId);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"     * @return boolean whether the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"    };","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":46}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"    private final String taskId;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"     * Primary Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskId is the task that will be updated as done in the list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    public DoneCommand(String taskId) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * Helps to update the task in the list of tasks as done when this function is","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     * executed.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskList the list of Tasks which is being stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"     * @param storage  the database where the Tasks are being saved for progression.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"            taskList.doneItem(this.taskId);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"            storage.updateDone(this.taskId);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"            System.out.println(e);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"     * @return boolean whether the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":46}},{"path":"src/main/java/duke/commands/EmptyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"public class EmptyCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"     * Empty Command that does nothing.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskList the list of Tasks which is being stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"     * @param storage  the database where the Tasks are being saved for progression.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * @return boolean whether the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":27}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"     * Helps to print the message when user exits the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskList the list of Tasks which is being stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"     * @param storage  the database where the Tasks are being saved for progression.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"        Ui.printBye();","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     * @return boolean whether the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"        return true;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    };","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":28}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"    private final String find;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"    public FindCommand(String find) {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"        this.find \u003d find;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"     * Helps to find a list of Tasks which matches the user description when this","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"     * command is executed.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskList the list of Tasks which is being stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"     * @param storage  the database where the Tasks are being saved for progression.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"        taskList.find(this.find);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"     * @return boolean whether the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":34}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"     * Helps to print the list of tasks that is on hand.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskList the list of Tasks which is being stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"     * @param storage  the database where the Tasks are being saved for progression.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"        Ui.printList(taskList.getTaskList(), Ui.NO_TASK_MESSAGE, Ui.LIST_MESSAGE);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     * @return boolean whether the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":28}},{"path":"src/main/java/duke/commands/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import duke.tasks.Events;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"import duke.tasks.ToDos;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"public class Parser {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    private String dateTimeFormatter(String unformattedDate) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"        // 2/12/2019 1800","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"        String stringDate \u003d unformattedDate.split(\" \")[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"        String time \u003d unformattedDate.split(\" \")[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"        LocalDate date \u003d LocalDate.of(Integer.parseInt(stringDate.split(\"/\")[2]),","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"                Integer.parseInt(stringDate.split(\"/\")[1]), Integer.parseInt(stringDate.split(\"/\")[0]));","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"        LocalDateTime dateTime \u003d date.atTime(Integer.parseInt(time.substring(0, 2)),","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"                Integer.parseInt(time.substring(2, 4)));","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    public Command parseCommands(String fullCommand) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"        String descriptions;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"        String onlyDescription;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"        String dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"        String[] actionDescription \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"        String action \u003d actionDescription[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"        switch (action) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"                return new ExitCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"            case \"list\":","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"                return new ListCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"            case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"                return new DoneCommand(actionDescription[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"                descriptions \u003d actionDescription[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"                if (descriptions.equals(\"\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"                    return new UiCommand(Ui.ERROR_MSG_EMPTY_DESCRIPTION);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"                ToDos todos \u003d new ToDos(descriptions);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"                return new AddCommand(todos);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"                descriptions \u003d actionDescription[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"                if (descriptions.equals(\"\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"                    return new UiCommand(Ui.ERROR_MSG_EMPTY_DESCRIPTION);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"                onlyDescription \u003d descriptions.split(\" /\")[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"                dateTime \u003d descriptions.split(\" /by \")[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"                dateTime \u003d dateTimeFormatter(dateTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"                Deadline deadline \u003d new Deadline(onlyDescription, dateTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"                return new AddCommand(deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"            case \"event\":","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"                descriptions \u003d actionDescription[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"                if (descriptions.equals(\"\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"                    return new UiCommand(Ui.ERROR_MSG_EMPTY_DESCRIPTION);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"                onlyDescription \u003d descriptions.split(\" /\")[0];","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"                dateTime \u003d descriptions.split(\" /at \")[1];","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"rickyaandrew"},"content":"                Events event \u003d new Events(onlyDescription, dateTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"rickyaandrew"},"content":"                return new AddCommand(event);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"rickyaandrew"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"                return new DeleteCommand(actionDescription[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"rickyaandrew"},"content":"            case \"find\":","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"rickyaandrew"},"content":"                return new FindCommand(actionDescription[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"rickyaandrew"},"content":"            case \"\":","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"rickyaandrew"},"content":"                return new EmptyCommand();","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"rickyaandrew"},"content":"            default:","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"rickyaandrew"},"content":"                return new UiCommand(Ui.ERROR_MSG_UNKOWN_MSG);","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":86}},{"path":"src/main/java/duke/commands/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.commands;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"public class Ui {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    public final static String logo \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\" + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"    public final static String INDENTED_HORIZONTAL_LINE \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    public final static String INDENT \u003d \"     \";","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    public final static String INTRODUCTION \u003d \"Hello! I\u0027m Ricky\\n\" + Ui.INDENT + \"What can I do for you?\";","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    public final static String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    public final static String DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    public final static String LIST_MESSAGE \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    public final static String ERROR_MSG_UNKOWN_MSG \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"    public final static String ERROR_MSG_EMPTY_DESCRIPTION \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    public final static String NO_TASK_MESSAGE \u003d \"Good day! You have no task in hand right now.\";","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"    public final static String FIND_ZERO_SIZE \u003d \"We are not able to find anything with that keyword. Please try again.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    public final static String FIND_LIST_MESSAGE \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"        System.out.println(Ui.INDENTED_HORIZONTAL_LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"        System.out.println(Ui.INDENT + message);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"        System.out.println(Ui.INDENTED_HORIZONTAL_LINE + \"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    public static void printIntro() {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"        System.out.println(Ui.logo);","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"        Ui.printMessage(Ui.INTRODUCTION);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"    public static void printBye() {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"        Ui.printMessage(Ui.BYE_MESSAGE);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"    public static void printList(ArrayList\u003cTask\u003e taskList, String zeroSizeMsg, String listMsg) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"            Ui.printMessage(zeroSizeMsg);","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"            return;","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"        System.out.println(Ui.INDENTED_HORIZONTAL_LINE);","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"        System.out.println(Ui.INDENT + listMsg);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"            System.out.println(Ui.INDENT + (i + 1) + \". \" + taskList.get(i).toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"        System.out.println(Ui.INDENTED_HORIZONTAL_LINE + \"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rickyaandrew":49}},{"path":"src/main/java/duke/commands/UiCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"public class UiCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"    private final String uiMsg;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"     * Primary Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"     * @param uiMsg is the message that the Ui will print for the user to read.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    public UiCommand(String uiMsg) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"        this.uiMsg \u003d uiMsg;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"     * Helps to print UI message for the user when command is executed.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * @param taskList the list of Tasks which is being stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     * @param storage  the database where the Tasks are being saved for progression.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"    public void execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"        Ui.printMessage(this.uiMsg);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"     * Checks if the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"     * @return boolean whether the user wants to exit from the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"rickyaandrew":38}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"import duke.tasks.Events;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"import duke.tasks.ToDos;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    private final File data;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"     * Primary Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * @param filePath is the path of the File which needed to be retrieved.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"        this.data \u003d new File(filePath);","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"     * Retrieves the File from the given file path that is passed into the","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"     * constructor of this Object.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"     * @return a File from the given file path.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"    public File getData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"        return this.data;","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"     * Loads the saved Tasks from the txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"     * @return ArrayList\u003cTask\u003e of Tasks containing all the previous Task","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"     * @throws FileNotFoundException when file is not found in the given location.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"    public ArrayList\u003cTask\u003e loadData() throws FileNotFoundException {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"        ArrayList\u003cTask\u003e currList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"        String currLine;","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"        String type;","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"        String descriptions;","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"        String[] stringArr;","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"        String dateTimeLocation;","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"        boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"        Scanner sc \u003d new Scanner(data);","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"            currLine \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"            stringArr \u003d currLine.replace(\"|\", \"/\").split(\" / \");","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"            type \u003d currLine.split(\"\")[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"            isDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"            switch (type) {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"                case \"T\":","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"                    descriptions \u003d stringArr[2];","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"                    ToDos todos;","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"                    if (stringArr[1].contains(\"1\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"                        isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"                    todos \u003d new ToDos(descriptions, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"                    currList.add(todos);","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"rickyaandrew"},"content":"                case \"D\":","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"rickyaandrew"},"content":"                    descriptions \u003d stringArr[2];","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"rickyaandrew"},"content":"                    dateTimeLocation \u003d stringArr[3];","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"rickyaandrew"},"content":"                    Deadline deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"                    if (stringArr[1].contains(\"1\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"rickyaandrew"},"content":"                        isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"rickyaandrew"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"rickyaandrew"},"content":"                    deadline \u003d new Deadline(descriptions, dateTimeLocation, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"rickyaandrew"},"content":"                    currList.add(deadline);","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"rickyaandrew"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"rickyaandrew"},"content":"                case \"E\":","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"rickyaandrew"},"content":"                    descriptions \u003d stringArr[2];","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"rickyaandrew"},"content":"                    dateTimeLocation \u003d stringArr[3];","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"rickyaandrew"},"content":"                    Events event;","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"rickyaandrew"},"content":"                    if (stringArr[1].contains(\"1\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"rickyaandrew"},"content":"                        isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"rickyaandrew"},"content":"                    }","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"rickyaandrew"},"content":"                    event \u003d new Events(descriptions, dateTimeLocation, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"rickyaandrew"},"content":"                    currList.add(event);","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"rickyaandrew"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"rickyaandrew"},"content":"                default:","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"rickyaandrew"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"rickyaandrew"},"content":"        sc.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"rickyaandrew"},"content":"        return currList;","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"rickyaandrew"},"content":"     * Appends a new line in the txt file which saves all the Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"rickyaandrew"},"content":"     * @param textToAppend String to append into the txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"rickyaandrew"},"content":"     * @throws IOException when FileWriter is not able to read or locate the file","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"rickyaandrew"},"content":"     *                     from the given file path.","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"rickyaandrew"},"content":"    public void appendToData(String textToAppend) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":108,"author":{"gitId":"rickyaandrew"},"content":"        FileWriter fw \u003d new FileWriter(this.data, true);","lastModifiedDate":"2021-08-22"},{"lineNumber":109,"author":{"gitId":"rickyaandrew"},"content":"        fw.append(textToAppend + \"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":110,"author":{"gitId":"rickyaandrew"},"content":"        fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":111,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":112,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":113,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"rickyaandrew"},"content":"     * Helps to update the done status in the txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"rickyaandrew"},"content":"     * @param number is the Task id.","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"rickyaandrew"},"content":"     * @throws IOException when Scanner is not able to read or locate the file from","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"rickyaandrew"},"content":"     *                     the given file path.","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"rickyaandrew"},"content":"    public void updateDone(String number) throws FileNotFoundException, IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"rickyaandrew"},"content":"        int index \u003d Integer.parseInt(number);","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"rickyaandrew"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"rickyaandrew"},"content":"        String currLine;","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"rickyaandrew"},"content":"        String finalAppend \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"rickyaandrew"},"content":"        Scanner sc \u003d new Scanner(this.data);","lastModifiedDate":"2021-08-22"},{"lineNumber":126,"author":{"gitId":"rickyaandrew"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":127,"author":{"gitId":"rickyaandrew"},"content":"            currLine \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":128,"author":{"gitId":"rickyaandrew"},"content":"            count++;","lastModifiedDate":"2021-08-22"},{"lineNumber":129,"author":{"gitId":"rickyaandrew"},"content":"            if (count !\u003d index) {","lastModifiedDate":"2021-08-22"},{"lineNumber":130,"author":{"gitId":"rickyaandrew"},"content":"                finalAppend +\u003d currLine + \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":131,"author":{"gitId":"rickyaandrew"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":132,"author":{"gitId":"rickyaandrew"},"content":"                currLine \u003d currLine.replace(\"| 0 |\", \"| 1 |\");","lastModifiedDate":"2021-08-22"},{"lineNumber":133,"author":{"gitId":"rickyaandrew"},"content":"                finalAppend +\u003d currLine + \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":134,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":135,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":136,"author":{"gitId":"rickyaandrew"},"content":"        FileWriter fw \u003d new FileWriter(this.data, false);","lastModifiedDate":"2021-08-22"},{"lineNumber":137,"author":{"gitId":"rickyaandrew"},"content":"        fw.append(finalAppend);","lastModifiedDate":"2021-08-22"},{"lineNumber":138,"author":{"gitId":"rickyaandrew"},"content":"        fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":139,"author":{"gitId":"rickyaandrew"},"content":"        sc.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":140,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":141,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":142,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"rickyaandrew"},"content":"     * Helps to delete the Task from the saved txt file.","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"rickyaandrew"},"content":"     * @param number is the Task id.","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"rickyaandrew"},"content":"     * @throws IOException when Scanner is not able to read or locate the file from","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"rickyaandrew"},"content":"     *                     the given file path.","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"rickyaandrew"},"content":"    public void deleteTaskFromData(String number) throws FileNotFoundException, IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":150,"author":{"gitId":"rickyaandrew"},"content":"        int index \u003d Integer.parseInt(number);","lastModifiedDate":"2021-08-22"},{"lineNumber":151,"author":{"gitId":"rickyaandrew"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":152,"author":{"gitId":"rickyaandrew"},"content":"        String currLine;","lastModifiedDate":"2021-08-22"},{"lineNumber":153,"author":{"gitId":"rickyaandrew"},"content":"        String finalAppend \u003d \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":154,"author":{"gitId":"rickyaandrew"},"content":"        Scanner sc \u003d new Scanner(this.data);","lastModifiedDate":"2021-08-22"},{"lineNumber":155,"author":{"gitId":"rickyaandrew"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":156,"author":{"gitId":"rickyaandrew"},"content":"            currLine \u003d sc.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":157,"author":{"gitId":"rickyaandrew"},"content":"            count++;","lastModifiedDate":"2021-08-22"},{"lineNumber":158,"author":{"gitId":"rickyaandrew"},"content":"            if (count !\u003d index) {","lastModifiedDate":"2021-08-22"},{"lineNumber":159,"author":{"gitId":"rickyaandrew"},"content":"                finalAppend +\u003d currLine + \"\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":160,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":161,"author":{"gitId":"rickyaandrew"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":162,"author":{"gitId":"rickyaandrew"},"content":"        FileWriter fw \u003d new FileWriter(this.data, false);","lastModifiedDate":"2021-08-22"},{"lineNumber":163,"author":{"gitId":"rickyaandrew"},"content":"        fw.append(finalAppend);","lastModifiedDate":"2021-08-22"},{"lineNumber":164,"author":{"gitId":"rickyaandrew"},"content":"        fw.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":165,"author":{"gitId":"rickyaandrew"},"content":"        sc.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":166,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rickyaandrew":167}},{"path":"src/main/java/duke/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.storage;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import duke.commands.Ui;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"public class TaskList {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"     * Primary Constructor.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"     * Retrieves the list of tasks that is being stored in this class.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * @return ArrayList\u003cTask\u003e of tasks which is being stored.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"        return this.taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"     * Loads previous saved Tasks from a txt file. Save it in this current TaskList","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"     * in an ArrayList\u003cTask\u003e object.","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"     * @param savedTasks this is the ArrayList\u003cTask\u003e of Task coming from the txt","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"     *                   file.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"    public void loadFromStorage(ArrayList\u003cTask\u003e savedTasks) {","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"        savedTasks.forEach(task -\u003e {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"            this.taskList.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"        });","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"     * Helps to mark the task in the list of Tasks as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"     * @param number is the Task id.","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"    public void doneItem(String number) {","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"        int index \u003d Integer.parseInt(number) - 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"        Task curr \u003d this.taskList.get(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"        this.taskList.set(index, curr.markAsDone());","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"        curr \u003d this.taskList.get(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"        Ui.printMessage(Ui.DONE_MESSAGE + \"\\n\" + Ui.INDENT + \"  \" + curr.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"     * Adds a particular task given by the user into the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"     * @param task is the task that is to be added into the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"        this.taskList.add(task);","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"        Ui.printMessage(\"Got it. I\u0027ve added this task:\\n\" + Ui.INDENT + \"  \" + task.toString() + \"\\n\" + Ui.INDENT","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"                + \"Now you have \" + this.taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"     * Deletes a particular task that is present in the TaskList.","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"     * @param number is the Task id.","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"rickyaandrew"},"content":"    public void deleteItem(String number) {","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"rickyaandrew"},"content":"        int index \u003d Integer.parseInt(number) - 1;","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"rickyaandrew"},"content":"        Task task \u003d this.taskList.get(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"rickyaandrew"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"        Ui.printMessage(\"Noted. I\u0027ve removed this task:\\n\" + Ui.INDENT + \"  \" + task.toString() + \"\\n\" + Ui.INDENT","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"rickyaandrew"},"content":"                + \"Now you have \" + this.taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"rickyaandrew"},"content":"     * Helps to find the specific Task from the list based on the description given.","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"rickyaandrew"},"content":"     * @param find is the description coming from the user, which the list of Tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"rickyaandrew"},"content":"     *             they would like to find.","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"rickyaandrew"},"content":"    public void find(String find) {","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"rickyaandrew"},"content":"        ArrayList\u003cTask\u003e tempArr \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"rickyaandrew"},"content":"        this.taskList.forEach(task -\u003e {","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"rickyaandrew"},"content":"            if (task.getDescription().contains(find)) {","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"rickyaandrew"},"content":"                tempArr.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"rickyaandrew"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"rickyaandrew"},"content":"        });","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"rickyaandrew"},"content":"        Ui.printList(tempArr, Ui.FIND_ZERO_SIZE, Ui.FIND_LIST_MESSAGE);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rickyaandrew":95}},{"path":"src/main/java/duke/storage/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"import duke.tasks.ToDos;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    public void testDoneItem() {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"        taskList.addTask(new ToDos(\"UnitTesting\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(false, taskList.getTaskList().get(0).getIsDone());","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"        taskList.doneItem(\"1\");","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(true, taskList.getTaskList().get(0).getIsDone());","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"    public void testAddTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"        taskList.addTask(new ToDos(\"UnitTesting\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(false, taskList.getTaskList().get(0).getIsDone());","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(\"[T][ ] UnitTesting\", taskList.getTaskList().get(0).toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"        taskList.addTask(new ToDos(\"UnitTesting\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(1, taskList.getTaskList().size());","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"        taskList.deleteItem(\"1\");","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(0, taskList.getTaskList().size());","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"rickyaandrew":40}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"     * Contructor. Default having the isDone parameter to be set as false.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"     * @param description description of the current Events object.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"     * @param dateTime    is the description of the location and time for the","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"     *                    Events.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    public Deadline(String description, String dateTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"        super(description, dateTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"     * Second Constructor which takes in additional boolean, to be able to set the","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"     * initial boolean status.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     * @param description is the description of the Events.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * @param dateTime    is the description of the location and time for the","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     *                    Events.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     * @param isDone      determine whether the Events is completed or not.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"    public Deadline(String description, String dateTime, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"        super(description, dateTime, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"     * Retrieves the symbol of the current object. Different object and child have","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"     * different symbols that represents them.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"     * @return a fixed parent symbol \"D\".","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"    public String getSymbol() {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"        return \"D\";","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"     * Marks the current Deadline as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"     * @return a new Deadline object with the same description and by, but setting","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"     *         isDone property to be true","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"    public Deadline markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"        return new Deadline(this.getDescription(), this.getDateTime(), true);","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"     * Describes the current Deadline object.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"     * @return a description of the current Deadline object.","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"        return \"[D][\" + this.getStatusIcon() + \"] \" + this.getDescription() + \" (by: \" + this.getDateTime() + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rickyaandrew":60}},{"path":"src/main/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"    public void testGetSymbol() {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"        Deadline deadline \u003d new Deadline(\"testGetSymbol description\", \"testGetSymbol by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(\"D\", deadline.getSymbol());","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    public void testGetBy() {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"        Deadline deadline \u003d new Deadline(\"testGetBy description\", \"testGetBy by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(\"testGetBy by\", deadline.getDateTime());","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"        Deadline deadline \u003d new Deadline(\"testMarkAsDone description\", \"testMarkAsDone by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(true, deadline.markAsDone().getIsDone());","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"        Deadline deadline \u003d new Deadline(\"testToString description\", \"testToString by\");","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(\"[D][ ] testToString description (by: testToString by)\", deadline.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rickyaandrew":35}},{"path":"src/main/java/duke/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"public class Events extends Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"     * Contructor. Default having the isDone parameter to be set as false.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"     * @param description description of the current Events object.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"     * @param dateTime    is the description of the location and time for the","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"     *                    Events.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"    public Events(String description, String dateTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"        super(description, dateTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"     * Second Constructor. Initialising the parameters of the Events.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"     * @param description is the description of the Events.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     * @param dateTime    is the description of the location and time for the","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     *                    Events.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     * @param isDone      determine whether the Events is completed or not.","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    public Events(String description, String dateTime, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"        super(description, dateTime, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"     * Retrieves the symbol of the current object. Different object and child have","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"     * different symbols that represents them.","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"     * @return a fixed parent symbol \"E\".","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"    public String getSymbol() {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"        return \"E\";","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"     * Marks the current Events as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"     * @return a new Events object with the same description and dayTime, but","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"     *         setting isDone property to be true","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"    public Events markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"        return new Events(this.getDescription(), this.getDateTime(), true);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"     * Describes the current Events object.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"     * @return a description of the current Events object.","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"        return \"[E][\" + this.getStatusIcon() + \"] \" + this.getDescription() + \" (at: \" + this.getDateTime() + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rickyaandrew":59}},{"path":"src/main/java/duke/tasks/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"public class EventsTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"    public void testGetSymbol() {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"        Events events \u003d new Events(\"testGetSymbol description\", \"testGetSymbol dayTime\");","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(\"E\", events.getSymbol());","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    public void testDayTime() {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"        Events events \u003d new Events(\"testDayTime description\", \"testDayTime dayTime\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(\"testDayTime dayTime\", events.getDateTime());","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"        Events events \u003d new Events(\"testMarkAsDone description\", \"testMarkAsDone dayTime\");","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(true, events.markAsDone().getIsDone());","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"        Events events \u003d new Events(\"testToString description\", \"testToString dayTime\");","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(\"[E][ ] testToString description (at: testToString dayTime)\", events.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rickyaandrew":35}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"    protected final String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"    protected final String dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"    protected final boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"     * Contructor. Default having the isDone parameter to be set as false and","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"     * dateTime set as none.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"     * @param description is the description of the Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"        this.dateTime \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     * Second Contructor. Default having the isDone parameter to be set as false.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"     * @param description is the description of the Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"     * @param dateTime    is the description of the location and time for the Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    public Task(String description, String dateTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"     * Third Constructor. Default having the dateTime parameter to be set as empty","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"     * string as it is not needed.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"     * @param description is the description of the Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"     * @param isDone      determine whether the task is completed or not.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"        this.dateTime \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"     * Fourth Constructor. Initialising the parameters of the Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"     * @param description is the description of the Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"     * @param dateTime    is the description of the location and time for the Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"     * @param isDone      determine whether the task is completed or not.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"    public Task(String description, String dateTime, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"rickyaandrew"},"content":"     * Retrieves the dateTime of the current Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"rickyaandrew"},"content":"     * @return a String, the dateTime of the current Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"rickyaandrew"},"content":"    public String getDateTime() {","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"rickyaandrew"},"content":"        return this.dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"rickyaandrew"},"content":"     * Retrieves the isDone property of the current object.","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"rickyaandrew"},"content":"     * @return the current isDone property of this object.","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"rickyaandrew"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"rickyaandrew"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"rickyaandrew"},"content":"     * Retrieves the symbol of the current object. Different object and child have","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"rickyaandrew"},"content":"     * different symbols that represents them.","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"rickyaandrew"},"content":"     * @return a fixed parent symbol \"parent-task\".","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"rickyaandrew"},"content":"    public String getSymbol() {","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"rickyaandrew"},"content":"        return \"parent-task\";","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":86,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"rickyaandrew"},"content":"     * Retrieves the description of the current object.","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"rickyaandrew"},"content":"     * @return a String which describes the current object.","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"rickyaandrew"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"rickyaandrew"},"content":"        return this.description;","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"rickyaandrew"},"content":"     * Retrieves the status icon which depends on the isDone status of the current","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"rickyaandrew"},"content":"     * object.","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"rickyaandrew"},"content":"     * @return \"X\" if isDone is true, else it will return \" \".","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"rickyaandrew"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"rickyaandrew"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"rickyaandrew"},"content":"     * Marks the current Task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"rickyaandrew"},"content":"     * @return a new Task object with the same description, but setting isDone","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"rickyaandrew"},"content":"     *         property to be true","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"rickyaandrew"},"content":"    public Task markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"rickyaandrew"},"content":"        return new Task(this.getDescription(), true);","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"rickyaandrew"},"content":"     * Describes the current Task object.","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"rickyaandrew"},"content":"     * @return a description of the current ToDos object.","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"rickyaandrew"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"rickyaandrew"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rickyaandrew":124}},{"path":"src/main/java/duke/tasks/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"public class ToDos extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"     * Contructor which inherits from the super class. Default having the isDone","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"     * parameter to be false.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"     * @param description is the description of the ToDo task.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"    public ToDos(String description) {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"        super(description);","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"     * Second Constructor which takes in additional boolean, to be able to set the","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"     * initial boolean status.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"     * @param description is the description of the ToDo task.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"     * @param isDone      determine whether the task is completed or not.","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    public ToDos(String description, boolean isDone) {","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"     * Get the symbol of this ToDos object. The symbol for ToDos object is \"T\".","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"     * @return \"T\"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"rickyaandrew"},"content":"    public String getSymbol() {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"rickyaandrew"},"content":"        return \"T\";","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"rickyaandrew"},"content":"     * Marks the current ToDos as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"rickyaandrew"},"content":"     * @return a new ToDos object with the same description, but setting isDone","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"rickyaandrew"},"content":"     *         property to be true","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"rickyaandrew"},"content":"    public ToDos markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"rickyaandrew"},"content":"        return new ToDos(this.getDescription(), true);","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"rickyaandrew"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"rickyaandrew"},"content":"     * Describes the current ToDos object.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"rickyaandrew"},"content":"     * ","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"rickyaandrew"},"content":"     * @return a description of the current ToDos object.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"rickyaandrew"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"rickyaandrew"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"rickyaandrew"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"rickyaandrew"},"content":"        return \"[T][\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rickyaandrew":56}},{"path":"src/main/java/duke/tasks/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"package duke.tasks;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"import org.junit.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"public class ToDosTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"    public void testGetSymbol() {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"        ToDos todos \u003d new ToDos(\"testGetSymbol description\");","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(\"T\", todos.getSymbol());","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"rickyaandrew"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"rickyaandrew"},"content":"        ToDos todos \u003d new ToDos(\"testGetBy description\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(true, todos.markAsDone().getIsDone());","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"rickyaandrew"},"content":"    @Test","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"rickyaandrew"},"content":"    public void testToString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"rickyaandrew"},"content":"        ToDos todos \u003d new ToDos(\"testToString description\");","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"rickyaandrew"},"content":"        assertEquals(\"[T][ ] testToString description\", todos.toString());","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"rickyaandrew"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"rickyaandrew"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"rickyaandrew"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"rickyaandrew":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rickyaandrew"},"content":"todo borrow book","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"rickyaandrew"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"rickyaandrew"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"rickyaandrew"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"rickyaandrew"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"rickyaandrew"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"rickyaandrew"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"rickyaandrew"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"rickyaandrew"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"rickyaandrew"},"content":"todo join sports club","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"rickyaandrew"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"rickyaandrew"},"content":"done 4","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"rickyaandrew"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"rickyaandrew"},"content":"done 5","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"rickyaandrew"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"rickyaandrew":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"rickyaandrew"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"rickyaandrew":1,"-":20}}]
