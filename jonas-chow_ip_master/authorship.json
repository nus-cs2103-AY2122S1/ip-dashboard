[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import duke.io.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import duke.io.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import duke.io.TextColor;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"import duke.io.Ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"    private static TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"    private static Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    private static Storage storage \u003d new Storage(\"save.csv\");","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"    public static TaskList getTaskList() {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"        return taskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"    public static void setTaskList(TaskList taskList) {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"        Duke.taskList \u003d taskList;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"    public static Parser getParser() {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"        return parser;","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"    public static Storage getStorage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"        return storage;","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"    public static Ui getUi() {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        return ui;","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"     * The main logic of the program. Handles initialising and user input.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"     * @param args Command-line arguments","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"        init();","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"                String msg \u003d sc.nextLine();","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"                parser.parse(msg);","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"            } catch (DukeException dukeException) {","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"                dukeException.displayError();","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"            // print all queued messages","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"            ui.print();","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"            ui.prompt();","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"    private static void init() {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"        if (storage.load()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"            ui.greetReturningUser();","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"        } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"            ui.greetNewUser();","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"     * Prints a goodbye message and exits the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"    public static void exit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"        ui.addMessage(\"Bye. Hope to see you again soon!\", TextColor.DEFAULT);","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"        ui.print();","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"        System.exit(0);","lastModifiedDate":"2021-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jonas-chow":74,"-":4}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"    private String commandString;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"     * Sets the command string of this command.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"     * @param commandString User Input\u0027s first word to execute this command","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"    protected void setCommandString(String commandString) {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"        this.commandString \u003d commandString;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"     * Returns the length of the command string + 1 to account for the whitespace","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"     * @return length of command string + 1 to account for the whitespace","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"    protected int getCommandLength() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"        return commandString.length() + 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"     * Returns the command string of this command.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"     * @return User Input\u0027s first word to execute this command","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"    public String getCommandString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"        return commandString;","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"     * Parse the user input based on the command\u0027s possible parameters","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"     * @param input Full user input","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Any exception handled when executing the command","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"    public abstract void parse(String input) throws DukeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":42}},{"path":"src/main/java/duke/command/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"public enum Commands {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"    EXIT (new ExitCommand()),","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"    LIST (new ListCommand()),","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"    TODO (new ToDoCommand()),","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"    DEADLINE (new DeadlineCommand()),","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"    EVENT (new EventCommand()),","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"    DONE (new DoneCommand()),","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    DELETE (new DeleteCommand()),","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"    FIND (new FindCommand());","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"    private final Command command;","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"    Commands(Command command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"     * Checks if the first word of the user input matches this command.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"     * @param firstWord first word of user input","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"     * @return true if the first word of the user input matches this command","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    public boolean isCommand(String firstWord) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"        return firstWord.equals(command.getCommandString());","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"     * Returns the command of this type","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"     * @return the Command","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"    public Command getCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"        return command;","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jonas-chow":36}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"    public DeadlineCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"        setCommandString(\"deadline\");","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"     * Parses the user input for a name and a date,","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"     * then creates the deadline and adds it into the taskList","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"     * @param input Full user input","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Any exception caught when executing this command","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"    public void parse(String input) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"        if (input.length() \u003c\u003d getCommandLength()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input the deadline\u0027s name and date!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"        String[] inputs \u003d input.substring(getCommandLength()).split(\"/by\");","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"        if (inputs.length \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"            // /by not specified","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input when the deadline is to be done by!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"        } else if (inputs.length \u003e 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"            // more than one /by","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input only one deadline!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"        String name \u003d inputs[0].strip();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"        if (name.equals(\"\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input the deadline\u0027s name!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"        LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"            date \u003d LocalDate.parse(inputs[1].strip());","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input your date in the format YYYY-MM-DD\");","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"        Deadline deadline \u003d new Deadline(name, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"        Duke.getTaskList().addTask(deadline);","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":53}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"    public DeleteCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"        setCommandString(\"delete\");","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"     * Parses the user input for a taskNumber, or a condition.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"     * Then deletes the specified task, or all tasks matching the condition","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"     * @param input Full user input","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Any exception caught when executing this command","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"    public void parse(String input) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"        if (input.length() \u003c\u003d getCommandLength()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input a task number.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"        String data \u003d input.substring(getCommandLength()).strip();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"        if (data.equals(\"done\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"            Duke.getTaskList().deleteDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"            return;","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"        if (data.equals(\"expired\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"            Duke.getTaskList().deleteExpired();","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"            return;","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        int idx;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"            idx \u003d Integer.parseInt(data);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input a number\");","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"        Duke.getTaskList().deleteTask(idx);","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":45}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"    public DoneCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"        setCommandString(\"done\");","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"     * Parses the user input for a taskNumber.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"     * Then marks the specified task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"     * @param input Full user input","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Any exception caught when executing this command","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"    public void parse(String input) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"        if (input.length() \u003c\u003d getCommandLength()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input a task number.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"        String data \u003d input.substring(getCommandLength()).strip();","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"        int idx;","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"            idx \u003d Integer.parseInt(data);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input a number\");","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"        Duke.getTaskList().doTask(idx);","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":35}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"    public EventCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"        setCommandString(\"event\");","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"     * Parses the user input for a name and a date,","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"     * then creates the event and adds it into the taskList","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"     * @param input Full user input","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Any exception caught when executing this command","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"    public void parse(String input) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"        if (input.length() \u003c\u003d getCommandLength()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input the event\u0027s name and date!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"        String[] inputs \u003d input.substring(getCommandLength()).split(\"/at\");","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"        if (inputs.length \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"            // /by not specified","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input when the event is at!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"        } else if (inputs.length \u003e 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"            // more than one /by","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input only one timing for the event!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"        String name \u003d inputs[0].strip();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"        if (name.equals(\"\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input the event\u0027s name!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"        LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"            date \u003d LocalDate.parse(inputs[1].strip());","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input your date in the format YYYY-MM-DD\");","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"        Event event \u003d new Event(name, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"        Duke.getTaskList().addTask(event);","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":54}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"        setCommandString(\"bye\");","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"     * Exits the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"     * @param input Full user input","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    public void parse(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"        Duke.exit();","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":19}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"    public FindCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"        setCommandString(\"find\");","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"     * Parses the user input for a search string,","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"     * then finds all tasks that contain the search string and lists them","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"     * @param input Full user input","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Exception thrown when search string is empty","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"    public void parse(String input) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"        if (input.length() \u003c\u003d getCommandLength()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input a search string.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"        String data \u003d input.substring(getCommandLength()).strip();","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"        if (data.equals(\"\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input a search string.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"        Duke.getTaskList().find(data);","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jonas-chow":32}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"        setCommandString(\"list\");","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"     * Lists all tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"     * @param input Full user input","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    public void parse(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"        Duke.getTaskList().list();","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":19}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"    public ToDoCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"        setCommandString(\"todo\");","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"     * Parses the user input for a name,","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"     * then creates the ToDo and adds it into the taskList","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"     * @param input Full user input","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Any exception caught when executing this command","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"    public void parse(String input) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"        if (input.length() \u003c\u003d getCommandLength()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input the todo\u0027s name!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"        String name \u003d input.substring(getCommandLength()).strip();","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"        if (name.equals(\"\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input the todo\u0027s name!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"        ToDo toDo \u003d new ToDo(name);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"        Duke.getTaskList().addTask(toDo);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":34}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import duke.io.TextColor;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"     * Clears any queued message and prints the error message in red instead","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"    public void displayError() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"        Duke.getUi().resetMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"        Duke.getUi().addMessage(\"Oops! Something went wrong :(\\n\", TextColor.DEFAULT);","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"        Duke.getUi().addMessage(getMessage(), TextColor.RED);","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jonas-chow":19}},{"path":"src/main/java/duke/io/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.io;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import duke.command.Commands;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"     * Parses the user input for the first word, then calls the appropriate function for the command","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"     * @param input User input","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Any error thrown by Duke when executing the command","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"    public void parse(String input) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"        String firstWord \u003d input.split(\" \")[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"        for (Commands command : Commands.values()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"            if (command.isCommand(firstWord)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"                command.getCommand().parse(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"                // terminate out of loop once the command is found","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"                return;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"        // handle case where all commands don\u0027t match","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"        throw new DukeException(\"Unsupported command\");","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":27}},{"path":"src/main/java/duke/io/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.io;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"    private final File saveFile;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"        this.saveFile \u003d new File(filepath);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"     * Loads the taskList from save.csv","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"     * @return false if the file does not exist, i.e. the user is a new user. true otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"    public boolean load() {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"            Scanner sc \u003d new Scanner(saveFile);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"                String[] datas \u003d sc.nextLine().split(\",\");","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"                switch (datas[0]) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"                case \"t\":","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"                    tasks.add(ToDo.load(datas));","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"                case \"d\":","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"                    tasks.add(Deadline.load(datas));","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"                case \"e\":","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"                    tasks.add(Event.load(datas));","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"                default:","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"            Duke.setTaskList(new TaskList(tasks));","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"            return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"            return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"     * Saves the taskList into save.csv","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"     * @param taskListContent The formatted string representing the tasks in the task list","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Any exception caught that has to do with the I/O","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"    public void save(String taskListContent) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"            // create the file if it does not exist","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"            saveFile.createNewFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"        try (FileWriter fw \u003d new FileWriter(saveFile)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"            fw.write(taskListContent);","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":77}},{"path":"src/main/java/duke/io/TextColor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.io;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"public enum TextColor {","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"    RED(\"\\u001B[31m\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"    YELLOW(\"\\u001B[33m\"),","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"    DEFAULT(\"\\u001B[0m\");","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"    private final String ansiCode;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    TextColor (String ansiCode) {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"        this.ansiCode \u003d ansiCode;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"     * The ANSI code to set text color to this color","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"     * @return the ANSI code, in String form, to set text color","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"        return ansiCode;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":23}},{"path":"src/main/java/duke/io/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.io;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import duke.command.Commands;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"    private StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"     * Prints the message stored in the StringBuilder between two line separators","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"    public void print() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"        String linebreak \u003d \"_________________________________________\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"        System.out.println(linebreak + message + \u0027\\n\u0027 + linebreak);","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"        resetMessage();","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"     * Prints a message to prompt for user input","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"    public void prompt() {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"        System.out.println(\"How may I help you?\");","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"     * Add a message to be added to the queue to be printed.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"     * @param message The message to be added","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"     * @param color The color of the text of the message","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"    public void addMessage(String message, TextColor color) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"        this.message.append(color);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"        this.message.append(message);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"        this.message.append(TextColor.DEFAULT);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"     * Clears the message queue","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"    public void resetMessage() {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"        message \u003d new StringBuilder();","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"     * Prints the startup message for when the user is determined to be new.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"     * Prints a command list in addition to greeting.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"    public void greetNewUser() {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"        addMessage(\"Hello, I\u0027m iP Man! How may I help you?\\n\", TextColor.DEFAULT);","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"        addMessage(\"Supported commands: \", TextColor.DEFAULT);","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"        int lineLength \u003d 20;","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"        int maxLineLength \u003d 40;","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"        Commands[] commands \u003d Commands.values();","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"        for (int i \u003d 0; i \u003c commands.length; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"            String commandString \u003d commands[i].getCommand().getCommandString();","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"            // ensure that line length doesn\u0027t get too long","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"            if (lineLength + commandString.length() \u003e maxLineLength) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"                addMessage(\"\\n  \", TextColor.DEFAULT);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"                lineLength \u003d commandString.length() + 2;","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"                lineLength +\u003d commandString.length();","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"            addMessage(commands[i].getCommand().getCommandString()","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"                    + (i \u003d\u003d commands.length - 1 ? \"\" : \", \"), TextColor.DEFAULT);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"        print();","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"        prompt();","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"     * Prints the startup message for when the user is determined to have used the app before.","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"     * Prints the current list in addition to a greeting.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"    public void greetReturningUser() {","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"jonas-chow"},"content":"        addMessage(\"Welcome back! How may I help you?\\n\", TextColor.DEFAULT);","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"jonas-chow"},"content":"        addMessage(\"Tasks in list:\\n\", TextColor.DEFAULT);","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"jonas-chow"},"content":"        Duke.getTaskList().list();","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"jonas-chow"},"content":"        print();","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"jonas-chow"},"content":"        prompt();","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":83}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"     * Constructor for deadline, setting its name and date, and marking it not done.","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"     * @param name name of the deadline","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"     * @param date date the deadline is by","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"    public Deadline(String name, LocalDate date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"     * Returns whether the deadline is today.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"     * @return true if the date is today. False otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    public boolean isToday() {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"        return date.equals(LocalDate.now());","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"     * Loads a deadline from data parsed from the save file","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"     * @param loadDatas A line from the csv, split by commas","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"     * @return Deadline created from provided data","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"    public static Deadline load(String[] loadDatas) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"        boolean isDone \u003d loadDatas[1].equals(\"o\");","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        String name \u003d loadDatas[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"        LocalDate time \u003d LocalDate.parse(loadDatas[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"        Deadline deadline \u003d new Deadline(name, time);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"            deadline.doTask();","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"        return deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"     * Returns whether the deadline has passed.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"     * @return true if the date is before today. False otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"    public boolean isExpired() {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"        return date.isBefore(LocalDate.now());","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string representation of the deadline and its data","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"     * @return string representation of the deadline","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + date + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string representing the deadline compliant to the saveFile format","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"     * @return String to be saved as a line in save.csv","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"    public String getSaveString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"        return \"d,\" + super.getSaveString() + \",\" + date;","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jonas-chow":76}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"     * Constructor for event, setting its name and date, and marking it not done.","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"     * @param name name of the event","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"     * @param date date the event is at","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"    public Event(String name, LocalDate date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"     * Returns whether the event is happening today.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"     * @return true if the date is today. False otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    public boolean isToday() {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"        return date.equals(LocalDate.now());","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"     * Loads an event from data parsed from the save file","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"     * @param loadDatas A line from the csv, split by commas","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"     * @return Event created from provided data","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"    public static Event load(String[] loadDatas) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"        boolean isDone \u003d loadDatas[1].equals(\"o\");","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        String name \u003d loadDatas[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"        LocalDate time \u003d LocalDate.parse(loadDatas[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"        Event event \u003d new Event(name, time);","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"            event.doTask();","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"        return event;","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"     * Returns whether the event has passed.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"     * @return true if the date is before today. False otherwise.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"    public boolean isExpired() {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"        return date.isBefore(LocalDate.now());","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string representation of the event and its data","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"     * @return string representation of the event","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"        return \"[E] \" + super.toString() + \" (at: \" + date + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string representing the event compliant to the saveFile format","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"     * @return String to be saved as a line in save.csv","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"    public String getSaveString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"        return \"e,\" + super.getSaveString() + \",\" + date;","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jonas-chow":76}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import duke.io.TextColor;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"    protected String name;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"     * Constructor for a Task that sets its name and sets it to not done.","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"     * @param name name of the task","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"     * Marks the task as done","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"    public void doTask() {","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"     * Returns whether the task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"     * @return true if task is done, false if task is not done","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"        return isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"     * Returns whether the task is expired. A task with no date is not expired.","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"     * @return whether the task is expired","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"    public boolean isExpired() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"     * Returns whether the task is happening today.","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"     * A task with no date is not happening today.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"     * @return whether the task is happening today","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"    public boolean isToday() {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"     * Returns the name of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"     * @return name of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"    public String getName() {","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"        return name;","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"     * Returns what color the task should be listed with.","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"     * @return The text color representing the task\u0027s status","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"    public TextColor getListColor() {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"        return isDone()","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"                ? TextColor.DEFAULT","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"                : isToday()","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"                ? TextColor.YELLOW","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"                : isExpired()","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"                ? TextColor.RED","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"                : TextColor.DEFAULT;","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string representation of the task, including its status and name","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"jonas-chow"},"content":"     * @return string representation of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"jonas-chow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":85,"author":{"gitId":"jonas-chow"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + name;","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string compliant to the saveFile format","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"jonas-chow"},"content":"     * @return String to be saved as a line in save.csv","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"jonas-chow"},"content":"    public String getSaveString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"jonas-chow"},"content":"        return (isDone ? \"o,\" : \"x,\") + name;","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jonas-chow":96}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import duke.io.TextColor;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"public class TaskList {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"    // used when loading from csv","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"    // used when new user","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"     * Adds the task into the taskList","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"     * Also saves the taskList and queues a message to be printed","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"     * @param task The task to be added","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException I/O exception from saving the taskList state","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"    public void addTask(Task task) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"        save();","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"        Duke.getUi().addMessage(\"Got it. I\u0027ve added this task:\\n  \"","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"                + task.toString() + \"\\n\" + getTaskLengthReport(), TextColor.DEFAULT);","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"     * Marks the specified task as done","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"     * Also saves the taskList and queues a message to be printed","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"     * @param taskNum The number of the task to be marked as done (1-indexed)","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Exception from out of range index, or from saving the list","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"    public void doTask(int taskNum) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"        int idx \u003d getTaskIndexFromTaskNum(taskNum);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"        Task task \u003d tasks.get(idx);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"        task.doTask();","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"        save();","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"        Duke.getUi().addMessage(\"Nice! I\u0027ve marked this task as done:\\n  \"","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"                + task.toString(), TextColor.DEFAULT);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"     * Deletes the specified task","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"     * Also saves the taskList and queues a message to be printed","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"     * @param taskNum The number of the task to be deleted (1-indexed)","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Exception from out of range index, or from saving the list","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"    public void deleteTask(int taskNum) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"        int idx \u003d getTaskIndexFromTaskNum(taskNum);","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"        Task task \u003d tasks.get(idx);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"        tasks.remove(idx);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"        save();","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"        Duke.getUi().addMessage(\"Noted! I\u0027ve removed this task:\\n  \"","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"                + task.toString() + \"\\n\" + getTaskLengthReport(), TextColor.DEFAULT);","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"     * Deletes all tasks that have been marked as done","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"     * Also saves the taskList and queues a message to be printed","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException I/O exception from saving the taskList state","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"jonas-chow"},"content":"    public void deleteDone() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"jonas-chow"},"content":"        tasks.removeIf(Task::isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"jonas-chow"},"content":"        save();","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"jonas-chow"},"content":"        Duke.getUi().addMessage(\"Noted! I\u0027ve removed all completed tasks.\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"jonas-chow"},"content":"                + getTaskLengthReport(), TextColor.DEFAULT);","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"jonas-chow"},"content":"     * Deletes all tasks that are expired","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"jonas-chow"},"content":"     * Also saves the taskList and queues a message to be printed","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException I/O exception from saving the taskList state","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"jonas-chow"},"content":"    public void deleteExpired() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"jonas-chow"},"content":"        tasks.removeIf(Task::isExpired);","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"jonas-chow"},"content":"        save();","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"jonas-chow"},"content":"        Duke.getUi().addMessage(\"Noted! I\u0027ve removed all expired tasks.\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"jonas-chow"},"content":"                + getTaskLengthReport(), TextColor.DEFAULT);","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"jonas-chow"},"content":"     * Queues a message listing all the tasks to be printed","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"jonas-chow"},"content":"    public void list() {","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"jonas-chow"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"jonas-chow"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"jonas-chow"},"content":"            Duke.getUi().addMessage(\"No tasks yet!\", TextColor.DEFAULT);","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"jonas-chow"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"jonas-chow"},"content":"            for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"jonas-chow"},"content":"                Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"jonas-chow"},"content":"                Duke.getUi().addMessage((i + 1) + \". \" + task.toString()","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"jonas-chow"},"content":"                        + (i \u003d\u003d size - 1 ? \"\" : \"\\n\"), task.getListColor());","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":114,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"jonas-chow"},"content":"     * Finds all tasks with name matching the search string (case insensitive)","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"jonas-chow"},"content":"     * Prints the tasks and their status","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"jonas-chow"},"content":"     * @param searchString the string to find in the tasks","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"jonas-chow"},"content":"    public void find(String searchString) {","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"jonas-chow"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"jonas-chow"},"content":"        int foundCount \u003d 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"jonas-chow"},"content":"        Duke.getUi().addMessage(\"Here are the matching tasks in your list:\", TextColor.DEFAULT);","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"jonas-chow"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"jonas-chow"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"jonas-chow"},"content":"            // case insensitive search","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"jonas-chow"},"content":"            if (task.getName().toLowerCase().contains(searchString.toLowerCase())) {","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"jonas-chow"},"content":"                // print each task indented, in a new line","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"jonas-chow"},"content":"                Duke.getUi().addMessage(\"\\n  \" + (i + 1) + \". \" + task.toString(), task.getListColor());","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"jonas-chow"},"content":"                foundCount++;","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"jonas-chow"},"content":"        if (foundCount \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"jonas-chow"},"content":"            Duke.getUi().resetMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":137,"author":{"gitId":"jonas-chow"},"content":"            Duke.getUi().addMessage(\"No matching tasks!\", TextColor.DEFAULT);","lastModifiedDate":"2021-08-28"},{"lineNumber":138,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"jonas-chow"},"content":"     * Returns the 0-indexed index of the task from it\u0027s 1-indexed index","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"jonas-chow"},"content":"     * @param taskNum 1-indexed index of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"jonas-chow"},"content":"     * @return 0-indexed index of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Exception thrown if the index is out of range","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"jonas-chow"},"content":"    private int getTaskIndexFromTaskNum(int taskNum) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":149,"author":{"gitId":"jonas-chow"},"content":"        if (taskNum \u003c\u003d 0 || taskNum \u003e tasks.size()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input the ID of a task!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":153,"author":{"gitId":"jonas-chow"},"content":"        // tasks are 1-indexed to the user, but 0-indexed by implementation","lastModifiedDate":"2021-08-18"},{"lineNumber":154,"author":{"gitId":"jonas-chow"},"content":"        return taskNum - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":155,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":156,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string telling the user how many tasks are in the list","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"jonas-chow"},"content":"     * @return string telling the user how many tasks are in the list","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"jonas-chow"},"content":"    private String getTaskLengthReport() {","lastModifiedDate":"2021-08-27"},{"lineNumber":163,"author":{"gitId":"jonas-chow"},"content":"        return \"Now you have \" + tasks.size()","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"jonas-chow"},"content":"                + (tasks.size() !\u003d 1 ? \" tasks\" : \" task\") + \" in the list.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":166,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":167,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"jonas-chow"},"content":"     * Saves the state of the taskList","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException I/O exception from saving","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"jonas-chow"},"content":"    private void save() throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":173,"author":{"gitId":"jonas-chow"},"content":"        Duke.getStorage().save(convertToSaveString());","lastModifiedDate":"2021-08-28"},{"lineNumber":174,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":175,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":176,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string representing the tasks compliant to the save format","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"jonas-chow"},"content":"     * @return a string representing the tasks compliant to the save format","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"jonas-chow"},"content":"    private String convertToSaveString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":182,"author":{"gitId":"jonas-chow"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":183,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":184,"author":{"gitId":"jonas-chow"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"jonas-chow"},"content":"            return \"\";","lastModifiedDate":"2021-08-22"},{"lineNumber":186,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":187,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":188,"author":{"gitId":"jonas-chow"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"jonas-chow"},"content":"            sb.append(task.getSaveString());","lastModifiedDate":"2021-08-22"},{"lineNumber":190,"author":{"gitId":"jonas-chow"},"content":"            sb.append(\u0027\\n\u0027);","lastModifiedDate":"2021-08-22"},{"lineNumber":191,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":192,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":193,"author":{"gitId":"jonas-chow"},"content":"        // remove the last newline character","lastModifiedDate":"2021-08-22"},{"lineNumber":194,"author":{"gitId":"jonas-chow"},"content":"        sb.deleteCharAt(sb.length() - 1);","lastModifiedDate":"2021-08-22"},{"lineNumber":195,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":196,"author":{"gitId":"jonas-chow"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":197,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":198,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"jonas-chow"},"content":"     * Returns the taskList to operate on without any side effects","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"jonas-chow"},"content":"     * @return the taskList","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"jonas-chow"},"content":"    protected ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"jonas-chow"},"content":"        return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jonas-chow":207}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"     * Loads a ToDo from data parsed from the save file","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"     * @param loadDatas A line from the csv, split by commas","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"     * @return ToDo created from provided data","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"    public static ToDo load(String[] loadDatas) {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"        boolean isDone \u003d loadDatas[1].equals(\"o\");","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"        String name \u003d loadDatas[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"        ToDo todo \u003d new ToDo(name);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"            todo.doTask();","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"        return todo;","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string representation of the ToDo and its status","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"     * @return string representation of the ToDo","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string representing the ToDo compliant to the saveFile format","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"     * @return String to be saved as a line in save.csv","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"    public String getSaveString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"        return \"t,\" + super.getSaveString();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jonas-chow":45}},{"path":"src/test/java/duke/command/CommandsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"class CommandsTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    void isCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.DEADLINE.isCommand(\"deadline\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.DELETE.isCommand(\"delete\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.DONE.isCommand(\"done\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.EVENT.isCommand(\"event\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.EXIT.isCommand(\"bye\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.LIST.isCommand(\"list\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.TODO.isCommand(\"todo\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"    void getCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.DEADLINE.getCommand() instanceof DeadlineCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.DELETE.getCommand() instanceof DeleteCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.DONE.getCommand() instanceof DoneCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.EVENT.getCommand() instanceof EventCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.EXIT.getCommand() instanceof ExitCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.LIST.getCommand() instanceof ListCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.TODO.getCommand() instanceof ToDoCommand);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jonas-chow":31}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"class TaskListTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    void addTask() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"        Task todo \u003d new ToDo(\"name\");","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"        Task deadline \u003d new Deadline(\"name\", LocalDate.now());","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"        Task event \u003d new Event(\"name\", LocalDate.now());","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"        taskList.addTask(event);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"        ArrayList\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"        expected.add(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"        expected.add(deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"        expected.add(event);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"        assertEquals(taskList.getList(), expected);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"    void doTask() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"        Task toDo \u003d new ToDo(\"name\");","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"        taskList.getList().add(toDo);","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"        assertFalse(toDo.isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"        taskList.doTask(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(toDo.isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"    void deleteTask() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"        Task toDo \u003d new ToDo(\"name\");","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"        taskList.getList().add(toDo);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"        taskList.deleteTask(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"        assertEquals(taskList.getList(), new ArrayList\u003cTask\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"    void deleteDone() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"        Task toDo1 \u003d new ToDo(\"name\");","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"        Task toDo2 \u003d new ToDo(\"name\");","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"        taskList.getList().add(toDo1);","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"        taskList.getList().add(toDo2);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"        toDo2.isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"        taskList.deleteDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"        ArrayList\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"        expected.add(toDo1);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"        assertEquals(taskList.getList(), expected);","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"    void deleteExpired() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"        Task deadline1 \u003d new Deadline(\"name\", LocalDate.now());","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"        Task deadline2 \u003d new Deadline(\"name\", LocalDate.parse(\"2010-01-01\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"        taskList.getList().add(deadline1);","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"        taskList.getList().add(deadline2);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"jonas-chow"},"content":"        taskList.deleteExpired();","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"jonas-chow"},"content":"        ArrayList\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"jonas-chow"},"content":"        expected.add(deadline1);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"jonas-chow"},"content":"        assertEquals(taskList.getList(), expected);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jonas-chow":82}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"todo hello","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"deadline bad format /by 31-12-2030","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"deadline far future /by 2030-12-31","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"event past /at 2020-01-01","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"done 2","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"delete done","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"list","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"delete expired","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"goodbye","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jonas-chow":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"# delete existing save","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"if [ -e \"./save.csv\" ]","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"then","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    rm save.csv","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"fi","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jonas-chow":6,"-":38}}]
