[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"    mainClassName \u003d \"duke.application.Launcher\"","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"repositories {","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"    mavenCentral()","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"dependencies {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"jonas-chow":22,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"# Table of Contents","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"1. [Features](#features)","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"2. [Usage](#usage)","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"    1. [`todo`](#todo---add-a-to-do)","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"    2. [`deadline`](#deadline---add-a-deadline)","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"    3. [`event`](#event---add-an-event)","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    4. [`list`](#list---list-all-tasks)","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"    5. [`find`](#find---finds-all-tasks-with-a-matching-name)","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"    6. [`done`](#done---mark-a-task-as-done)","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"    7. [`delete`](#delete---delete-a-task)","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"    8. [`alias`](#alias---add-an-alias-for-a-command)","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"    9. [`bye`](#bye---exits-the-application)","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"### Keep track of your day-to-day tasks, deadlines and events","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"Add tasks easily using short and simple commands. ","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"You can view all your tasks to remind you of what you need to do, mark them as done once you\u0027ve completed them, and delete them whenever you want!","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"### Optimised for CLI-style usage","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"Commands are entirely based on typing with the keyboard. No mouse movement required!","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"You can also press up and down to scroll through your command history, just like in your favourite command-line application!","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"### Highly customisable commands","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"Rename the commands as you wish with the `alias` command! There\u0027s no limit to how many aliases you can make!","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"### Mass delete completed tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"If you had a particularly productive day, you won\u0027t need to delete each task you completed individually. This application supports mass deleting tasks you have done, or tasks that have passed.","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"### `todo` - Add a to-do","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"Format: `todo \u003cname\u003e`","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"Adds a to-do with the specified name. A to-do represents a general task to be done.","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"`todo Buy groceries`","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"Add a to-do into the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"  [T] [✗] Buy groceries","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"### `deadline` - Add a deadline","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"Format: `deadline \u003cname\u003e /by \u003cdate in YYYY-MM-DD format\u003e`","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"Adds a deadline with the specified name and date. A deadline represents a task that has to be done by that date.","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"`deadline CS2103T iP /by 2021-09-17`","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"Add a deadline into the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"jonas-chow"},"content":"  [D] [✗] CS2103T iP (by: 2021-09-17)","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"jonas-chow"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"jonas-chow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"jonas-chow"},"content":"### `event` - Add an event","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"jonas-chow"},"content":"Format: `event \u003cname\u003e /at \u003cdate in YYYY-MM-DD format\u003e`","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"jonas-chow"},"content":"Adds an event with the specified name and date. An event represents an event happening on the specified date. ","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"jonas-chow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"jonas-chow"},"content":"`event Job interview /at 2020-09-18`","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"jonas-chow"},"content":"Add an event into the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"jonas-chow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"jonas-chow"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"jonas-chow"},"content":"  [E] [✗] Job interview (at: 2020-09-18)","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"jonas-chow"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"jonas-chow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"jonas-chow"},"content":"### `list` - List all tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"jonas-chow"},"content":"Format: `list`","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"jonas-chow"},"content":"Lists all tasks added so far, in the order that they were listed.","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"jonas-chow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"jonas-chow"},"content":"`list`","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"jonas-chow"},"content":"Show a list of all the tasks added so far.","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"jonas-chow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"jonas-chow"},"content":"1. [T] [✗] Buy groceries","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"jonas-chow"},"content":"2. [D] [✗] CS2103T iP (by: 2021-09-17)","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"jonas-chow"},"content":"3. [E] [✗] Job interview (at: 2020-09-18)","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"jonas-chow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"jonas-chow"},"content":"### `find` - Finds all tasks with a matching name","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"jonas-chow"},"content":"Format: `find \u003cquery string\u003e`","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"jonas-chow"},"content":"Finds all tasks whose name includes the query string.","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"jonas-chow"},"content":"Performs a case-insensitive search.","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":127,"author":{"gitId":"jonas-chow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"jonas-chow"},"content":"`find groceries`","lastModifiedDate":"2021-09-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":131,"author":{"gitId":"jonas-chow"},"content":"Finds all tasks whose name contains \"groceries\"","lastModifiedDate":"2021-09-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"jonas-chow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"jonas-chow"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"jonas-chow"},"content":"  1. [T] [✗] Buy groceries","lastModifiedDate":"2021-09-15"},{"lineNumber":136,"author":{"gitId":"jonas-chow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":137,"author":{"gitId":"jonas-chow"},"content":"---","lastModifiedDate":"2021-09-15"},{"lineNumber":138,"author":{"gitId":"jonas-chow"},"content":"`find ie`","lastModifiedDate":"2021-09-15"},{"lineNumber":139,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"jonas-chow"},"content":"Finds all tasks whose name contains \"ie\"","lastModifiedDate":"2021-09-15"},{"lineNumber":141,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":142,"author":{"gitId":"jonas-chow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":143,"author":{"gitId":"jonas-chow"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"jonas-chow"},"content":"  1. [T] [✗] Buy groceries","lastModifiedDate":"2021-09-15"},{"lineNumber":145,"author":{"gitId":"jonas-chow"},"content":"  3. [E] [✗] Job interview (at: 2020-09-18)","lastModifiedDate":"2021-09-15"},{"lineNumber":146,"author":{"gitId":"jonas-chow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":147,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":148,"author":{"gitId":"jonas-chow"},"content":"### `done` - Mark a task as done","lastModifiedDate":"2021-09-15"},{"lineNumber":149,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":150,"author":{"gitId":"jonas-chow"},"content":"Format: `done \u003ctask number\u003e`","lastModifiedDate":"2021-09-15"},{"lineNumber":151,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":152,"author":{"gitId":"jonas-chow"},"content":"Marks the task with that task number as done. The task number is the number on the left of the task when `list` or `find` is called.","lastModifiedDate":"2021-09-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":156,"author":{"gitId":"jonas-chow"},"content":"`done 1`","lastModifiedDate":"2021-09-15"},{"lineNumber":157,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":158,"author":{"gitId":"jonas-chow"},"content":"The first task is marked as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":160,"author":{"gitId":"jonas-chow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":161,"author":{"gitId":"jonas-chow"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-15"},{"lineNumber":162,"author":{"gitId":"jonas-chow"},"content":"  [T] [✓] Buy groceries","lastModifiedDate":"2021-09-15"},{"lineNumber":163,"author":{"gitId":"jonas-chow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":164,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":165,"author":{"gitId":"jonas-chow"},"content":"### `delete` - Delete a task","lastModifiedDate":"2021-09-15"},{"lineNumber":166,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":167,"author":{"gitId":"jonas-chow"},"content":"Format: `delete (\u003ctask number\u003e | done | expired)`","lastModifiedDate":"2021-09-15"},{"lineNumber":168,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":169,"author":{"gitId":"jonas-chow"},"content":"If used with a number as the second word, deletes the task with the task number. The task number is the number on the left of the task when `list` or `find` is called.","lastModifiedDate":"2021-09-15"},{"lineNumber":170,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":171,"author":{"gitId":"jonas-chow"},"content":"If used with `done` as the second word, deletes all tasks that have been marked as done","lastModifiedDate":"2021-09-15"},{"lineNumber":172,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":173,"author":{"gitId":"jonas-chow"},"content":"If used with `expired` as the second word, deletes all events and deadlines with dates that have already passed.","lastModifiedDate":"2021-09-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":175,"author":{"gitId":"jonas-chow"},"content":"All tasks with a greater task number than the deleted goal will have their task numbers reduced by 1 to maintain a continuous series of task numbers.","lastModifiedDate":"2021-09-15"},{"lineNumber":176,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":177,"author":{"gitId":"jonas-chow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":178,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":179,"author":{"gitId":"jonas-chow"},"content":"`delete 2`","lastModifiedDate":"2021-09-15"},{"lineNumber":180,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":181,"author":{"gitId":"jonas-chow"},"content":"Deletes the second task from the list. The third task now becomes the new second task.","lastModifiedDate":"2021-09-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":184,"author":{"gitId":"jonas-chow"},"content":"Noted! I\u0027ve removed this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":185,"author":{"gitId":"jonas-chow"},"content":"  [D] [✗] CS2103T iP (by: 2021-09-17)","lastModifiedDate":"2021-09-15"},{"lineNumber":186,"author":{"gitId":"jonas-chow"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":187,"author":{"gitId":"jonas-chow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":188,"author":{"gitId":"jonas-chow"},"content":"---","lastModifiedDate":"2021-09-15"},{"lineNumber":189,"author":{"gitId":"jonas-chow"},"content":"`delete done`","lastModifiedDate":"2021-09-15"},{"lineNumber":190,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":191,"author":{"gitId":"jonas-chow"},"content":"Deletes all tasks that have been marked as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":192,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":194,"author":{"gitId":"jonas-chow"},"content":"Noted! I\u0027ve removed all completed tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":195,"author":{"gitId":"jonas-chow"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":196,"author":{"gitId":"jonas-chow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":197,"author":{"gitId":"jonas-chow"},"content":"---","lastModifiedDate":"2021-09-15"},{"lineNumber":198,"author":{"gitId":"jonas-chow"},"content":"`delete expired`","lastModifiedDate":"2021-09-15"},{"lineNumber":199,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":200,"author":{"gitId":"jonas-chow"},"content":"Deletes all events and deadlines whose date has passed.","lastModifiedDate":"2021-09-15"},{"lineNumber":201,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":202,"author":{"gitId":"jonas-chow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":203,"author":{"gitId":"jonas-chow"},"content":"Noted! I\u0027ve removed all expired tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":204,"author":{"gitId":"jonas-chow"},"content":"Now you have 0 tasks in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":205,"author":{"gitId":"jonas-chow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":206,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":207,"author":{"gitId":"jonas-chow"},"content":"### `alias` - Add an alias for a command","lastModifiedDate":"2021-09-15"},{"lineNumber":208,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":209,"author":{"gitId":"jonas-chow"},"content":"Format: `alias \u003cexisting command\u003e \u003calias\u003e`","lastModifiedDate":"2021-09-15"},{"lineNumber":210,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":211,"author":{"gitId":"jonas-chow"},"content":"Sets a new alias that can be used instead to execute the command.","lastModifiedDate":"2021-09-15"},{"lineNumber":212,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":213,"author":{"gitId":"jonas-chow"},"content":"`existing command` can be another existing alias.","lastModifiedDate":"2021-09-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":215,"author":{"gitId":"jonas-chow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":216,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":217,"author":{"gitId":"jonas-chow"},"content":"`alias todo td`","lastModifiedDate":"2021-09-15"},{"lineNumber":218,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":219,"author":{"gitId":"jonas-chow"},"content":"Adds td as an alias for todo.","lastModifiedDate":"2021-09-15"},{"lineNumber":220,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":221,"author":{"gitId":"jonas-chow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":222,"author":{"gitId":"jonas-chow"},"content":"td added as an alias for todo!","lastModifiedDate":"2021-09-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":224,"author":{"gitId":"jonas-chow"},"content":"---","lastModifiedDate":"2021-09-15"},{"lineNumber":225,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":226,"author":{"gitId":"jonas-chow"},"content":"`alias td t`","lastModifiedDate":"2021-09-15"},{"lineNumber":227,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":228,"author":{"gitId":"jonas-chow"},"content":"Adds t as an alias for td, which is an alias for todo.","lastModifiedDate":"2021-09-15"},{"lineNumber":229,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":231,"author":{"gitId":"jonas-chow"},"content":"t added as an alias for todo!","lastModifiedDate":"2021-09-15"},{"lineNumber":232,"author":{"gitId":"jonas-chow"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":233,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":234,"author":{"gitId":"jonas-chow"},"content":"### `bye` - Exits the application","lastModifiedDate":"2021-09-15"},{"lineNumber":235,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":236,"author":{"gitId":"jonas-chow"},"content":"Format: `bye`","lastModifiedDate":"2021-09-15"},{"lineNumber":237,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":238,"author":{"gitId":"jonas-chow"},"content":"Exits the application and closes the window.","lastModifiedDate":"2021-09-15"},{"lineNumber":239,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":240,"author":{"gitId":"jonas-chow"},"content":"Example of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":241,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":242,"author":{"gitId":"jonas-chow"},"content":"`bye`","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"jonas-chow":211,"-":31}},{"path":"src/main/java/duke/application/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.application;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import java.util.Collections;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    private static final Color EXCEPTION_COLOR \u003d Color.SALMON;","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"    private Label dialog;","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"     * Generates a dialog box representing communication from one party.","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"     * @param text Text to be written.","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"     * @param img Profile image of user.","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"    private void flip() {","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"     * Generates dialog box representing input from the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"     * @param text User input text.","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"     * @param img User profile image.","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"     * @return Dialog box representing input from the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"     * Generates dialog boxes representing response from Duke.","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"     * @param text Response text.","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"     * @param img Duke profile image.","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"jonas-chow"},"content":"     * @param hasException Whether the message to be shown is for an exception.","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"jonas-chow"},"content":"     * @return Dialog box representing response from Duke.","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"jonas-chow"},"content":"    public static ArrayList\u003cDialogBox\u003e getDukeDialog(String text, Image img, boolean hasException) {","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"jonas-chow"},"content":"        String[] lines \u003d text.split(\"\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"jonas-chow"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"jonas-chow"},"content":"        ArrayList\u003cDialogBox\u003e dialogBoxes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"jonas-chow"},"content":"        // split long responses into blocks of 5 lines each","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"jonas-chow"},"content":"        for (int i \u003d 0; i \u003c lines.length; i++) {","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"jonas-chow"},"content":"            sb.append(lines[i]);","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"jonas-chow"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"jonas-chow"},"content":"            // pad the continuation message so the text appears on the top of the dialog box","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"jonas-chow"},"content":"            if (i \u003d\u003d lines.length - 1 \u0026\u0026 i \u003e 4) {","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"jonas-chow"},"content":"                while (i % 5 !\u003d 4) {","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"jonas-chow"},"content":"                    sb.append(\"\\n\");","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"jonas-chow"},"content":"                    i++;","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"jonas-chow"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"jonas-chow"},"content":"            // convert the built string into a dialog box if it\u0027s the 5th line, or is on the last line","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"jonas-chow"},"content":"            if (i % 5 \u003d\u003d 4 || i \u003d\u003d lines.length - 1) {","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"jonas-chow"},"content":"                DialogBox db \u003d new DialogBox(sb.toString(), img);","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"jonas-chow"},"content":"                if (hasException) {","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"jonas-chow"},"content":"                    db.dialog.setTextFill(EXCEPTION_COLOR);","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"jonas-chow"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"jonas-chow"},"content":"                db.flip();","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"jonas-chow"},"content":"                dialogBoxes.add(db);","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"jonas-chow"},"content":"                sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":110,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"jonas-chow"},"content":"        return dialogBoxes;","lastModifiedDate":"2021-08-30"},{"lineNumber":112,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":113,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"jonas-chow":113}},{"path":"src/main/java/duke/application/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.application;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import duke.io.Parser;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"public class Duke extends Application {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    private final Parser parser \u003d new Parser(taskList);","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"     * Loads the MainWindow from fxml, and initialises it, then sets it as the scene to be shown.","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"     * @param stage Provided primary stage.","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Duke.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setParser(parser);","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"            stage.setResizable(false);","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"            stage.show();","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"jonas-chow":40}},{"path":"src/main/java/duke/application/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.application;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import duke.io.AliasStorage;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"public class Launcher {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"     * Launches the application and initializes the any other classes.","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"     * @param args Command-line arguments (none expected).","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"        AliasStorage.load();","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"jonas-chow":19}},{"path":"src/main/java/duke/application/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.application;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import duke.io.Parser;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"    private TextField userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"    private Button sendButton;","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserIcon.png\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukeIcon.png\"));","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"    // To keep track of input history so user can switch between past inputs","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"    private ArrayList\u003cString\u003e pastInputs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"    private int inputIndex \u003d -1;","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"    private String currentInput;","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"     * Initializes settings, and greets user.","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"    public void initialize() {","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"        addDukeDialog(\"Hello! I am Duke. How may I help you?\", false);","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"     * Sets the parser.","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"     * @param parser Parser to be set.","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"    public void setParser(Parser parser) {","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"    @FXML","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"        // add the input to the front of the past inputs","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"        pastInputs.add(0, input);","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"        // reset the selected history","lastModifiedDate":"2021-09-08"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"        inputIndex \u003d -1;","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"        // if there is not input, no need to have any action","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"        if (!input.equals(\"\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"            userInput.clear();","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"            addUserDialog(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"            String response;","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"            boolean hasException \u003d false;","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"            try {","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"                response \u003d parser.getResponse(input);","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"jonas-chow"},"content":"                response \u003d e.getMessage();","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"jonas-chow"},"content":"                hasException \u003d true;","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"jonas-chow"},"content":"            addDukeDialog(response, hasException);","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":85,"author":{"gitId":"jonas-chow"},"content":"     * Switches between past inputs when user keys up or down.","lastModifiedDate":"2021-09-08"},{"lineNumber":86,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"jonas-chow"},"content":"     * @param keyEvent The key that was pressed.","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"jonas-chow"},"content":"    @FXML","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"jonas-chow"},"content":"    private void handleUserKeystroke(KeyEvent keyEvent) {","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"jonas-chow"},"content":"        if (inputIndex \u003d\u003d -1) {","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"jonas-chow"},"content":"            // save the current input so it\u0027s accessible when returning","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"jonas-chow"},"content":"            currentInput \u003d userInput.getText();","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"jonas-chow"},"content":"        switch (keyEvent.getCode()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"jonas-chow"},"content":"        case UP:","lastModifiedDate":"2021-09-08"},{"lineNumber":98,"author":{"gitId":"jonas-chow"},"content":"            if (inputIndex + 1 \u003c pastInputs.size()) {","lastModifiedDate":"2021-09-08"},{"lineNumber":99,"author":{"gitId":"jonas-chow"},"content":"                inputIndex++;","lastModifiedDate":"2021-09-08"},{"lineNumber":100,"author":{"gitId":"jonas-chow"},"content":"                userInput.setText(pastInputs.get(inputIndex));","lastModifiedDate":"2021-09-08"},{"lineNumber":101,"author":{"gitId":"jonas-chow"},"content":"                userInput.end();","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":103,"author":{"gitId":"jonas-chow"},"content":"            break;","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"jonas-chow"},"content":"        case DOWN:","lastModifiedDate":"2021-09-08"},{"lineNumber":105,"author":{"gitId":"jonas-chow"},"content":"            if (inputIndex \u003e -1) {","lastModifiedDate":"2021-09-08"},{"lineNumber":106,"author":{"gitId":"jonas-chow"},"content":"                inputIndex--;","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"jonas-chow"},"content":"                String newText \u003d inputIndex \u003d\u003d -1 ? currentInput : pastInputs.get(inputIndex);","lastModifiedDate":"2021-09-08"},{"lineNumber":108,"author":{"gitId":"jonas-chow"},"content":"                userInput.setText(newText);","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"jonas-chow"},"content":"                userInput.end();","lastModifiedDate":"2021-09-08"},{"lineNumber":110,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":111,"author":{"gitId":"jonas-chow"},"content":"            break;","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"jonas-chow"},"content":"        default:","lastModifiedDate":"2021-09-08"},{"lineNumber":113,"author":{"gitId":"jonas-chow"},"content":"            // nothing special to do otherwise","lastModifiedDate":"2021-09-08"},{"lineNumber":114,"author":{"gitId":"jonas-chow"},"content":"            break;","lastModifiedDate":"2021-09-08"},{"lineNumber":115,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":116,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":117,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":118,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":119,"author":{"gitId":"jonas-chow"},"content":"     * Adds a dialog for the user to reflect user input being taken.","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"jonas-chow"},"content":"     * @param input User input.","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":123,"author":{"gitId":"jonas-chow"},"content":"    private void addUserDialog(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":124,"author":{"gitId":"jonas-chow"},"content":"        assert dialogContainer !\u003d null;","lastModifiedDate":"2021-09-06"},{"lineNumber":125,"author":{"gitId":"jonas-chow"},"content":"        dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));","lastModifiedDate":"2021-08-30"},{"lineNumber":126,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":127,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":128,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":129,"author":{"gitId":"jonas-chow"},"content":"     * Adds a dialog for Duke to reflect Duke\u0027s response.","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":131,"author":{"gitId":"jonas-chow"},"content":"     * @param response Response from Duke.","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"jonas-chow"},"content":"     * @param hasException Whether the message to be shown is for an exception.","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":134,"author":{"gitId":"jonas-chow"},"content":"    private void addDukeDialog(String response, boolean hasException) {","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"jonas-chow"},"content":"        assert dialogContainer !\u003d null;","lastModifiedDate":"2021-09-06"},{"lineNumber":136,"author":{"gitId":"jonas-chow"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(response, dukeImage, hasException));","lastModifiedDate":"2021-09-15"},{"lineNumber":137,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":138,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"jonas-chow":138}},{"path":"src/main/java/duke/command/AliasCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":" * Command to add an alias to an existing command.","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"public class AliasCommand extends Command {","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    public AliasCommand() {","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"        setMainCommand(\"alias\");","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"     * Parses the user input for an old command and a new alias.","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"     * Then adds that alias to the command, and saves the new alias to be used in the future.","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"     * @param input Full user input.","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"     * @return The response to inform the user that a new alias has been set.","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Any exception caught when executing this command.","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    public String parse(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"        int firstSpace \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"        // No space after the command","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"        if (firstSpace \u003d\u003d -1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input the original command, and the alias.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"        String data \u003d input.substring(firstSpace).strip();","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"        String[] inputs \u003d data.split(\" \");","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"        // expecting exactly two words","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        if (inputs.length \u003c 2) {","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input the original command, and the alias.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"        } else if (inputs.length \u003e 2) {","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input a one-word alias.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"        String oldName \u003d inputs[0];","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"        String alias \u003d inputs[1];","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"        Command command \u003d Commands.findCommand(oldName);","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Original command can\u0027t be found.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"        if (Commands.findCommand(alias) !\u003d null) {","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Alias is already in use!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"        return command.addAlias(alias);","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"jonas-chow":56}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import java.util.List;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import duke.io.AliasStorage;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":" * A command keeps track of its string and parses user input using its parse function.","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"    private String mainCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"    private List\u003cString\u003e aliases \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"     * Sets the main command of this action.","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"     * @param mainCommand Default user input\u0027s first word to execute this action.","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"    protected void setMainCommand(String mainCommand) {","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"        this.mainCommand \u003d mainCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"    protected void setAliases(List\u003cString\u003e aliases) {","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"        this.aliases \u003d aliases;","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"     * Returns whether the provided command is an alias for this action.","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"     * @param command String to check against the list of aliases.","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"    public boolean containsCommand(String command) {","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        return mainCommand.equals(command) || aliases.contains(command);","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"     * Adds the alias as a possible command to be used for this action.","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"     * @param alias New command that can be used for this action.","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"     * @return The response to inform the user that the alias has been added","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"    public String addAlias(String alias) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"        aliases.add(alias);","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"        AliasStorage.save();","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"        return alias + \" added as an alias for \" + mainCommand + \"!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"     * Returns a String representing the aliases of the command to be saved.","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"     * @return String representing the aliases of the command.","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"    public String getSaveFormat() {","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"        StringBuilder sb \u003d new StringBuilder(mainCommand);","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"        for (String alias : aliases) {","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"            sb.append(\u0027,\u0027);","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"            sb.append(alias);","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"        return sb.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"     * Returns the default command of this action.","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"     * @return The default command of this action.","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"    public String getMainCommand() {","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"        return mainCommand;","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"jonas-chow"},"content":"     * Parses the user input based on the command\u0027s possible parameters.","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"jonas-chow"},"content":"     * @param input Full user input.","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"jonas-chow"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"jonas-chow"},"content":"     * @return The response.","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Any exception handled when executing the command.","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"jonas-chow"},"content":"    public abstract String parse(String input, TaskList taskList) throws DukeException;","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":86}},{"path":"src/main/java/duke/command/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import java.util.List;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import duke.io.AliasStorage;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":" * Enum of commands to cycle through and return the right command that matches user input.","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"public enum Commands {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"    EXIT (new ExitCommand()),","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"    LIST (new ListCommand()),","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"    TODO (new ToDoCommand()),","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"    DEADLINE (new DeadlineCommand()),","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"    EVENT (new EventCommand()),","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    DONE (new DoneCommand()),","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"    DELETE (new DeleteCommand()),","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    FIND (new FindCommand()),","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"    ALIAS (new AliasCommand());","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"    private final Command command;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"    Commands(Command command) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"     * Returns the command of this type.","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"     * @param firstWord The first word of the user input.","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"     * @return The Command that uses the input as a command, or null if no Command matches it.","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"    public static Command findCommand(String firstWord) {","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"        for (Commands command : Commands.values()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"            Command commandObject \u003d command.command;","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"            if (commandObject.containsCommand(firstWord)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"                return commandObject;","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"        // if no command matches, returns null","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"        return null;","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string representing all aliases to save for persistence.","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"     * @return String representation of all aliases.","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"    public static String getAliasSaves() {","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"        for (Commands commands : Commands.values()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"            sb.append(commands.command.getSaveFormat());","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"            sb.append(\u0027\\n\u0027);","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"        // delete the last newline character","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"        sb.deleteCharAt(sb.length() - 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"        return sb.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-09-08"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"     * Loads the aliases of each command from the AliasStorage.","lastModifiedDate":"2021-09-08"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"     * AliasStorage should have been loaded before calling this.","lastModifiedDate":"2021-09-08"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-09-08"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"    public static void loadAliases() {","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"        for (Commands commands : Commands.values()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"            Command command \u003d commands.command;","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"            List\u003cString\u003e aliases \u003d AliasStorage.getLoadedAliases(command.getMainCommand());","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"            command.setAliases(aliases);","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jonas-chow":73}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":" * Command to add a deadline into the task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"    public DeadlineCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"        setMainCommand(\"deadline\");","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"     * Parses the user input for a name and a date.","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"     * Then creates the deadline and adds it into the taskList.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"     * @param input Full user input.","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"     * @return The response telling the user that a deadline has been created.","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Any exception caught when executing this command.","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"    public String parse(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"        assert taskList !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"        int firstSpace \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"        // No space after the command","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"        if (firstSpace \u003d\u003d -1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input the deadline\u0027s name and date.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"        String data \u003d input.substring(firstSpace).strip();","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"        String[] inputs \u003d data.split(\"/by\");","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"        if (inputs.length \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"            // /by not specified","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input when the deadline is to be done by.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"        } else if (inputs.length \u003e 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"            // more than one /by","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input only one deadline.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"        String name \u003d inputs[0].strip();","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"        String dateString \u003d inputs[1].strip();","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"        if (name.equals(\"\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input the deadline\u0027s name.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"        LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"            date \u003d LocalDate.parse(dateString);","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input your date in the format YYYY-MM-DD.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"        Deadline deadline \u003d new Deadline(name, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"        return taskList.addTask(deadline);","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":66}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":" * Command to delete a task, or delete tasks that satisfy a specified condition.","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    public DeleteCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"        setMainCommand(\"delete\");","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"     * Parses the user input for a taskNumber, or a condition.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"     * Then deletes the specified task, or all tasks matching the condition.","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"     * @param input Full user input.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"     * @return The response confirming deletion and telling the user the number of tasks left.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Any exception caught when executing this command.","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    public String parse(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"        assert taskList !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"        int firstSpace \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"        // No space after the command","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"        if (firstSpace \u003d\u003d -1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input a task number.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"        String data \u003d input.substring(firstSpace).strip();","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        if (data.equalsIgnoreCase(\"done\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"            return taskList.deleteDone();","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"        if (data.equalsIgnoreCase(\"expired\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"            return taskList.deleteExpired();","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"        int idx;","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"            idx \u003d Integer.parseInt(data);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input a number.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"        return taskList.deleteTask(idx);","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":53}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":" * Command to mark a task as done.","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    public DoneCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"        setMainCommand(\"done\");","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"     * Parses the user input for a taskNumber.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"     * Then marks the specified task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"     * @param input Full user input.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"     * @return The response telling the user which task was marked as done.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Any exception caught when executing this command.","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    public String parse(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"        assert taskList !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"        int firstSpace \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"        // No space after the command","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"        if (firstSpace \u003d\u003d -1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input a task number.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"        String data \u003d input.substring(firstSpace).strip();","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        int idx;","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"            idx \u003d Integer.parseInt(data);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input a number.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"        return taskList.doTask(idx);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":45}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":" * Command to add an event into the task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"    public EventCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"        setMainCommand(\"event\");","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"     * Parses the user input for a name and a date.","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"     * Then creates the event and adds it into the taskList.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"     * @param input Full user input.","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"     * @return The response telling the user that an event has been created.","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Any exception caught when executing this command.","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"    public String parse(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"        assert taskList !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"        int firstSpace \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"        // No space after the command","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"        if (firstSpace \u003d\u003d -1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input the event\u0027s name and date.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"        String data \u003d input.substring(firstSpace).strip();","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"        String[] inputs \u003d data.split(\"/at\");","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"        if (inputs.length \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"            // /by not specified","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input when the event is at.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"        } else if (inputs.length \u003e 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"            // more than one /by","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input only one timing for the event.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"        String name \u003d inputs[0].strip();","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"        String dateString \u003d inputs[1].strip();","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"        if (name.equals(\"\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input the event\u0027s name.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"        LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"            date \u003d LocalDate.parse(dateString);","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input your date in the format YYYY-MM-DD.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"        Event event \u003d new Event(name, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"        return taskList.addTask(event);","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":66}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":" * Command to close the application.","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"        setMainCommand(\"bye\");","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"     * Exits the application.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"     * @param input Full user input.","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"     * @return Does not actually return any value since the application exits.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"    public String parse(String input, TaskList taskList) {","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"        System.exit(0);","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"        return \"Goodbye, hope to see you again!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":25}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":" * Command to find a task that matches the search string.","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    public FindCommand() {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"        setMainCommand(\"find\");","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"     * Parses the user input for a search string.","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"     * Then finds all tasks that contain the search string and lists them.","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"     * @param input Full user input.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"     * @return The response which lists all tasks that match the search string.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Exception thrown when search string is empty.","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    public String parse(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"        assert taskList !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"        int firstSpace \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"        // No space after the command","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"        if (firstSpace \u003d\u003d -1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input a search string.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"        String data \u003d input.substring(firstSpace).strip();","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        if (data.equals(\"\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input a search string.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"        return taskList.find(data);","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jonas-chow":42}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":" * Command to list all tasks in the task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"        setMainCommand(\"list\");","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"     * Lists all tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"     * @param input Full user input.","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"     * @return The response that lists all tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"    public String parse(String input, TaskList taskList) {","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"        assert taskList !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"        return taskList.list();","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":26}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":" * Command to add a ToDo into the task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"    public ToDoCommand() {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"        setMainCommand(\"todo\");","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"     * Parses the user input for a name.","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"     * Then creates the ToDo and adds it into the taskList.","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"     * @param input Full user input.","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"     * @return The response telling the user that a ToDo has been created.","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Any exception caught when executing this command.","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"    public String parse(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"        assert taskList !\u003d null : \"taskList should not be null\";","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"        int firstSpace \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"        // No space after the command","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"        if (firstSpace \u003d\u003d -1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input the ToDo\u0027s name.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"        String name \u003d input.substring(firstSpace).strip();","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"        if (name.equals(\"\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input the ToDo\u0027s name.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"        ToDo toDo \u003d new ToDo(name);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"        return taskList.addTask(toDo);","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":44}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.exception;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":" * Exception thrown when something expected goes wrong within Duke.","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"        super(message);","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"     * Returns a response string to be shown to the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"     * @return The response to be shown to the user with information about the error.","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"        return \"Oops! Something went wrong :(\\n\" + super.getMessage();","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jonas-chow":20}},{"path":"src/main/java/duke/io/AliasStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.io;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import java.io.File;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"import java.util.List;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"import duke.command.Commands;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":" * Storage class that manages the saving and loading of the task list.","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"public class AliasStorage {","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"    private static final File SAVE_FILE \u003d new File(\"aliases.csv\");","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"    private static final HashMap\u003cString, List\u003cString\u003e\u003e LOADED_ALIASES \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"     * Loads all aliases from the saveFile.","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"    public static void load() {","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"        Scanner sc;","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"            sc \u003d new Scanner(SAVE_FILE);","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"            // no save data, nothing to load","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"            return;","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"            String[] datas \u003d sc.nextLine().split(\",\");","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"            String key \u003d datas[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"            List\u003cString\u003e values \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"            for (int i \u003d 1; i \u003c datas.length; i++) {","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"                values.add(datas[i]);","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"            LOADED_ALIASES.put(key, values);","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"        // adds these aliases to the commands","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"        Commands.loadAliases();","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"     * Retrieves loaded aliases for the specified command.","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"     * @param mainCommand The default command for the action.","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"     * @return All aliases for the command loaded.","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"    public static List\u003cString\u003e getLoadedAliases(String mainCommand) {","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"        if (!LOADED_ALIASES.containsKey(mainCommand)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"        return LOADED_ALIASES.get(mainCommand);","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"     * Saves the command aliases into the specified file.","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Any exception caught that has to do with the I/O.","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"    public static void save() throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"        String content \u003d Commands.getAliasSaves();","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"            // create the file if it does not exist","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"            SAVE_FILE.createNewFile();","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"jonas-chow"},"content":"        try (FileWriter fw \u003d new FileWriter(SAVE_FILE)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"jonas-chow"},"content":"            fw.write(content);","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"jonas-chow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"jonas-chow":85}},{"path":"src/main/java/duke/io/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.io;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import duke.command.Commands;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":" * Parser to parse user input and process it.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"     * Parses the user input for the first word, then calls the appropriate function for the command.","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"     * @param input User input.","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"     * @return The response to be sent to the user.","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Any exception raised when parsing executing the command.","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"    public String getResponse(String input) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"        String firstWord \u003d input.split(\" \")[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"        Command command \u003d Commands.findCommand(firstWord);","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Unsupported Operation!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"        return command.parse(input, taskList);","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":36}},{"path":"src/main/java/duke/io/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.io;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import java.io.File;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":" * Storage class that manages the saving and loading of the task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"public class TaskStorage {","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"    public static final String TASK_DONE \u003d \"o\";","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"    public static final String TASK_NOT_DONE \u003d \"x\";","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"    private static final File SAVE_FILE \u003d new File(\"save.csv\");","lastModifiedDate":"2021-09-08"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"     * Loads the taskList from the saveFile.","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"     * @return The TaskList generated from loading a task from each line in the file.","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"    public static ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"        Scanner sc;","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"            sc \u003d new Scanner(SAVE_FILE);","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"            // no save data, use a fresh list","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"            String[] datas \u003d sc.nextLine().split(\",\");","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"            switch (datas[0]) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"            case \"t\":","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"                tasks.add(ToDo.load(datas));","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"            case \"d\":","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"                tasks.add(Deadline.load(datas));","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"            case \"e\":","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"                tasks.add(Event.load(datas));","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"            default:","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"                // unknown task type","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"                break;","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"        return tasks;","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"     * Saves the taskList into the specified file.","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"     * @param tasks The tasks to be saved.","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Any exception caught that has to do with the I/O.","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"    public static void save(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"        String taskListContent \u003d convertToSaveString(tasks);","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"            // create the file if it does not exist","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"            SAVE_FILE.createNewFile();","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"jonas-chow"},"content":"        try (FileWriter fw \u003d new FileWriter(SAVE_FILE)) {","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"jonas-chow"},"content":"            fw.write(taskListContent);","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"jonas-chow"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string representing the tasks compliant to the save format.","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"jonas-chow"},"content":"     * @param tasks The tasks to be saved.","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"jonas-chow"},"content":"     * @return A string representing the tasks compliant to the save format.","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"jonas-chow"},"content":"    private static String convertToSaveString(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"jonas-chow"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"jonas-chow"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"jonas-chow"},"content":"            return \"\";","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"jonas-chow"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"jonas-chow"},"content":"            sb.append(task.getSaveString());","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"jonas-chow"},"content":"            sb.append(\u0027\\n\u0027);","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"jonas-chow"},"content":"        // remove the last newline character","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"jonas-chow"},"content":"        sb.deleteCharAt(sb.length() - 1);","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"jonas-chow"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jonas-chow":107}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":" * Class representing a deadline that has a date to be completed by.","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"     * Constructor for deadline, setting its name and date, and marking it not done.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"     * @param name Name of the deadline.","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"     * @param date Date the deadline is by.","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"    public Deadline(String name, LocalDate date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"     * Loads a deadline from data parsed from the save file.","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"     * @param loadDatas A line from the csv, split by commas.","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"     * @return Deadline created from provided data.","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"    public static Deadline load(String[] loadDatas) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"        boolean isDone \u003d loadDatas[1].equals(\"o\");","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"        String name \u003d loadDatas[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"        LocalDate time \u003d LocalDate.parse(loadDatas[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"        Deadline deadline \u003d new Deadline(name, time);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"            deadline.doTask();","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"        return deadline;","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"     * Returns whether the deadline has passed.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"     * @return True if the date is before today. False otherwise.","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"    public boolean isExpired() {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"        return date.isBefore(LocalDate.now());","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string representation of the deadline and its data.","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"     * @return String representation of the deadline.","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + date + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string representing the deadline compliant to the saveFile format.","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"     * @return String to be saved as a line in save.csv.","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"    public String getSaveString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"        return \"d,\" + super.getSaveString() + \",\" + date;","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jonas-chow":70}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":" * Class representing an event that happens at a specified date.","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"    private LocalDate date;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"     * Constructor for event, setting its name and date, and marking it not done.","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"     * @param name Name of the event.","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"     * @param date Date the event is at.","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"    public Event(String name, LocalDate date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"     * Loads an event from data parsed from the save file.","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"     * @param loadDatas A line from the csv, split by commas.","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"     * @return Event created from provided data.","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"    public static Event load(String[] loadDatas) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"        boolean isDone \u003d loadDatas[1].equals(\"o\");","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"        String name \u003d loadDatas[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"        LocalDate time \u003d LocalDate.parse(loadDatas[3]);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"        Event event \u003d new Event(name, time);","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"            event.doTask();","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"        return event;","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"     * Returns whether the event has passed.","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"     * @return True if the date is before today. False otherwise.","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"    public boolean isExpired() {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"        return date.isBefore(LocalDate.now());","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string representation of the event and its data.","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"     * @return String representation of the event.","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"        return \"[E] \" + super.toString() + \" (at: \" + date + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string representing the event compliant to the saveFile format.","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"     * @return String to be saved as a line in save.csv.","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"    public String getSaveString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"        return \"e,\" + super.getSaveString() + \",\" + date;","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jonas-chow":70}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import static duke.io.TaskStorage.TASK_DONE;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import static duke.io.TaskStorage.TASK_NOT_DONE;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":" * Abstract class representing a task.","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"    protected String name;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"     * Constructor for a Task that sets its name and sets it to not done.","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"     * @param name Name of the task.","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"    public void doTask() {","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"     * Returns whether the task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"     * @return True if task is done, false if task is not done.","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"        return isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"     * Returns whether the task is expired. A task with no date is not expired.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"     * @return Whether the task is expired.","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"    public boolean isExpired() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"        return false;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"     * Returns the name of the task.","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"     * @return Name of the task.","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"    public String getName() {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"        return name;","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string representation of the task, including its status and name.","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"        return \"[\" + (isDone ? \"✓\" : \"✗\") + \"] \" + name;","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string compliant to the saveFile format.","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"     * @return String to be saved as a line in save.csv.","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"    public String getSaveString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"        return (isDone ? TASK_DONE : TASK_NOT_DONE) + \",\" + name;","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jonas-chow":75}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import duke.io.TaskStorage;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":" * Class representing the list of tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"public class TaskList {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"     * Constructor of task list. Loads tasks from the saved tasks.","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"        this.tasks \u003d TaskStorage.load();","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"     * Adds the task into the taskList.","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"     * Also saves the taskList and returns a message to be printed.","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"     * @return The response that confirms the task has been added.","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException I/O exception from saving the taskList state.","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"    public String addTask(Task task) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"        int oldLength \u003d tasks.size();","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"        tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"        int newLength \u003d tasks.size();","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"        assert newLength \u003d\u003d oldLength + 1 : \"TaskList size should increase by one\";","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"        save();","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + task.toString() + \"\\n\" + getTaskLengthReport();","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"     * Marks the specified task as done.","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"     * Also saves the taskList and returns a message to be printed.","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"     * @param taskNum The number of the task to be marked as done (1-indexed).","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"     * @return The response confirming the marking of the task to be done.","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Exception from out of range index, or from saving the list.","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"    public String doTask(int taskNum) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"        int idx \u003d getTaskIndexFromTaskNum(taskNum);","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"        assert idx \u003d\u003d taskNum - 1 : \"Task index should be one lower than task number\";","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"        Task task \u003d tasks.get(idx);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"        task.doTask();","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"        assert task.isDone() : \"Task should be done\";","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"        save();","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + task.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"     * Deletes the specified task.","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"     * Also saves the taskList and returns a message to be printed.","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"     * @param taskNum The number of the task to be deleted (1-indexed).","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"     * @return The response that confirms the deletion of the task.","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Exception from out of range index, or from saving the list.","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"    public String deleteTask(int taskNum) throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"        int idx \u003d getTaskIndexFromTaskNum(taskNum);","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"        assert idx \u003d\u003d taskNum - 1 : \"Task index should be one lower than task number\";","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"        int oldLength \u003d tasks.size();","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"        Task task \u003d tasks.get(idx);","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"        tasks.remove(idx);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"        int newLength \u003d tasks.size();","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"jonas-chow"},"content":"        assert newLength \u003d\u003d oldLength - 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"jonas-chow"},"content":"        save();","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"jonas-chow"},"content":"        return \"Noted! I\u0027ve removed this task:\\n  \" + task.toString() + \"\\n\" + getTaskLengthReport();","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"jonas-chow"},"content":"     * Deletes all tasks that have been marked as done.","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"jonas-chow"},"content":"     * Also saves the taskList and returns a message to be printed.","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"jonas-chow"},"content":"     * @return The response confirming deletion of the tasks.","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException I/O exception from saving the taskList state.","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"jonas-chow"},"content":"    public String deleteDone() throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"jonas-chow"},"content":"        tasks.removeIf(Task::isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"jonas-chow"},"content":"        assert tasks.stream().noneMatch(Task::isDone) : \"All tasks should not be done\";","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":95,"author":{"gitId":"jonas-chow"},"content":"        save();","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"jonas-chow"},"content":"        return \"Noted! I\u0027ve removed all completed tasks.\\n\" + getTaskLengthReport();","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"jonas-chow"},"content":"     * Deletes all tasks that are expired.","lastModifiedDate":"2021-09-06"},{"lineNumber":101,"author":{"gitId":"jonas-chow"},"content":"     * Also saves the taskList and returns a message to be printed.","lastModifiedDate":"2021-09-06"},{"lineNumber":102,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"jonas-chow"},"content":"     * @return The response confirming deletion of the tasks.","lastModifiedDate":"2021-09-06"},{"lineNumber":104,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException I/O exception from saving the taskList state.","lastModifiedDate":"2021-09-06"},{"lineNumber":105,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"jonas-chow"},"content":"    public String deleteExpired() throws DukeException {","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"jonas-chow"},"content":"        tasks.removeIf(Task::isExpired);","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"jonas-chow"},"content":"        assert tasks.stream().noneMatch(Task::isExpired) : \"All tasks should not be expired\";","lastModifiedDate":"2021-09-06"},{"lineNumber":109,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":110,"author":{"gitId":"jonas-chow"},"content":"        save();","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"jonas-chow"},"content":"        return \"Noted! I\u0027ve removed all expired tasks.\\n\" + getTaskLengthReport();","lastModifiedDate":"2021-08-30"},{"lineNumber":112,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"jonas-chow"},"content":"     * Returns a message listing all the tasks to be printed.","lastModifiedDate":"2021-09-06"},{"lineNumber":116,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":117,"author":{"gitId":"jonas-chow"},"content":"     * @return The response which lists all tasks.","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"jonas-chow"},"content":"    public String list() {","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"jonas-chow"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"jonas-chow"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":122,"author":{"gitId":"jonas-chow"},"content":"            return \"No tasks yet!\";","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":124,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":125,"author":{"gitId":"jonas-chow"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-09-06"},{"lineNumber":126,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":127,"author":{"gitId":"jonas-chow"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":128,"author":{"gitId":"jonas-chow"},"content":"            sb.append(i + 1);","lastModifiedDate":"2021-08-30"},{"lineNumber":129,"author":{"gitId":"jonas-chow"},"content":"            sb.append(\". \");","lastModifiedDate":"2021-08-30"},{"lineNumber":130,"author":{"gitId":"jonas-chow"},"content":"            sb.append(tasks.get(i).toString());","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"jonas-chow"},"content":"            sb.append(\u0027\\n\u0027);","lastModifiedDate":"2021-08-30"},{"lineNumber":132,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":134,"author":{"gitId":"jonas-chow"},"content":"        // delete the last newline character","lastModifiedDate":"2021-08-30"},{"lineNumber":135,"author":{"gitId":"jonas-chow"},"content":"        sb.deleteCharAt(sb.length() - 1);","lastModifiedDate":"2021-08-30"},{"lineNumber":136,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":137,"author":{"gitId":"jonas-chow"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":138,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":139,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":140,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"jonas-chow"},"content":"     * Finds all tasks with name matching the search string (case insensitive).","lastModifiedDate":"2021-09-06"},{"lineNumber":142,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"jonas-chow"},"content":"     * @param searchString The string to find in the tasks.","lastModifiedDate":"2021-09-06"},{"lineNumber":144,"author":{"gitId":"jonas-chow"},"content":"     * @return The response containing all the tasks that match the search string.","lastModifiedDate":"2021-09-06"},{"lineNumber":145,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"jonas-chow"},"content":"    public String find(String searchString) {","lastModifiedDate":"2021-08-30"},{"lineNumber":147,"author":{"gitId":"jonas-chow"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"jonas-chow"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-30"},{"lineNumber":149,"author":{"gitId":"jonas-chow"},"content":"        int foundCount \u003d 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"jonas-chow"},"content":"        sb.append(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-30"},{"lineNumber":151,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"jonas-chow"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"jonas-chow"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"jonas-chow"},"content":"            // case insensitive search","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"jonas-chow"},"content":"            String taskName \u003d task.getName().toLowerCase();","lastModifiedDate":"2021-09-06"},{"lineNumber":156,"author":{"gitId":"jonas-chow"},"content":"            if (taskName.contains(searchString.toLowerCase())) {","lastModifiedDate":"2021-09-06"},{"lineNumber":157,"author":{"gitId":"jonas-chow"},"content":"                // print each task indented, in a new line","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"jonas-chow"},"content":"                sb.append(\"\\n  \");","lastModifiedDate":"2021-09-06"},{"lineNumber":159,"author":{"gitId":"jonas-chow"},"content":"                sb.append(i + 1);","lastModifiedDate":"2021-08-30"},{"lineNumber":160,"author":{"gitId":"jonas-chow"},"content":"                sb.append(\". \");","lastModifiedDate":"2021-08-30"},{"lineNumber":161,"author":{"gitId":"jonas-chow"},"content":"                sb.append(task.toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":162,"author":{"gitId":"jonas-chow"},"content":"                foundCount++;","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"jonas-chow"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"jonas-chow"},"content":"        if (foundCount \u003d\u003d 0) {","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"jonas-chow"},"content":"            return \"No matching tasks!\";","lastModifiedDate":"2021-08-30"},{"lineNumber":168,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":170,"author":{"gitId":"jonas-chow"},"content":"        return sb.toString();","lastModifiedDate":"2021-09-06"},{"lineNumber":171,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"jonas-chow"},"content":"     * Returns the 0-indexed index of the task from it\u0027s 1-indexed index.","lastModifiedDate":"2021-09-06"},{"lineNumber":175,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"jonas-chow"},"content":"     * @param taskNum 1-indexed index of the task.","lastModifiedDate":"2021-09-06"},{"lineNumber":177,"author":{"gitId":"jonas-chow"},"content":"     * @return 0-indexed index of the task.","lastModifiedDate":"2021-09-06"},{"lineNumber":178,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException Exception thrown if the index is out of range.","lastModifiedDate":"2021-09-06"},{"lineNumber":179,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"jonas-chow"},"content":"    private int getTaskIndexFromTaskNum(int taskNum) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":181,"author":{"gitId":"jonas-chow"},"content":"        if (taskNum \u003c\u003d 0 || taskNum \u003e tasks.size()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"jonas-chow"},"content":"            throw new DukeException(\"Please input the ID of a task!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":183,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":184,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":185,"author":{"gitId":"jonas-chow"},"content":"        // tasks are 1-indexed to the user, but 0-indexed by implementation","lastModifiedDate":"2021-08-18"},{"lineNumber":186,"author":{"gitId":"jonas-chow"},"content":"        return taskNum - 1;","lastModifiedDate":"2021-08-23"},{"lineNumber":187,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":188,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":189,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string telling the user how many tasks are in the list.","lastModifiedDate":"2021-09-06"},{"lineNumber":191,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"jonas-chow"},"content":"     * @return String telling the user how many tasks are in the list.","lastModifiedDate":"2021-09-06"},{"lineNumber":193,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"jonas-chow"},"content":"    private String getTaskLengthReport() {","lastModifiedDate":"2021-08-27"},{"lineNumber":195,"author":{"gitId":"jonas-chow"},"content":"        return \"Now you have \" + tasks.size()","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"jonas-chow"},"content":"                + (tasks.size() !\u003d 1 ? \" tasks\" : \" task\") + \" in the list.\";","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":198,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":199,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"jonas-chow"},"content":"     * Saves the state of the taskList.","lastModifiedDate":"2021-09-06"},{"lineNumber":201,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"jonas-chow"},"content":"     * @throws DukeException I/O exception from saving.","lastModifiedDate":"2021-09-06"},{"lineNumber":203,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"jonas-chow"},"content":"    private void save() throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":205,"author":{"gitId":"jonas-chow"},"content":"        TaskStorage.save(tasks);","lastModifiedDate":"2021-09-08"},{"lineNumber":206,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":207,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"jonas-chow"},"content":"     * Returns the taskList to operate on without any side effects.","lastModifiedDate":"2021-09-06"},{"lineNumber":210,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":211,"author":{"gitId":"jonas-chow"},"content":"     * @return The list of tasks.","lastModifiedDate":"2021-09-06"},{"lineNumber":212,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"jonas-chow"},"content":"    protected ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":214,"author":{"gitId":"jonas-chow"},"content":"        return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":215,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":216,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jonas-chow":216}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"/**","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":" * Class representing a ToDo task that can be marked as done.","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":" */","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"     * Constructor for ToDo, setting its name, and marking it not done.","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"     * @param name Name of the ToDo.","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"        super(name);","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"     * Loads a ToDo from data parsed from the save file.","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"     * @param loadDatas A line from the csv, split by commas.","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"     * @return ToDo created from provided data.","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"    public static ToDo load(String[] loadDatas) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"        boolean isDone \u003d loadDatas[1].equals(\"o\");","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"        String name \u003d loadDatas[2];","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"        ToDo todo \u003d new ToDo(name);","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"            todo.doTask();","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"        return todo;","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string representation of the ToDo and its status.","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"     * @return String representation of the ToDo.","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"     * Returns a string representing the ToDo compliant to the saveFile format.","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"     * @return String to be saved as a line in save.csv.","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"    @Override","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"    public String getSaveString() {","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"        return \"t,\" + super.getSaveString();","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jonas-chow":53}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"        \u003cLabel fx:id\u003d\"dialog\" prefHeight\u003d\"100.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: grey; -fx-border-color: white;\" text\u003d\"Label\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"jonas-chow":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.application.MainWindow\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" onKeyPressed\u003d\"#handleUserKeystroke\" prefHeight\u003d\"30.0\" prefWidth\u003d\"300.0\" promptText\u003d\"Type command here...\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"30.0\" prefWidth\u003d\"100.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"570.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"30.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"570.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: black;\" /\u003e","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"jonas-chow":19}},{"path":"src/test/java/duke/command/CommandsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"class CommandsTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"    void findCommand() {","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.findCommand(\"deadline\") instanceof DeadlineCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.findCommand(\"delete\") instanceof DeleteCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.findCommand(\"done\") instanceof DoneCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.findCommand(\"event\") instanceof EventCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.findCommand(\"bye\") instanceof ExitCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.findCommand(\"list\") instanceof ListCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.findCommand(\"todo\") instanceof ToDoCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(Commands.findCommand(\"alias\") instanceof AliasCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"        assertNull(Commands.findCommand(\"iwowqjdnoqwdnq\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jonas-chow":21}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"package duke.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"import duke.io.TaskStorage;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"class TaskListTest {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"    private static TaskList taskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"    private static ArrayList\u003cTask\u003e savedTasks;","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"jonas-chow"},"content":"    @BeforeAll","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"jonas-chow"},"content":"    static void beforeAll() {","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"jonas-chow"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"jonas-chow"},"content":"        savedTasks \u003d new ArrayList\u003c\u003e(taskList.getList());","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"jonas-chow"},"content":"    @BeforeEach","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"jonas-chow"},"content":"    void beforeEach() {","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"jonas-chow"},"content":"        taskList.getList().clear();","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"jonas-chow"},"content":"    @AfterEach","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"jonas-chow"},"content":"    void afterEach() throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"jonas-chow"},"content":"        TaskStorage.save(savedTasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"jonas-chow"},"content":"    void addTask() throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"jonas-chow"},"content":"        Task todo \u003d new ToDo(\"name\");","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"jonas-chow"},"content":"        Task deadline \u003d new Deadline(\"name\", LocalDate.now());","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"jonas-chow"},"content":"        Task event \u003d new Event(\"name\", LocalDate.now());","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"jonas-chow"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"jonas-chow"},"content":"        taskList.addTask(deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"jonas-chow"},"content":"        taskList.addTask(event);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"jonas-chow"},"content":"        ArrayList\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"jonas-chow"},"content":"        expected.add(todo);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"jonas-chow"},"content":"        expected.add(deadline);","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"jonas-chow"},"content":"        expected.add(event);","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"jonas-chow"},"content":"        assertEquals(expected, taskList.getList());","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"jonas-chow"},"content":"    void doTask() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"jonas-chow"},"content":"        Task toDo \u003d new ToDo(\"name\");","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"jonas-chow"},"content":"        taskList.getList().add(toDo);","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"jonas-chow"},"content":"        assertFalse(toDo.isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"jonas-chow"},"content":"        taskList.doTask(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"jonas-chow"},"content":"        assertTrue(toDo.isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"jonas-chow"},"content":"    void deleteTask() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"jonas-chow"},"content":"        Task toDo \u003d new ToDo(\"name\");","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"jonas-chow"},"content":"        taskList.getList().add(toDo);","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"jonas-chow"},"content":"        taskList.deleteTask(1);","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"jonas-chow"},"content":"        assertEquals(new ArrayList\u003cTask\u003e(), taskList.getList());","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"jonas-chow"},"content":"    void deleteDone() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"jonas-chow"},"content":"        Task toDo1 \u003d new ToDo(\"name\");","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"jonas-chow"},"content":"        Task toDo2 \u003d new ToDo(\"name\");","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"jonas-chow"},"content":"        taskList.getList().add(toDo1);","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"jonas-chow"},"content":"        taskList.getList().add(toDo2);","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"jonas-chow"},"content":"        toDo2.isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"jonas-chow"},"content":"        taskList.deleteDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"jonas-chow"},"content":"        ArrayList\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"jonas-chow"},"content":"        expected.add(toDo1);","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"jonas-chow"},"content":"        assertEquals(expected, taskList.getList());","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"jonas-chow"},"content":"    void deleteExpired() throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"jonas-chow"},"content":"        Task deadline1 \u003d new Deadline(\"name\", LocalDate.now());","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"jonas-chow"},"content":"        Task deadline2 \u003d new Deadline(\"name\", LocalDate.parse(\"2010-01-01\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"jonas-chow"},"content":"        taskList.getList().add(deadline1);","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"jonas-chow"},"content":"        taskList.getList().add(deadline2);","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"jonas-chow"},"content":"        taskList.deleteExpired();","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"jonas-chow"},"content":"        ArrayList\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"jonas-chow"},"content":"        expected.add(deadline1);","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"jonas-chow"},"content":"        assertEquals(expected, taskList.getList());","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":102,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"jonas-chow"},"content":"    void list() {","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"jonas-chow"},"content":"        assertEquals(taskList.list(), \"No tasks yet!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"jonas-chow"},"content":"        Task toDo1 \u003d new ToDo(\"name\");","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"jonas-chow"},"content":"        taskList.getList().add(toDo1);","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"jonas-chow"},"content":"        String expected \u003d \"1. \" + toDo1.toString();","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"jonas-chow"},"content":"        assertEquals(expected, taskList.list());","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"jonas-chow"},"content":"    @Test","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"jonas-chow"},"content":"    void find_hasMatchingTasks() {","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"jonas-chow"},"content":"        Task toDo1 \u003d new ToDo(\"name\");","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"jonas-chow"},"content":"        Task toDo2 \u003d new ToDo(\"nam\");","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"jonas-chow"},"content":"        Task toDo3 \u003d new ToDo(\"ame\");","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"jonas-chow"},"content":"        taskList.getList().add(toDo1);","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"jonas-chow"},"content":"        taskList.getList().add(toDo2);","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"jonas-chow"},"content":"        taskList.getList().add(toDo3);","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"jonas-chow"},"content":"        String expected \u003d \"Here are the matching tasks in your list:\\n  1. \" + toDo1.toString()","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"jonas-chow"},"content":"                + \"\\n  2. \" + toDo2.toString();","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"jonas-chow"},"content":"        assertEquals(expected, taskList.find(\"na\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"jonas-chow"},"content":"        String expected2 \u003d \"No matching tasks!\";","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"jonas-chow"},"content":"        assertEquals(expected2, taskList.find(\"names\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"jonas-chow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"jonas-chow"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"jonas-chow":130}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jonas-chow"},"content":"todo hello","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"jonas-chow"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"jonas-chow"},"content":"deadline bad format /by 31-12-2030","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jonas-chow"},"content":"deadline far future /by 2030-12-31","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jonas-chow"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"jonas-chow"},"content":"event past /at 2020-01-01","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jonas-chow"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"jonas-chow"},"content":"done 1","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"jonas-chow"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"jonas-chow"},"content":"done 2","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"jonas-chow"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"jonas-chow"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"jonas-chow"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"jonas-chow"},"content":"delete done","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"list","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"delete expired","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"list","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"goodbye","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"jonas-chow":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"jonas-chow"},"content":"# delete existing save","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jonas-chow"},"content":"if [ -e \"./save.csv\" ]","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jonas-chow"},"content":"then","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jonas-chow"},"content":"    rm save.csv","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jonas-chow"},"content":"fi","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jonas-chow"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jonas-chow":6,"-":38}}]
