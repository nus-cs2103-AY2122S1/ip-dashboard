[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"# main.main.java.Duke project template","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"3. After that, locate the `src/main/java/main.main.java.Duke.java` file, right-click it, and choose `Run main.main.java.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhenxuantan":2,"-":22}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":" * This is the list of commands that Duke can perform.","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group 04)","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":"public enum Command {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"    BYE,","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"    LIST,","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"    DONE,","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"    DELETE,","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"    TODO,","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"    DEADLINE,","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"    EVENT,","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"    INVALID;","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenxuantan":21}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":" * Deadline is a task that has a date to be done by.","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group 04)","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":"    private final String date;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"     * Constructor for Deadline task.","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"     * @param description the description","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"    public Deadline(String description, String date) {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"     * @return the string representation of the Deadline task","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + this.date + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenxuantan":32}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":" * Duke is a Personal Assistant Chatbot that helps a person","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":" * keep track of various things.","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group 04)","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"    //Duke initialisation","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"    protected static final String LINE \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"    private static final String INTRO \u003d \"Hello! I\u0027m Duke\\n\\t What can I do for you?\";","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"    private static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"     * Provides horizontal lines with indentation.","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"     * @param str the String to be formatted","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"    protected static void reply(String str) {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"         System.out.println(LINE);","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"         System.out.println(\"\\t \" + str);","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"         System.out.println(LINE + \"\\n\");","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"     * Throws exceptions from invalid commands (String[]s).","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"     * @param command the command to be checked","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"     * @param len the number of segments in the command","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"zhenxuantan"},"content":"     * @param message the message to be shown in the error","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"zhenxuantan"},"content":"     * @throws IllegalArgumentException an error","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"zhenxuantan"},"content":"    protected static void checkLen(String[] command, boolean greater, int len, String message) throws IllegalArgumentException {","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"zhenxuantan"},"content":"        if (greater) {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"zhenxuantan"},"content":"            if (command.length \u003e len) throw new IllegalArgumentException(\"There are too many arguments that I do not understand. Sorry.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"zhenxuantan"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"zhenxuantan"},"content":"            if (command.length \u003c len) throw new IllegalArgumentException(message);","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"zhenxuantan"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"zhenxuantan"},"content":"     * Check if the string is numeric.","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"zhenxuantan"},"content":"     * @param str the string to be checked","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"zhenxuantan"},"content":"    protected static int isNumeric(String str) throws IllegalArgumentException {","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"zhenxuantan"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"zhenxuantan"},"content":"            int i \u003d Integer.parseInt(str);","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"zhenxuantan"},"content":"            if (i \u003c 1) throw new IllegalArgumentException(\"The list is numbered 1, 2, 3, .... There are no items numbered 0 nor with a negative number.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"zhenxuantan"},"content":"            return i;","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"zhenxuantan"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"zhenxuantan"},"content":"            throw new IllegalArgumentException(\"You did not provide a valid number.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"zhenxuantan"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"zhenxuantan"},"content":"        reply(INTRO);","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"zhenxuantan"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"zhenxuantan"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"zhenxuantan"},"content":"        boolean on \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"zhenxuantan"},"content":"        while (on) {","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"zhenxuantan"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"zhenxuantan"},"content":"            String[] commandPair \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"zhenxuantan"},"content":"            Command command \u003d StringToCommand.convert(commandPair[0]);","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"zhenxuantan"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"zhenxuantan"},"content":"                switch (command) {","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"zhenxuantan"},"content":"                    case BYE:","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"zhenxuantan"},"content":"                        checkLen(commandPair, true, 1, \"\");","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"zhenxuantan"},"content":"                        on \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"zhenxuantan"},"content":"                        reply(BYE_MESSAGE);","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"zhenxuantan"},"content":"                        sc.close();","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"zhenxuantan"},"content":"                        break;","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"zhenxuantan"},"content":"                    case LIST:","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"zhenxuantan"},"content":"                        checkLen(commandPair, true, 1, \"\");","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"zhenxuantan"},"content":"                        tl.printList();","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"zhenxuantan"},"content":"                        break;","lastModifiedDate":"2021-08-16"},{"lineNumber":79,"author":{"gitId":"zhenxuantan"},"content":"                    case DONE:","lastModifiedDate":"2021-08-16"},{"lineNumber":80,"author":{"gitId":"zhenxuantan"},"content":"                        checkLen(commandPair, false, 2, \"You did not indicate the task to be marked done. Use \u0027done \u003ctask\u0027s number\u003e\u0027 to mark the task as done.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":81,"author":{"gitId":"zhenxuantan"},"content":"                        int toBeDone \u003d isNumeric(commandPair[1]);","lastModifiedDate":"2021-08-16"},{"lineNumber":82,"author":{"gitId":"zhenxuantan"},"content":"                        if (toBeDone \u003e tl.count())","lastModifiedDate":"2021-08-16"},{"lineNumber":83,"author":{"gitId":"zhenxuantan"},"content":"                            throw new IllegalArgumentException(\"You do not that much tasks. Try adding more tasks.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":84,"author":{"gitId":"zhenxuantan"},"content":"                        tl.setDone(toBeDone - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":85,"author":{"gitId":"zhenxuantan"},"content":"                        break;","lastModifiedDate":"2021-08-16"},{"lineNumber":86,"author":{"gitId":"zhenxuantan"},"content":"                    case DELETE:","lastModifiedDate":"2021-08-16"},{"lineNumber":87,"author":{"gitId":"zhenxuantan"},"content":"                        checkLen(commandPair, false, 2, \"You did not indicate the task to be deleted. Use \u0027delete \u003ctask\u0027s number\u003e\u0027 to delete the task.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":88,"author":{"gitId":"zhenxuantan"},"content":"                        int toBeDeleted \u003d isNumeric(commandPair[1]);","lastModifiedDate":"2021-08-16"},{"lineNumber":89,"author":{"gitId":"zhenxuantan"},"content":"                        if (toBeDeleted \u003e tl.count())","lastModifiedDate":"2021-08-16"},{"lineNumber":90,"author":{"gitId":"zhenxuantan"},"content":"                            throw new IllegalArgumentException(\"You do not that much tasks. Try adding more tasks.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":91,"author":{"gitId":"zhenxuantan"},"content":"                        tl.delete(toBeDeleted - 1);","lastModifiedDate":"2021-08-16"},{"lineNumber":92,"author":{"gitId":"zhenxuantan"},"content":"                        break;","lastModifiedDate":"2021-08-16"},{"lineNumber":93,"author":{"gitId":"zhenxuantan"},"content":"                    case TODO:","lastModifiedDate":"2021-08-16"},{"lineNumber":94,"author":{"gitId":"zhenxuantan"},"content":"                        checkLen(commandPair, false, 2, \"The description of a todo cannot be empty. Use \u0027todo \u003cdescription\u003e\u0027 to add a todo.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":95,"author":{"gitId":"zhenxuantan"},"content":"                        tl.addTask(new ToDo(commandPair[1]));","lastModifiedDate":"2021-08-16"},{"lineNumber":96,"author":{"gitId":"zhenxuantan"},"content":"                        break;","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"zhenxuantan"},"content":"                    case DEADLINE:","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"zhenxuantan"},"content":"                        checkLen(commandPair, false, 2, \"The description of a deadline cannot be empty. Use \u0027deadline \u003cdescription\u003e /at \u003cdate\u003e\u0027 to add a deadline.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"zhenxuantan"},"content":"                        String[] deadlinePair \u003d commandPair[1].split(\"/by\", 2);","lastModifiedDate":"2021-08-16"},{"lineNumber":100,"author":{"gitId":"zhenxuantan"},"content":"                        checkLen(deadlinePair, false, 2, \"The description / date of a deadline cannot be empty. Use \u0027deadline \u003cdescription\u003e /at \u003cdate\u003e\u0027 to add a deadline.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":101,"author":{"gitId":"zhenxuantan"},"content":"                        tl.addTask(new Deadline(deadlinePair[0], deadlinePair[1]));","lastModifiedDate":"2021-08-16"},{"lineNumber":102,"author":{"gitId":"zhenxuantan"},"content":"                        break;","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"zhenxuantan"},"content":"                    case EVENT:","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"zhenxuantan"},"content":"                        checkLen(commandPair, false, 2, \"The description of an event cannot be empty. Use \u0027event \u003cdescription\u003e /at \u003cdate\u003e\u0027 to add an event.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"zhenxuantan"},"content":"                        String[] eventPair \u003d commandPair[1].split(\"/at\", 2);","lastModifiedDate":"2021-08-16"},{"lineNumber":106,"author":{"gitId":"zhenxuantan"},"content":"                        checkLen(eventPair, false, 2, \"The description / date of an event cannot be empty. Use \u0027event \u003cdescription\u003e /at \u003cdate\u003e\u0027 to add an event.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":107,"author":{"gitId":"zhenxuantan"},"content":"                        tl.addTask(new Event(eventPair[0], eventPair[1]));","lastModifiedDate":"2021-08-16"},{"lineNumber":108,"author":{"gitId":"zhenxuantan"},"content":"                        break;","lastModifiedDate":"2021-08-16"},{"lineNumber":109,"author":{"gitId":"zhenxuantan"},"content":"                    default:","lastModifiedDate":"2021-08-16"},{"lineNumber":110,"author":{"gitId":"zhenxuantan"},"content":"                        throw new IllegalArgumentException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-16"},{"lineNumber":111,"author":{"gitId":"zhenxuantan"},"content":"                }","lastModifiedDate":"2021-08-16"},{"lineNumber":112,"author":{"gitId":"zhenxuantan"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-16"},{"lineNumber":113,"author":{"gitId":"zhenxuantan"},"content":"               reply(\"☹ OOPS!!! \" + e.getMessage());","lastModifiedDate":"2021-08-16"},{"lineNumber":114,"author":{"gitId":"zhenxuantan"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenxuantan":112,"-":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":" * Event is a task that has a date in which it is happening.","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group 04)","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":"    private final String date;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"     * Constructor for Deadline task.","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"     * @param description the description","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"    public Event(String description, String date) {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"     * @return the string representation of the Deadline task","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"        return \"[E]\" + super.toString() + \"(at:\" + this.date + \")\";","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenxuantan":32}},{"path":"src/main/java/StringToCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":" * StringToCommand converts a string to its respective command.","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group 04)","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":"public class StringToCommand {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"     * This method converts a string to its respective command.","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"     * @param str the string to be converted","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"     * @return the command","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"    protected static Command convert(String str) {","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"        switch (str) {","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"                return Command.BYE;","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"            case \"list\":","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"                return Command.LIST;","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"            case \"done\":","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"                return Command.DONE;","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"                return Command.DELETE;","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"                return Command.TODO;","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"                return Command.DEADLINE;","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"            case \"event\":","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"                return Command.EVENT;","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"            default:","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"zhenxuantan"},"content":"                return Command.INVALID;","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"zhenxuantan"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenxuantan":36}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":" * A task contains its description and information of whether it is done or not.","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group 04)","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":"    private final String DESCRIPTION;","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"     * Constructor for task.","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"     * @param description the description","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"        this.DESCRIPTION \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"     * @return status icon","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"     * Change task to done.","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"zhenxuantan"},"content":"    protected void setDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"zhenxuantan"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"zhenxuantan"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"zhenxuantan"},"content":"     * @return the string representation of the task","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"zhenxuantan"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"zhenxuantan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"zhenxuantan"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.DESCRIPTION;","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenxuantan":47}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":" * TaskList stores the list of tasks.","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group 04)","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":"public class TaskList {","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":"    private static final String ADD \u003d \"\\t Got it. I\u0027ve added this task:\";","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"    private static final String LIST_INTRO \u003d \"\\t Here are the tasks in your list:\";","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"    private static final String DONE \u003d \"Nice! I\u0027ve marked this task as done:\\n\\t   \";","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"    private static final String DELETE \u003d \"Noted. I\u0027ve removed this task:\\n\\t   \";","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"    private final ArrayList\u003cTask\u003e LIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"     * Adds the task into the list.","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"     * @param task the task to be added into the list","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"    protected void addTask(Task task) {","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"        this.LIST.add(task);","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"        System.out.println(Duke.LINE);","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"        System.out.println(ADD);","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"        System.out.println(\"\\t   \" + task);","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"        if (this.LIST.size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"            System.out.println(\"\\t Now you have 1 task in the list.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"            System.out.println(\"\\t Now you have \" + this.LIST.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"        System.out.println(Duke.LINE + \"\\n\");","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"zhenxuantan"},"content":"     * Setter to change the done status of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"zhenxuantan"},"content":"    protected void setDone(int index) {","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"zhenxuantan"},"content":"        Task task \u003d this.LIST.get(index);","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"zhenxuantan"},"content":"        task.setDone();","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"zhenxuantan"},"content":"        Duke.reply(DONE + task);","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"zhenxuantan"},"content":"     * Delete the task at a specified index.","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"zhenxuantan"},"content":"    protected void delete(int index) {","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"zhenxuantan"},"content":"        Task task \u003d this.LIST.get(index);","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"zhenxuantan"},"content":"        this.LIST.remove(index);","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"zhenxuantan"},"content":"        Duke.reply(DELETE + task);","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"zhenxuantan"},"content":"     * Prints the list.","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"zhenxuantan"},"content":"    protected void printList() {","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"zhenxuantan"},"content":"        System.out.println(Duke.LINE);","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"zhenxuantan"},"content":"        System.out.println(LIST_INTRO);","lastModifiedDate":"2021-08-16"},{"lineNumber":59,"author":{"gitId":"zhenxuantan"},"content":"        if (this.LIST.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":60,"author":{"gitId":"zhenxuantan"},"content":"            System.out.println(\"\\t List is empty\");","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"zhenxuantan"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"zhenxuantan"},"content":"            for (int i \u003d 0; i \u003c this.LIST.size(); i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"zhenxuantan"},"content":"                System.out.println(\"\\t \" + (i + 1) + \".\" + this.LIST.get(i));","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"zhenxuantan"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"zhenxuantan"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"zhenxuantan"},"content":"        System.out.println(Duke.LINE + \"\\n\");","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"zhenxuantan"},"content":"     * Return the number of items in the TaskList.","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"zhenxuantan"},"content":"     * @return listCount","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"zhenxuantan"},"content":"    protected int count() {","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"zhenxuantan"},"content":"        return this.LIST.size();","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":77,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":78,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenxuantan":78}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":" * ToDo is a task that doesnt have any dates tied to it.","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group 04)","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":"     * Constructor for ToDo task.","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"     * @param description the description","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"        super(description);","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"     * Returns the string representation of the ToDo task.","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"     * @return the string representation of the ToDO task","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenxuantan":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"blah","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"done","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":"todo","lastModifiedDate":"2021-08-16"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":"deadline","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":"event","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":"list 1","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":"bye 1","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":"deadline no date","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":"event no date","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":"done -1","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"done 1.1","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"todo read textbook","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"deadline ip /by Aug 19th","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"event lecture /at Aug 17th 12-2pm","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"delete 2","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"delete 1","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenxuantan":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"java -classpath ..\\bin main.main.java.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhenxuantan":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"java -classpath ../bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhenxuantan":2,"-":32}}]
