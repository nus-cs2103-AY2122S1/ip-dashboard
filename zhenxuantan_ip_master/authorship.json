[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"# main.main.java.Duke project template","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"3. After that, locate the `src/main/java/main.main.java.Duke.java` file, right-click it, and choose `Run main.main.java.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhenxuantan":2,"-":22}},{"path":"src/main/java/AddDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":" * AddDeadline is a command which adds a deadline task to the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group W12)","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"public class AddDeadline extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"     * Constructor.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"     * @param description it should contain the deadline description and the date","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"    AddDeadline(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"     * Adds the deadline into the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"     * @param tasks   the task list","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"     * @param ui      the ui","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"     * @param storage the storage for the saved task list","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zhenxuantan"},"content":"            String[] deadlinePair \u003d description.split(\"/by\", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"zhenxuantan"},"content":"            if (deadlinePair[0] \u003d\u003d \"\" || deadlinePair[1] \u003d\u003d \"\") {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zhenxuantan"},"content":"                throw new DukeException(\"Your add deadline command is incomplete.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zhenxuantan"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"zhenxuantan"},"content":"            tasks.addTask(new Deadline(false, deadlinePair[0], deadlinePair[1]));","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"zhenxuantan"},"content":"            storage.add(\"D\", deadlinePair[0], deadlinePair[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"zhenxuantan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"zhenxuantan"},"content":"            throw new DukeException(\"There is an error in adding the Deadline task to your saved data.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"zhenxuantan"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"zhenxuantan"},"content":"            throw new DukeException(\"Please provide the time in YYYY-MM-DD HHMM format instead.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"zhenxuantan"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zhenxuantan":45}},{"path":"src/main/java/AddEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":" * AddEvent is a command which adds an event task to the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group W12)","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"public class AddEvent extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"     * Constructor.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"     * @param description it should contain the event description and the date","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"    AddEvent(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"     * Adds the event into the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"     * @param tasks   the task list","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"     * @param ui      the ui","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"     * @param storage the storage for the saved task list","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zhenxuantan"},"content":"            String[] eventPair \u003d description.split(\"/at\", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"zhenxuantan"},"content":"            if (eventPair[0] \u003d\u003d \"\" || eventPair[1] \u003d\u003d \"\") {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zhenxuantan"},"content":"                throw new DukeException(\"Your add event command is incomplete.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zhenxuantan"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"zhenxuantan"},"content":"            tasks.addTask(new Event(false, eventPair[0], eventPair[1]));","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"zhenxuantan"},"content":"            storage.add(\"E\", eventPair[0], eventPair[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"zhenxuantan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"zhenxuantan"},"content":"            throw new DukeException(\"There is an error in adding the Event task to your saved data.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"zhenxuantan"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"zhenxuantan"},"content":"            throw new DukeException(\"Please provide the time in YYYY-MM-DD HHMM format instead.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"zhenxuantan"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zhenxuantan":45}},{"path":"src/main/java/AddTodo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":" * AddTodo is a command which adds a ToDo task to the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group W12)","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":"public class AddTodo extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"     * Constructor","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"     * @param description it should contain the ToDo description and the date","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"    AddTodo(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"     * Adds the ToDo into the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"     * @param tasks   the task list","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"     * @param ui      the ui","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"     * @param storage the storage for the saved task list","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"            if (description.replace(\" \", \"\").equals(\"\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zhenxuantan"},"content":"                throw new DukeException(\"The description for the Todo task cannot be empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"zhenxuantan"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zhenxuantan"},"content":"            tasks.addTask(new ToDo(false, description));","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zhenxuantan"},"content":"            storage.add(\"T\", description, \"\");","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"zhenxuantan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"zhenxuantan"},"content":"            throw new DukeException(\"There is an error in adding the Todo task to your saved data.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"zhenxuantan"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zhenxuantan":41}},{"path":"src/main/java/Bye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":" * Bye is a command which closes the Duke bot and its readers.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group W12)","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":"public class Bye extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"     * Constructor.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"     * @param description empty string","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"    Bye(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"     * Closes the Ui and all its readers.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"     * @param tasks   the task list","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"     * @param ui      the ui","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"     * @param storage the storage for the saved task list","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"        ui.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zhenxuantan"},"content":"     * Returns true if this command is executed.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zhenxuantan"},"content":"     * @return true","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"zhenxuantan"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"zhenxuantan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"zhenxuantan"},"content":"        return true;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zhenxuantan":41}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":" * This is an abstract class of all the Commands that Duke can perform.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group W12)","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":"    protected final String description;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"     * Constructor.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"     * @param description it should contain more instructions for the command","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"    Command(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"     * Adds the relevant actions pertaining to the command.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"     * @param tasks   the task list","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"     * @param ui      the ui","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"     * @param storage the storage for the saved task list","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"    protected abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"     * Returns true if it is a bye command and returns false otherwise","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"zhenxuantan"},"content":"     * @return boolean of whether this is the last command or not","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zhenxuantan"},"content":"    protected boolean isExit() {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"zhenxuantan"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenxuantan":40}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" * Deadline is a task that has a date to be done by.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group W12)","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"    private final LocalDateTime date;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"     * Constructor for Deadline task.","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"     * @param description the description","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"    public Deadline(boolean isDone, String description, String date) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(date.replace(\" \", \"\"), DateTimeFormatter.ofPattern(\"yyyy-MM-ddHHmm\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"        this.date \u003d dateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"     * @return the string representation of the Deadline task","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"zhenxuantan"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"zhenxuantan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"zhenxuantan"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + DateTimeFormatter.ofPattern(\"d MMM uuuu hh:mma\").format(this.date) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"zhenxuantan"},"content":"     * Returns if the task date is equal to the date provided.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"zhenxuantan"},"content":"     * @param date the date provided","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"zhenxuantan"},"content":"     * @return true if they are both equal","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"zhenxuantan"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"zhenxuantan"},"content":"    protected boolean onDate(LocalDate date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"zhenxuantan"},"content":"        return this.date.toLocalDate().equals(date);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenxuantan":48}},{"path":"src/main/java/Delete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":" * Delete is a command which deletes a specific Task from the TaskList.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group W12)","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":"public class Delete extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"     * Constructor.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"     * @param description it should contain index of the task to be deleted","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"    Delete(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"     * Deletes the task from the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"     * @param tasks   the task list","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"     * @param ui      the ui","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"     * @param storage the storage for the saved task list","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"            int index \u003d Integer.valueOf(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zhenxuantan"},"content":"            if (index \u003e tasks.count()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"zhenxuantan"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zhenxuantan"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zhenxuantan"},"content":"            tasks.delete(index - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"zhenxuantan"},"content":"            storage.delete(index - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"zhenxuantan"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"zhenxuantan"},"content":"            throw new DukeException(\"There is no such task in existence.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"zhenxuantan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"zhenxuantan"},"content":"            throw new DukeException(\"There is an error in deleting from your saved data.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"zhenxuantan"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zhenxuantan":44}},{"path":"src/main/java/Done.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":"public class Done extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":"    Done(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"            int index \u003d Integer.valueOf(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"            if (index \u003e tasks.count()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"            tasks.setDone(index - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"            storage.setDone(index - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"            throw new DukeException(\"Your date (YYYY-MM-DD) / date \u0026 time (YYYY-MM-DD HHMM) (24h) is given in the wrong format!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"            throw new DukeException(\"There is no such task in existence.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"        }  catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"            throw new DukeException(\"There is an error reflecting the task as done in the saved data.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zhenxuantan":28}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":"import java.util.Date;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":" * Duke is a Personal Assistant Chatbot that helps a person","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":" * keep track of various things.","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group W12)","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"        try {","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"            ui.reply(\"☹ OOPS!!! Cannot create file!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"zhenxuantan"},"content":"    public void run() {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"zhenxuantan"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zhenxuantan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zhenxuantan"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"zhenxuantan"},"content":"            try {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"zhenxuantan"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"zhenxuantan"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"zhenxuantan"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"zhenxuantan"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"zhenxuantan"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"zhenxuantan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"zhenxuantan"},"content":"                ui.showError(\"\\t \" + e.getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"zhenxuantan"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"zhenxuantan"},"content":"                ui.showError(\"\\t \" + new DukeException(\"Error reading commands.\").getMessage());","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"zhenxuantan"},"content":"            } finally {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"zhenxuantan"},"content":"                ui.showLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"zhenxuantan"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"zhenxuantan"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenxuantan":51,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":" * DukeException encapsulates all the exceptions that could occur from Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group W12)","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":"public class DukeException extends RuntimeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"     * Constructor.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"     * @param errorMessage indicates the error that has occurred","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"    DukeException(String errorMessage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"        super(\"☹ OOPS!!! \" + errorMessage);","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zhenxuantan":19}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" * Event is a task that has a date in which it is happening.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group W12)","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"    private final LocalDateTime date;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"     * Constructor for Deadline task.","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"     * @param description the description","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"    public Event(boolean isDone, String description, String date) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(date.replace(\" \", \"\"), DateTimeFormatter.ofPattern(\"yyyy-MM-ddHHmm\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"        this.date \u003d dateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"     * Returns the string representation of the Deadline task.","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"     * @return the string representation of the Deadline task","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"zhenxuantan"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"zhenxuantan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"zhenxuantan"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + DateTimeFormatter.ofPattern(\"d MMM uuuu hh:mma\").format(this.date) + \")\";","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"zhenxuantan"},"content":"     * Returns if the task date is equal to the date provided.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"zhenxuantan"},"content":"     * @param date the date provided","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"zhenxuantan"},"content":"     * @return true if they are both equal","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"zhenxuantan"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"zhenxuantan"},"content":"    protected boolean onDate(LocalDate date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"zhenxuantan"},"content":"        return this.date.toLocalDate().equals(date);","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenxuantan":48}},{"path":"src/main/java/Invalid.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":" * Invalid is a command that is invalid.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group W12)","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":"public class Invalid extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"     * Constructor.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"     * @param description it should not contain any description.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"    Invalid(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"     * Simply throws an exception.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"     * @param tasks   the task list","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"     * @param ui      the ui","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"     * @param storage the storage for the saved task list","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"        throw new DukeException(\"Invalid command.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zhenxuantan":31}},{"path":"src/main/java/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":" * List is a command which prints out all the Tasks in the list, and even","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":" * prints only tasks of a specific date if the date is specified.","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group W12)","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"public class List extends Command {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"     * Constructor.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"     * @param description it is either empty, or contains a date for which tasks with that date should be returned.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"    List(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"     * Lists down all the tasks (of the specified date).","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"     * @param tasks   the task list","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"     * @param ui      the ui","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"     * @param storage the storage for the saved task list","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"        String date \u003d super.description.replace(\" \", \"\");","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zhenxuantan"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"zhenxuantan"},"content":"            switch (date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zhenxuantan"},"content":"                case \"\":","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zhenxuantan"},"content":"                    tasks.printList();","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"zhenxuantan"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"zhenxuantan"},"content":"                default:","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"zhenxuantan"},"content":"                    tasks.printListDate(date);","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"zhenxuantan"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"zhenxuantan"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"zhenxuantan"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"zhenxuantan"},"content":"            throw new DukeException(\"Your date (YYYY-MM-DD) / date \u0026 time (YYYY-MM-DD HHMM) (24h) is given in the wrong format!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"zhenxuantan"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zhenxuantan":46}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":" * Parser reads the input by the user and returns the relevant command.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group W12)","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"     * Reads the fullCommand and return the relevant command.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"     * @param fullCommand the fullCommand","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"     * @return the relevant command","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"    protected static Command parse(String fullCommand) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"        String[] commandPair \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"        String description \u003d commandPair.length \u003d\u003d 1 ? \"\" : commandPair[1];","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"        switch (commandPair[0]) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"                return new Bye(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"            case \"list\":","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"                return new List(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"            case \"done\":","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"                return new Done(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"            case \"delete\":","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"                return new Delete(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"                return new AddTodo(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"                return new AddDeadline(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zhenxuantan"},"content":"            case \"event\":","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"zhenxuantan"},"content":"                return new AddEvent(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zhenxuantan"},"content":"            default:","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zhenxuantan"},"content":"                return new Invalid(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"zhenxuantan"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zhenxuantan":41}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":" * Storage is in-charge of loading the saved taskList, and updating it.","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group W12)","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"public class Storage {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"    private final String FILEPATH;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"    private ArrayList\u003cString\u003e fileContent;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"     * Constructor.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"     * @param filePath the specified path of the file.","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"    Storage(String filePath) {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"        this.FILEPATH \u003d filePath;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"     * Loads the file and initialises the TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"     * @return the list of tasks","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"zhenxuantan"},"content":"     * @throws IOException if there is an issue with writing/reading the file","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"zhenxuantan"},"content":"    protected ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"zhenxuantan"},"content":"        File directory \u003d new File(this.FILEPATH.split(\"/\")[0]);","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"zhenxuantan"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"zhenxuantan"},"content":"            directory.mkdir();","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"zhenxuantan"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"zhenxuantan"},"content":"        ArrayList\u003cTask\u003e tl \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"zhenxuantan"},"content":"        File savedList \u003d new File(this.FILEPATH);","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"zhenxuantan"},"content":"        if (!savedList.exists()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"zhenxuantan"},"content":"            savedList.createNewFile();","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"zhenxuantan"},"content":"            return tl;","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"zhenxuantan"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"zhenxuantan"},"content":"        fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(Paths.get(this.FILEPATH), StandardCharsets.UTF_8));","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"zhenxuantan"},"content":"        fileContent.forEach(str -\u003e","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"zhenxuantan"},"content":"        {","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"zhenxuantan"},"content":"            String[] command \u003d str.split(\"\\\\|\");","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"zhenxuantan"},"content":"            switch (command[0]) {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"zhenxuantan"},"content":"                case \"T\":","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"zhenxuantan"},"content":"                    tl.add(new ToDo(command[1].equals(\"1\"), command[2]));","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"zhenxuantan"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"zhenxuantan"},"content":"                case \"E\":","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"zhenxuantan"},"content":"                    tl.add(new Event(command[1].equals(\"1\"), command[2], command[3]));","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"zhenxuantan"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"zhenxuantan"},"content":"                case \"D\":","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"zhenxuantan"},"content":"                    tl.add(new Deadline(command[1].equals(\"1\"), command[2], command[3]));","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"zhenxuantan"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"zhenxuantan"},"content":"                default:","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"zhenxuantan"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"zhenxuantan"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"zhenxuantan"},"content":"        });","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"zhenxuantan"},"content":"        return tl;","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"zhenxuantan"},"content":"     * Change the string in the storage file to indicate that the task is done.","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"zhenxuantan"},"content":"     * @param index the position of the item","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"zhenxuantan"},"content":"     * @throws IOException if there is an error writing to the file","lastModifiedDate":"2021-08-22"},{"lineNumber":73,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"zhenxuantan"},"content":"    protected void setDone(int index) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":75,"author":{"gitId":"zhenxuantan"},"content":"        String str \u003d fileContent.get(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"zhenxuantan"},"content":"        fileContent.set(index, str.replace(\"|0|\", \"|1|\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"zhenxuantan"},"content":"        Files.write(Paths.get(this.FILEPATH), fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"zhenxuantan"},"content":"     * Adds a new task to the storage file.","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"zhenxuantan"},"content":"     * @param type        the type of the task","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"zhenxuantan"},"content":"     * @param description the description of the task","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"zhenxuantan"},"content":"     * @param date        the date of the task (if deadline or event)","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"zhenxuantan"},"content":"     * @throws IOException if there is an error writing to the file","lastModifiedDate":"2021-08-22"},{"lineNumber":87,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":88,"author":{"gitId":"zhenxuantan"},"content":"    protected void add(String type, String description, String date) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":89,"author":{"gitId":"zhenxuantan"},"content":"        fileContent.add(type + \"|0|\" + description + \"|\" + date);","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"zhenxuantan"},"content":"        Files.write(Paths.get(this.FILEPATH), fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"zhenxuantan"},"content":"     * Deletes the task from the storage file.","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"zhenxuantan"},"content":"     * @param index the position of the task in the list","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"zhenxuantan"},"content":"     * @throws IOException if there is an error writing to the file","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"zhenxuantan"},"content":"    protected void delete(int index) throws IOException {","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"zhenxuantan"},"content":"        fileContent.remove(index);","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"zhenxuantan"},"content":"        Files.write(Paths.get(this.FILEPATH), fileContent, StandardCharsets.UTF_8);","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"zhenxuantan":103}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":" * A task contains its description and information of whether it is done or not.","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group W12)","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"    private final String DESCRIPTION;","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"     * Constructor for task.","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"     * @param description the description","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"        this.DESCRIPTION \u003d description;","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"     * @return status icon","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"zhenxuantan"},"content":"     * Change task to done.","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"zhenxuantan"},"content":"    protected void setDone() {","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"zhenxuantan"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"zhenxuantan"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"zhenxuantan"},"content":"     * @return the string representation of the task","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"zhenxuantan"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"zhenxuantan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"zhenxuantan"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.DESCRIPTION;","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"zhenxuantan"},"content":"     * Returns if the task date is equal to the date provided.","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"zhenxuantan"},"content":"     * @param date the date provided","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"zhenxuantan"},"content":"     * @return true if they are both equal","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"zhenxuantan"},"content":"    protected abstract boolean onDate(LocalDate date);","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenxuantan":58}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" * TaskList stores the list of tasks.","lastModifiedDate":"2021-08-16"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group W12)","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"public class TaskList {","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"    private static final String ADD \u003d \"\\t Got it. I\u0027ve added this task:\";","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"    private static final String LIST_INTRO \u003d \"\\t Here are the tasks in your list:\";","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"    private static final String DONE \u003d \"\\t Nice! I\u0027ve marked this task as done:\\n\\t   \";","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"    private static final String DELETE \u003d \"\\t Noted. I\u0027ve removed this task:\\n\\t   \";","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"    private final ArrayList\u003cTask\u003e LIST;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"    TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"        this.LIST \u003d list;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"     * Adds the task into the list.","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"     * @param task the task to be added into the list","lastModifiedDate":"2021-08-16"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"    protected void addTask(Task task) {","lastModifiedDate":"2021-08-16"},{"lineNumber":33,"author":{"gitId":"zhenxuantan"},"content":"        this.LIST.add(task);","lastModifiedDate":"2021-08-16"},{"lineNumber":34,"author":{"gitId":"zhenxuantan"},"content":"        System.out.println(ADD);","lastModifiedDate":"2021-08-16"},{"lineNumber":35,"author":{"gitId":"zhenxuantan"},"content":"        System.out.println(\"\\t   \" + task);","lastModifiedDate":"2021-08-16"},{"lineNumber":36,"author":{"gitId":"zhenxuantan"},"content":"        if (this.LIST.size() \u003d\u003d 1) {","lastModifiedDate":"2021-08-16"},{"lineNumber":37,"author":{"gitId":"zhenxuantan"},"content":"            System.out.println(\"\\t Now you have 1 task in the list.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":38,"author":{"gitId":"zhenxuantan"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":39,"author":{"gitId":"zhenxuantan"},"content":"            System.out.println(\"\\t Now you have \" + this.LIST.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"zhenxuantan"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":43,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":44,"author":{"gitId":"zhenxuantan"},"content":"     * Setter to change the done status of the task.","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"zhenxuantan"},"content":"    protected void setDone(int index) {","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"zhenxuantan"},"content":"        Task task \u003d this.LIST.get(index);","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"zhenxuantan"},"content":"        task.setDone();","lastModifiedDate":"2021-08-16"},{"lineNumber":49,"author":{"gitId":"zhenxuantan"},"content":"        System.out.println(DONE + task);","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":53,"author":{"gitId":"zhenxuantan"},"content":"     * Delete the task at a specified index.","lastModifiedDate":"2021-08-16"},{"lineNumber":54,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":55,"author":{"gitId":"zhenxuantan"},"content":"    protected void delete(int index) {","lastModifiedDate":"2021-08-16"},{"lineNumber":56,"author":{"gitId":"zhenxuantan"},"content":"        Task task \u003d this.LIST.get(index);","lastModifiedDate":"2021-08-16"},{"lineNumber":57,"author":{"gitId":"zhenxuantan"},"content":"        this.LIST.remove(index);","lastModifiedDate":"2021-08-16"},{"lineNumber":58,"author":{"gitId":"zhenxuantan"},"content":"        System.out.println(DELETE + task);","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":61,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":62,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":63,"author":{"gitId":"zhenxuantan"},"content":"     * Prints the list.","lastModifiedDate":"2021-08-16"},{"lineNumber":64,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":65,"author":{"gitId":"zhenxuantan"},"content":"    protected void printList() {","lastModifiedDate":"2021-08-16"},{"lineNumber":66,"author":{"gitId":"zhenxuantan"},"content":"        System.out.println(LIST_INTRO);","lastModifiedDate":"2021-08-16"},{"lineNumber":67,"author":{"gitId":"zhenxuantan"},"content":"        if (this.LIST.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-16"},{"lineNumber":68,"author":{"gitId":"zhenxuantan"},"content":"            System.out.println(\"\\t List is empty\");","lastModifiedDate":"2021-08-16"},{"lineNumber":69,"author":{"gitId":"zhenxuantan"},"content":"        } else {","lastModifiedDate":"2021-08-16"},{"lineNumber":70,"author":{"gitId":"zhenxuantan"},"content":"            for (int i \u003d 0; i \u003c this.LIST.size(); i++) {","lastModifiedDate":"2021-08-16"},{"lineNumber":71,"author":{"gitId":"zhenxuantan"},"content":"                System.out.println(\"\\t \" + (i + 1) + \".\" + this.LIST.get(i));","lastModifiedDate":"2021-08-16"},{"lineNumber":72,"author":{"gitId":"zhenxuantan"},"content":"            }","lastModifiedDate":"2021-08-16"},{"lineNumber":73,"author":{"gitId":"zhenxuantan"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":74,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":75,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":76,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"zhenxuantan"},"content":"     * Prints Tasks on the specified date.","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"zhenxuantan"},"content":"    protected void printListDate(String date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"zhenxuantan"},"content":"        LocalDate localDate \u003d LocalDate.parse(date.replace(\" \", \"\"), DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"zhenxuantan"},"content":"        System.out.println(LIST_INTRO);","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"zhenxuantan"},"content":"        if (this.LIST.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"zhenxuantan"},"content":"            System.out.println(\"\\t List is empty.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"zhenxuantan"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"zhenxuantan"},"content":"            int count \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"zhenxuantan"},"content":"            for (int i \u003d 0; i \u003c this.LIST.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"zhenxuantan"},"content":"                Task t \u003d this.LIST.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"zhenxuantan"},"content":"                if (t.onDate(localDate)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"zhenxuantan"},"content":"                    System.out.println(\"\\t \" + (++count) + \".\" + t);","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"zhenxuantan"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"zhenxuantan"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"zhenxuantan"},"content":"            if (count \u003d\u003d 0) System.out.println(\"There are no tasks pertaining to the specified date.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"zhenxuantan"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":97,"author":{"gitId":"zhenxuantan"},"content":"     * Return the number of items in the TaskList.","lastModifiedDate":"2021-08-16"},{"lineNumber":98,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":99,"author":{"gitId":"zhenxuantan"},"content":"     * @return listCount","lastModifiedDate":"2021-08-16"},{"lineNumber":100,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":101,"author":{"gitId":"zhenxuantan"},"content":"    protected int count() {","lastModifiedDate":"2021-08-16"},{"lineNumber":102,"author":{"gitId":"zhenxuantan"},"content":"        return this.LIST.size();","lastModifiedDate":"2021-08-16"},{"lineNumber":103,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":104,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":105,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenxuantan":105}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":" * ToDo is a task that doesnt have any dates tied to it.","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group W12)","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-16"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-16"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-16"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"     * Constructor for ToDo task.","lastModifiedDate":"2021-08-16"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"     * @param description the description","lastModifiedDate":"2021-08-16"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"    public ToDo(boolean isDone, String description) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"     * Returns the string representation of the ToDo task.","lastModifiedDate":"2021-08-16"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"     * @return the string representation of the ToDO task","lastModifiedDate":"2021-08-16"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"    @Override","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-16"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-16"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"     * Returns if the task date is equal to the date provided.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"zhenxuantan"},"content":"     * @param date the date provided","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zhenxuantan"},"content":"     * @return true if they are both equal","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"zhenxuantan"},"content":"    @Override","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"zhenxuantan"},"content":"    protected boolean onDate(LocalDate date) {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"zhenxuantan"},"content":"        return false;","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenxuantan":41}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"package main.java;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":" * Ui deals with all the interactions with the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"zhenxuantan"},"content":" *","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"zhenxuantan"},"content":" * @author Zhen Xuan (Tutorial Group W12)","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"zhenxuantan"},"content":" * @version CS2103T AY21/22 S2","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"zhenxuantan"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"zhenxuantan"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"zhenxuantan"},"content":"    protected static final String LINE \u003d \"\\t____________________________________________________________\";","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"zhenxuantan"},"content":"    private static final String INTRO \u003d \"Hello! I\u0027m Duke\\n\\t What can I do for you?\";","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"zhenxuantan"},"content":"    private static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"    private final InputStreamReader inputStreamReader;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"zhenxuantan"},"content":"    private final BufferedReader bufferedReader;","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"zhenxuantan"},"content":"    Ui() {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"zhenxuantan"},"content":"        inputStreamReader \u003d new InputStreamReader(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"        bufferedReader \u003d new BufferedReader(inputStreamReader);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"zhenxuantan"},"content":"     * Provides horizontal lines with indentation.","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"zhenxuantan"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"zhenxuantan"},"content":"     * @param str the String to be formatted","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"zhenxuantan"},"content":"    protected static void reply(String str) {","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"zhenxuantan"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"zhenxuantan"},"content":"        System.out.println(\"\\t \" + str);","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"zhenxuantan"},"content":"        System.out.println(LINE + \"\\n\");","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"zhenxuantan"},"content":"     * Print welcome message.","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"zhenxuantan"},"content":"    protected void showWelcome() {","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"zhenxuantan"},"content":"        reply(INTRO);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"zhenxuantan"},"content":"     * Print bye message.","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"zhenxuantan"},"content":"    protected void showBye() {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"zhenxuantan"},"content":"        reply(BYE_MESSAGE);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"zhenxuantan"},"content":"     * Read the user input.","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"zhenxuantan"},"content":"    protected String readCommand() throws IOException {","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"zhenxuantan"},"content":"        return bufferedReader.readLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"zhenxuantan"},"content":"     * Closes the BufferedReader.","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"zhenxuantan"},"content":"    protected void close() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"zhenxuantan"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"zhenxuantan"},"content":"            inputStreamReader.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"zhenxuantan"},"content":"            bufferedReader.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"zhenxuantan"},"content":"            showBye();","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"zhenxuantan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"zhenxuantan"},"content":"            throw new DukeException(\"Unable to close the parser.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"zhenxuantan"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"zhenxuantan"},"content":"     * Show the divider line.","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"zhenxuantan"},"content":"    protected static void showLine() {","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"zhenxuantan"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"zhenxuantan"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"zhenxuantan"},"content":"     * Show error.","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"zhenxuantan"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"zhenxuantan"},"content":"    protected void showError(String message) {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"zhenxuantan"},"content":"        reply(message);","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"zhenxuantan"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"zhenxuantan"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"zhenxuantan"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"zhenxuantan":85}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhenxuantan"},"content":"done 1","lastModifiedDate":"2021-08-16"},{"lineNumber":2,"author":{"gitId":"zhenxuantan"},"content":"todo cry","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"zhenxuantan"},"content":"deadline die /by tdy","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"zhenxuantan"},"content":"event live /at tmr","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"zhenxuantan"},"content":"done 2","lastModifiedDate":"2021-08-16"},{"lineNumber":6,"author":{"gitId":"zhenxuantan"},"content":"list","lastModifiedDate":"2021-08-16"},{"lineNumber":7,"author":{"gitId":"zhenxuantan"},"content":"delete 1","lastModifiedDate":"2021-08-16"},{"lineNumber":8,"author":{"gitId":"zhenxuantan"},"content":"bye","lastModifiedDate":"2021-08-16"}],"authorContributionMap":{"zhenxuantan":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"zhenxuantan"},"content":"java -classpath ..\\bin main.main.java.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhenxuantan":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"zhenxuantan"},"content":"java -classpath ../bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"zhenxuantan"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"zhenxuantan":2,"-":32}}]
