[{"path":"data/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Lemonsr"},"content":"T;;1;;hw","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Lemonsr":1}},{"path":"src/main/java/Aisu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lemonsr"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Lemonsr"},"content":"import java.util.List;","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Lemonsr"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Lemonsr"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Lemonsr"},"content":" * This is chatbot (Aisu) class.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Lemonsr"},"content":" * You can:","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":" * 1) Type \"todo (task)\" - Add tasks without any date/time attached to it","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Lemonsr"},"content":" * 2) Type \"list\" - Show list","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Lemonsr"},"content":" * 3) Type \"done (taskNumber)\" - Mark task as done","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Lemonsr"},"content":" * 4) Type \"deadline (task) /by (date)\" - Add tasks that need to be done before a specific date/time","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Lemonsr"},"content":" * 5) Type \"event (task) /at (date)\" - Add tasks that start at a specific time and ends at a specific time","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Lemonsr"},"content":" * 6) Type \"bye\" - Exit program","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Lemonsr"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Lemonsr"},"content":"public class Aisu {","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Lemonsr"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"Lemonsr"},"content":"    private Tasklist tasklist;","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"Lemonsr"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"Lemonsr"},"content":"    public Aisu(String dirPath, String fileName) {","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"Lemonsr"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"Lemonsr"},"content":"        this.storage \u003d new Storage(dirPath, fileName);","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"Lemonsr"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"Lemonsr"},"content":"            List\u003cTask\u003e cachedData \u003d this.storage.load();","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"Lemonsr"},"content":"            this.tasklist \u003d new Tasklist(cachedData);","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"Lemonsr"},"content":"            ui.showToUser(\"Got cached list!\");","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"Lemonsr"},"content":"        } catch (FileNotFoundException | AisuException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"Lemonsr"},"content":"            this.tasklist \u003d new Tasklist();","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"Lemonsr"},"content":"    public void run() {","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"Lemonsr"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"Lemonsr"},"content":"        // let parser decide what to do, ui does the talking for repeated texts/general errors?","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"Lemonsr"},"content":"        Parser.parse(input);","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"Lemonsr"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"Lemonsr"},"content":"            ui.showDivider();","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"Lemonsr"},"content":"            try {","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"Lemonsr"},"content":"                if (input.equals(\"list\")) { // show list","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"Lemonsr"},"content":"                    System.out.println(tasklist);","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"Lemonsr"},"content":"                } else {","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"Lemonsr"},"content":"                    if (input.startsWith(\"done \")) { // mark task as completed","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"Lemonsr"},"content":"                        int n \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"Lemonsr"},"content":"                        tasklist.markDone(n);","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"Lemonsr"},"content":"                    } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"Lemonsr"},"content":"                        tasklist.addTask(input.substring(5), Tasklist.TaskTypes.T);","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"Lemonsr"},"content":"                    } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"Lemonsr"},"content":"                        tasklist.addTask(input.substring(9), Tasklist.TaskTypes.D);","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"Lemonsr"},"content":"                    } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"Lemonsr"},"content":"                        tasklist.addTask(input.substring(6), Tasklist.TaskTypes.E);","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"Lemonsr"},"content":"                    } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"Lemonsr"},"content":"                        int n \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"Lemonsr"},"content":"                        tasklist.deleteTask(n);","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"Lemonsr"},"content":"                    } else {","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"Lemonsr"},"content":"                        throw new AisuException(\"That\u0027s an invalid task format...\");","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"Lemonsr"},"content":"                    }","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"Lemonsr"},"content":"                }","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"Lemonsr"},"content":"                storage.save(tasklist);","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"Lemonsr"},"content":"            } catch (AisuException | ArrayIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"Lemonsr"},"content":"                System.out.println(e);","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"Lemonsr"},"content":"            } finally {","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"Lemonsr"},"content":"                ui.showDivider();","lastModifiedDate":"2021-08-20"},{"lineNumber":65,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"Lemonsr"},"content":"                input \u003d sc.nextLine(); // get next input","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"Lemonsr"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"Lemonsr"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":71,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":72,"author":{"gitId":"Lemonsr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-20"},{"lineNumber":73,"author":{"gitId":"Lemonsr"},"content":"        new Aisu(\"data\", \"test1.txt\");","lastModifiedDate":"2021-08-20"},{"lineNumber":74,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"Lemonsr"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Lemonsr":75}},{"path":"src/main/java/AisuException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lemonsr"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Lemonsr"},"content":" * Exceptions class for Aisu.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Lemonsr"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Lemonsr"},"content":"public class AisuException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Lemonsr"},"content":"    public AisuException(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Lemonsr"},"content":"        super(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Lemonsr"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Lemonsr"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Lemonsr"},"content":"        return \"Oh no... \" + this.getMessage();","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Lemonsr"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Lemonsr":14}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lemonsr"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Lemonsr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"Lemonsr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Lemonsr"},"content":"    private final LocalDate deadline;","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Lemonsr"},"content":"    public Deadline(String description, String deadline) throws AisuException {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Lemonsr"},"content":"        try {","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"Lemonsr"},"content":"            this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"Lemonsr"},"content":"        } catch (java.time.format.DateTimeParseException e) {","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"Lemonsr"},"content":"            // invalid format, throw back to Aisu.","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"Lemonsr"},"content":"            throw new AisuException(\"Invalid date/date format! Please check again\");","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Lemonsr"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Lemonsr"},"content":"    public String ParseData() {","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Lemonsr"},"content":"        return \"D;;\" + (this.isDone ? \"1\" : \"0\") + \";;\" + this.description + \";;\" + this.deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Lemonsr"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"Lemonsr"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"Lemonsr"},"content":"        return String.format(\"[DeadL] %s %s (by: %s)\",","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"Lemonsr"},"content":"                this.getStatusIcon(),","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"Lemonsr"},"content":"                this.description,","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"Lemonsr"},"content":"                this.deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"Lemonsr"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Lemonsr":29}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lemonsr"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Lemonsr"},"content":"    private final String eventPeriod;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Lemonsr"},"content":"    public Event(String description, String eventPeriod) throws AisuException {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Lemonsr"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Lemonsr"},"content":"        this.eventPeriod \u003d eventPeriod;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Lemonsr"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Lemonsr"},"content":"    public String ParseData() {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Lemonsr"},"content":"        return \"E;;\" + (this.isDone ? \"1\" : \"0\") + \";;\" + this.description + \";;\" + this.eventPeriod;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Lemonsr"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Lemonsr"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Lemonsr"},"content":"        return String.format(\"[Event] %s %s (at: %s)\", this.getStatusIcon(), this.description, this.eventPeriod);","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"Lemonsr"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Lemonsr":18}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lemonsr"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Lemonsr"},"content":" * The Parser class deals with making sense of the user command.","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Lemonsr"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"Lemonsr"},"content":"public class Parser {","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"Lemonsr"},"content":"    public static void parse(String input) {","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Lemonsr":8}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lemonsr"},"content":"import java.io.File;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"Lemonsr"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Lemonsr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"Lemonsr"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"Lemonsr"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"Lemonsr"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Lemonsr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":"import java.util.List;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Lemonsr"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Lemonsr"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Lemonsr"},"content":" * The Storage class deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Lemonsr"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"Lemonsr"},"content":"public class Storage {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"Lemonsr"},"content":"    private String dirPath;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"Lemonsr"},"content":"    private String fileName;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"Lemonsr"},"content":"    private File file;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"Lemonsr"},"content":"    // tasklist addtask/deletetask/markdone -\u003e make changes to storage","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"Lemonsr"},"content":"    public Storage(String dirPath, String fileName) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"Lemonsr"},"content":"        // suppose we init Storage on first setup of Aisu and ask for the filepath to save the list in. and ask for the filename to save it as.","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"Lemonsr"},"content":"        // but we will hardcode the file name and location first. eg. \"data/tasklist.txt\"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"Lemonsr"},"content":"        this.dirPath \u003d dirPath;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"Lemonsr"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Lemonsr"},"content":"        this.createFile();","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"Lemonsr"},"content":"    private boolean createFile() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"Lemonsr"},"content":"        System.out.println(\"Checking for old directories...\");","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"Lemonsr"},"content":"        System.out.println(new File(this.dirPath).mkdirs() ? \"New directory created.\" : \"Directory already exists.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"Lemonsr"},"content":"        // if directory does not exist, create it.","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"Lemonsr"},"content":"        // using .exists() to check is not a good solution! just use .mkdirs() directly,","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"Lemonsr"},"content":"        // it will not throw an error if it does exist and will not overwrite an existing directory.","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"Lemonsr"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"Lemonsr"},"content":"            this.file \u003d new File(this.dirPath + \"/\" + this.fileName);","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"Lemonsr"},"content":"            System.out.println(\"Checking for existing file: \" + this.fileName + \"...\");","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"Lemonsr"},"content":"            System.out.println(this.file.createNewFile() ? \"New \" + this.fileName + \" created.\" : this.fileName + \" already exists.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"Lemonsr"},"content":"            return true;","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"Lemonsr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"Lemonsr"},"content":"            System.out.println(\"Error: File cannot be created.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"Lemonsr"},"content":"            return false;","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"Lemonsr"},"content":"    public List\u003cTask\u003e load() throws FileNotFoundException, AisuException { // need to fix exceptions later","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"Lemonsr"},"content":"        // loads list from file in format","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"Lemonsr"},"content":"        List\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"Lemonsr"},"content":"        Scanner s \u003d new Scanner(this.file);","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"Lemonsr"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"Lemonsr"},"content":"            String[] temp \u003d s.nextLine().split(\";;\");","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"Lemonsr"},"content":"            //depending on T D or E, create a task and add to the list.","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"Lemonsr"},"content":"            Task tempTask;","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"Lemonsr"},"content":"            switch(temp[0]) {","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"Lemonsr"},"content":"            case \"T\":","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"Lemonsr"},"content":"                tempTask \u003d new Todo(temp[2]);","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"Lemonsr"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"Lemonsr"},"content":"            case \"D\":","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"Lemonsr"},"content":"                tempTask \u003d new Deadline(temp[2], temp[3]);","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"Lemonsr"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"Lemonsr"},"content":"            case \"E\":","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"Lemonsr"},"content":"                tempTask \u003d new Event(temp[2], temp[3]);","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"Lemonsr"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"Lemonsr"},"content":"            default:","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"Lemonsr"},"content":"                throw new AisuException(\"No such type of task! \u003e:( unchecked exception error!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"Lemonsr"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"Lemonsr"},"content":"            if (temp[1].equals(\"1\")) {","lastModifiedDate":"2021-08-20"},{"lineNumber":69,"author":{"gitId":"Lemonsr"},"content":"                tempTask.markAsDone();","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"Lemonsr"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":71,"author":{"gitId":"Lemonsr"},"content":"            result.add(tempTask);","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"Lemonsr"},"content":"        return result;","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"Lemonsr"},"content":"    public void save(Tasklist currList) {","lastModifiedDate":"2021-08-20"},{"lineNumber":77,"author":{"gitId":"Lemonsr"},"content":"        // save list to file in format with \u0027;;\u0027 as dividers and on a new line for each entry. Rewrites the entire file.","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"Lemonsr"},"content":"        List\u003cTask\u003e list \u003d currList.getListData();","lastModifiedDate":"2021-08-20"},{"lineNumber":79,"author":{"gitId":"Lemonsr"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"Lemonsr"},"content":"            FileWriter fw \u003d new FileWriter(this.dirPath + \"/\" + this.fileName);","lastModifiedDate":"2021-08-20"},{"lineNumber":81,"author":{"gitId":"Lemonsr"},"content":"            for (Task t : list) {","lastModifiedDate":"2021-08-20"},{"lineNumber":82,"author":{"gitId":"Lemonsr"},"content":"                fw.write(t.ParseData() + System.lineSeparator());","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"Lemonsr"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"Lemonsr"},"content":"            fw.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"Lemonsr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"Lemonsr"},"content":"            System.out.println(\"Error saving file. Attempting to create the file...\");","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"Lemonsr"},"content":"            // if file/folder doesn\u0027t exist, create a new one and call save again.","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"Lemonsr"},"content":"            if (this.createFile()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"Lemonsr"},"content":"                this.save(currList);","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"Lemonsr"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"Lemonsr"},"content":"                System.out.println(\"There is something wrong with the system.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"Lemonsr"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"Lemonsr"},"content":"    public void changeFilePath(String newDirPath, String newFileName) throws IOException { // have the Ui handle this","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"Lemonsr"},"content":"        // allow users to change where they want to store the list.","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"Lemonsr"},"content":"        Files.copy(Paths.get(this.dirPath + \"/\" + this.fileName), Paths.get(newDirPath + \"/\" + newFileName));","lastModifiedDate":"2021-08-20"},{"lineNumber":99,"author":{"gitId":"Lemonsr"},"content":"        Files.delete(Paths.get(this.dirPath + \"/\" + this.fileName));","lastModifiedDate":"2021-08-20"},{"lineNumber":100,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":101,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":102,"author":{"gitId":"Lemonsr"},"content":"/*","lastModifiedDate":"2021-08-20"},{"lineNumber":103,"author":{"gitId":"Lemonsr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-20"},{"lineNumber":104,"author":{"gitId":"Lemonsr"},"content":"        new Storage(\"data\", \"tasklist.txt\");","lastModifiedDate":"2021-08-20"},{"lineNumber":105,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"Lemonsr"},"content":"*/","lastModifiedDate":"2021-08-20"},{"lineNumber":107,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"Lemonsr"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"Lemonsr":108}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lemonsr"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Lemonsr"},"content":" * This is the Task class.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Lemonsr"},"content":" * A Task contains a description and a status of being done or not.","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Lemonsr"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Lemonsr"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Lemonsr"},"content":"    protected String description;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Lemonsr"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Lemonsr"},"content":"    public Task(String description) throws AisuException {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Lemonsr"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Lemonsr"},"content":"            throw new AisuException(\"The description cannot be empty!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Lemonsr"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Lemonsr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Lemonsr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"Lemonsr"},"content":"        return (isDone ? \"[x]\" : \"[ ]\");","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"Lemonsr"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"Lemonsr"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"Lemonsr"},"content":"    public abstract String ParseData(); // Parse data in readable format to be stored in storage.","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"Lemonsr"},"content":"    public abstract String toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"Lemonsr"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Lemonsr":28}},{"path":"src/main/java/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lemonsr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Lemonsr"},"content":"import java.util.List;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Lemonsr"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Lemonsr"},"content":" * This is the Tasklist class.","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Lemonsr"},"content":" * It stores Tasks as a list.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Lemonsr"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":"public class Tasklist {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Lemonsr"},"content":"    private final List\u003cTask\u003e list;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Lemonsr"},"content":"    public enum TaskTypes {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Lemonsr"},"content":"        T, D, E","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Lemonsr"},"content":"    public Tasklist() {","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Lemonsr"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"Lemonsr"},"content":"    public Tasklist(List\u003cTask\u003e currList) {","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"Lemonsr"},"content":"        this.list \u003d currList;","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"Lemonsr"},"content":"    public List\u003cTask\u003e getListData() {","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"Lemonsr"},"content":"        // May not be good OOP practice.","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"Lemonsr"},"content":"        return this.list;","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"Lemonsr"},"content":"    private Task getTaskAt(int n) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"Lemonsr"},"content":"        if (n \u003c\u003d 0 || n \u003e this.list.size()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"Lemonsr"},"content":"            throw new ArrayIndexOutOfBoundsException(\"That is an invalid task number!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"Lemonsr"},"content":"        return this.list.get(n-1);","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"Lemonsr"},"content":"    public void addTask(String line, TaskTypes type) throws AisuException { // adds new task to taskList","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"Lemonsr"},"content":"        Task newTask;","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"Lemonsr"},"content":"        switch(type) {","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"Lemonsr"},"content":"        case T:","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"Lemonsr"},"content":"            newTask \u003d new Todo(line);","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"Lemonsr"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"Lemonsr"},"content":"        case D:","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"Lemonsr"},"content":"            try {","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"Lemonsr"},"content":"                String[] temp \u003d line.split(\" /by \");","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"Lemonsr"},"content":"                newTask \u003d new Deadline(temp[0], temp[1]);","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"Lemonsr"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"Lemonsr"},"content":"                throw new AisuException(\"Your formatting is wrong! Write as: deadline (task) /by (yyyy-mm-dd)\");","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"Lemonsr"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"Lemonsr"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"Lemonsr"},"content":"        case E:","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"Lemonsr"},"content":"            try {","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"Lemonsr"},"content":"                String[] temp \u003d line.split(\" /at \");","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"Lemonsr"},"content":"                newTask \u003d new Event(temp[0], temp[1]);","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"Lemonsr"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"Lemonsr"},"content":"                throw new AisuException(\"Your formatting is wrong! Write as: event (task) /at (date range)\");","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"Lemonsr"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"Lemonsr"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"Lemonsr"},"content":"        default:","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"Lemonsr"},"content":"            throw new AisuException(\"That\u0027s an invalid task format...\"); // repeated code w/ Aisu.java. should find a way to remove ltr","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"Lemonsr"},"content":"        this.list.add(newTask);","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"Lemonsr"},"content":"        System.out.println(\" Got it! I\u0027ve added this task:\");","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"Lemonsr"},"content":"        System.out.println(\"   \" + newTask);","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"Lemonsr"},"content":"        System.out.println(\" Now you have \" + this.list.size() + \" task(s) in the list.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"Lemonsr"},"content":"    public void deleteTask(int n) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"Lemonsr"},"content":"        if (n \u003c\u003d 0 || n \u003e this.list.size()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"Lemonsr"},"content":"            throw new ArrayIndexOutOfBoundsException(\"That is an invalid task number!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"Lemonsr"},"content":"        Task deletedTask \u003d this.list.get(n - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"Lemonsr"},"content":"        this.list.remove(n - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"Lemonsr"},"content":"        System.out.println(\" Noted~ I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"Lemonsr"},"content":"        System.out.println(\"   \" + deletedTask);","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"Lemonsr"},"content":"        System.out.println(\" Now you have \" + this.list.size() + \" task(s) in the list.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":77,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"Lemonsr"},"content":"    public void markDone(int n) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"Lemonsr"},"content":"        if (n \u003c\u003d 0 || n \u003e this.list.size()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"Lemonsr"},"content":"            throw new ArrayIndexOutOfBoundsException(\"That is an invalid task number!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"Lemonsr"},"content":"        this.list.get(n - 1).markAsDone();","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"Lemonsr"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as completed:\");","lastModifiedDate":"2021-08-15"},{"lineNumber":85,"author":{"gitId":"Lemonsr"},"content":"        System.out.println(this.getTaskAt(n));","lastModifiedDate":"2021-08-20"},{"lineNumber":86,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":87,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":88,"author":{"gitId":"Lemonsr"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":89,"author":{"gitId":"Lemonsr"},"content":"    public String toString() { // displays the list","lastModifiedDate":"2021-08-15"},{"lineNumber":90,"author":{"gitId":"Lemonsr"},"content":"        if (this.list.isEmpty()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":91,"author":{"gitId":"Lemonsr"},"content":"            return \"Oops, the list is empty! :O\";","lastModifiedDate":"2021-08-15"},{"lineNumber":92,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":93,"author":{"gitId":"Lemonsr"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-15"},{"lineNumber":94,"author":{"gitId":"Lemonsr"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":95,"author":{"gitId":"Lemonsr"},"content":"            result.append(i + 1).append(\". \").append(list.get(i)).append(\"\\n\");","lastModifiedDate":"2021-08-15"},{"lineNumber":96,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":97,"author":{"gitId":"Lemonsr"},"content":"        return result.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":98,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":99,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":100,"author":{"gitId":"Lemonsr"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Lemonsr":100}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lemonsr"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Lemonsr"},"content":"    public Todo(String description) throws AisuException {","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Lemonsr"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Lemonsr"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"Lemonsr"},"content":"    public String ParseData() {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":"        return \"T;;\" + (this.isDone ? \"1\" : \"0\") + \";;\" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"Lemonsr"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Lemonsr"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Lemonsr"},"content":"        return String.format(\"[To-do] %s %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Lemonsr"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Lemonsr":16}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lemonsr"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-08-20"},{"lineNumber":2,"author":{"gitId":"Lemonsr"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"Lemonsr"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"Lemonsr"},"content":"/**","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"Lemonsr"},"content":" * The Ui class deals with interactions with the user.","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"Lemonsr"},"content":" * It deals with error messages and printing texts.","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":" */","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"Lemonsr"},"content":"public class Ui {","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"Lemonsr"},"content":"    // constants declaration","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"Lemonsr"},"content":"    private static final String DIVIDER \u003d \"\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d\\n\";","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"Lemonsr"},"content":"    private static final String LOGO \u003d \" (`-\u0027)  _   _               (`-\u0027).-\u003e           \\n\" +","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"Lemonsr"},"content":"            \"(OO ).-/  (_)              ( OO)_       .-\u003e\\n\" +","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"Lemonsr"},"content":"            \"/ ,---.   ,-(`-\u0027) (`-\u0027)   (_)--\\\\_) ,--.(,--.\\n\" +","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"Lemonsr"},"content":"            \"| \\\\ /`.\\\\  | ( OO) ( OO).-\u003e/    _ / |  | |(`-\u0027)\\n\" +","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"Lemonsr"},"content":"            \"\u0027-\u0027|_.\u0027 | |  |  )(,------.\\\\_..`--. |  | |(OO )\\n\" +","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"Lemonsr"},"content":"            \"(|  .-. |(|  |_/  `------\u0027.-._)   \\\\|  | | |  \\\\ \\n\" +","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"Lemonsr"},"content":"            \"|  | |  | |  |\u0027-\u003e         \\\\      / \\\\  \u0027-\u0027(_ .\u0027\\n\" +","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"Lemonsr"},"content":"            \"`--\u0027 `--\u0027 `--\u0027             `-----\u0027  `-----\u0027   \\n\";","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"Lemonsr"},"content":"    private final Scanner in;","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"Lemonsr"},"content":"    private final PrintStream out;","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"Lemonsr"},"content":"    public Ui() {","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"Lemonsr"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"Lemonsr"},"content":"        this.out \u003d System.out;","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"Lemonsr"},"content":"    public void getInput() {","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"Lemonsr"},"content":"        String input \u003d this.in.nextLine();","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"Lemonsr"},"content":"    public void showDivider() {","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"Lemonsr"},"content":"        this.out.println(DIVIDER);","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"Lemonsr"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"Lemonsr"},"content":"        this.out.println(LOGO + DIVIDER + \" Hello, I\u0027m Ai-su! How may I help you today?\\n\" + DIVIDER);","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":40,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":41,"author":{"gitId":"Lemonsr"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"Lemonsr"},"content":"        this.out.println(LOGO + DIVIDER + \" See you next time! :D\\n\" + DIVIDER);","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":45,"author":{"gitId":"Lemonsr"},"content":"    public void showWrongFormatError(String type) {","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"Lemonsr"},"content":"    public void showOutOfBoundsError() {","lastModifiedDate":"2021-08-20"},{"lineNumber":50,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":51,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":53,"author":{"gitId":"Lemonsr"},"content":"    /** Shows message(s) to the user, called depending on context */","lastModifiedDate":"2021-08-20"},{"lineNumber":54,"author":{"gitId":"Lemonsr"},"content":"    public void showToUser(String... message) {","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"Lemonsr"},"content":"        for (String m : message) {","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"Lemonsr"},"content":"            this.out.println(m);","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"Lemonsr"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Lemonsr":61}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Lemonsr"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Lemonsr":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Lemonsr"},"content":"java -classpath ..\\bin Aisu \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Lemonsr":1,"-":20}}]
