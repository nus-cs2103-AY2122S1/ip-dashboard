[{"path":"src/main/java/Aisu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lemonsr"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Lemonsr"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Lemonsr"},"content":" * This is chatbot (Aisu) class.","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Lemonsr"},"content":" * You can:","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Lemonsr"},"content":" * 1) Type \"todo (task)\" - Add tasks without any date/time attached to it","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Lemonsr"},"content":" * 2) Type \"list\" - Show list","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":" * 3) Type \"done (taskNumber)\" - Mark task as done","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Lemonsr"},"content":" * 4) Type \"deadline (task) /by (date)\" - Add tasks that need to be done before a specific date/time","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Lemonsr"},"content":" * 5) Type \"event (task) /at (date)\" - Add tasks that start at a specific time and ends at a specific time","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Lemonsr"},"content":" * 6) Type \"bye\" - Exit program","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Lemonsr"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Lemonsr"},"content":"public class Aisu {","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Lemonsr"},"content":"    // constants declaration","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Lemonsr"},"content":"    private static final String DIV_HEAD \u003d \"\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d\\n\";","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Lemonsr"},"content":"    private static final String DIV_TAIL \u003d \"\\n\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d\\n\";","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Lemonsr"},"content":"    private static final String LOGO \u003d \" (`-\u0027)  _   _               (`-\u0027).-\u003e           \\n\" +","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"Lemonsr"},"content":"                                        \"(OO ).-/  (_)              ( OO)_       .-\u003e\\n\" +","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"Lemonsr"},"content":"                                        \"/ ,---.   ,-(`-\u0027) (`-\u0027)   (_)--\\\\_) ,--.(,--.\\n\" +","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"Lemonsr"},"content":"                                        \"| \\\\ /`.\\\\  | ( OO) ( OO).-\u003e/    _ / |  | |(`-\u0027)\\n\" +","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"Lemonsr"},"content":"                                        \"\u0027-\u0027|_.\u0027 | |  |  )(,------.\\\\_..`--. |  | |(OO )\\n\" +","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"Lemonsr"},"content":"                                        \"(|  .-. |(|  |_/  `------\u0027.-._)   \\\\|  | | |  \\\\ \\n\" +","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"Lemonsr"},"content":"                                        \"|  | |  | |  |\u0027-\u003e         \\\\      / \\\\  \u0027-\u0027(_ .\u0027\\n\" +","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"Lemonsr"},"content":"                                        \"`--\u0027 `--\u0027 `--\u0027             `-----\u0027  `-----\u0027   \\n\";","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"Lemonsr"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"Lemonsr"},"content":"        Tasklist tasklist \u003d new Tasklist();","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"Lemonsr"},"content":"        System.out.println(Aisu.LOGO + Aisu.DIV_HEAD + \" Hello, I\u0027m Ai-su! How may I help you today?\" + Aisu.DIV_TAIL);","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"Lemonsr"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"Lemonsr"},"content":"        String input \u003d sc.nextLine(); // get input","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"Lemonsr"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"Lemonsr"},"content":"            System.out.println(Aisu.DIV_HEAD);","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"Lemonsr"},"content":"            try {","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"Lemonsr"},"content":"                if (input.equals(\"list\")) { // show list","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"Lemonsr"},"content":"                    System.out.println(tasklist);","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"Lemonsr"},"content":"                } else if (input.startsWith(\"done \")) { // mark task as completed","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"Lemonsr"},"content":"                    int n \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"Lemonsr"},"content":"                    tasklist.markDone(n);","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"Lemonsr"},"content":"                } else if (input.startsWith(\"todo \")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"Lemonsr"},"content":"                    tasklist.addTask(input.substring(5), \"T\");","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"Lemonsr"},"content":"                } else if (input.startsWith(\"deadline \")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"Lemonsr"},"content":"                    tasklist.addTask(input.substring(9), \"D\");","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"Lemonsr"},"content":"                } else if (input.startsWith(\"event \")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"Lemonsr"},"content":"                    tasklist.addTask(input.substring(6), \"E\");","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"Lemonsr"},"content":"                } else if (input.startsWith(\"delete \")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"Lemonsr"},"content":"                    int n \u003d Integer.parseInt(input.substring(7));","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"Lemonsr"},"content":"                    tasklist.deleteTask(n);","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"Lemonsr"},"content":"                } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"Lemonsr"},"content":"                    tasklist.addTask(input, \"Error\");","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"Lemonsr"},"content":"                }","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"Lemonsr"},"content":"            } catch (AisuException | ArrayIndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"Lemonsr"},"content":"                System.out.println(e);","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"Lemonsr"},"content":"            } finally {","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"Lemonsr"},"content":"                System.out.println(Aisu.DIV_TAIL);","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"Lemonsr"},"content":"                input \u003d sc.nextLine(); // get next input","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"Lemonsr"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"Lemonsr"},"content":"        System.out.println(Aisu.DIV_HEAD + \" See you next time! :D\" + Aisu.DIV_TAIL); // end program when user types bye","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"Lemonsr"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Lemonsr":63}},{"path":"src/main/java/AisuException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lemonsr"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Lemonsr"},"content":" * Exceptions class for Aisu.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Lemonsr"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Lemonsr"},"content":"public class AisuException extends Exception {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Lemonsr"},"content":"    public AisuException(String message) {","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Lemonsr"},"content":"        super(message);","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Lemonsr"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Lemonsr"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Lemonsr"},"content":"        return \"Oh no... \" + this.getMessage();","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Lemonsr"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Lemonsr":14}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lemonsr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Lemonsr"},"content":"    private String deadline;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Lemonsr"},"content":"    public Deadline(String description, String deadline) throws AisuException {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Lemonsr"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Lemonsr"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Lemonsr"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Lemonsr"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Lemonsr"},"content":"        return String.format(\"[DeadL] %s %s (by: %s)\", this.getStatusIcon(), this.description, this.deadline);","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Lemonsr"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Lemonsr":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lemonsr"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Lemonsr"},"content":"    private String eventPeriod;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Lemonsr"},"content":"    public Event(String description, String eventPeriod) throws AisuException {","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Lemonsr"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Lemonsr"},"content":"        this.eventPeriod \u003d eventPeriod;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Lemonsr"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Lemonsr"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Lemonsr"},"content":"        return String.format(\"[Event] %s %s (at: %s)\", this.getStatusIcon(), this.description, this.eventPeriod);","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Lemonsr"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Lemonsr":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lemonsr"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Lemonsr"},"content":" * This is the Task class.","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Lemonsr"},"content":" * A Task contains a description and a status of being done or not.","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Lemonsr"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Lemonsr"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Lemonsr"},"content":"    protected String description;","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Lemonsr"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Lemonsr"},"content":"    public Task(String description) throws AisuException {","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Lemonsr"},"content":"        if (description.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Lemonsr"},"content":"            throw new AisuException(\"The description cannot be empty!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Lemonsr"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Lemonsr"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Lemonsr"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"Lemonsr"},"content":"        return (isDone ? \"[x]\" : \"[ ]\");","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"Lemonsr"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"Lemonsr"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"Lemonsr"},"content":"    public abstract String toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"Lemonsr"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Lemonsr":26}},{"path":"src/main/java/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lemonsr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Lemonsr"},"content":"import java.util.List;","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Lemonsr"},"content":"/**","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Lemonsr"},"content":" * This is the Tasklist class.","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Lemonsr"},"content":" * It stores Tasks as a list.","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Lemonsr"},"content":" */","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":"public class Tasklist {","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Lemonsr"},"content":"    private final List\u003cTask\u003e list;","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Lemonsr"},"content":"    public Tasklist() {","lastModifiedDate":"2021-08-15"},{"lineNumber":12,"author":{"gitId":"Lemonsr"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-15"},{"lineNumber":13,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":15,"author":{"gitId":"Lemonsr"},"content":"    private Task GetTaskAt(int n) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2021-08-15"},{"lineNumber":16,"author":{"gitId":"Lemonsr"},"content":"        if (n \u003c\u003d 0 || n \u003e this.list.size()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":17,"author":{"gitId":"Lemonsr"},"content":"            throw new ArrayIndexOutOfBoundsException(\"That is an invalid task number!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":18,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"Lemonsr"},"content":"        return this.list.get(n-1);","lastModifiedDate":"2021-08-15"},{"lineNumber":20,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":21,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":22,"author":{"gitId":"Lemonsr"},"content":"    public void addTask(String line, String type) throws AisuException { // adds new task to taskList","lastModifiedDate":"2021-08-15"},{"lineNumber":23,"author":{"gitId":"Lemonsr"},"content":"        Task newTask;","lastModifiedDate":"2021-08-15"},{"lineNumber":24,"author":{"gitId":"Lemonsr"},"content":"        if (type.equals(\"T\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":25,"author":{"gitId":"Lemonsr"},"content":"            newTask \u003d new Todo(line);","lastModifiedDate":"2021-08-15"},{"lineNumber":26,"author":{"gitId":"Lemonsr"},"content":"        } else if (type.equals(\"D\")) {","lastModifiedDate":"2021-08-15"},{"lineNumber":27,"author":{"gitId":"Lemonsr"},"content":"            try {","lastModifiedDate":"2021-08-15"},{"lineNumber":28,"author":{"gitId":"Lemonsr"},"content":"                String[] temp \u003d line.split(\" /by \");","lastModifiedDate":"2021-08-15"},{"lineNumber":29,"author":{"gitId":"Lemonsr"},"content":"                newTask \u003d new Deadline(temp[0], temp[1]);","lastModifiedDate":"2021-08-15"},{"lineNumber":30,"author":{"gitId":"Lemonsr"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":31,"author":{"gitId":"Lemonsr"},"content":"                throw new AisuException(\"Your formatting is wrong! Write as: deadline (task) /by (date)\");","lastModifiedDate":"2021-08-15"},{"lineNumber":32,"author":{"gitId":"Lemonsr"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":33,"author":{"gitId":"Lemonsr"},"content":"        } else if (type \u003d\u003d \"E\") { // later on need to add else if (type \u003d\u003d \"E\"), else portion for validation","lastModifiedDate":"2021-08-15"},{"lineNumber":34,"author":{"gitId":"Lemonsr"},"content":"            try {","lastModifiedDate":"2021-08-15"},{"lineNumber":35,"author":{"gitId":"Lemonsr"},"content":"                String[] temp \u003d line.split(\" /at \");","lastModifiedDate":"2021-08-15"},{"lineNumber":36,"author":{"gitId":"Lemonsr"},"content":"                newTask \u003d new Event(temp[0], temp[1]);","lastModifiedDate":"2021-08-15"},{"lineNumber":37,"author":{"gitId":"Lemonsr"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-15"},{"lineNumber":38,"author":{"gitId":"Lemonsr"},"content":"                throw new AisuException(\"Your formatting is wrong! Write as: event (task) /at (date range)\");","lastModifiedDate":"2021-08-15"},{"lineNumber":39,"author":{"gitId":"Lemonsr"},"content":"            }","lastModifiedDate":"2021-08-15"},{"lineNumber":40,"author":{"gitId":"Lemonsr"},"content":"        } else {","lastModifiedDate":"2021-08-15"},{"lineNumber":41,"author":{"gitId":"Lemonsr"},"content":"            throw new AisuException(\"That\u0027s an invalid task format...\");","lastModifiedDate":"2021-08-15"},{"lineNumber":42,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":43,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":44,"author":{"gitId":"Lemonsr"},"content":"        this.list.add(newTask);","lastModifiedDate":"2021-08-15"},{"lineNumber":45,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":46,"author":{"gitId":"Lemonsr"},"content":"        System.out.println(\" Got it! I\u0027ve added this task:\");","lastModifiedDate":"2021-08-15"},{"lineNumber":47,"author":{"gitId":"Lemonsr"},"content":"        System.out.println(\"   \" + newTask);","lastModifiedDate":"2021-08-15"},{"lineNumber":48,"author":{"gitId":"Lemonsr"},"content":"        System.out.println(\" Now you have \" + this.list.size() + \" task(s) in the list.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":49,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":50,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":51,"author":{"gitId":"Lemonsr"},"content":"    public void deleteTask(int n) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2021-08-15"},{"lineNumber":52,"author":{"gitId":"Lemonsr"},"content":"        if (n \u003c\u003d 0 || n \u003e this.list.size()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":53,"author":{"gitId":"Lemonsr"},"content":"            throw new ArrayIndexOutOfBoundsException(\"That is an invalid task number!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":54,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":55,"author":{"gitId":"Lemonsr"},"content":"        Task deletedTask \u003d this.list.get(n - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":56,"author":{"gitId":"Lemonsr"},"content":"        this.list.remove(n - 1);","lastModifiedDate":"2021-08-15"},{"lineNumber":57,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":58,"author":{"gitId":"Lemonsr"},"content":"        System.out.println(\" Noted~ I\u0027ve removed this task:\");","lastModifiedDate":"2021-08-15"},{"lineNumber":59,"author":{"gitId":"Lemonsr"},"content":"        System.out.println(\"   \" + deletedTask);","lastModifiedDate":"2021-08-15"},{"lineNumber":60,"author":{"gitId":"Lemonsr"},"content":"        System.out.println(\" Now you have \" + this.list.size() + \" task(s) in the list.\");","lastModifiedDate":"2021-08-15"},{"lineNumber":61,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":62,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":63,"author":{"gitId":"Lemonsr"},"content":"    public void markDone(int n) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2021-08-15"},{"lineNumber":64,"author":{"gitId":"Lemonsr"},"content":"        if (n \u003c\u003d 0 || n \u003e this.list.size()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":65,"author":{"gitId":"Lemonsr"},"content":"            throw new ArrayIndexOutOfBoundsException(\"That is an invalid task number!\");","lastModifiedDate":"2021-08-15"},{"lineNumber":66,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":67,"author":{"gitId":"Lemonsr"},"content":"        this.list.get(n - 1).markAsDone();","lastModifiedDate":"2021-08-15"},{"lineNumber":68,"author":{"gitId":"Lemonsr"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as completed:\");","lastModifiedDate":"2021-08-15"},{"lineNumber":69,"author":{"gitId":"Lemonsr"},"content":"        System.out.println(this.GetTaskAt(n));","lastModifiedDate":"2021-08-15"},{"lineNumber":70,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":71,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":72,"author":{"gitId":"Lemonsr"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":73,"author":{"gitId":"Lemonsr"},"content":"    public String toString() { // displays the list","lastModifiedDate":"2021-08-15"},{"lineNumber":74,"author":{"gitId":"Lemonsr"},"content":"        if (this.list.isEmpty()) {","lastModifiedDate":"2021-08-15"},{"lineNumber":75,"author":{"gitId":"Lemonsr"},"content":"            return \"Oops, the list is empty! :O\";","lastModifiedDate":"2021-08-15"},{"lineNumber":76,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":77,"author":{"gitId":"Lemonsr"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-08-15"},{"lineNumber":78,"author":{"gitId":"Lemonsr"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2021-08-15"},{"lineNumber":79,"author":{"gitId":"Lemonsr"},"content":"            result.append(i + 1).append(\". \").append(list.get(i)).append(\"\\n\");","lastModifiedDate":"2021-08-15"},{"lineNumber":80,"author":{"gitId":"Lemonsr"},"content":"        }","lastModifiedDate":"2021-08-15"},{"lineNumber":81,"author":{"gitId":"Lemonsr"},"content":"        return result.toString();","lastModifiedDate":"2021-08-15"},{"lineNumber":82,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":83,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":84,"author":{"gitId":"Lemonsr"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Lemonsr":84}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Lemonsr"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-15"},{"lineNumber":2,"author":{"gitId":"Lemonsr"},"content":"    public Todo(String description) throws AisuException {","lastModifiedDate":"2021-08-15"},{"lineNumber":3,"author":{"gitId":"Lemonsr"},"content":"        super(description);","lastModifiedDate":"2021-08-15"},{"lineNumber":4,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":5,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":6,"author":{"gitId":"Lemonsr"},"content":"    @Override","lastModifiedDate":"2021-08-15"},{"lineNumber":7,"author":{"gitId":"Lemonsr"},"content":"    public String toString() {","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"Lemonsr"},"content":"        return String.format(\"[To-do] %s %s\", this.getStatusIcon(), this.description);","lastModifiedDate":"2021-08-15"},{"lineNumber":9,"author":{"gitId":"Lemonsr"},"content":"    }","lastModifiedDate":"2021-08-15"},{"lineNumber":10,"author":{"gitId":"Lemonsr"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":11,"author":{"gitId":"Lemonsr"},"content":"}","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Lemonsr":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Lemonsr"},"content":"bye","lastModifiedDate":"2021-08-15"}],"authorContributionMap":{"Lemonsr":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Lemonsr"},"content":"java -classpath ..\\bin Aisu \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Lemonsr":1,"-":20}}]
