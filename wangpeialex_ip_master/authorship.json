[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"plugins {","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"    id \u0027java\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"    id \u0027application\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":"group \u0027org.example\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":"version \u00271.0-SNAPSHOT\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":"repositories {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":"    mavenCentral()","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"wangpeialex"},"content":"dependencies {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"wangpeialex"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.7.2\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.7.2\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"wangpeialex"},"content":"test {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"wangpeialex":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature-ABC","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"### Feature-XYZ","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"wangpeialex"},"content":"### Some explanations","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"wangpeialex"},"content":"**Why there is a branch-Level-8**","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"wangpeialex"},"content":"I forgot to implement Level-8 in a separate ","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"wangpeialex"},"content":"branch than master, so this is the make up.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"wangpeialex"},"content":"**Why there is a branch-Level-9**","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"wangpeialex"},"content":"I forgot to implement Level-9 in a separate","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"wangpeialex"},"content":"branch than master, so this is the make up.","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"wangpeialex":8,"-":29}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"wangpeialex"},"content":"@rem limitations under the License.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"wangpeialex"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"wangpeialex"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"wangpeialex"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"@rem","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"@rem ##########################################################################","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"wangpeialex"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"wangpeialex"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"wangpeialex"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"wangpeialex"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"wangpeialex"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"wangpeialex"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"wangpeialex"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"wangpeialex"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"wangpeialex"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"wangpeialex"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"wangpeialex"},"content":"@rem Find java.exe","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"wangpeialex"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"wangpeialex"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"wangpeialex"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"wangpeialex"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"wangpeialex"},"content":"echo.","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"wangpeialex"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"wangpeialex"},"content":"echo.","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"wangpeialex"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"wangpeialex"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"wangpeialex"},"content":"goto fail","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"wangpeialex"},"content":":findJavaFromJavaHome","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"wangpeialex"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"wangpeialex"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"wangpeialex"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"wangpeialex"},"content":"echo.","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"wangpeialex"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"wangpeialex"},"content":"echo.","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"wangpeialex"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"wangpeialex"},"content":"echo location of your Java installation.","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"wangpeialex"},"content":"goto fail","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"wangpeialex"},"content":":execute","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"wangpeialex"},"content":"@rem Setup the command line","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"wangpeialex"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"wangpeialex"},"content":"@rem Execute Gradle","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"wangpeialex"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2021-08-29"},{"lineNumber":75,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":76,"author":{"gitId":"wangpeialex"},"content":":end","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"wangpeialex"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"wangpeialex"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"wangpeialex"},"content":":fail","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"wangpeialex"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"wangpeialex"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"wangpeialex"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"wangpeialex"},"content":"exit /b 1","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"wangpeialex"},"content":":mainEnd","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"wangpeialex"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"wangpeialex"},"content":":omega","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"wangpeialex":89}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"rootProject.name \u003d \u0027CS2103-iP\u0027","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"wangpeialex":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"import duke.command.Command;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"wangpeialex"},"content":" * The main class of CS2103 iP.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"wangpeialex"},"content":" * It is the main body of this task tracking software","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"wangpeialex"},"content":" * that drives the main logic.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"    private static final String DEFAULT_PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wangpeialex"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"wangpeialex"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"wangpeialex"},"content":"        Duke duke \u003d new Duke(DEFAULT_PATH);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"wangpeialex"},"content":"        duke.run();","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"wangpeialex"},"content":"     * Main logic of Duke,","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"wangpeialex"},"content":"     * it starts the conversation loop and continuously reads input from","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"wangpeialex"},"content":"     * user and execute corresponding functions until exit instructions are given.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"wangpeialex"},"content":"    public void run() {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wangpeialex"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wangpeialex"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wangpeialex"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wangpeialex"},"content":"            // conversation loop","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wangpeialex"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"wangpeialex"},"content":"                String input \u003d ui.readLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wangpeialex"},"content":"                ui.printHorizLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wangpeialex"},"content":"                Command cmd \u003d Parser.parseCommand(input);","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wangpeialex"},"content":"                cmd.execute(tasks, ui, storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wangpeialex"},"content":"                isExit \u003d cmd.exeResult();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wangpeialex"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wangpeialex"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wangpeialex"},"content":"            } finally {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wangpeialex"},"content":"                ui.printHorizLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wangpeialex"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"wangpeialex"},"content":"     * Constructor of Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"wangpeialex"},"content":"     * It instantiates an empty which save and load its contents","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"wangpeialex"},"content":"     * to the default file (./data/duke.txt).","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"wangpeialex"},"content":"    public Duke() {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"wangpeialex"},"content":"        this(new Ui(), new Storage(DEFAULT_PATH), new TaskList());","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"wangpeialex"},"content":"     * Constructor of Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"wangpeialex"},"content":"     * It instantiates a Duke with initial contents from","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"wangpeialex"},"content":"     * the file given by the filePath,","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"wangpeialex"},"content":"     * and associates the Duke\u0027s save and load function to that file.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"wangpeialex"},"content":"     * @param filePath Path of the file containing initial content of Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"wangpeialex"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"wangpeialex"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"wangpeialex"},"content":"            ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"wangpeialex"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"wangpeialex"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"wangpeialex"},"content":"            tasks.loadFromFile(storage);","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"wangpeialex"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"wangpeialex"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"wangpeialex"},"content":"    private Duke(Ui ui, Storage storage, TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"wangpeialex"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"wangpeialex"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"wangpeialex"},"content":"        this.tasks \u003d taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"wangpeialex":82,"-":3}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":" * The abstract class that models a Command which can be called to execute.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":"    boolean isExit;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"wangpeialex"},"content":"     * Constructor.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"wangpeialex"},"content":"     * By default is intialized as not to exit the main loop.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":"    public Command() {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wangpeialex"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"wangpeialex"},"content":"     * Returns a boolean indicating if the main loop should be broke.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"wangpeialex"},"content":"     * @return A boolean indicating if the main loop should be broke","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"wangpeialex"},"content":"    public boolean exeResult() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wangpeialex"},"content":"        return isExit;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wangpeialex":30}},{"path":"src/main/java/duke/command/CommandAdd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":" * The class that models an add command.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":"public class CommandAdd extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wangpeialex"},"content":"    Task taskToAdd;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":"     * Instantiates an object with given task to be added when","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"wangpeialex"},"content":"     * called to execute.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"     * @param taskToAdd","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"    public CommandAdd(Task taskToAdd) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"        super();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wangpeialex"},"content":"        this.taskToAdd \u003d taskToAdd;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"wangpeialex"},"content":"     * Execute the add action and auto-saves to the file when called.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"wangpeialex"},"content":"     * @param tasks The taskList to add new task in.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"wangpeialex"},"content":"     * @param ui The Ui object to print messages after action.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"wangpeialex"},"content":"     * @param storage The Storage object that auto-saves after modification.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"wangpeialex"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wangpeialex"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wangpeialex"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wangpeialex"},"content":"            String msg \u003d tasks.addTask(this.taskToAdd);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wangpeialex"},"content":"            tasks.saveToFile(storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wangpeialex"},"content":"            ui.printMsg(msg);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wangpeialex"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wangpeialex"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"wangpeialex"},"content":"     * String representation of CommandAdd.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"wangpeialex"},"content":"     * Shows the command type and task to add.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"wangpeialex"},"content":"     * @return String representation of the CommandAdd.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"wangpeialex"},"content":"    @Override","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"wangpeialex"},"content":"    public String toString() {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"wangpeialex"},"content":"        return String.format(\"CommandAdd taskToAdd: %s\",taskToAdd);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wangpeialex":52}},{"path":"src/main/java/duke/command/CommandBye.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":" * A class that models a command to say bye and exit the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"public class CommandBye extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":"     * Call the Ui object to say bye to user and instructs to exit the main loop.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"wangpeialex"},"content":"     * @param tasks The taskList to add new task in.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"wangpeialex"},"content":"     * @param ui The Ui object to print messages after action.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"wangpeialex"},"content":"     * @param storage The Storage object that auto-saves after modification.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"wangpeialex"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wangpeialex"},"content":"        ui.sayBye(\"Alex\");","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wangpeialex":23}},{"path":"src/main/java/duke/command/CommandDelete.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":" * The class that models a delete command.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":"public class CommandDelete extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wangpeialex"},"content":"    private int index;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":"     * Instantiates an object with given index to delete the task when","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"wangpeialex"},"content":"     * called to execute.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"     * @param index The index where the task should be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"    public CommandDelete(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"        super();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wangpeialex"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"wangpeialex"},"content":"     * Execute the delete action and auto-saves to the file when called.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"wangpeialex"},"content":"     * @param tasks The taskList to delete the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"wangpeialex"},"content":"     * @param ui The Ui object to print messages after action.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"wangpeialex"},"content":"     * @param storage The Storage object that auto-saves after modification.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"wangpeialex"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wangpeialex"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wangpeialex"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wangpeialex"},"content":"            String msg \u003d tasks.deleteTask(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wangpeialex"},"content":"            tasks.saveToFile(storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wangpeialex"},"content":"            ui.printMsg(msg);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wangpeialex"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wangpeialex"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wangpeialex":42}},{"path":"src/main/java/duke/command/CommandDone.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":" * The class that models a mark as done command.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":"public class CommandDone extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wangpeialex"},"content":"    int index;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":"     * Instantiates an object with given index to mark the task as done when","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"wangpeialex"},"content":"     * called to execute.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"     * @param index The index where the task should be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"    public CommandDone(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"wangpeialex"},"content":"     * Execute the mark as done action and auto-saves to the file when called.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"wangpeialex"},"content":"     * @param tasks The taskList to mark the task done.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"wangpeialex"},"content":"     * @param ui The Ui object to print messages after action.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"wangpeialex"},"content":"     * @param storage The Storage object that auto-saves after modification.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"wangpeialex"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wangpeialex"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wangpeialex"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wangpeialex"},"content":"            String msg \u003d tasks.markTaskDone(index);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wangpeialex"},"content":"            tasks.saveToFile(storage);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wangpeialex"},"content":"            ui.printMsg(msg);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wangpeialex"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wangpeialex"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wangpeialex":41}},{"path":"src/main/java/duke/command/CommandFind.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"package duke.command;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"/**","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":" * The class that models a find command.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":" */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"public class CommandFind extends Command {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":"    private String keyword;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":"    public CommandFind(String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"wangpeialex"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"wangpeialex"},"content":"     * Execute find action and then print result message.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"     * @param tasks The taskList to search keywork in.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"wangpeialex"},"content":"     * @param ui The Ui object to print messages.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"     * @param storage The Storage object that auto-saves after modification.","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"wangpeialex"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"wangpeialex"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"wangpeialex"},"content":"        TaskList matched \u003d tasks.find(keyword);","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"wangpeialex"},"content":"        if(matched.isEmpty()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"wangpeialex"},"content":"            ui.printMsg(\"There are no matching tasks in your list.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"wangpeialex"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"wangpeialex"},"content":"            ui.printMsg(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"wangpeialex"},"content":"            ui.printMsg(matched.toString());","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"wangpeialex":33}},{"path":"src/main/java/duke/command/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"package duke.command;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"import duke.util.Ui;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":" * The class that models a list command.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"public class CommandList extends Command {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":"     * Execute list action by printing string representation of the taskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"wangpeialex"},"content":"     * @param tasks The taskList to be printed.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"wangpeialex"},"content":"     * @param ui The Ui object to print messages.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"wangpeialex"},"content":"     * @param storage The Storage object that auto-saves after modification.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"wangpeialex"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wangpeialex"},"content":"        ui.printMsg(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"        ui.printMsg(tasks.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wangpeialex":23}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"package duke.exception;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":" * The class that models Exceptions to be thrown by Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":"     * Instantiates a DukeException with given error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":"     * @param msg","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wangpeialex":14}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":" * The class models a deadline which is a special type of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"    LocalDateTime dateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":"     * Constructor.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"wangpeialex"},"content":"     * Instantiates a Deadline object with given description","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"wangpeialex"},"content":"     * deadline dateTime.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"wangpeialex"},"content":"     * @param description","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":"     * @param dateTime","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"    public Deadline(String description, LocalDateTime dateTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wangpeialex"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"wangpeialex"},"content":"     * Constructor.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"wangpeialex"},"content":"     * Instantiates a Deadline object with given description, idDone status and","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"wangpeialex"},"content":"     * deadline dateTime.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"wangpeialex"},"content":"     * @param description","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"wangpeialex"},"content":"     * @param dateTime","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"wangpeialex"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime dateTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wangpeialex"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wangpeialex"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wangpeialex"},"content":"     * Encode Deadline in format","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wangpeialex"},"content":"     * \"taskType isDone description dateTime\"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wangpeialex"},"content":"     * @return encoded event string","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wangpeialex"},"content":"    public String encode() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wangpeialex"},"content":"        return String.format(\"D %b %s /by %s\",","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wangpeialex"},"content":"                isDone,","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wangpeialex"},"content":"                content,","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wangpeialex"},"content":"                dateTime.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wangpeialex"},"content":"        );","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"wangpeialex"},"content":"     * String representation of Dealines.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"wangpeialex"},"content":"     * @return String representation of the deadline.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"wangpeialex"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"wangpeialex"},"content":"        return String.format(\"[D] [%s] %s (by: %s)\",","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"wangpeialex"},"content":"                isDone ? \"X\" : \" \", ","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"wangpeialex"},"content":"                content, ","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"wangpeialex"},"content":"                dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\")));","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wangpeialex":59}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":" * The class models an event which is a special type of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"    LocalDateTime startDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":"    LocalDateTime endDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"wangpeialex"},"content":"     * Constructor.","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"wangpeialex"},"content":"     * Instantiates a Deadline object with given description and","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"wangpeialex"},"content":"     * event start dateTime and end dateTime.","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":"     * @param description","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"wangpeialex"},"content":"     * @param startDateTime","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"     * @param endDateTime","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"    public Event(String description, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"        super(description);","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"wangpeialex"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"wangpeialex"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"wangpeialex"},"content":"     * Constructor.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"wangpeialex"},"content":"     * Instantiates a Deadline object with given description, isDone status and","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"wangpeialex"},"content":"     * event start dateTime and end dateTime.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"wangpeialex"},"content":"     * @param description","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"wangpeialex"},"content":"     * @param isDone","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"wangpeialex"},"content":"     * @param startDateTime","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"wangpeialex"},"content":"     * @param endDateTime","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"wangpeialex"},"content":"    public Event(String description, boolean isDone, LocalDateTime startDateTime, LocalDateTime endDateTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wangpeialex"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wangpeialex"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wangpeialex"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wangpeialex"},"content":"     * Encode Event in format","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wangpeialex"},"content":"     * \"taskType isDone description startDateTime endDateTime\"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wangpeialex"},"content":"     * @return encoded event string","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wangpeialex"},"content":"    public String encode() {","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wangpeialex"},"content":"        return String.format(\"E %b %s /at %s %s\",","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wangpeialex"},"content":"                isDone,","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wangpeialex"},"content":"                content,","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wangpeialex"},"content":"                startDateTime","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wangpeialex"},"content":"                        .format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\")),","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wangpeialex"},"content":"                endDateTime","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wangpeialex"},"content":"                        .format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"wangpeialex"},"content":"                );","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"wangpeialex"},"content":"     * String representation of Events.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"wangpeialex"},"content":"     * @return String representation of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"wangpeialex"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"wangpeialex"},"content":"        return String.format(\"[E] [%s] %s (at: %s)\",","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"wangpeialex"},"content":"                isDone ? \"X\" : \" \",","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"wangpeialex"},"content":"                content,","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"wangpeialex"},"content":"                startDateTime","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"wangpeialex"},"content":"                        .format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\"))","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"wangpeialex"},"content":"                        + \" - \"","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"wangpeialex"},"content":"                        + endDateTime.format(","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"wangpeialex"},"content":"                                DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\")));","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wangpeialex":73}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"package duke.task;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":" * The class models tasks in real life.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"    String content;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":"    boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":"     * Constructor.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":"     * Instantiates a Task object with given task content.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":"     * @param content","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"wangpeialex"},"content":"    public Task(String content) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"wangpeialex"},"content":"        this.content \u003d content;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"     * Constructor.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"     * Instantiates a Task object with given task content and","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"wangpeialex"},"content":"     * isDone status.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"wangpeialex"},"content":"     * @param content","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"wangpeialex"},"content":"     * @param isDone","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"wangpeialex"},"content":"    public Task(String content, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wangpeialex"},"content":"        this.content \u003d content;","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wangpeialex"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"wangpeialex"},"content":"     * Mark the task as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"wangpeialex"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"wangpeialex"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"wangpeialex"},"content":"     * Check if the content of the task has the given keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"wangpeialex"},"content":"     * @param keyword","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"wangpeialex"},"content":"     * @return","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"wangpeialex"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"wangpeialex"},"content":"        return content.contains(keyword);","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wangpeialex"},"content":"     * Encode the task in format \"t35698askType isDone content\"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wangpeialex"},"content":"     * @return encoded task string","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wangpeialex"},"content":"    public String encode() {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wangpeialex"},"content":"        return String.format(\"T %b %s\", isDone, content);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"wangpeialex"},"content":"     * String representation of Tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"wangpeialex"},"content":"     * @return String representation of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"wangpeialex"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"wangpeialex"},"content":"        return String.format(\"[T] [%s] %s\", isDone ? \"X\" : \" \", content);","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wangpeialex":63}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":"import duke.Duke;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"import duke.command.*;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"wangpeialex"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wangpeialex"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":" * The class that parses user input and returns parsed objects.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"wangpeialex"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"     * The method takes a user input and parse out all necessary parts needed","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"wangpeialex"},"content":"     * to execute user command and finally returns a Command object that can be executed","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"wangpeialex"},"content":"     * @param input A line of user input","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"wangpeialex"},"content":"     * @return A Command object which can then be called to execute user command","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"wangpeialex"},"content":"     * @throws DukeException When the input is empty String or the command is invalid","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"wangpeialex"},"content":"    public static Command parseCommand(String input) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wangpeialex"},"content":"        String[] splited \u003d input.strip().split(\" +\");","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wangpeialex"},"content":"        if(splited.length \u003c 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wangpeialex"},"content":"            throw new DukeException(\"The input cannot be empty!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wangpeialex"},"content":"        String cmdType \u003d splited[0].toLowerCase();","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wangpeialex"},"content":"        switch (cmdType) {","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wangpeialex"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wangpeialex"},"content":"            return new CommandBye();","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wangpeialex"},"content":"        case \"done\":","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wangpeialex"},"content":"            return new CommandDone(parseIndex(splited));","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wangpeialex"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wangpeialex"},"content":"            return new CommandDelete(parseIndex(splited));","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wangpeialex"},"content":"        case \"list\":","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wangpeialex"},"content":"            return new CommandList();","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wangpeialex"},"content":"        case \"todo\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wangpeialex"},"content":"            String description \u003d parseDescription(splited);","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wangpeialex"},"content":"            return new CommandAdd(new Task(description));","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wangpeialex"},"content":"        case \"deadline\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wangpeialex"},"content":"            String description \u003d parseDescription(splited);","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wangpeialex"},"content":"            LocalDateTime dateTime \u003d parseDeadlineDateTime(splited);","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wangpeialex"},"content":"            return new CommandAdd(new Deadline(description, dateTime));","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wangpeialex"},"content":"        case \"event\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wangpeialex"},"content":"            String description \u003d parseDescription(splited);","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"wangpeialex"},"content":"            LocalDateTime[] dateTimes \u003d parseEventDateTime(splited);","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"wangpeialex"},"content":"            return new CommandAdd(new Event(description, dateTimes[0], dateTimes[1]));","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"wangpeialex"},"content":"        case \"find\": {","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"wangpeialex"},"content":"            String keyword \u003d parseKeyword(splited);","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"wangpeialex"},"content":"            return new CommandFind(keyword);","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"wangpeialex"},"content":"        default:","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"wangpeialex"},"content":"            throw new DukeException(\"The command is invalid\");","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"wangpeialex"},"content":"     * Parse and return the task index of CommandDelete and CommandDone.","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"wangpeialex"},"content":"     * @param strArr String array that contains splited input string.","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"wangpeialex"},"content":"     * @return parsedIndex","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"wangpeialex"},"content":"     * @throws DukeException when the index is missing from the input.","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"wangpeialex"},"content":"    public static int parseIndex(String[] strArr) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"wangpeialex"},"content":"        if(strArr.length \u003c 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"wangpeialex"},"content":"            throw new DukeException(\"Missing index after command\");","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"wangpeialex"},"content":"        return Integer.parseInt(strArr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"wangpeialex"},"content":"     * Parse and return the description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"wangpeialex"},"content":"     * @param strArr String array that contains splited input string.","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"wangpeialex"},"content":"     * @return description","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"wangpeialex"},"content":"     * @throws DukeException when the task description is missing from input.","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"wangpeialex"},"content":"    public static String parseDescription(String[] strArr) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"wangpeialex"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"wangpeialex"},"content":"        if(strArr.length \u003e\u003d 2 \u0026\u0026 !isDateTimeDelim(strArr[1])) {","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"wangpeialex"},"content":"            sb.append(strArr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"wangpeialex"},"content":"        for(int i \u003d 2; i \u003c strArr.length; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"wangpeialex"},"content":"            if(isDateTimeDelim(strArr[i])) {","lastModifiedDate":"2021-08-24"},{"lineNumber":94,"author":{"gitId":"wangpeialex"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"wangpeialex"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"wangpeialex"},"content":"            sb.append(\" \" + strArr[i]);","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"wangpeialex"},"content":"        if(sb.length() \u003c 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"wangpeialex"},"content":"            throw new DukeException(\"The task description cannot be empty\");","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"wangpeialex"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":105,"author":{"gitId":"wangpeialex"},"content":"    private static String parseKeyword(String[] strArr) throws DukeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"wangpeialex"},"content":"        if(strArr.length \u003c 2) {","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"wangpeialex"},"content":"            throw new DukeException(\"Missing keyword after command\");","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"wangpeialex"},"content":"        return strArr[1];","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"wangpeialex"},"content":"    private static LocalDateTime parseDeadlineDateTime(String[] strArr) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"wangpeialex"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"wangpeialex"},"content":"        while(!isDateTimeDelim(strArr[i]) \u0026\u0026 i \u003c strArr.length) {","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"wangpeialex"},"content":"            i++;","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"wangpeialex"},"content":"        if(i \u003d\u003d strArr.length - 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"wangpeialex"},"content":"            throw new DukeException(\"The time of deadline cannot be empty\");","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"wangpeialex"},"content":"        // format should be \"yyyy/MM/dd\" or \"yyyy/MM/dd HH:mm\"","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"wangpeialex"},"content":"        String dateStr \u003d strArr[i + 1];","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"wangpeialex"},"content":"        String timeStr \u003d \"23:59\";  // default value in case time is missing from input","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"wangpeialex"},"content":"        if(strArr.length - i - 1 \u003e\u003d 2) {","lastModifiedDate":"2021-08-24"},{"lineNumber":125,"author":{"gitId":"wangpeialex"},"content":"            timeStr \u003d strArr[i + 2];","lastModifiedDate":"2021-08-24"},{"lineNumber":126,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"wangpeialex"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"wangpeialex"},"content":"            return LocalDateTime.parse(dateStr + \" \" + timeStr,","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"wangpeialex"},"content":"                    DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"wangpeialex"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"wangpeialex"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"wangpeialex"},"content":"    private static LocalDateTime[] parseEventDateTime(String[] strArr) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"wangpeialex"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"wangpeialex"},"content":"        while(!isDateTimeDelim(strArr[i]) \u0026\u0026 i \u003c strArr.length) {","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"wangpeialex"},"content":"            i++;","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"wangpeialex"},"content":"        if(strArr.length - 1 - i \u003c 3) {","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"wangpeialex"},"content":"            throw new DukeException(\"Invalid start and end dateTime format\");","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"wangpeialex"},"content":"        // format should be \"yyyy/MM/dd HH:mm yyyy/MM/dd HH:mm\"","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"wangpeialex"},"content":"        // alternativly can be \"yyyy-MM-dd HH:mm HH:mm\"","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"wangpeialex"},"content":"        String startDateStr \u003d strArr[i + 1];","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"wangpeialex"},"content":"        String startTimeStr \u003d strArr[i + 2];","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"wangpeialex"},"content":"        String endDateStr, endTimeStr;","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"wangpeialex"},"content":"        if(strArr.length - 1 - i \u003d\u003d 3) {","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"wangpeialex"},"content":"            endDateStr \u003d startDateStr;","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"wangpeialex"},"content":"            endTimeStr \u003d strArr[i + 3];","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"wangpeialex"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"wangpeialex"},"content":"            endDateStr \u003d strArr[i + 3];","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"wangpeialex"},"content":"            endTimeStr \u003d strArr[i + 4];","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"wangpeialex"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"wangpeialex"},"content":"            LocalDateTime startDateTime \u003d LocalDateTime","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"wangpeialex"},"content":"                    .parse(String.format(\"%s %s\", startDateStr, startTimeStr),","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"wangpeialex"},"content":"                            DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":165,"author":{"gitId":"wangpeialex"},"content":"            LocalDateTime endDateTime \u003d LocalDateTime","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"wangpeialex"},"content":"                    .parse(String.format(\"%s %s\", endDateStr, endTimeStr),","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"wangpeialex"},"content":"                            DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"wangpeialex"},"content":"            return new LocalDateTime[] {startDateTime, endDateTime};","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"wangpeialex"},"content":"        } catch(Exception e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"wangpeialex"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"wangpeialex"},"content":"    private static boolean isDateTimeDelim(String str) {","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"wangpeialex"},"content":"        return str.equals(\"/by\") || str.equals(\"/at\");","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"wangpeialex"},"content":"    public static String encode(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"wangpeialex"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"wangpeialex"},"content":"        for(Task task : tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"wangpeialex"},"content":"            sb.append(task.encode() + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"wangpeialex"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":186,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"wangpeialex"},"content":"    public static List\u003cTask\u003e decode(String[] lines) {","lastModifiedDate":"2021-08-24"},{"lineNumber":188,"author":{"gitId":"wangpeialex"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":189,"author":{"gitId":"wangpeialex"},"content":"        for (String line : lines) {","lastModifiedDate":"2021-08-24"},{"lineNumber":190,"author":{"gitId":"wangpeialex"},"content":"            String type \u003d line.substring(0,1);","lastModifiedDate":"2021-08-24"},{"lineNumber":191,"author":{"gitId":"wangpeialex"},"content":"            switch (type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"wangpeialex"},"content":"            case \"T\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":193,"author":{"gitId":"wangpeialex"},"content":"                String[] strArr \u003d line.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":194,"author":{"gitId":"wangpeialex"},"content":"                boolean isDone \u003d Boolean.parseBoolean(strArr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":195,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":196,"author":{"gitId":"wangpeialex"},"content":"                StringJoiner sj \u003d new StringJoiner(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"wangpeialex"},"content":"                for(int i \u003d 2; i \u003c strArr.length; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":198,"author":{"gitId":"wangpeialex"},"content":"                    sj.add(strArr[i]);","lastModifiedDate":"2021-08-24"},{"lineNumber":199,"author":{"gitId":"wangpeialex"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":200,"author":{"gitId":"wangpeialex"},"content":"                String description \u003d sj.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":201,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":202,"author":{"gitId":"wangpeialex"},"content":"                tasks.add(new Task(description, isDone));","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"wangpeialex"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":204,"author":{"gitId":"wangpeialex"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":205,"author":{"gitId":"wangpeialex"},"content":"            case \"D\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":206,"author":{"gitId":"wangpeialex"},"content":"                String[] strArr \u003d line.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"wangpeialex"},"content":"                boolean isDone \u003d Boolean.parseBoolean(strArr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"wangpeialex"},"content":"                StringJoiner descriptionSj \u003d new StringJoiner(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"wangpeialex"},"content":"                StringJoiner dateTimeSj \u003d new StringJoiner(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":211,"author":{"gitId":"wangpeialex"},"content":"                boolean isDateTimeStr \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":212,"author":{"gitId":"wangpeialex"},"content":"                for(int i \u003d 2; i \u003c strArr.length; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"wangpeialex"},"content":"                    String curr \u003d strArr[i];","lastModifiedDate":"2021-08-24"},{"lineNumber":214,"author":{"gitId":"wangpeialex"},"content":"                    if(curr.equals(\"/by\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":215,"author":{"gitId":"wangpeialex"},"content":"                        isDateTimeStr \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":216,"author":{"gitId":"wangpeialex"},"content":"                        continue;","lastModifiedDate":"2021-08-24"},{"lineNumber":217,"author":{"gitId":"wangpeialex"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":218,"author":{"gitId":"wangpeialex"},"content":"                    if(!isDateTimeStr) {","lastModifiedDate":"2021-08-24"},{"lineNumber":219,"author":{"gitId":"wangpeialex"},"content":"                        descriptionSj.add(curr);","lastModifiedDate":"2021-08-24"},{"lineNumber":220,"author":{"gitId":"wangpeialex"},"content":"                    } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":221,"author":{"gitId":"wangpeialex"},"content":"                        dateTimeSj.add(curr);","lastModifiedDate":"2021-08-24"},{"lineNumber":222,"author":{"gitId":"wangpeialex"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":223,"author":{"gitId":"wangpeialex"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":224,"author":{"gitId":"wangpeialex"},"content":"                String description \u003d descriptionSj.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"wangpeialex"},"content":"                LocalDateTime dateTime \u003d LocalDateTime","lastModifiedDate":"2021-08-24"},{"lineNumber":226,"author":{"gitId":"wangpeialex"},"content":"                        .parse(dateTimeSj.toString(),","lastModifiedDate":"2021-08-24"},{"lineNumber":227,"author":{"gitId":"wangpeialex"},"content":"                                DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":228,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":229,"author":{"gitId":"wangpeialex"},"content":"                tasks.add(new Deadline(description, isDone, dateTime));","lastModifiedDate":"2021-08-24"},{"lineNumber":230,"author":{"gitId":"wangpeialex"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":231,"author":{"gitId":"wangpeialex"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":232,"author":{"gitId":"wangpeialex"},"content":"            case \"E\": {","lastModifiedDate":"2021-08-24"},{"lineNumber":233,"author":{"gitId":"wangpeialex"},"content":"                String[] strArr \u003d line.split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":234,"author":{"gitId":"wangpeialex"},"content":"                boolean isDone \u003d Boolean.parseBoolean(strArr[1]);","lastModifiedDate":"2021-08-24"},{"lineNumber":235,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":236,"author":{"gitId":"wangpeialex"},"content":"                StringJoiner descriptionSj \u003d new StringJoiner(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":237,"author":{"gitId":"wangpeialex"},"content":"                StringJoiner dateTimeSj \u003d new StringJoiner(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":238,"author":{"gitId":"wangpeialex"},"content":"                boolean isDateTimeStr \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":239,"author":{"gitId":"wangpeialex"},"content":"                for(int i \u003d 2; i \u003c strArr.length; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":240,"author":{"gitId":"wangpeialex"},"content":"                    String curr \u003d strArr[i];","lastModifiedDate":"2021-08-24"},{"lineNumber":241,"author":{"gitId":"wangpeialex"},"content":"                    if(curr.equals(\"/at\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":242,"author":{"gitId":"wangpeialex"},"content":"                        isDateTimeStr \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":243,"author":{"gitId":"wangpeialex"},"content":"                        continue;","lastModifiedDate":"2021-08-24"},{"lineNumber":244,"author":{"gitId":"wangpeialex"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":245,"author":{"gitId":"wangpeialex"},"content":"                    if(!isDateTimeStr) {","lastModifiedDate":"2021-08-24"},{"lineNumber":246,"author":{"gitId":"wangpeialex"},"content":"                        descriptionSj.add(curr);","lastModifiedDate":"2021-08-24"},{"lineNumber":247,"author":{"gitId":"wangpeialex"},"content":"                    } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":248,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":249,"author":{"gitId":"wangpeialex"},"content":"                        dateTimeSj.add(curr);","lastModifiedDate":"2021-08-24"},{"lineNumber":250,"author":{"gitId":"wangpeialex"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":251,"author":{"gitId":"wangpeialex"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":252,"author":{"gitId":"wangpeialex"},"content":"                String description \u003d descriptionSj.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":253,"author":{"gitId":"wangpeialex"},"content":"                String[] dateTimes \u003d dateTimeSj.toString().split(\" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":254,"author":{"gitId":"wangpeialex"},"content":"                LocalDateTime startDateTime \u003d LocalDateTime","lastModifiedDate":"2021-08-24"},{"lineNumber":255,"author":{"gitId":"wangpeialex"},"content":"                        .parse(String.format(\"%s %s\", dateTimes[0], dateTimes[1]),","lastModifiedDate":"2021-08-24"},{"lineNumber":256,"author":{"gitId":"wangpeialex"},"content":"                                DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":257,"author":{"gitId":"wangpeialex"},"content":"                LocalDateTime endDateTime \u003d LocalDateTime","lastModifiedDate":"2021-08-24"},{"lineNumber":258,"author":{"gitId":"wangpeialex"},"content":"                        .parse(String.format(\"%s %s\", dateTimes[2], dateTimes[3]),","lastModifiedDate":"2021-08-24"},{"lineNumber":259,"author":{"gitId":"wangpeialex"},"content":"                                DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\"));","lastModifiedDate":"2021-08-24"},{"lineNumber":260,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":261,"author":{"gitId":"wangpeialex"},"content":"                tasks.add(new Event(description, isDone, startDateTime, endDateTime));","lastModifiedDate":"2021-08-24"},{"lineNumber":262,"author":{"gitId":"wangpeialex"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":263,"author":{"gitId":"wangpeialex"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":264,"author":{"gitId":"wangpeialex"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":265,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":266,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":267,"author":{"gitId":"wangpeialex"},"content":"        return tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":268,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":269,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wangpeialex":269}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":" * The class that implements storage functions of the project.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"wangpeialex"},"content":"public class Storage {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"wangpeialex"},"content":"    private final String filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"wangpeialex"},"content":"     * Constructor of Storage class.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"     * It instantiates a Storage object that is associated with","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"wangpeialex"},"content":"     * the file specified by the input path.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"     * @param filePath The path of the file the Storage will be associated with.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"wangpeialex"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wangpeialex"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"wangpeialex"},"content":"     * The method saves the given String (encoded content) to the associated file.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"wangpeialex"},"content":"     * @param encoded String containing encoded/formatted content.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"wangpeialex"},"content":"     * @throws IOException When there is problem in I/O system.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"wangpeialex"},"content":"    public void save(String encoded) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wangpeialex"},"content":"        File file \u003d linkFileOrCreateFile(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wangpeialex"},"content":"        FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"wangpeialex"},"content":"        fw.write(encoded);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"wangpeialex"},"content":"        fw.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"wangpeialex"},"content":"     * The method loads Strings from the associated file,","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"wangpeialex"},"content":"     * and return an array containing rows of lines of the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"wangpeialex"},"content":"     * @return A String array containing lines of the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"wangpeialex"},"content":"     * @throws FileNotFoundException When the file does not exist.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"wangpeialex"},"content":"    public String[] load() throws FileNotFoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wangpeialex"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wangpeialex"},"content":"        Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wangpeialex"},"content":"        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wangpeialex"},"content":"        while(sc.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wangpeialex"},"content":"          lines.add(sc.nextLine());","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wangpeialex"},"content":"        return lines.toArray(new String[0]);","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"wangpeialex"},"content":"     * Return a File object at given path.","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"wangpeialex"},"content":"     * If the file and its parent directories do not exist,","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"wangpeialex"},"content":"     * The methods will create them and then return the File object.","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"wangpeialex"},"content":"     * @param path Path of the file to be linked or created.","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"wangpeialex"},"content":"     * @return File object at the given path","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"wangpeialex"},"content":"     * @throws IOException When I/O system goes wrong.","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"wangpeialex"},"content":"    private File linkFileOrCreateFile(String path) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"wangpeialex"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"wangpeialex"},"content":"        if(!file.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"wangpeialex"},"content":"            checkAndFixParentDirectory(file.getParentFile());","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"wangpeialex"},"content":"            file.createNewFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"wangpeialex"},"content":"        return file;","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"wangpeialex"},"content":"    /** Recursively check if current directory and anscestor directory exsits","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"wangpeialex"},"content":"     *  if not, create directories.","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"wangpeialex"},"content":"     * @param currDir current directory to check and fix","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"wangpeialex"},"content":"    private void checkAndFixParentDirectory(File currDir) {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"wangpeialex"},"content":"        if(currDir \u003d\u003d null) {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"wangpeialex"},"content":"            currDir.mkdir();","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"wangpeialex"},"content":"        } else if (!currDir.exists()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"wangpeialex"},"content":"            checkAndFixParentDirectory(currDir.getParentFile());","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"wangpeialex"},"content":"            currDir.mkdir();","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wangpeialex":85}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"package duke.util;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":"import java.util.List;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":" * The class that stores and modifies Tasks of the software.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"wangpeialex"},"content":"public class TaskList {","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"wangpeialex"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"wangpeialex"},"content":"     * Constructor of TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"     * It instantiates the TaskList object with initial Tasks passed.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"wangpeialex"},"content":"     * @param tasks Initial tasks to be stored in TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"wangpeialex"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"wangpeialex"},"content":"     * Constructor of TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"wangpeialex"},"content":"     * It instantiates an empty TaskList object.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"wangpeialex"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wangpeialex"},"content":"        this(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"wangpeialex"},"content":"     * Add task to the task list.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"wangpeialex"},"content":"     * @param task The task to add.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"wangpeialex"},"content":"     * @return String of messages to be printed by Ui object after adding.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"wangpeialex"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wangpeialex"},"content":"        StringBuilder msg \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wangpeialex"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wangpeialex"},"content":"        msg.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"wangpeialex"},"content":"        msg.append(\"\\t\" + task + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"wangpeialex"},"content":"        msg.append(\"Now you have \" + tasks.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"wangpeialex"},"content":"        return msg.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"wangpeialex"},"content":"     * Delete task at the specified index.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"wangpeialex"},"content":"     * @param idx The index of the task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"wangpeialex"},"content":"     * @return String of messages to be printed by Ui object after deleting.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"wangpeialex"},"content":"     * @throws DukeException When the index is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"wangpeialex"},"content":"    public String deleteTask(int idx) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"wangpeialex"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"wangpeialex"},"content":"            StringBuilder msg \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"wangpeialex"},"content":"            Task curr \u003d this.tasks.remove(idx-1);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"wangpeialex"},"content":"            msg.append(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"wangpeialex"},"content":"            msg.append(\"\\t\" + curr + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"wangpeialex"},"content":"            msg.append(\"Now you have \" + tasks.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"wangpeialex"},"content":"            return msg.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"wangpeialex"},"content":"        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"wangpeialex"},"content":"            throw new DukeException(\"The task index is invalid!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"wangpeialex"},"content":"     * Mark task at the specified index as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"wangpeialex"},"content":"     * @param idx The index of the task to be marked.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"wangpeialex"},"content":"     * @return String of messages to be printed by Ui object after marking.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"wangpeialex"},"content":"     * @throws DukeException When the index is invalid.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"wangpeialex"},"content":"    public String markTaskDone(int idx) throws DukeException {","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"wangpeialex"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"wangpeialex"},"content":"            StringBuilder msg \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"wangpeialex"},"content":"            Task curr \u003d this.tasks.get(idx - 1);","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"wangpeialex"},"content":"            curr.markDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"wangpeialex"},"content":"            msg.append(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"wangpeialex"},"content":"            msg.append(\"\\t\" + curr + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"wangpeialex"},"content":"            return msg.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"wangpeialex"},"content":"        } catch(IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"wangpeialex"},"content":"           throw new DukeException(\"The task index is invalid!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"wangpeialex"},"content":"     * Search and return a TaskList containing all tasks with keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"wangpeialex"},"content":"     * @param keyword The keyword used to match tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"wangpeialex"},"content":"     * @return A TaskList containing all tasks with keyword.","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"wangpeialex"},"content":"    public TaskList find(String keyword) {","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"wangpeialex"},"content":"        List\u003cTask\u003e matched \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"wangpeialex"},"content":"        for(Task task : tasks) {","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"wangpeialex"},"content":"            if(task.containsKeyword(keyword)) {","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"wangpeialex"},"content":"                matched.add(task);","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"wangpeialex"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"wangpeialex"},"content":"        return new TaskList(matched);","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"wangpeialex"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"wangpeialex"},"content":"        return this.tasks.size() \u003d\u003d 0;","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"wangpeialex"},"content":"     * String representation of a TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"wangpeialex"},"content":"     * @return String representation of the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"wangpeialex"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"wangpeialex"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"wangpeialex"},"content":"        for (int i \u003d 1; i \u003c\u003d this.tasks.size() - 1; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"wangpeialex"},"content":"            str.append(String.format(\"%d.%s\\n\", i, tasks.get(i-1)));","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"wangpeialex"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"wangpeialex"},"content":"        str.append(String.format(\"%d.%s\", tasks.size(), tasks.get(tasks.size()-1)));","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"wangpeialex"},"content":"        return str.toString();","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"wangpeialex"},"content":"     * Encodes and Saves current content of TaskList to","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"wangpeialex"},"content":"     * the file that associated with the Storage object.","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"wangpeialex"},"content":"     * @param storage The Storage object that handles saving.","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"wangpeialex"},"content":"     * @throws IOException When I/O system goes wrong.","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"wangpeialex"},"content":"    public void saveToFile(Storage storage) throws IOException {","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"wangpeialex"},"content":"        String encoded \u003d Parser.encode(this.tasks);","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"wangpeialex"},"content":"        storage.save(encoded);","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"wangpeialex"},"content":"     * Loads and decodes content from the file associated","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"wangpeialex"},"content":"     * with the Storage object.","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"wangpeialex"},"content":"     * @param storage The Storage object that handles loading.","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"wangpeialex"},"content":"     * @throws FileNotFoundException When the file does not exist.","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"wangpeialex"},"content":"    public void loadFromFile(Storage storage) throws FileNotFoundException {","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"wangpeialex"},"content":"        List\u003cTask\u003e decoded \u003d Parser.decode(storage.load());","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"wangpeialex"},"content":"        this.tasks \u003d decoded;","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"wangpeialex":143}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"package duke.util;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":" * The class that handles ui functions such as","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":" * printing messages and errors to user and reading from user.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":"     * Constructor of Ui class.","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"wangpeialex"},"content":"     * Instantiates an Ui object that by default reads input from System.in","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"wangpeialex"},"content":"    public Ui() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"     * Shows welcome message of Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"wangpeialex"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"wangpeialex"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"wangpeialex"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"wangpeialex"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"wangpeialex"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"wangpeialex"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"wangpeialex"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"wangpeialex"},"content":"     * Reads user inputs.","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"wangpeialex"},"content":"     * @return String of the line read from standard in.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"wangpeialex"},"content":"    public String readLine() {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"wangpeialex"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"wangpeialex"},"content":"        return input;","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"wangpeialex"},"content":"     * Greets user.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"wangpeialex"},"content":"     * @param name User name to display.","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"wangpeialex"},"content":"    public void greeting(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"wangpeialex"},"content":"        printHorizLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"wangpeialex"},"content":"        System.out.println(\"Hello \" + name + \"!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"wangpeialex"},"content":"        System.out.println(\"I\u0027m Duke\");","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"wangpeialex"},"content":"        printHorizLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"wangpeialex"},"content":"        System.out.println(\"\");","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"wangpeialex"},"content":"     * Say goodbye to user.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"wangpeialex"},"content":"     * @param name User name to display.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"wangpeialex"},"content":"    public void sayBye(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"wangpeialex"},"content":"        System.out.println(\"Bye \" + name + \", hope to see you soon!\");","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"wangpeialex"},"content":"     * Prints a horizontal line.","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"wangpeialex"},"content":"    public void printHorizLine() {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"wangpeialex"},"content":"        System.out.println(\"————————————————————————————————————————\");","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"wangpeialex"},"content":"     * Prints the given message.","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"wangpeialex"},"content":"     * @param msg The message to display.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"wangpeialex"},"content":"    public void printMsg(String msg) {","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"wangpeialex"},"content":"        System.out.println(msg);","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"wangpeialex"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"wangpeialex"},"content":"     * Prints the given error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"wangpeialex"},"content":"     * @param errorMsg The error message to display.","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"wangpeialex"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"wangpeialex"},"content":"    public void showError(String errorMsg) {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"wangpeialex"},"content":"        System.out.println(errorMsg);","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"wangpeialex":85}},{"path":"test/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"class DukeTest {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"wangpeialex":8}},{"path":"test/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"import duke.command.CommandAdd;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"wangpeialex"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"wangpeialex"},"content":"class ParserTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"wangpeialex"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"    void parseCommand_Todo_CommandAdd() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"wangpeialex"},"content":"        assertEquals(new CommandAdd(new Task(\"Test CommandAdd Todo\")),","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"                Parser.parseCommand(\"todo Test CommandAdd Todo\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"wangpeialex"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"wangpeialex"},"content":"    void parseCommand_Deadline_CommandAdd() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"wangpeialex"},"content":"        assertEquals(","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"wangpeialex"},"content":"                new CommandAdd(new Deadline(\"Test CommandAdd Deadline\",","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"wangpeialex"},"content":"                LocalDateTime","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"wangpeialex"},"content":"                        .parse(\"2022/01/01 18:00\", DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\")))),","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"wangpeialex"},"content":"                Parser.parseCommand(\"deadline Test CommandAdd Deadline /by 2022/01/01 18:00\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"wangpeialex"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"wangpeialex"},"content":"    void parseCommand_Event_CommandAdd() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"wangpeialex"},"content":"        assertEquals(","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"wangpeialex"},"content":"                new CommandAdd(new Event(\"Test CommandAdd Event\",","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"wangpeialex"},"content":"                        LocalDateTime","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"wangpeialex"},"content":"                                .parse(\"2022/01/01 18:00\", DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\")),","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"wangpeialex"},"content":"                        LocalDateTime","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"wangpeialex"},"content":"                                .parse(\"2022/01/01 19:00\", DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\")))),","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"wangpeialex"},"content":"                Parser.parseCommand(\"event Test CommandAdd Event /at 2022/01/01 18:00 19:00\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"wangpeialex"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"wangpeialex"},"content":"    void parseIndex() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"wangpeialex"},"content":"        assertEquals(1, Parser.parseIndex(new String[] {\"done\", \"1\"}));","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"wangpeialex"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"wangpeialex"},"content":"    void parseDescription() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"wangpeialex"},"content":"        assertEquals(\"description part 1 description part 2\", Parser.parseDescription(new String[] {\"taskType\",\"description part 1\", \"description part 2\"}));","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"wangpeialex"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"wangpeialex"},"content":"    void encode() {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"wangpeialex"},"content":"        assertEquals(\"T true todo 1\\n\",","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"wangpeialex"},"content":"                Parser.encode(List.of(new Task(\"todo 1\", true))));","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"wangpeialex"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"wangpeialex"},"content":"    void decode() {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"wangpeialex"},"content":"        assertEquals(List.of(new Task(\"todo 1\", true)),","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"wangpeialex"},"content":"                Parser.decode(new String[] {\"T true todo 1\"}));","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"wangpeialex":65}},{"path":"test/duke/util/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"package duke.util;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":"import duke.task.Event;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"import duke.task.Task;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"import java.util.List;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"wangpeialex"},"content":"class TaskListTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"wangpeialex"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"wangpeialex"},"content":"    void addTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"wangpeialex"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"wangpeialex"},"content":"        assertEquals(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"wangpeialex"},"content":"                        + \"\\t[E] [ ] Test CommandAdd Event (at: Jan 1 2022, 18:00 - Jan 1 2022, 19:00)\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"wangpeialex"},"content":"                        + \"Now you have 1 tasks in the list.\\n\",","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"wangpeialex"},"content":"                tasks.addTask(new Event(\"Test CommandAdd Event\",","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"wangpeialex"},"content":"                        LocalDateTime","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"wangpeialex"},"content":"                                .parse(\"2022/01/01 18:00\", DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\")),","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"wangpeialex"},"content":"                        LocalDateTime","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"wangpeialex"},"content":"                                .parse(\"2022/01/01 19:00\", DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\")))));","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"wangpeialex"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"wangpeialex"},"content":"    void markTaskDone() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"wangpeialex"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"wangpeialex"},"content":"        tasks.addTask(new Task(\"todo 1\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"wangpeialex"},"content":"        assertEquals(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"wangpeialex"},"content":"                + \"\\t[T] [X] todo 1\\n\",","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"wangpeialex"},"content":"                tasks.markTaskDone(1));","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"wangpeialex"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"wangpeialex"},"content":"    void deleteTask() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"wangpeialex"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"wangpeialex"},"content":"        tasks.addTask(new Task(\"todo 1\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"wangpeialex"},"content":"        assertEquals(\"Noted. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"wangpeialex"},"content":"                        + \"\\t[T] [ ] todo 1\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"wangpeialex"},"content":"                        + \"Now you have 0 tasks in the list.\\n\",","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"wangpeialex"},"content":"                tasks.deleteTask(1));","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"wangpeialex"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"wangpeialex"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"wangpeialex"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"wangpeialex":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wangpeialex"},"content":"todo todo 1","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"wangpeialex"},"content":"todo todo 2","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"wangpeialex"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"wangpeialex"},"content":"event library opens /at 2/12/2019 1500-1800","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"wangpeialex"},"content":"event watch on sale /at 2/12/2019 1500-1800","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"wangpeialex"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"wangpeialex"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"wangpeialex"},"content":"done 5","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"wangpeialex"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"wangpeialex"},"content":"delete 1","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"wangpeialex"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"wangpeialex"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"wangpeialex"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wangpeialex":13}}]
