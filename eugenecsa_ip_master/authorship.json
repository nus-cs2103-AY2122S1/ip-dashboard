[{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":" * A type of Task. Inherits from Task, takes in a deadline that","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":" * specifies when task has to be completed by.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"    /** Deadline for the task */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"    private LocalDate deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"     * Takes in a description and a deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"    public Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"     * Takes in a description, deadline, and the status of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"     * @param isDone Indicates if the task is done.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    public Deadline(String description, LocalDate deadline, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"        this(description, deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"        super.setDone(isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"     * Returns the string representation of the Deadline class.","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of Deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"                + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"     * Returns a string formatted for writing into file.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of the task for file writing.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"        return \"D,\" + super.saveString() + \",\" + this.deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":59}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":" * Main class of Duke chatbot. Contains the main method that initialises Duke","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":" * and starts the chatbot.","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"    private TaskList tasklist;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"     * @param filepath The filepath of the save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"    public Duke(Path filepath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"            tasklist \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"            tasklist \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"        parser \u003d new Parser(ui, storage, tasklist);","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"     * Runs the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"    public void run() {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"        this.ui.showWelcome();","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"        boolean end \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"        while (!end) {","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"            String input \u003d ui.readInput();","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"            end \u003d parser.process(input);","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"        Path filePath \u003d Paths.get(\"src\", \"main\", \"data\", \"duke.txt\");","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"        new Duke(filePath).run();","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"eugenecsa":46}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":" * Represents an exception that occurs when running the Duke program. Takes in an error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"eugenecsa":10}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":" * A type of Task. Inherits from Task, takes in a date/time that","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":" * specifies when event is happening.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"    /** Date the event is happening */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"    private LocalDate dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Event. Takes in a description and a dateTime.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"     * @param dateTime The date/time the event occurs.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"    public Event(String description, LocalDate dateTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"     * Takes in description, dateTime and the status of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"     * @param dateTime The date/time the event occurs.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"     * @param isDone indicates if the event is done.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"    public Event(String description, LocalDate dateTime, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"        this(description, dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"        super.setDone(isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"     * Returns the string representation of the Event class.","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"        return \"[E]\" + super.toString() + \" (on: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"                + this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"     * Returns a string formatted for writing into file.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of the task for file writing.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"        return \"E,\" + super.saveString() + \",\" + this.dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":58}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":" * The Parser class takes in the input string and performs the operations","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":" * based on the command found in the string.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Parser.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"     * @param ui Ui instance for output.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"     * @param storage Storage instance for saving task.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"     * @param taskList TaskList instance for operations on tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"    public Parser(Ui ui, Storage storage, TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"     * Processes the input string and decide what operations to perform.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"     * @param input The input String.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"     * @return Boolean value indicating if program should continue.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"    public boolean process(String input) {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"        boolean end \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"        String[] splitMessage \u003d input.split(\" \", 2);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"        String command \u003d splitMessage[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"        String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"        String dateTime;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"        switch(command) {","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"        case(\"bye\"): // Print exit message, exit the program","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"            ui.showGoodBye();","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"            end \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"        case(\"list\"): // List the current tasks and their status","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"            ArrayList\u003cString\u003e tasks \u003d taskList.getTaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"            ui.showList(tasks);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"        case(\"done\"): // Mark a task as done and display the task","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"                int taskNumber \u003d Integer.parseInt(splitMessage[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"                String taskMessage \u003d taskList.changeTaskStatus(taskNumber);","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"                ui.writeOutput(\"Alright, I have marked the task as done:\\n\" + taskMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"                storage.rewriteFile(taskList.getList());","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"                ui.showInputError(\"index\");","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"            } catch (NumberFormatException n) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"                ui.showInputError(\"done\");","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"            } catch (DukeException d) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"                ui.showDukeException(d);","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"        case(\"delete\"): // Delete the task indicated","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"                int taskNumber \u003d Integer.parseInt(splitMessage[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"                String taskMessage \u003d taskList.deleteTask(taskNumber);","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"                ui.writeOutput(\"Alright, I have removed the following task:\\n\" + taskMessage);","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"                storage.rewriteFile(taskList.getList());","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"                ui.showInputError(\"index\");","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"            } catch (NumberFormatException n) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"                ui.showInputError(\"delete\");","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"            } catch (DukeException d) {","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"                ui.showDukeException(d);","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"        case(\"todo\"): // Create a ToDo task and display the task","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"                description \u003d splitMessage[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"                String saveString \u003d taskList.addTask(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"                storage.saveTask(saveString);","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"                ui.showInputError(\"todo\");","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"        case(\"deadline\"): // Create a Deadline task and display the task","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"                description \u003d splitMessage[1].split(\"/by \")[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"                dateTime \u003d splitMessage[1].split(\"/by \")[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"                LocalDate date \u003d LocalDate.parse(dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"                String saveString \u003d taskList.addTask(description, date, command);","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"                storage.saveTask(saveString);","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"                ui.showInputError(\"deadline\");","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"                ui.showInputError(\"dateformat\");","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"        case(\"event\"): // Create an Event task and display the task","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"eugenecsa"},"content":"            try {","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"eugenecsa"},"content":"                description \u003d splitMessage[1].split(\"/at \")[0];","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"eugenecsa"},"content":"                dateTime \u003d splitMessage[1].split(\"/at \")[1];","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"eugenecsa"},"content":"                LocalDate date \u003d LocalDate.parse(dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"eugenecsa"},"content":"                String saveString \u003d taskList.addTask(description, date, command);","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"eugenecsa"},"content":"                storage.saveTask(saveString);","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"eugenecsa"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"eugenecsa"},"content":"                ui.showInputError(\"event\");","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"eugenecsa"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"eugenecsa"},"content":"                ui.showInputError(\"dateformat\");","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"eugenecsa"},"content":"        default: // If input does not have a recognised command","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"eugenecsa"},"content":"            ui.showInputError(\"invalid\");","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"eugenecsa"},"content":"        return end;","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"eugenecsa":121}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":" * The Storage class saves and loads tasks from the save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"    /** The path of the file to read/write */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"    private Path filepath;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"     * @param filepath The filepath of the storage file.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"    public Storage(Path filepath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"     * Loads from the save file if available.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"     * Returns an array of strings containing the task,","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"     * throw DukeException if file is not found.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"     * @return ArrayList containing string representation of the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"     * @throws DukeException No current save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"    public ArrayList\u003cString\u003e load() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"            ArrayList\u003cString\u003e tasklist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"            File file \u003d new File(filepath.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"            Scanner fileReader \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"                tasklist.add(fileReader.nextLine());","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"            return tasklist;","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"            createFile(filepath.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"            throw new DukeException(\"File not available.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"     * Appends the given task string to file.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"     * @param taskString The task in string representation.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"    public void saveTask(String taskString) {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"            FileWriter writer \u003d new FileWriter(filepath.toString(), true);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"            writer.write(taskString + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"            writer.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"            System.out.println(\"Error saving task.\\n\" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"     * Rewrites the file with the latest list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"     * @param tasklist The list of tasks to save to file.","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"    public void rewriteFile(ArrayList\u003cTask\u003e tasklist) {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"            FileWriter writer \u003d new FileWriter(filepath.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"            for (Task task : tasklist) {","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"                writer.write(task.saveString() + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"            writer.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"            System.out.println(\"Failed to rewrite file\\n\" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"     * Creates a new file for saving data.","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"     * @param filename The name of the file to be created.","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"    public void createFile(String filename) {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"            File newFile \u003d new File(filename);","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"            if (newFile.createNewFile()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"                System.out.println(\"New save file created.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"                throw new DukeException(\"Unable to create save file\");","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"            System.out.println(\"Error creating file\");","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"        } catch (DukeException d) {","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"            System.out.println(d.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"eugenecsa":102}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":" * Represents a task. Contains the description and state of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":" * Allows for changing of the state of the class.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"    /** Description of the task */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"    private String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"    /** Indicates if task is done */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"     * Takes in the description of the task,","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"     * and sets the task as not done.","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the class.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"     * Changes the status of the Task to true.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"     * Returns the string representation of the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"     * @return String containing description and status indicator for Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"     * Returns the string representation of the task\u0027s state.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"     * @return \"X\" if task is done, \" \" otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"     * Returns a string formatted for writing into file.","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of the task for file writing.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"        return this.isDone + \",\" + this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":60}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":" * The TaskList class stores the list of items. Items are stored in","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":" * an ArrayList of Strings. Supports adding of new items to the list","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":" * and printing of the entire current list.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"    /** The list of tasks stored */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for TaskList class.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"     * Constructs the list based on the given array of strings.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"     * @param tasklist An array of strings of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"    public TaskList(ArrayList\u003cString\u003e tasklist) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"        this();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"        for (String s : tasklist) {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"            String[] splitData \u003d s.split(\",\");","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"            switch(splitData[0]) {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"            case(\"T\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"                addTask(splitData[2], Boolean.parseBoolean(splitData[1]));","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"            case(\"D\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"                addTask(splitData[2], LocalDate.parse(splitData[3]),\"deadline\", Boolean.parseBoolean(splitData[1]));","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"            case(\"E\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"                addTask(splitData[2], LocalDate.parse(splitData[3]), \"event\", Boolean.parseBoolean(splitData[1]));","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"     * Returns the array of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"     * @return Array of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"        return this.list;","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"     * Adds a task the list and saves to the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"    public String addTask(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"        ui.writeOutput(\"Task added successfully: \\n\" + task + \"\\nNumber of tasks in list: \" + list.size());","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"        return task.saveString();","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"     * Adds a task the list without saving to file.","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"     * @param isDone Indicates if the task is done.","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"    public void addTask(String description, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"        Task task \u003d new ToDo(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"     * Adds a task the list and saves to the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"     * Task added have a date/time attached.","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"     * @param date The date/time attached to the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"     * @param type Indicates if the task is a Deadline or Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"    public String addTask(String description, LocalDate date, String type) {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"        Task task;","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"        if (type.equals(\"deadline\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"            task \u003d new Deadline(description, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"            task \u003d new Event(description, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"        ui.writeOutput(\"Task added successfully: \\n\" + task + \"\\nNumber of tasks in list: \" + list.size());","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"        return task.saveString();","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"     * Adds a task the list without saving to file.","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"     * Task added have a date/time attached.","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"eugenecsa"},"content":"     * @param dateTime The date associated with the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"eugenecsa"},"content":"     * @param type The type of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"eugenecsa"},"content":"     * @param isDone Indicates if the task is done.","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"eugenecsa"},"content":"    public void addTask(String description, LocalDate dateTime, String type, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"eugenecsa"},"content":"        Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"eugenecsa"},"content":"        if (type.equals(\"deadline\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"eugenecsa"},"content":"            task \u003d new Deadline(description, dateTime, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"eugenecsa"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"eugenecsa"},"content":"            task \u003d new Event(description, dateTime, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"eugenecsa"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":118,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":119,"author":{"gitId":"eugenecsa"},"content":"     * Changes the status for the task indicated by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"eugenecsa"},"content":"     * @param taskNumber The index(plus 1) of the task to be marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"eugenecsa"},"content":"     * @return The string representation of the task after it is marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"eugenecsa"},"content":"    public String changeTaskStatus(int taskNumber) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":125,"author":{"gitId":"eugenecsa"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e this.list.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"eugenecsa"},"content":"            throw new DukeException(\"Task does not exist. Use list to check all tasks available.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"eugenecsa"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"eugenecsa"},"content":"            Task task \u003d list.get(taskNumber - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"eugenecsa"},"content":"            task.setDone(true);","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"eugenecsa"},"content":"            return task.toString() + \"\\nNumber of tasks remaining: \" + list.size();","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":132,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":133,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"eugenecsa"},"content":"     * Deletes the task indicated from the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"eugenecsa"},"content":"     * @param taskNumber The index of the task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of the task deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"eugenecsa"},"content":"     * @throws DukeException If taskNumber is an invalid index.","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"eugenecsa"},"content":"    public String deleteTask(int taskNumber) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"eugenecsa"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e this.list.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":143,"author":{"gitId":"eugenecsa"},"content":"            throw new DukeException(\"Task does not exist. Use list to check all tasks available.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":144,"author":{"gitId":"eugenecsa"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":145,"author":{"gitId":"eugenecsa"},"content":"            Task task \u003d list.get(taskNumber - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":146,"author":{"gitId":"eugenecsa"},"content":"            list.remove(taskNumber - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":147,"author":{"gitId":"eugenecsa"},"content":"            return task.toString() + \"\\nNumber of tasks remaining: \" + list.size();","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":149,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":150,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":151,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":152,"author":{"gitId":"eugenecsa"},"content":"     * Returns an array of tasks in their string representation.","lastModifiedDate":"2021-08-25"},{"lineNumber":153,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"eugenecsa"},"content":"     * @return Array of tasks in string form.","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"eugenecsa"},"content":"    public ArrayList\u003cString\u003e getTaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":157,"author":{"gitId":"eugenecsa"},"content":"        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"eugenecsa"},"content":"        for (Task t : list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"eugenecsa"},"content":"            tasks.add(t.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"eugenecsa"},"content":"        return tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":162,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":163}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":" * A type of Task. Inherits from Task, does not have any date/time attached to it.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for ToDo.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"     * Takes in the description of the ToDo.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for ToDo.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"     * Takes in the description and the status of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"     * @param isDone Indicates if the task is done.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"    public ToDo(String description, Boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"        this(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"        super.setDone(isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"     * Returns the string representation of the class.","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of the class.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"     * Returns a string formatted for writing into file.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of the task for file writing.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"        return \"T,\" + super.saveString();","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":48}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":" * The Ui class handles the input and output of the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"    private String seperator \u003d \"----------------------------------------\";","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"    private final String logo \u003d","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"            \"----------------------------------------\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"            + \" ____        _        \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"            + \"|  _ \\\\  ___ | | _____ \\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"            + \"| | | |/ _ \\\\| |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"            + \"|____/ \\\\___/|_|\\\\_\\\\___|\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"            + \"Hello! I\u0027m Doke\\nWhat do you want??\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"            + \"----------------------------------------\";","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Ui.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    public Ui() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"     * Shows the welcome message","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"     * Reads input from user.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"     * @return The input from the user","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"    public String readInput() {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"        String input \u003d this.scanner.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"        return input;","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"     * Shows the exit message.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"    public void showGoodBye() {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"        writeOutput(\"    Bye. Hope to see you again!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"     * Lists the items in the list in the order added, along with a counter.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"    public void showList(ArrayList\u003cString\u003e taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(seperator);","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"        for (String s : taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"            System.out.println(count + \". \" + s);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"            count++;","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(seperator);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"     * Writes the message to output with a line divider around it.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"    public void writeOutput(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(seperator);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(seperator);","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"     * Displays the error message based on the given command.","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"     * @param command Determines which error message to display.","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"    public void showInputError(String command) {","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"        switch(command){","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"        case(\"done\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"            writeOutput(\"Enter an integer after done...\");","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"        case(\"delete\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"            writeOutput(\"Enter an integer after delete...\");","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"        case(\"todo\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"            writeOutput(\"The description of ToDo cannot be empty!\\n Please try again :-(\");","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"        case(\"deadline\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"            writeOutput(\"Follow the format: \\ndeadline %description% /by %date%\");","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"        case(\"event\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"            writeOutput(\"Follow the format: \\nevent %description% /at %date/time%\");","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"        case(\"dateformat\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"            writeOutput(\"Date format is wrong.\\nPlease follow the format YYYY-MM-DD\");","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"eugenecsa"},"content":"        case(\"invalid\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"eugenecsa"},"content":"            writeOutput(\"Command not recognised!\\n\" + menu());","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"eugenecsa"},"content":"        case(\"index\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"eugenecsa"},"content":"            writeOutput(\"You forgot to indicate which task!!!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"eugenecsa"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"eugenecsa"},"content":"            writeOutput(\"Oops, something went wrong!\");","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"eugenecsa"},"content":"     * Displays the error message given by DukeException.","lastModifiedDate":"2021-08-25"},{"lineNumber":116,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"eugenecsa"},"content":"     * @param e DukeException instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"eugenecsa"},"content":"    public void showDukeException(DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"eugenecsa"},"content":"        writeOutput(e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"eugenecsa"},"content":"     * Returns a menu string.","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"eugenecsa"},"content":"     * @return A String representing the menu.","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"eugenecsa"},"content":"    public String menu() {","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"eugenecsa"},"content":"        return \"Commands supported:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"eugenecsa"},"content":"                + \"bye: quit program\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":131,"author":{"gitId":"eugenecsa"},"content":"                + \"list: show the list of tasks\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"eugenecsa"},"content":"                + \"done {index}: Marks the {index} task as done\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"eugenecsa"},"content":"                + \"delete {index}: Deletes the {index} task\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"eugenecsa"},"content":"                + \"todo {task name}: Adds {task name} to the list\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"eugenecsa"},"content":"                + \"deadline {task name} /by {YYYY-MM-DD}: Adds {task name} to the list with a deadline\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"eugenecsa"},"content":"                + \"event {task name} /by {YYYY-MM-DD}: Adds {task name} to the list with an event date\";","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":138,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"eugenecsa":138}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"    private TaskList createTaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"        ArrayList\u003cString\u003e array \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"        array.add(\"T,false,task 1\");","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"        array.add(\"D,false,task 2 ,2021-08-24\");","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"        array.add(\"E,true,task 3 ,2021-08-25\");","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"        array.add(\"T,true,task 4\");","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"        return new TaskList(array);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"    public void testAddTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"        assertEquals(\"T,false,task 1\", tasklist.addTask(\"task 1\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"    public void testAddTestWithDate() {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"        assertEquals(\"D,false,task 1,2021-08-08\",","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"                new TaskList().addTask(\"task 1\", LocalDate.parse(\"2021-08-08\"), \"deadline\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    public void testChangeTaskStatus() {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"        TaskList tasklist \u003d createTaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"            String s \u003d tasklist.changeTaskStatus(2);","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"            assertEquals(\"[D][X] task 2  (by: Aug 24 2021)\\nNumber of tasks remaining: 4\", s);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"    public void changeTaskStatus_indexOutOfBounds_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"        TaskList tasklist \u003d createTaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"            String s \u003d tasklist.changeTaskStatus(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"            assertEquals(\"[D][X] task 2  (by: Aug 24 2021)\\nNumber of tasks remaining: 4\", s);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"            fail(); //the test should not reach this line","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"            assertEquals(\"Task does not exist. Use list to check all tasks available.\", e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"        TaskList tasklist \u003d createTaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"            String s \u003d tasklist.deleteTask(2);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"            assertEquals(\"[D][ ] task 2  (by: Aug 24 2021)\\nNumber of tasks remaining: 3\", s);","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"    public void deleteTask_indexOutOfBounds_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"        TaskList tasklist \u003d createTaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"            String s \u003d tasklist.changeTaskStatus(5);","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"            assertEquals(\"[D][ ] task 2  (by: Aug 24 2021)\\nNumber of tasks remaining: 3\", s);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"            fail(); //the test should not reach this line","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"            assertEquals(\"Task does not exist. Use list to check all tasks available.\", e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"eugenecsa":78}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"todo visit library","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"todo borrow books","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"deadline return books /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"event team meeting /at 21 Jul 4-6PM","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"todo study for exams","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":10}}]
