[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":45,"eugenecsa":16}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"Duke is a program that helps you to manage your tasks via a GUI interface.","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"Duke supports 3 types of tasks, `To-Do`, `Deadline` and `Event`.","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"Duke also saves the list to storage.","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"### Feature-ABC","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"### Feature-XYZ","lastModifiedDate":"2021-07-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"````","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"Notes about the command format: Words surrounded by `{}` are parameters\u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"provided by the user. Example: todo {DESCRIPTION}, where DESCRIPTION \u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"is a parameter provided by the user as the description of the To-Do task.","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"````","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"### `list` - View the full list of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"Displays the current list of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"Format: `list`","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"### `bye` - Exits the program.","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"Exits the program and close the GUI window.","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"Format: `bye`","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"### `todo` - Adding a To-Do task.","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"Adds a To-Do task to the list of tasks.","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"Format: `todo {DESCRIPTION}`","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"Examples:","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"- `todo water plants`","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"- `todo cook dinner`","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"### `deadline` - Adding a task with a deadline","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"Adds a task that has an attached deadline.","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"Format: `deadline {DESCRIPTION} /by {DEADLINE_DATE}`","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"- `{DEADLINE_DATE}` represents a date in the form of `YYYY-MM-DD`.","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"Examples:","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"- `deadline Assignment 1 /by 2021-11-02`","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"- `deadline School Project /by 2022-01-02`","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"![Screen-shot of deadline usage](images/deadline.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"### `event` - Adding an event happening at a certain date","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"Adds a task that happens at a certain date.","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"Format: `event {DESCRIPTION} /at {EVENT_DATE}`","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"- `{EVENT_DATE}` represents a date in the form of `YYYY-MM-DD`.","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"Examples:","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"- `event Intern Interview /at 2021-12-03`","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"- `event Computing Conference /at 2022-07-05`","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"![Screen-shot of event usage](images/event.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"### `tag` - Add a tag to a task","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"Adds a tag to a task in the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"Format: `tag {INDEX} #{TAG}`","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"- Tags the task at `INDEX` position in the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"- `{TAG}` represents the exact tag description.","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"Examples:","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"- `tag 2 #Due Soon`","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"- `tag 4 #Important`","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"  ![Screen-shot of tag usage](tag/event.png)","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"### `done` Mark a task as done","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"Marks the specified task as done.","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"Format: `done {INDEX}`","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"- Marks the task at `INDEX` position as done.","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"Examples: ","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"- `done 1`","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"### `delete` Delete a task","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"Deletes the specified task.","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"Format: `delete {INDEX}`","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"- Deletes the task at position `INDEX`.","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"Examples:","lastModifiedDate":"2021-09-16"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"- `delete 1`","lastModifiedDate":"2021-09-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"eugenecsa"},"content":"### `find` Finds task(s)","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"eugenecsa"},"content":"Finds task(s) that has description matching the given keyword,\u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"eugenecsa"},"content":"or that is tagged with the specified tag.","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"eugenecsa"},"content":"Format: ","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"eugenecsa"},"content":"1. `find {KEYWORD}`","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"eugenecsa"},"content":"2. `find #{TAG}`","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"eugenecsa"},"content":"- Use either format (1) or (2) to search by keyword and tag respectively.","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"eugenecsa"},"content":"- `find {KEYWORD}` returns all tasks with description containing `{KEYWORD}`.","lastModifiedDate":"2021-09-16"},{"lineNumber":113,"author":{"gitId":"eugenecsa"},"content":"- `find #{TAG}` returns all tasks tagged with `{TAG}`. The tags must be an **EXACT** match.","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"eugenecsa"},"content":"Examples:","lastModifiedDate":"2021-09-16"},{"lineNumber":116,"author":{"gitId":"eugenecsa"},"content":"- `find school`","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"eugenecsa"},"content":"- `find #Important`","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":120,"author":{"gitId":"eugenecsa"},"content":"### Saving the data","lastModifiedDate":"2021-09-16"},{"lineNumber":121,"author":{"gitId":"eugenecsa"},"content":"Duke automatically saves the tasks in the hard disk after any command that adds \u003cbr\u003e","lastModifiedDate":"2021-09-16"},{"lineNumber":122,"author":{"gitId":"eugenecsa"},"content":"or modifies the tasks.","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"-":19,"eugenecsa":103}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"T,false,, ","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"T,false,adas, ","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"eugenecsa":2}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"rootProject.name \u003d \"ip\"","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"eugenecsa":1}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":" * A type of Task. Inherits from Task, takes in a deadline that","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":" * specifies when task has to be completed by.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"    /** Deadline for the task */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"    private LocalDate deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"     * Takes in a description and a deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"    public Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"     * Takes in a description, deadline, and the status of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"     * @param isDone Indicates if the task is done.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    public Deadline(String description, LocalDate deadline, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"        this(description, deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"        super.setDone(isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"     * Returns the string representation of the Deadline class.","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of Deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"                + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"     * Returns a string formatted for writing into file.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of the task for file writing.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"        return \"D,\" + super.saveString() + \",\" + this.deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":59}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import gui.DukeGui;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":" * Main class of Duke chatbot. Contains the main method that initialises Duke","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":" * and starts the chatbot.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"    private TaskList tasklist;","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"    private Parser parser;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Duke.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"     * @param filepath The filepath of the save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"    public Duke(Path filepath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"            tasklist \u003d new TaskList(storage.load());","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"            tasklist \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"        parser \u003d new Parser(ui, storage, tasklist);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"     * Reads the input from the GUI and returns the output.","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"     * @return The response string.","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"    public String readInput(String input) {","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"        return parser.process(input);","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"        Application.launch(DukeGui.class,  args);","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"eugenecsa":45}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":" * Represents an exception that occurs when running the Duke program. Takes in an error message.","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"eugenecsa":10}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":" * A type of Task. Inherits from Task, takes in a date/time that","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":" * specifies when event is happening.","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"    /** Date the event is happening */","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"    private LocalDate dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Event. Takes in a description and a dateTime.","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"     * @param dateTime The date/time the event occurs.","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"    public Event(String description, LocalDate dateTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"     * Takes in description, dateTime and the status of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the event.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"     * @param dateTime The date/time the event occurs.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"     * @param isDone indicates if the event is done.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"    public Event(String description, LocalDate dateTime, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"        this(description, dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"        super.setDone(isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"     * Returns the string representation of the Event class.","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of Event.","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"        return \"[E]\" + super.toString() + \" (on: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"                + this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"     * Returns a string formatted for writing into file.","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of the task for file writing.","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"        return \"E,\" + super.saveString() + \",\" + this.dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":58}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":" * The Parser class takes in the input string and performs the operations","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":" * based on the command found in the string.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"public class Parser {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"    private Storage storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Parser.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"     * @param ui Ui instance for output.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"     * @param storage Storage instance for saving task.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"     * @param taskList TaskList instance for operations on tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"    public Parser(Ui ui, Storage storage, TaskList taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"     * Processes the input string and decide what operations to perform.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"     * @param input The input String.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"     * @return Output string to be displayed to user.","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"    public String process(String input) {","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"        String[] messages \u003d input.split(\" \", 2);","lastModifiedDate":"2021-09-09"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"        String command \u003d messages[0];","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"        switch(command) {","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"        case(\"bye\"): // Print exit message, exit the program","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.showGoodBye();","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"        case(\"list\"): // List the current tasks and their status","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"            ArrayList\u003cString\u003e tasks \u003d taskList.getTaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.showList(tasks);","lastModifiedDate":"2021-09-03"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"        case(\"done\"): // Mark a task as done and display the task","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"            output \u003d markTaskAsDone(messages);","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"        case(\"delete\"): // Delete the task indicated","lastModifiedDate":"2021-09-09"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"            output \u003d deleteTask(messages);","lastModifiedDate":"2021-09-09"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-09-09"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"        case(\"todo\"): // Create a ToDo task and display the task","lastModifiedDate":"2021-09-09"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"            output \u003d addToDo(messages);","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"        case(\"deadline\"): // Create a Deadline task and display the task","lastModifiedDate":"2021-09-09"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"            output \u003d addDeadline(messages);","lastModifiedDate":"2021-09-09"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-09-09"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"        case(\"event\"): // Create an Event task and display the task","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"            output \u003d addEvent(messages);","lastModifiedDate":"2021-09-09"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"        case(\"find\"): // Find all tasks corresponding to the given keyword","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"            output \u003d findTasks(messages);","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"        case(\"tag\"): // Tag the corresponding task","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"            output \u003d addTag(messages);","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"        default: // If input does not have a recognised command","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.showInputError(\"invalid\");","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-09-09"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"        return output;","lastModifiedDate":"2021-09-09"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"     * Processes the String array given and marks the task with index","lastModifiedDate":"2021-09-09"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"     * corresponding to index 1 of the String array as done.","lastModifiedDate":"2021-09-09"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"     * @param messages String array containing the input from user.","lastModifiedDate":"2021-09-09"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"     * @return String with the updated task or an error message.","lastModifiedDate":"2021-09-09"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"    private String markTaskAsDone(String[] messages) {","lastModifiedDate":"2021-09-09"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"        String output;","lastModifiedDate":"2021-09-09"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"            int taskNumber \u003d Integer.parseInt(messages[1]);","lastModifiedDate":"2021-09-09"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"            String taskMessage \u003d taskList.markAsDone(taskNumber);","lastModifiedDate":"2021-09-09"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.writeOutput(\"Alright, I have marked the task as done:\\n\" + taskMessage);","lastModifiedDate":"2021-09-03"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"            storage.rewriteFile(taskList.getList());","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.showInputError(\"index\");","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"        } catch (NumberFormatException n) {","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.showInputError(\"done\");","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"        } catch (DukeException d) {","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.showDukeException(d);","lastModifiedDate":"2021-09-03"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"        return output;","lastModifiedDate":"2021-09-09"},{"lineNumber":102,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":103,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":104,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":105,"author":{"gitId":"eugenecsa"},"content":"     * Processes the String array given and deletes the task with index","lastModifiedDate":"2021-09-09"},{"lineNumber":106,"author":{"gitId":"eugenecsa"},"content":"     * corresponding to index 1 of the String array.","lastModifiedDate":"2021-09-09"},{"lineNumber":107,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":108,"author":{"gitId":"eugenecsa"},"content":"     * @param messages String array containing the input from user.","lastModifiedDate":"2021-09-09"},{"lineNumber":109,"author":{"gitId":"eugenecsa"},"content":"     * @return String with the deleted task or an error message.","lastModifiedDate":"2021-09-09"},{"lineNumber":110,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":111,"author":{"gitId":"eugenecsa"},"content":"    private String deleteTask(String[] messages) {","lastModifiedDate":"2021-09-09"},{"lineNumber":112,"author":{"gitId":"eugenecsa"},"content":"        String output;","lastModifiedDate":"2021-09-09"},{"lineNumber":113,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":114,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"eugenecsa"},"content":"            int taskNumber \u003d Integer.parseInt(messages[1]);","lastModifiedDate":"2021-09-09"},{"lineNumber":116,"author":{"gitId":"eugenecsa"},"content":"            String taskMessage \u003d taskList.deleteTask(taskNumber);","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.writeOutput(\"Alright, I have removed the following task:\\n\" + taskMessage);","lastModifiedDate":"2021-09-03"},{"lineNumber":118,"author":{"gitId":"eugenecsa"},"content":"            storage.rewriteFile(taskList.getList());","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"eugenecsa"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.showInputError(\"index\");","lastModifiedDate":"2021-09-03"},{"lineNumber":121,"author":{"gitId":"eugenecsa"},"content":"        } catch (NumberFormatException n) {","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.showInputError(\"delete\");","lastModifiedDate":"2021-09-03"},{"lineNumber":123,"author":{"gitId":"eugenecsa"},"content":"        } catch (DukeException d) {","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.showDukeException(d);","lastModifiedDate":"2021-09-03"},{"lineNumber":125,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":127,"author":{"gitId":"eugenecsa"},"content":"        return output;","lastModifiedDate":"2021-09-09"},{"lineNumber":128,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":129,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":130,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":131,"author":{"gitId":"eugenecsa"},"content":"     * Processes the String array given and adds a ToDo task with the description","lastModifiedDate":"2021-09-09"},{"lineNumber":132,"author":{"gitId":"eugenecsa"},"content":"     * given in index 1 of the array.","lastModifiedDate":"2021-09-09"},{"lineNumber":133,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":134,"author":{"gitId":"eugenecsa"},"content":"     * @param messages String array containing the input from user.","lastModifiedDate":"2021-09-09"},{"lineNumber":135,"author":{"gitId":"eugenecsa"},"content":"     * @return String with the added task or an error message.","lastModifiedDate":"2021-09-09"},{"lineNumber":136,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":137,"author":{"gitId":"eugenecsa"},"content":"    private String addToDo(String[] messages) {","lastModifiedDate":"2021-09-09"},{"lineNumber":138,"author":{"gitId":"eugenecsa"},"content":"        String output;","lastModifiedDate":"2021-09-09"},{"lineNumber":139,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":140,"author":{"gitId":"eugenecsa"},"content":"            String description \u003d messages[1].strip();","lastModifiedDate":"2021-09-09"},{"lineNumber":141,"author":{"gitId":"eugenecsa"},"content":"            Task task \u003d taskList.addToDo(description);","lastModifiedDate":"2021-09-09"},{"lineNumber":142,"author":{"gitId":"eugenecsa"},"content":"            storage.saveTask(task.saveString());","lastModifiedDate":"2021-09-03"},{"lineNumber":143,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.writeOutput(\"Task added successfully: \\n\" + task","lastModifiedDate":"2021-09-03"},{"lineNumber":144,"author":{"gitId":"eugenecsa"},"content":"                    + \"\\nNumber of tasks in list: \" + taskList.getList().size());","lastModifiedDate":"2021-09-03"},{"lineNumber":145,"author":{"gitId":"eugenecsa"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":146,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.showInputError(\"todo\");","lastModifiedDate":"2021-09-03"},{"lineNumber":147,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":148,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":149,"author":{"gitId":"eugenecsa"},"content":"        return output;","lastModifiedDate":"2021-09-09"},{"lineNumber":150,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":151,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":152,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":153,"author":{"gitId":"eugenecsa"},"content":"     * Processes the String array and adds a Deadline task with the description","lastModifiedDate":"2021-09-09"},{"lineNumber":154,"author":{"gitId":"eugenecsa"},"content":"     * and date given in index 1 of the array.","lastModifiedDate":"2021-09-09"},{"lineNumber":155,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":156,"author":{"gitId":"eugenecsa"},"content":"     * @param messages String array containing the input from user.","lastModifiedDate":"2021-09-09"},{"lineNumber":157,"author":{"gitId":"eugenecsa"},"content":"     * @return String with the added task or an error message.","lastModifiedDate":"2021-09-09"},{"lineNumber":158,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":159,"author":{"gitId":"eugenecsa"},"content":"    private String addDeadline(String[] messages) {","lastModifiedDate":"2021-09-09"},{"lineNumber":160,"author":{"gitId":"eugenecsa"},"content":"        String output;","lastModifiedDate":"2021-09-09"},{"lineNumber":161,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":162,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"eugenecsa"},"content":"            String description \u003d messages[1].split(\"/by \")[0].strip();","lastModifiedDate":"2021-09-09"},{"lineNumber":164,"author":{"gitId":"eugenecsa"},"content":"            String dateTime \u003d messages[1].split(\"/by \")[1];","lastModifiedDate":"2021-09-09"},{"lineNumber":165,"author":{"gitId":"eugenecsa"},"content":"            LocalDate date \u003d LocalDate.parse(dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"eugenecsa"},"content":"            Task task \u003d taskList.addDeadline(description, date);","lastModifiedDate":"2021-09-09"},{"lineNumber":167,"author":{"gitId":"eugenecsa"},"content":"            storage.saveTask(task.saveString());","lastModifiedDate":"2021-09-03"},{"lineNumber":168,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.writeOutput(\"Task added successfully: \\n\" + task","lastModifiedDate":"2021-09-03"},{"lineNumber":169,"author":{"gitId":"eugenecsa"},"content":"                    + \"\\nNumber of tasks in list: \" + taskList.getList().size());","lastModifiedDate":"2021-09-03"},{"lineNumber":170,"author":{"gitId":"eugenecsa"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.showInputError(\"deadline\");","lastModifiedDate":"2021-09-03"},{"lineNumber":172,"author":{"gitId":"eugenecsa"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":173,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.showInputError(\"dateformat\");","lastModifiedDate":"2021-09-03"},{"lineNumber":174,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":176,"author":{"gitId":"eugenecsa"},"content":"        return output;","lastModifiedDate":"2021-09-09"},{"lineNumber":177,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":178,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":179,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":180,"author":{"gitId":"eugenecsa"},"content":"     * Processes the String array and adds an Event task with the description","lastModifiedDate":"2021-09-09"},{"lineNumber":181,"author":{"gitId":"eugenecsa"},"content":"     * and date given in index 1 of the array.","lastModifiedDate":"2021-09-09"},{"lineNumber":182,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":183,"author":{"gitId":"eugenecsa"},"content":"     * @param messages String array containing the input from user.","lastModifiedDate":"2021-09-09"},{"lineNumber":184,"author":{"gitId":"eugenecsa"},"content":"     * @return String with the added task or an error message.","lastModifiedDate":"2021-09-09"},{"lineNumber":185,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":186,"author":{"gitId":"eugenecsa"},"content":"    private String addEvent(String[] messages) {","lastModifiedDate":"2021-09-09"},{"lineNumber":187,"author":{"gitId":"eugenecsa"},"content":"        String output;","lastModifiedDate":"2021-09-09"},{"lineNumber":188,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":189,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":190,"author":{"gitId":"eugenecsa"},"content":"            String description \u003d messages[1].split(\"/at \")[0].strip();","lastModifiedDate":"2021-09-09"},{"lineNumber":191,"author":{"gitId":"eugenecsa"},"content":"            String dateTime \u003d messages[1].split(\"/at \")[1];","lastModifiedDate":"2021-09-09"},{"lineNumber":192,"author":{"gitId":"eugenecsa"},"content":"            LocalDate date \u003d LocalDate.parse(dateTime);","lastModifiedDate":"2021-08-25"},{"lineNumber":193,"author":{"gitId":"eugenecsa"},"content":"            Task task \u003d taskList.addEvent(description, date);","lastModifiedDate":"2021-09-09"},{"lineNumber":194,"author":{"gitId":"eugenecsa"},"content":"            storage.saveTask(task.saveString());","lastModifiedDate":"2021-09-03"},{"lineNumber":195,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.writeOutput(\"Task added successfully: \\n\" + task","lastModifiedDate":"2021-09-03"},{"lineNumber":196,"author":{"gitId":"eugenecsa"},"content":"                    + \"\\nNumber of tasks in list: \" + taskList.getList().size());","lastModifiedDate":"2021-09-03"},{"lineNumber":197,"author":{"gitId":"eugenecsa"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":198,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.showInputError(\"event\");","lastModifiedDate":"2021-09-03"},{"lineNumber":199,"author":{"gitId":"eugenecsa"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":200,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.showInputError(\"dateformat\");","lastModifiedDate":"2021-09-03"},{"lineNumber":201,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":202,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":203,"author":{"gitId":"eugenecsa"},"content":"        return output;","lastModifiedDate":"2021-09-09"},{"lineNumber":204,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":205,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":206,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":207,"author":{"gitId":"eugenecsa"},"content":"     * Processes the String array and finds all tasks that matches the keyword given.","lastModifiedDate":"2021-09-09"},{"lineNumber":208,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":209,"author":{"gitId":"eugenecsa"},"content":"     * @param messages String array containing the input from user.","lastModifiedDate":"2021-09-09"},{"lineNumber":210,"author":{"gitId":"eugenecsa"},"content":"     * @return String with the added task or an error message.","lastModifiedDate":"2021-09-09"},{"lineNumber":211,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":212,"author":{"gitId":"eugenecsa"},"content":"    private String findTasks(String[] messages) {","lastModifiedDate":"2021-09-09"},{"lineNumber":213,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":214,"author":{"gitId":"eugenecsa"},"content":"        if (messages.length !\u003d 2) { // If there is no keyword given","lastModifiedDate":"2021-09-09"},{"lineNumber":215,"author":{"gitId":"eugenecsa"},"content":"            return ui.showInputError(\"find\");","lastModifiedDate":"2021-09-09"},{"lineNumber":216,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":217,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":218,"author":{"gitId":"eugenecsa"},"content":"        String output;","lastModifiedDate":"2021-09-09"},{"lineNumber":219,"author":{"gitId":"eugenecsa"},"content":"        ArrayList\u003cString\u003e results;","lastModifiedDate":"2021-09-09"},{"lineNumber":220,"author":{"gitId":"eugenecsa"},"content":"        if (messages[1].startsWith(\"#\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":221,"author":{"gitId":"eugenecsa"},"content":"            String tag \u003d messages[1].substring(1);","lastModifiedDate":"2021-09-09"},{"lineNumber":222,"author":{"gitId":"eugenecsa"},"content":"            if (tag.strip().equals(\"\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":223,"author":{"gitId":"eugenecsa"},"content":"                return ui.showInputError(\"find\");","lastModifiedDate":"2021-09-09"},{"lineNumber":224,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":225,"author":{"gitId":"eugenecsa"},"content":"            results \u003d taskList.findTag(tag);","lastModifiedDate":"2021-09-09"},{"lineNumber":226,"author":{"gitId":"eugenecsa"},"content":"        } else {","lastModifiedDate":"2021-09-09"},{"lineNumber":227,"author":{"gitId":"eugenecsa"},"content":"            results \u003d taskList.findKeyword(messages[1]);","lastModifiedDate":"2021-09-09"},{"lineNumber":228,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":229,"author":{"gitId":"eugenecsa"},"content":"        output \u003d ui.showList(results);","lastModifiedDate":"2021-09-09"},{"lineNumber":230,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":231,"author":{"gitId":"eugenecsa"},"content":"        return output;","lastModifiedDate":"2021-09-09"},{"lineNumber":232,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":233,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":234,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":235,"author":{"gitId":"eugenecsa"},"content":"     * Processes the String array and add the tag to the task.","lastModifiedDate":"2021-09-09"},{"lineNumber":236,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":237,"author":{"gitId":"eugenecsa"},"content":"     * @param messages String array containing the input from user.","lastModifiedDate":"2021-09-09"},{"lineNumber":238,"author":{"gitId":"eugenecsa"},"content":"     * @return String with the tagged task or an error message.","lastModifiedDate":"2021-09-09"},{"lineNumber":239,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":240,"author":{"gitId":"eugenecsa"},"content":"    private String addTag(String[] messages) {","lastModifiedDate":"2021-09-09"},{"lineNumber":241,"author":{"gitId":"eugenecsa"},"content":"        String output;","lastModifiedDate":"2021-09-09"},{"lineNumber":242,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":243,"author":{"gitId":"eugenecsa"},"content":"        if (messages.length !\u003d 2) { // If there is no keyword given","lastModifiedDate":"2021-09-09"},{"lineNumber":244,"author":{"gitId":"eugenecsa"},"content":"            return ui.showInputError(\"tag\");","lastModifiedDate":"2021-09-09"},{"lineNumber":245,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":246,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":247,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":248,"author":{"gitId":"eugenecsa"},"content":"            int taskNumber \u003d Integer.parseInt(messages[1].substring(0, 1));","lastModifiedDate":"2021-09-09"},{"lineNumber":249,"author":{"gitId":"eugenecsa"},"content":"            String tag \u003d messages[1].split(\"#\")[1];","lastModifiedDate":"2021-09-09"},{"lineNumber":250,"author":{"gitId":"eugenecsa"},"content":"            String taskMessage \u003d taskList.addTag(taskNumber, tag);","lastModifiedDate":"2021-09-09"},{"lineNumber":251,"author":{"gitId":"eugenecsa"},"content":"            storage.rewriteFile(taskList.getList());","lastModifiedDate":"2021-09-09"},{"lineNumber":252,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.writeOutput(\"Alright, I have tagged the tasks as #\" + tag + \":\\n\" + taskMessage);","lastModifiedDate":"2021-09-09"},{"lineNumber":253,"author":{"gitId":"eugenecsa"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":254,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.showInputError(\"tag\");","lastModifiedDate":"2021-09-09"},{"lineNumber":255,"author":{"gitId":"eugenecsa"},"content":"        } catch (DukeException d) {","lastModifiedDate":"2021-09-09"},{"lineNumber":256,"author":{"gitId":"eugenecsa"},"content":"            output \u003d ui.showDukeException(d);","lastModifiedDate":"2021-09-09"},{"lineNumber":257,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":258,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":259,"author":{"gitId":"eugenecsa"},"content":"        return output;","lastModifiedDate":"2021-09-03"},{"lineNumber":260,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":261,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":262,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":263,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"eugenecsa":263}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import java.io.File;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":" * The Storage class saves and loads tasks from the save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"public class Storage {","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"    /** The path of the file to read/write */","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"    private Path filepath;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Storage.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"     * @param filepath The filepath of the storage file.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"    public Storage(Path filepath) {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"        this.filepath \u003d filepath;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"     * Loads from the save file if available.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"     * Returns an array of strings containing the task,","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"     * throw DukeException if file is not found.","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"     * @return ArrayList containing string representation of the tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"     * @throws DukeException No current save file.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"    public ArrayList\u003cString\u003e load() throws DukeException {","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"            ArrayList\u003cString\u003e tasklist \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"            File file \u003d new File(filepath.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"            Scanner fileReader \u003d new Scanner(file);","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"                tasklist.add(fileReader.nextLine());","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"            return tasklist;","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"            createFile(filepath.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"            throw new DukeException(\"File not available.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"     * Appends the given task string to file.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"     * @param taskString The task in string representation.","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"    public void saveTask(String taskString) {","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"        assert !taskString.equals(\"\") : \"Cannot save empty string\";","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"            FileWriter writer \u003d new FileWriter(filepath.toString(), true);","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"            writer.write(taskString + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"            writer.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"            System.out.println(\"Error saving task.\\n\" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"     * Rewrites the file with the latest list of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"     * @param tasklist The list of tasks to save to file.","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"    public void rewriteFile(ArrayList\u003cTask\u003e tasklist) {","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"            FileWriter writer \u003d new FileWriter(filepath.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"            for (Task task : tasklist) {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"                writer.write(task.saveString() + \"\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"            writer.close();","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"            System.out.println(\"Failed to rewrite file\\n\" + e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"     * Creates a new file for saving data.","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"     * @param filename The name of the file to be created.","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"    public void createFile(String filename) {","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"        assert !filename.equals(\"\");","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"            File newFile \u003d new File(filename);","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"            if (newFile.createNewFile()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"                System.out.println(\"New save file created.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"                throw new DukeException(\"Unable to create save file\");","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"            System.out.println(\"Error creating file\");","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"        } catch (DukeException d) {","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"            System.out.println(d.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"eugenecsa":104}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":" * Represents a task. Contains the description and state of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":" * Allows for changing of the state of the class.","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"    /** Description of the task */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"    private String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"    /** Indicates if task is done */","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"    /** The tag for the task */","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"    private String tag;","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"     * Takes in the description of the task,","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"     * and sets the task as not done.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the class.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"        this.tag \u003d \" \";","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"        return description;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"    public String getTag() {","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"        return tag;","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"     * Changes the status of the Task to true.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"     * Returns the string representation of the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"     * @return String containing description and status indicator for Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"        String tagString \u003d tag.equals(\" \") ? \"\" : \" #\" + tag;","lastModifiedDate":"2021-09-09"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description + tagString;","lastModifiedDate":"2021-09-09"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"     * Returns the string representation of the task\u0027s state.","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"     * @return \"X\" if task is done, \" \" otherwise.","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"    private String getStatusIcon() {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"     * Adds tag to the task.","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"     * @param tag The tag to be added.","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"    public void addTag(String tag) {","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-09-09"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"     * Returns a string formatted for writing into file.","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of the task for file writing.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"        return isDone + \",\" + description + \",\" + tag;","lastModifiedDate":"2021-09-09"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":81}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":" * The TaskList class stores the list of items. Items are stored in","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":" * an ArrayList of Strings. Supports adding of new items to the list","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":" * and printing of the entire current list.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"    /** The list of tasks stored */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for TaskList class.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"     * Constructs the list based on the given array of strings.","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"     * @param taskList An array of strings of tasks.","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"    public TaskList(ArrayList\u003cString\u003e taskList) {","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"        this();","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"        for (String s : taskList) {","lastModifiedDate":"2021-09-09"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"            String[] taskData \u003d s.split(\",\");","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"            switch(taskData[0]) {","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"            case(\"T\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"                addToDo(taskData[2], Boolean.parseBoolean(taskData[1]), taskData[3]);","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"            case(\"D\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"                addDeadline(taskData[2], LocalDate.parse(taskData[4]),","lastModifiedDate":"2021-09-09"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"                        Boolean.parseBoolean(taskData[1]), taskData[3]);","lastModifiedDate":"2021-09-09"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"            case(\"E\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"                addEvent(taskData[2], LocalDate.parse(taskData[4]),","lastModifiedDate":"2021-09-09"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"                        Boolean.parseBoolean(taskData[1]), taskData[3]);","lastModifiedDate":"2021-09-09"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"                break;","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"            default:","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"                break;","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"     * Returns the array of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"     * @return Array of tasks.","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"        return this.list;","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"     * Adds a ToDo task to the list and saves to the file.","lastModifiedDate":"2021-09-09"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"     * @return The task added.","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"    public Task addToDo(String description) {","lastModifiedDate":"2021-09-09"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"        assert !description.equals(\"\") : \"Description cannot be blank\";","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"        return task;","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"     * Adds a ToDo task to the list without saving to file.","lastModifiedDate":"2021-09-09"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"     * @param isDone Indicates if the task is done.","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"     * @param tag The tag of the Event.","lastModifiedDate":"2021-09-09"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"    public void addToDo(String description, boolean isDone, String tag) {","lastModifiedDate":"2021-09-09"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"        assert !description.equals(\"\") : \"Description cannot be blank\";","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"        Task task \u003d new ToDo(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"        task.addTag(tag);","lastModifiedDate":"2021-09-09"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"     * Adds a Deadline task to the list and saves to the file.","lastModifiedDate":"2021-09-09"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"     * @param date The deadline of the task.","lastModifiedDate":"2021-09-09"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"     * @return The Deadline task added.","lastModifiedDate":"2021-09-09"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"    public Task addDeadline(String description, LocalDate date) {","lastModifiedDate":"2021-09-09"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"        assert !description.equals(\"\") : \"Description cannot be blank\";","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"        Task task \u003d new Deadline(description, date);","lastModifiedDate":"2021-09-09"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"        return task;","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":103,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"eugenecsa"},"content":"     * Adds a Deadline task to the list without saving to the file.","lastModifiedDate":"2021-09-09"},{"lineNumber":105,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"eugenecsa"},"content":"     * @param date The deadline of the task.","lastModifiedDate":"2021-09-09"},{"lineNumber":108,"author":{"gitId":"eugenecsa"},"content":"     * @param isDone Indicates if the task is done.","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"eugenecsa"},"content":"     * @param tag The tag of the Event.","lastModifiedDate":"2021-09-09"},{"lineNumber":110,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"eugenecsa"},"content":"    public void addDeadline(String description, LocalDate date, boolean isDone, String tag) {","lastModifiedDate":"2021-09-09"},{"lineNumber":112,"author":{"gitId":"eugenecsa"},"content":"        assert !description.equals(\"\") : \"Description cannot be blank\";","lastModifiedDate":"2021-09-07"},{"lineNumber":113,"author":{"gitId":"eugenecsa"},"content":"        Task task \u003d new Deadline(description, date, isDone);","lastModifiedDate":"2021-09-09"},{"lineNumber":114,"author":{"gitId":"eugenecsa"},"content":"        task.addTag(tag);","lastModifiedDate":"2021-09-09"},{"lineNumber":115,"author":{"gitId":"eugenecsa"},"content":"        this.list.add(task);","lastModifiedDate":"2021-09-09"},{"lineNumber":116,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":118,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":119,"author":{"gitId":"eugenecsa"},"content":"     * Adds an Event task to the list and saves to the file.","lastModifiedDate":"2021-09-09"},{"lineNumber":120,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":121,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-09-09"},{"lineNumber":122,"author":{"gitId":"eugenecsa"},"content":"     * @param date The date of the event.","lastModifiedDate":"2021-09-09"},{"lineNumber":123,"author":{"gitId":"eugenecsa"},"content":"     * @return The Event task added.","lastModifiedDate":"2021-09-09"},{"lineNumber":124,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":125,"author":{"gitId":"eugenecsa"},"content":"    public Task addEvent(String description, LocalDate date) {","lastModifiedDate":"2021-09-09"},{"lineNumber":126,"author":{"gitId":"eugenecsa"},"content":"        Task task \u003d new Event(description, date);","lastModifiedDate":"2021-09-09"},{"lineNumber":127,"author":{"gitId":"eugenecsa"},"content":"        this.list.add(task);","lastModifiedDate":"2021-09-09"},{"lineNumber":128,"author":{"gitId":"eugenecsa"},"content":"        return task;","lastModifiedDate":"2021-09-09"},{"lineNumber":129,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":131,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":132,"author":{"gitId":"eugenecsa"},"content":"     * Adds an Event task to the list without saving to the file.","lastModifiedDate":"2021-09-09"},{"lineNumber":133,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":134,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-09-09"},{"lineNumber":135,"author":{"gitId":"eugenecsa"},"content":"     * @param date The date of the event.","lastModifiedDate":"2021-09-09"},{"lineNumber":136,"author":{"gitId":"eugenecsa"},"content":"     * @param isDone Indicates if the task is done.","lastModifiedDate":"2021-09-09"},{"lineNumber":137,"author":{"gitId":"eugenecsa"},"content":"     * @param tag The tag of the Event.","lastModifiedDate":"2021-09-09"},{"lineNumber":138,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":139,"author":{"gitId":"eugenecsa"},"content":"    public void addEvent(String description, LocalDate date, boolean isDone, String tag) {","lastModifiedDate":"2021-09-09"},{"lineNumber":140,"author":{"gitId":"eugenecsa"},"content":"        Task task \u003d new Event(description, date, isDone);","lastModifiedDate":"2021-09-09"},{"lineNumber":141,"author":{"gitId":"eugenecsa"},"content":"        task.addTag(tag);","lastModifiedDate":"2021-09-09"},{"lineNumber":142,"author":{"gitId":"eugenecsa"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":146,"author":{"gitId":"eugenecsa"},"content":"     * Adds a tag to the task indicated by the user.","lastModifiedDate":"2021-09-09"},{"lineNumber":147,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":148,"author":{"gitId":"eugenecsa"},"content":"     * @param taskNumber The index(plus 1) of the task to be tagged.","lastModifiedDate":"2021-09-09"},{"lineNumber":149,"author":{"gitId":"eugenecsa"},"content":"     * @param tag The tag to tag the task with.","lastModifiedDate":"2021-09-09"},{"lineNumber":150,"author":{"gitId":"eugenecsa"},"content":"     * @return The String representation of the task after tagging.","lastModifiedDate":"2021-09-09"},{"lineNumber":151,"author":{"gitId":"eugenecsa"},"content":"     * @throws DukeException Exception thrown if given task is not valid.","lastModifiedDate":"2021-09-09"},{"lineNumber":152,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":153,"author":{"gitId":"eugenecsa"},"content":"    public String addTag(int taskNumber, String tag) throws DukeException{","lastModifiedDate":"2021-09-09"},{"lineNumber":154,"author":{"gitId":"eugenecsa"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e this.list.size()) {","lastModifiedDate":"2021-09-09"},{"lineNumber":155,"author":{"gitId":"eugenecsa"},"content":"            throw new DukeException(\"Task does not exist. Use list to check all tasks available.\");","lastModifiedDate":"2021-09-09"},{"lineNumber":156,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":157,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":158,"author":{"gitId":"eugenecsa"},"content":"        Task task \u003d list.get(taskNumber - 1);","lastModifiedDate":"2021-09-09"},{"lineNumber":159,"author":{"gitId":"eugenecsa"},"content":"        task.addTag(tag);","lastModifiedDate":"2021-09-09"},{"lineNumber":160,"author":{"gitId":"eugenecsa"},"content":"        return task.toString();","lastModifiedDate":"2021-09-09"},{"lineNumber":161,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":162,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":163,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":164,"author":{"gitId":"eugenecsa"},"content":"     * Changes the status for the task indicated by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":165,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":166,"author":{"gitId":"eugenecsa"},"content":"     * @param taskNumber The index(plus 1) of the task to be marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"eugenecsa"},"content":"     * @return The string representation of the task after it is marked as done.","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"eugenecsa"},"content":"     * @throws DukeException Exception thrown if given task is not valid.","lastModifiedDate":"2021-09-09"},{"lineNumber":169,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"eugenecsa"},"content":"    public String markAsDone(int taskNumber) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":171,"author":{"gitId":"eugenecsa"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e this.list.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":172,"author":{"gitId":"eugenecsa"},"content":"            throw new DukeException(\"Task does not exist. Use list to check all tasks available.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":173,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":174,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":175,"author":{"gitId":"eugenecsa"},"content":"        Task task \u003d list.get(taskNumber - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":176,"author":{"gitId":"eugenecsa"},"content":"        task.setDone(true);","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"eugenecsa"},"content":"        return task.toString() + \"\\nNumber of tasks remaining: \" + list.size();","lastModifiedDate":"2021-08-19"},{"lineNumber":178,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":179,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":180,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"eugenecsa"},"content":"     * Deletes the task indicated from the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"eugenecsa"},"content":"     * @param taskNumber The index of the task to be deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":184,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of the task deleted.","lastModifiedDate":"2021-08-25"},{"lineNumber":185,"author":{"gitId":"eugenecsa"},"content":"     * @throws DukeException If taskNumber is an invalid index.","lastModifiedDate":"2021-08-25"},{"lineNumber":186,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":187,"author":{"gitId":"eugenecsa"},"content":"    public String deleteTask(int taskNumber) throws DukeException {","lastModifiedDate":"2021-08-19"},{"lineNumber":188,"author":{"gitId":"eugenecsa"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e this.list.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":189,"author":{"gitId":"eugenecsa"},"content":"            throw new DukeException(\"Task does not exist. Use list to check all tasks available.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":190,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":191,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":192,"author":{"gitId":"eugenecsa"},"content":"        Task task \u003d list.get(taskNumber - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":193,"author":{"gitId":"eugenecsa"},"content":"        list.remove(taskNumber - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":194,"author":{"gitId":"eugenecsa"},"content":"        return task.toString() + \"\\nNumber of tasks remaining: \" + list.size();","lastModifiedDate":"2021-08-19"},{"lineNumber":195,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":196,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":197,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":198,"author":{"gitId":"eugenecsa"},"content":"     * Finds all tasks with matching tags.","lastModifiedDate":"2021-09-09"},{"lineNumber":199,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":200,"author":{"gitId":"eugenecsa"},"content":"     * @param tag The tag to search for","lastModifiedDate":"2021-09-09"},{"lineNumber":201,"author":{"gitId":"eugenecsa"},"content":"     * @return ArrayList of Strings containing all matching tasks.","lastModifiedDate":"2021-09-09"},{"lineNumber":202,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":203,"author":{"gitId":"eugenecsa"},"content":"    public ArrayList\u003cString\u003e findTag(String tag) {","lastModifiedDate":"2021-09-09"},{"lineNumber":204,"author":{"gitId":"eugenecsa"},"content":"        assert !tag.equals(\"\") : \"Tag cannot be blank\";","lastModifiedDate":"2021-09-09"},{"lineNumber":205,"author":{"gitId":"eugenecsa"},"content":"        ArrayList\u003cString\u003e resultArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-09"},{"lineNumber":206,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":207,"author":{"gitId":"eugenecsa"},"content":"        for (Task t : list) {","lastModifiedDate":"2021-09-09"},{"lineNumber":208,"author":{"gitId":"eugenecsa"},"content":"            if (t.getTag().equals(tag)) {","lastModifiedDate":"2021-09-09"},{"lineNumber":209,"author":{"gitId":"eugenecsa"},"content":"                resultArray.add(t.toString());","lastModifiedDate":"2021-09-09"},{"lineNumber":210,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":211,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":212,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":213,"author":{"gitId":"eugenecsa"},"content":"        return resultArray;","lastModifiedDate":"2021-09-09"},{"lineNumber":214,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":215,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":216,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":217,"author":{"gitId":"eugenecsa"},"content":"     * Takes in a keyword and searches for all tasks that contains the keyword in","lastModifiedDate":"2021-09-09"},{"lineNumber":218,"author":{"gitId":"eugenecsa"},"content":"     * the description. Returns the results in an ArrayList of Strings.","lastModifiedDate":"2021-09-09"},{"lineNumber":219,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":220,"author":{"gitId":"eugenecsa"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2021-09-09"},{"lineNumber":221,"author":{"gitId":"eugenecsa"},"content":"     * @return An Arraylist of Strings containing all matching tasks.","lastModifiedDate":"2021-09-09"},{"lineNumber":222,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":223,"author":{"gitId":"eugenecsa"},"content":"    public ArrayList\u003cString\u003e findKeyword(String keyword) {","lastModifiedDate":"2021-09-09"},{"lineNumber":224,"author":{"gitId":"eugenecsa"},"content":"        assert !keyword.equals(\"\") : \"Keyword cannot be blank\";","lastModifiedDate":"2021-09-07"},{"lineNumber":225,"author":{"gitId":"eugenecsa"},"content":"        ArrayList\u003cString\u003e resultArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":226,"author":{"gitId":"eugenecsa"},"content":"        keyword \u003d keyword.toLowerCase();","lastModifiedDate":"2021-08-25"},{"lineNumber":227,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":228,"author":{"gitId":"eugenecsa"},"content":"        for (Task t : list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":229,"author":{"gitId":"eugenecsa"},"content":"            if (t.getDescription().toLowerCase().contains(keyword)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":230,"author":{"gitId":"eugenecsa"},"content":"                resultArray.add(t.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":231,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":232,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":233,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":234,"author":{"gitId":"eugenecsa"},"content":"        return resultArray;","lastModifiedDate":"2021-08-25"},{"lineNumber":235,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":236,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":237,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":238,"author":{"gitId":"eugenecsa"},"content":"     * Returns an array of tasks in their string representation.","lastModifiedDate":"2021-08-25"},{"lineNumber":239,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":240,"author":{"gitId":"eugenecsa"},"content":"     * @return Array of tasks in string form.","lastModifiedDate":"2021-08-25"},{"lineNumber":241,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":242,"author":{"gitId":"eugenecsa"},"content":"    public ArrayList\u003cString\u003e getTaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":243,"author":{"gitId":"eugenecsa"},"content":"        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":244,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":245,"author":{"gitId":"eugenecsa"},"content":"        for (Task t : list) {","lastModifiedDate":"2021-08-25"},{"lineNumber":246,"author":{"gitId":"eugenecsa"},"content":"            tasks.add(t.toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":247,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":248,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":249,"author":{"gitId":"eugenecsa"},"content":"        return tasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":250,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":251,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":251}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":" * A type of Task. Inherits from Task, does not have any date/time attached to it.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for ToDo.","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"     * Takes in the description of the ToDo.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for ToDo.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"     * Takes in the description and the status of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"     * @param isDone Indicates if the task is done.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"    public ToDo(String description, Boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"        this(description);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"        super.setDone(isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"     * Returns the string representation of the class.","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of the class.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"     * Returns a string formatted for writing into file.","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of the task for file writing.","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"        return \"T,\" + super.saveString();","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":48}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":" * The Ui class handles the input and output of the program.","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"public class Ui {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"    private final Scanner SCANNER;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"    private String separator \u003d \"-----------------------------------------\" +","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"            \"------------------------------------------------\";","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Ui.","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"    public Ui() {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"        this.SCANNER \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"     * Shows the exit message.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"     * @return The output string.","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"    public String showGoodBye() {","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"        return writeOutput(\"    Bye. Hope to see you again!\");","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"     * Lists the items in the list in the order added, along with a counter.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"     * @param taskList The list of task.","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"     * @return The output string.","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"    public String showList(ArrayList\u003cString\u003e taskList) {","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"        String list \u003d \"\";","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"        int count \u003d 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"        for (String s : taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"            list +\u003d count + \". \" + s + \"\\n\";","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"            count++;","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"        return writeOutput(list);","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"     * Writes the message to output with a line divider around it.","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"     * @param message The message to be displayed.","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"     * @return The output string.","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"    public String writeOutput(String message) {","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"        String output \u003d separator + \"\\n\";","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"        output +\u003d message + \"\\n\";","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"        output +\u003d separator + \"\\n\";","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"        return output;","lastModifiedDate":"2021-09-03"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"     * Displays the error message based on the given command.","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"     * @param command Determines which error message to display.","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"     * @return The output string.","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"    public String showInputError(String command) {","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"        switch(command){","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"        case(\"done\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"            output \u003d writeOutput(\"Enter an integer after done...\");","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"        case(\"delete\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"            output \u003d writeOutput(\"Enter an integer after delete...\");","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"        case(\"todo\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"            output \u003d writeOutput(\"The description of ToDo cannot be empty!\\n Please try again :-(\");","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"        case(\"deadline\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"            output \u003d writeOutput(\"Follow the format: \\ndeadline %description% /by %date%\");","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"        case(\"event\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"            output \u003d writeOutput(\"Follow the format: \\nevent %description% /at %date/time%\");","lastModifiedDate":"2021-09-03"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"        case(\"dateformat\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"            output \u003d writeOutput(\"Date format is wrong.\\nPlease follow the format YYYY-MM-DD\");","lastModifiedDate":"2021-09-03"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"        case(\"invalid\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"            output \u003d writeOutput(\"Command not recognised!\\n\" + menu());","lastModifiedDate":"2021-09-03"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"        case(\"index\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"            output \u003d writeOutput(\"You forgot to indicate which task!!!\");","lastModifiedDate":"2021-09-03"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"        case(\"find\"):","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"            output \u003d writeOutput(\"Please enter a keyword/phrase/#tag to search for!\");","lastModifiedDate":"2021-09-09"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-09-09"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"        case(\"tag\"):","lastModifiedDate":"2021-09-09"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"            output \u003d writeOutput(\"Enter an integer followed by #tagName after tag...\");","lastModifiedDate":"2021-09-09"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"        default:","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"            output \u003d writeOutput(\"Oops, something went wrong!\");","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"eugenecsa"},"content":"            break;","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"eugenecsa"},"content":"        return output;","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":107,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":109,"author":{"gitId":"eugenecsa"},"content":"     * Displays the error message given by DukeException.","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"eugenecsa"},"content":"     * @param e DukeException instance.","lastModifiedDate":"2021-08-25"},{"lineNumber":112,"author":{"gitId":"eugenecsa"},"content":"     * @return The output string.","lastModifiedDate":"2021-09-03"},{"lineNumber":113,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"eugenecsa"},"content":"    public String showDukeException(DukeException e) {","lastModifiedDate":"2021-09-03"},{"lineNumber":115,"author":{"gitId":"eugenecsa"},"content":"        return writeOutput(e.getMessage());","lastModifiedDate":"2021-09-03"},{"lineNumber":116,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":117,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"eugenecsa"},"content":"     * Returns a menu string.","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":121,"author":{"gitId":"eugenecsa"},"content":"     * @return A String representing the menu.","lastModifiedDate":"2021-08-25"},{"lineNumber":122,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":123,"author":{"gitId":"eugenecsa"},"content":"    public String menu() {","lastModifiedDate":"2021-08-25"},{"lineNumber":124,"author":{"gitId":"eugenecsa"},"content":"        return \"Commands supported:\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":125,"author":{"gitId":"eugenecsa"},"content":"                + \"bye: Quit program\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":126,"author":{"gitId":"eugenecsa"},"content":"                + \"list: Displays the list of tasks\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":127,"author":{"gitId":"eugenecsa"},"content":"                + \"find {keyword}: Shows a list of tasks containing {keyword}\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":128,"author":{"gitId":"eugenecsa"},"content":"                + \"done {index}: Marks the {index} task as done\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":129,"author":{"gitId":"eugenecsa"},"content":"                + \"delete {index}: Deletes the {index} task\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":130,"author":{"gitId":"eugenecsa"},"content":"                + \"tag {index} #{tag}: tag the {index} task with {tag}\"","lastModifiedDate":"2021-09-16"},{"lineNumber":131,"author":{"gitId":"eugenecsa"},"content":"                + \"todo {task name}: Adds {task name} to the list\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":132,"author":{"gitId":"eugenecsa"},"content":"                + \"deadline {task name} /by {YYYY-MM-DD}: Adds {task name} to the list with a deadline\\n\"","lastModifiedDate":"2021-08-25"},{"lineNumber":133,"author":{"gitId":"eugenecsa"},"content":"                + \"event {task name} /by {YYYY-MM-DD}: Adds {task name} to the list with an event date\";","lastModifiedDate":"2021-08-25"},{"lineNumber":134,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"eugenecsa":135}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package gui;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":" * Dialog Box for Duke program GUI.","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"    private Label text;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"    public DialogBox(Label l, ImageView iv, String color) {","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"        text \u003d l;","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"        text.setWrapText(true);","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"        text.setStyle(\"-fx-padding: 10;\"","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"                + \"-fx-border-color: blue;\"","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"                + \"-fx-border-radius: 10px;\");","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"        this.setSpacing(10);","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"        this.setStyle(\"-fx-background-color:\" + color);","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"    private void flip() {","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"        return new DialogBox(l, iv, \"LemonChiffon\");","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"        var db \u003d new DialogBox(l, iv, \"Lavender\");","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"        db.flip();","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"        return db;","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"eugenecsa":55}},{"path":"src/main/java/gui/DukeGui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package gui;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":" * Creates the GUI for use with Duke program.","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"public class DukeGui extends Application {","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"    private Scene scene;","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"    private Image bot \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"        //The container for the content of the chat to scroll","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"        Path filePath \u003d Paths.get(\"duke.txt\");","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"        duke \u003d new Duke(filePath);","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"        stage.show();","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"        // Specifications of the layout","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-09-03"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"        stage.setMinHeight(800.0);","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"        stage.setMinWidth(600.0);","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"        mainLayout.setPrefSize(600.0, 800.0);","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"        scrollPane.setPrefSize(585, 735);","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-09-03"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"        userInput.setPrefWidth(525.0);","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"        // Show welcome message","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"        showWelcomeMessage();","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"        // Interacting with the user","lastModifiedDate":"2021-09-03"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2021-09-03"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"            handleUserInput();","lastModifiedDate":"2021-09-03"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"        });","lastModifiedDate":"2021-09-03"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2021-09-03"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"            handleUserInput();","lastModifiedDate":"2021-09-03"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"        });","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-09-03"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"eugenecsa"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-03"},{"lineNumber":103,"author":{"gitId":"eugenecsa"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"eugenecsa"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"eugenecsa"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-03"},{"lineNumber":107,"author":{"gitId":"eugenecsa"},"content":"        Label userText \u003d new Label(input);","lastModifiedDate":"2021-09-03"},{"lineNumber":108,"author":{"gitId":"eugenecsa"},"content":"        Label dukeText \u003d new Label(getResponse(input));","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"eugenecsa"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"eugenecsa"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"eugenecsa"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(bot))","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"eugenecsa"},"content":"        );","lastModifiedDate":"2021-09-03"},{"lineNumber":113,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"eugenecsa"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-03"},{"lineNumber":115,"author":{"gitId":"eugenecsa"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-03"},{"lineNumber":116,"author":{"gitId":"eugenecsa"},"content":"            Platform.exit();","lastModifiedDate":"2021-09-03"},{"lineNumber":117,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-09-03"},{"lineNumber":118,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":119,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":120,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":121,"author":{"gitId":"eugenecsa"},"content":"     * Gets the response for the given input.","lastModifiedDate":"2021-09-03"},{"lineNumber":122,"author":{"gitId":"eugenecsa"},"content":"     * @param input The given input.","lastModifiedDate":"2021-09-03"},{"lineNumber":123,"author":{"gitId":"eugenecsa"},"content":"     * @return The response from the program.","lastModifiedDate":"2021-09-03"},{"lineNumber":124,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":125,"author":{"gitId":"eugenecsa"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2021-09-03"},{"lineNumber":126,"author":{"gitId":"eugenecsa"},"content":"        return duke.readInput(input);","lastModifiedDate":"2021-09-03"},{"lineNumber":127,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":128,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":129,"author":{"gitId":"eugenecsa"},"content":"    private void showWelcomeMessage() {","lastModifiedDate":"2021-09-16"},{"lineNumber":130,"author":{"gitId":"eugenecsa"},"content":"        String input \u003d","lastModifiedDate":"2021-09-16"},{"lineNumber":131,"author":{"gitId":"eugenecsa"},"content":"                \" ___           _        \\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":132,"author":{"gitId":"eugenecsa"},"content":"                + \"|   _  \\\\  ___ | | _____ \\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":133,"author":{"gitId":"eugenecsa"},"content":"                + \"|  | |  |/  _  \\\\| |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":134,"author":{"gitId":"eugenecsa"},"content":"                + \"|  |_|  |  |_|  |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":135,"author":{"gitId":"eugenecsa"},"content":"                + \"|____/ \\\\___/|_|\\\\_\\\\___|\\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":136,"author":{"gitId":"eugenecsa"},"content":"                + \"Hello! I\u0027m Doke\\nWhat do you want??\\n\";","lastModifiedDate":"2021-09-16"},{"lineNumber":137,"author":{"gitId":"eugenecsa"},"content":"        Label dukeText \u003d new Label(input);","lastModifiedDate":"2021-09-16"},{"lineNumber":138,"author":{"gitId":"eugenecsa"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-16"},{"lineNumber":139,"author":{"gitId":"eugenecsa"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(bot))","lastModifiedDate":"2021-09-16"},{"lineNumber":140,"author":{"gitId":"eugenecsa"},"content":"        );","lastModifiedDate":"2021-09-16"},{"lineNumber":141,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":142,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":143,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"eugenecsa":143}},{"path":"src/main/resources/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"T,true,addTask, ","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"T,false,task 5, ","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"D,false,IP,due soon,2021-09-17","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"T,true,delete event, ","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"D,false,Coding Project, ,2021-09-17","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"E,false,Intern Interview, ,2021-12-03","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"eugenecsa":6}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"package duke;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"public class TaskListTest {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"    private TaskList createTaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"        ArrayList\u003cString\u003e array \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"        array.add(\"T,false,task 1\");","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"        array.add(\"D,false,task 2 ,2021-08-24\");","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"        array.add(\"E,true,task 3 ,2021-08-25\");","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"        array.add(\"T,true,task 4\");","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"        return new TaskList(array);","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"    public void testAddTest() {","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"        assertEquals(\"T,false,task 1\", tasklist.addToDo(\"task 1\"));","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"    public void testAddTestWithDate() {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"        assertEquals(\"D,false,task 1,2021-08-08\",","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"                new TaskList().addDeadline(\"task 1\", LocalDate.parse(\"2021-08-08\")));","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    public void testChangeTaskStatus() {","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"        TaskList tasklist \u003d createTaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"            String s \u003d tasklist.markAsDone(2);","lastModifiedDate":"2021-09-09"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"            assertEquals(\"[D][X] task 2  (by: Aug 24 2021)\\nNumber of tasks remaining: 4\", s);","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"    public void changeTaskStatus_indexOutOfBounds_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"        TaskList tasklist \u003d createTaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"            String s \u003d tasklist.markAsDone(5);","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"            assertEquals(\"[D][X] task 2  (by: Aug 24 2021)\\nNumber of tasks remaining: 4\", s);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"            fail(); //the test should not reach this line","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"            assertEquals(\"Task does not exist. Use list to check all tasks available.\", e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"        TaskList tasklist \u003d createTaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"            String s \u003d tasklist.deleteTask(2);","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"            assertEquals(\"[D][ ] task 2  (by: Aug 24 2021)\\nNumber of tasks remaining: 3\", s);","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"            fail();","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"    @Test","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"    public void deleteTask_indexOutOfBounds_exceptionThrown() {","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"        TaskList tasklist \u003d createTaskList();","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"            String s \u003d tasklist.markAsDone(5);","lastModifiedDate":"2021-09-09"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"            assertEquals(\"[D][ ] task 2  (by: Aug 24 2021)\\nNumber of tasks remaining: 3\", s);","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"            fail(); //the test should not reach this line","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"            assertEquals(\"Task does not exist. Use list to check all tasks available.\", e.getMessage());","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"eugenecsa":78}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"todo visit library","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"todo borrow books","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"deadline return books /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"event team meeting /at 21 Jul 4-6PM","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"todo study for exams","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":10}}]
