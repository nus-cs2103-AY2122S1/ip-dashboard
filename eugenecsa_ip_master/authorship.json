[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":" * A type of Task. Inherits from Task, takes in a deadline that","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":" * specifies when task has to be completed by.","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"    private String deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Deadline. Takes in a description and a deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"     * @param description","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"     * @param deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"     * Returns the string representation of the Deadline class.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of Deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":28}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"                + \"|  _ \\\\  ___ | | _____ \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"                + \"| | | |/ _ \\\\| |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"                + \"|____/ \\\\___/|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(\"----------------------------------------\");","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(\"Hello! I\u0027m Doke\\nWhat do you want??\");","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(\"----------------------------------------\");","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"        readMessage();","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"     * Reads messages from input. Perform operations based on the input given.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"    public static void readMessage() {","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"        Scanner messageReader \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"        List list  \u003d new List();","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"        boolean end \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"        while (!end) {","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"            // Get input and split by space to get the first word (the command)","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"            String message \u003d messageReader.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"            String[] splitMessage \u003d message.split(\" \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"            String command \u003d splitMessage[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"            // Output a response based on command","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"            System.out.println(\"----------------------------------------\");","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"            String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"            String dateTime;","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"            switch(command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"                case(\"bye\"): // Print exit message, exit the program","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"                    System.out.println(\"    Bye. Hope to see you again!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"                    end \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"                case(\"list\"): // List the current tasks and their status","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"                    list.listItems();","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"                case(\"done\"): // Mark a task as done and display the task","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"                    try {","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"                        int taskNumber \u003d Integer.parseInt(message.split(\" \")[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"                        String taskMessage \u003d list.changeTaskStatus(taskNumber);","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"                        System.out.println(\"Alright, I have marked the task as done:\\n\" + taskMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"                        System.out.println(\"You forgot to indicate which task!!!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"                    } catch (NumberFormatException n) {","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"                        System.out.println(\"Enter done followed by an integer representing the task...\");","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"                    } catch (DukeException d) {","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"                        System.out.println(d.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"                case(\"delete\"): // Delete the task indicated","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"                    try {","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"                        int taskNumber \u003d Integer.parseInt(message.split(\" \")[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"                        String taskMessage \u003d list.deleteTask(taskNumber);","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"                        System.out.println(\"Alright, I have removed the following task:\\n\" + taskMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"                        System.out.println(\"You forgot to indicate which task!!!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"                    } catch (NumberFormatException n) {","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"                        System.out.println(\"Enter delete followed by an integer representing the task...\");","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"                    } catch (DukeException d) {","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"                        System.out.println(d.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"                case(\"todo\"): // Create a ToDo task and display the task","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"                    try {","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"                        description \u003d splitMessage[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"                        list.addTask(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"                        System.out.println(\"The description of ToDo cannot be empty!\\n Please try again :-(\");","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"                case(\"deadline\"): // Create a Deadline task and display the task","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"                    try {","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"                        description \u003d splitMessage[1].split(\"/by\")[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"                        dateTime \u003d splitMessage[1].split(\"/by\")[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"                        list.addTask(description, dateTime, command);","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"                        System.out.println(\"Follow the format: \\ndeadline %description% /by %date/time%\");","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"                case(\"event\"): // Create an Event task and display the task","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"                    try {","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"                        description \u003d splitMessage[1].split(\"/at\")[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"                        dateTime \u003d splitMessage[1].split(\"/at\")[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"                        list.addTask(description, dateTime, command);","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"                    } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"                        System.out.println(\"Follow the format: \\nevent %description% /at %date/time%\");","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"                default: // If input does not have a recognised command","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"                    System.out.println(\"Command not recognised!!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"            System.out.println(\"----------------------------------------\");","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":6,"eugenecsa":99}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"eugenecsa":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":" * A type of Task. Inherits from Task, takes in a date/time that","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":" * specifies when event is happening.","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"    private String dateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Event. Takes in a description and a dateTime.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the event.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"     * @param dateTime The date/time the event occurs.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"    public Event(String description, String dateTime) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"     * Returns the string representation of the Event class.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of Event.","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"        return \"[E]\" + super.toString() + \" (on: \" + this.dateTime + \")\";","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":28}},{"path":"src/main/java/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":" * The List class stores the list of items. Items are stored in","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":" * an ArrayList of Strings. Supports adding of new items to the list","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":" * and printing of the entire current list.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"public class List {","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for List class.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"    public List() {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"     * Adds a ToDo to the list.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task to be added","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"    public void addTask(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(\"Task added successfully: \\n\" + task);","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(\"Number of tasks in list: \" + list.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"     * Adds an Event or Deadline to the list.","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"     * @param description","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"     * @param dateTime","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"     * @param type","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"    public void addTask(String description, String dateTime, String type) {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"        Task task;","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"        if (type.equals(\"deadline\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"            task \u003d new Deadline(description, dateTime);","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"            task \u003d new Event(description, dateTime);","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(\"Task added successfully: \\n\" + task);","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(\"Number of tasks in list: \" + list.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"     * Changes the status for the task indicated by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"     * @param taskNumber The index(plus 1) of the task to be marked as done","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"     * @return The string representation of the task after it is marked as done","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"    public String changeTaskStatus(int taskNumber) throws DukeException{","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e this.list.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"            throw new DukeException(\"Task does not exist. Use list to check all tasks available.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"            Task task \u003d list.get(taskNumber - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"            task.doneTask();","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"            return task.toString() + \"\\nNumber of tasks remaining: \" + list.size();","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"    public String deleteTask(int taskNumber) throws DukeException{","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e this.list.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"            throw new DukeException(\"Task does not exist. Use list to check all tasks available.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"            Task task \u003d list.get(taskNumber - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"            list.remove(taskNumber - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"            return task.toString() + \"\\nNumber of tasks remaining: \" + list.size();","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"     * List the items in the list in the order added, along with a counter.","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"    public void listItems() {","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"            System.out.println(i + \". \" + list.get(i-1));","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":83}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":" * Represents a task. Contains the description and state of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":" * Allows for changing of the state of the class.","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"    private String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Task. Takes in the description of the task,","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"     * and sets the task as not done.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the class.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"     * Change the status of the Task to true","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"    public void doneTask() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"     * Returns the string representation of the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"     * @return String containing description and status indicator for Task","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":42}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":" * A type of Task. Inherits from Task, does not have any date/time attached to it.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for ToDo. Takes in the description of the ToDo.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"     * @param description","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"     * Returns the string representation of the class.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of the class","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"todo visit library","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"todo borrow books","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"deadline return books /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"event team meeting /at 21 Jul 4-6PM","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"todo study for exams","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":10}}]
