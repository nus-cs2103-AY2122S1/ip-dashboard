[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":" * A type of Task. Inherits from Task, takes in a deadline that","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":" * specifies when task has to be completed by.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"    private LocalDate deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"     * Takes in a description and a deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"     * @param deadline The deadline of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"    public Deadline(String description, LocalDate deadline) {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"     * Takes in a description, deadline, and the status of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"     * @param deadline The deadline of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"     * @param isDone Indicates if the task is done","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"    public Deadline(String description, LocalDate deadline, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"        super.setDone(isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"     * Returns the string representation of the Deadline class.","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of Deadline.","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"                + this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"     * Returns a string formatted for writing into file.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of the task for file writing","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"        return \"D,\" + super.saveString() + \",\" + this.deadline;","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":57}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"import java.io.File;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":" * Main class of Duke chatbot.","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"    public static final Path filePath \u003d Paths.get(\"src\",\"main\", \"data\", \"duke.txt\");","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"                + \"|  _ \\\\  ___ | | _____ \\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"                + \"| | | |/ _ \\\\| |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"                + \"|____/ \\\\___/|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(\"----------------------------------------\");","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(\"Hello! I\u0027m Doke\\nWhat do you want??\");","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(\"----------------------------------------\");","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"        List list \u003d readFile(filePath);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"        readMessage(list);","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"     * Reads messages from input.","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"     * Perform operations based on the input given.","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"     * @param list The list of task","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"    public static void readMessage(List list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"        Scanner messageReader \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"        boolean end \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"        while (!end) {","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"            // Get input and split by space to get the first word (the command)","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"            String message \u003d messageReader.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"            String[] splitMessage \u003d message.split(\" \", 2);","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"            String command \u003d splitMessage[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"            // Output a response based on command","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"            System.out.println(\"----------------------------------------\");","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"            String description;","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"            String dateTime;","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"            switch(command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"            case(\"bye\"): // Print exit message, exit the program","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"                System.out.println(\"    Bye. Hope to see you again!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"                end \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"            case(\"list\"): // List the current tasks and their status","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"                list.listItems();","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"            case(\"done\"): // Mark a task as done and display the task","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"                    int taskNumber \u003d Integer.parseInt(message.split(\" \")[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"                    String taskMessage \u003d list.changeTaskStatus(taskNumber);","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"                    System.out.println(\"Alright, I have marked the task as done:\\n\" + taskMessage);","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"                    System.out.println(\"You forgot to indicate which task!!!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"                } catch (NumberFormatException n) {","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"                    System.out.println(\"Enter done followed by an integer representing the task...\");","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"                } catch (DukeException d) {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"                    System.out.println(d.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"            case(\"delete\"): // Delete the task indicated","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"                    int taskNumber \u003d Integer.parseInt(message.split(\" \")[1]);","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"                    String taskMessage \u003d list.deleteTask(taskNumber);","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"                    System.out.println(\"Alright, I have removed the following task:\\n\" + taskMessage);","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"                    System.out.println(\"You forgot to indicate which task!!!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"                } catch (NumberFormatException n) {","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"                    System.out.println(\"Enter delete followed by an integer representing the task...\");","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"                } catch (DukeException d) {","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"                    System.out.println(d.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"            case(\"todo\"): // Create a ToDo task and display the task","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"                    description \u003d splitMessage[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"                    list.addTask(description);","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"                    System.out.println(\"The description of ToDo cannot be empty!\\n Please try again :-(\");","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"            case(\"deadline\"): // Create a Deadline task and display the task","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"                    description \u003d splitMessage[1].split(\"/by \")[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"                    dateTime \u003d splitMessage[1].split(\"/by \")[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"                    LocalDate date \u003d LocalDate.parse(dateTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"                    list.addTask(description, date, command);","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"                    System.out.println(\"Follow the format: \\ndeadline %description% /by %date/time%\");","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"eugenecsa"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"eugenecsa"},"content":"                    System.out.println(\"Date format is wrong.\\nPlease follow the format YYYY-MM-DD\");","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"eugenecsa"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"eugenecsa"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"eugenecsa"},"content":"            case(\"event\"): // Create an Event task and display the task","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"eugenecsa"},"content":"                try {","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"eugenecsa"},"content":"                    description \u003d splitMessage[1].split(\"/at \")[0];","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"eugenecsa"},"content":"                    dateTime \u003d splitMessage[1].split(\"/at \")[1];","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"eugenecsa"},"content":"                    LocalDate date \u003d LocalDate.parse(dateTime);","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"eugenecsa"},"content":"                    list.addTask(description, date, command);","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"eugenecsa"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"eugenecsa"},"content":"                    System.out.println(\"Follow the format: \\nevent %description% /at %date/time%\");","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"eugenecsa"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"eugenecsa"},"content":"                    System.out.println(\"Date format is wrong.\\nPlease follow the format YYYY-MM-DD\");","lastModifiedDate":"2021-08-24"},{"lineNumber":116,"author":{"gitId":"eugenecsa"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"eugenecsa"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"eugenecsa"},"content":"            default: // If input does not have a recognised command","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"eugenecsa"},"content":"                System.out.println(\"Command not recognised!!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":120,"author":{"gitId":"eugenecsa"},"content":"                break;","lastModifiedDate":"2021-08-24"},{"lineNumber":121,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"eugenecsa"},"content":"            System.out.println(\"----------------------------------------\");","lastModifiedDate":"2021-08-24"},{"lineNumber":123,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":124,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":127,"author":{"gitId":"eugenecsa"},"content":"     * Read from file containing task list.","lastModifiedDate":"2021-08-24"},{"lineNumber":128,"author":{"gitId":"eugenecsa"},"content":"     * Loads the tasks into a List and returns it.","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"eugenecsa"},"content":"     * @param filepath The path of the file to read from","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"eugenecsa"},"content":"     * @return A list of task with preloaded task if saved data is available","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"eugenecsa"},"content":"    public static List readFile(Path filepath) {","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"eugenecsa"},"content":"        List list \u003d new List();","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":136,"author":{"gitId":"eugenecsa"},"content":"        // Read from file and creates the list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"eugenecsa"},"content":"            File file \u003d new File(filepath.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"eugenecsa"},"content":"            Scanner fileReader \u003d new Scanner(file);","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"eugenecsa"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"eugenecsa"},"content":"                String data \u003d fileReader.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"eugenecsa"},"content":"                String[] splitData \u003d data.split(\",\");","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"eugenecsa"},"content":"                switch(splitData[0]) {","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"eugenecsa"},"content":"                case(\"T\"):","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"eugenecsa"},"content":"                    list.addTask(splitData[2], Boolean.parseBoolean(splitData[1]));","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"eugenecsa"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"eugenecsa"},"content":"                case(\"D\"):","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"eugenecsa"},"content":"                    list.addTask(splitData[2], LocalDate.parse(splitData[3]),","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"eugenecsa"},"content":"                            \"deadline\", Boolean.parseBoolean(splitData[1]));","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"eugenecsa"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"eugenecsa"},"content":"                case(\"E\"):","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"eugenecsa"},"content":"                    list.addTask(splitData[2], LocalDate.parse(splitData[3]),","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"eugenecsa"},"content":"                            \"event\", Boolean.parseBoolean(splitData[1]));","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"eugenecsa"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"eugenecsa"},"content":"            fileReader.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"eugenecsa"},"content":"        } catch (FileNotFoundException f) {","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"eugenecsa"},"content":"            // Warn user that the program is starting from a fresh state and creates the save file","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"eugenecsa"},"content":"            System.out.println(\"No previous data, starting fresh program.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"eugenecsa"},"content":"            createFile(filepath.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"eugenecsa"},"content":"        return list;","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":165,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":166,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"eugenecsa"},"content":"     * Create a new file for saving data.","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"eugenecsa"},"content":"     * @param filename The name of the file to be created","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"eugenecsa"},"content":"    public static void createFile(String filename) {","lastModifiedDate":"2021-08-24"},{"lineNumber":172,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":173,"author":{"gitId":"eugenecsa"},"content":"            File newFile \u003d new File(filename);","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"eugenecsa"},"content":"            if (newFile.createNewFile()) {","lastModifiedDate":"2021-08-24"},{"lineNumber":175,"author":{"gitId":"eugenecsa"},"content":"                System.out.println(\"New save file created.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"eugenecsa"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"eugenecsa"},"content":"                throw new DukeException(\"Unable to create save file\");","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"eugenecsa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"eugenecsa"},"content":"            System.out.println(\"Error creating file\");","lastModifiedDate":"2021-08-24"},{"lineNumber":181,"author":{"gitId":"eugenecsa"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-08-24"},{"lineNumber":182,"author":{"gitId":"eugenecsa"},"content":"        } catch (DukeException d) {","lastModifiedDate":"2021-08-24"},{"lineNumber":183,"author":{"gitId":"eugenecsa"},"content":"            System.out.println(d.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":6,"eugenecsa":180}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"        super(message);","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"eugenecsa":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":" * A type of Task. Inherits from Task, takes in a date/time that","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":" * specifies when event is happening.","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"    private LocalDate dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Event. Takes in a description and a dateTime.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the event","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"     * @param dateTime The date/time the event occurs","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"    public Event(String description, LocalDate dateTime) {","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"     * Takes in description, dateTime and the status of the event.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the event","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"     * @param dateTime The date/time the event occurs","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"     * @param isDone indicates if the event is done","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"    public Event(String description, LocalDate dateTime, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"        super.setDone(isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"     * Returns the string representation of the Event class.","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of Event","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"        return \"[E]\" + super.toString() + \" (on: \"","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"                + this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"     * Returns a string formatted for writing into file.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of the task for file writing","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"        return \"E,\" + super.saveString() + \",\" + this.dateTime;","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":56}},{"path":"src/main/java/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":" * The List class stores the list of items. Items are stored in","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":" * an ArrayList of Strings. Supports adding of new items to the list","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":" * and printing of the entire current list.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"public class List {","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for List class.","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"    public List() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"     * Adds a task the list and saves to the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"    public void addTask(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(\"Task added successfully: \\n\" + task);","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(\"Number of tasks in list: \" + list.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"        saveTask(task.saveString());","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"     * Adds a task the list without saving to file.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"     * @param isDone Indicates if the task is done","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"    public void addTask(String description, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"        Task task \u003d new ToDo(description, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"     * Adds a task the list and saves to the file.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"     * Task added have a date/time attached.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"     * @param date The date/time attached to the task","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"     * @param type Indicates if the task is a Deadline or Event","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"    public void addTask(String description, LocalDate date, String type) {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"        Task task;","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"eugenecsa"},"content":"        if (type.equals(\"deadline\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"eugenecsa"},"content":"            task \u003d new Deadline(description, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"eugenecsa"},"content":"            saveTask(task.saveString());","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"eugenecsa"},"content":"        } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"eugenecsa"},"content":"            task \u003d new Event(description, date);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"eugenecsa"},"content":"            saveTask(task.saveString());","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"eugenecsa"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(\"Task added successfully: \\n\" + task);","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"eugenecsa"},"content":"        System.out.println(\"Number of tasks in list: \" + list.size());","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"eugenecsa"},"content":"     * Adds a task the list without saving to file.","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"eugenecsa"},"content":"     * Task added have a date/time attached.","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"eugenecsa"},"content":"     * @param dateTime","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"eugenecsa"},"content":"     * @param type","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"eugenecsa"},"content":"     * @param isDone Indicates if the task is done","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"eugenecsa"},"content":"    public void addTask(String description, LocalDate dateTime, String type, boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"eugenecsa"},"content":"        Task task;","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"eugenecsa"},"content":"        if (type.equals(\"deadline\")) {","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"eugenecsa"},"content":"            task \u003d new Deadline(description, dateTime, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"eugenecsa"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"eugenecsa"},"content":"            task \u003d new Event(description, dateTime, isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"eugenecsa"},"content":"        this.list.add(task);","lastModifiedDate":"2021-08-24"},{"lineNumber":86,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"eugenecsa"},"content":"     * Changes the status for the task indicated by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"eugenecsa"},"content":"     * @param taskNumber The index(plus 1) of the task to be marked as done","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"eugenecsa"},"content":"     * @return The string representation of the task after it is marked as done","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"eugenecsa"},"content":"    public String changeTaskStatus(int taskNumber) throws DukeException{","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"eugenecsa"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e this.list.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"eugenecsa"},"content":"            throw new DukeException(\"Task does not exist. Use list to check all tasks available.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"eugenecsa"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"eugenecsa"},"content":"            Task task \u003d list.get(taskNumber - 1);","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"eugenecsa"},"content":"            task.setDone(true);","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"eugenecsa"},"content":"            rewriteFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"eugenecsa"},"content":"            return task.toString() + \"\\nNumber of tasks remaining: \" + list.size();","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":106,"author":{"gitId":"eugenecsa"},"content":"     * Deletes the task indicated from the list.","lastModifiedDate":"2021-08-24"},{"lineNumber":107,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":108,"author":{"gitId":"eugenecsa"},"content":"     * @param taskNumber The index of the task to be deleted","lastModifiedDate":"2021-08-24"},{"lineNumber":109,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of the task deleted","lastModifiedDate":"2021-08-24"},{"lineNumber":110,"author":{"gitId":"eugenecsa"},"content":"     * @throws DukeException If taskNumber is an invalid index","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"eugenecsa"},"content":"    public String deleteTask(int taskNumber) throws DukeException{","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"eugenecsa"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e this.list.size()) {","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"eugenecsa"},"content":"            throw new DukeException(\"Task does not exist. Use list to check all tasks available.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"eugenecsa"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"eugenecsa"},"content":"            Task task \u003d list.get(taskNumber - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"eugenecsa"},"content":"            list.remove(taskNumber - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"eugenecsa"},"content":"            rewriteFile();","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"eugenecsa"},"content":"            return task.toString() + \"\\nNumber of tasks remaining: \" + list.size();","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":121,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":123,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":124,"author":{"gitId":"eugenecsa"},"content":"     * List the items in the list in the order added, along with a counter.","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":126,"author":{"gitId":"eugenecsa"},"content":"    public void listItems() {","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"eugenecsa"},"content":"        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"eugenecsa"},"content":"            System.out.println(i + \". \" + list.get(i-1));","lastModifiedDate":"2021-08-18"},{"lineNumber":129,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"eugenecsa"},"content":"     * Save the given task string to file.","lastModifiedDate":"2021-08-24"},{"lineNumber":134,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":135,"author":{"gitId":"eugenecsa"},"content":"     * @param taskString The task in string representation","lastModifiedDate":"2021-08-24"},{"lineNumber":136,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"eugenecsa"},"content":"    private void saveTask(String taskString) {","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":139,"author":{"gitId":"eugenecsa"},"content":"            FileWriter writer \u003d new FileWriter(Duke.filePath.toString(), true);","lastModifiedDate":"2021-08-24"},{"lineNumber":140,"author":{"gitId":"eugenecsa"},"content":"            writer.write(taskString + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":141,"author":{"gitId":"eugenecsa"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":142,"author":{"gitId":"eugenecsa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":143,"author":{"gitId":"eugenecsa"},"content":"            System.out.println(\"Error saving task.\\n\" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":144,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":145,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":146,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":147,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":148,"author":{"gitId":"eugenecsa"},"content":"     * Rewrite the file with the latest list of tasks.","lastModifiedDate":"2021-08-24"},{"lineNumber":149,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":150,"author":{"gitId":"eugenecsa"},"content":"    private void rewriteFile() {","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"eugenecsa"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":152,"author":{"gitId":"eugenecsa"},"content":"            FileWriter writer \u003d new FileWriter(Duke.filePath.toString());","lastModifiedDate":"2021-08-24"},{"lineNumber":153,"author":{"gitId":"eugenecsa"},"content":"            for (Task task : list) {","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"eugenecsa"},"content":"                writer.write(task.saveString() + \"\\n\");","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"eugenecsa"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":156,"author":{"gitId":"eugenecsa"},"content":"            writer.close();","lastModifiedDate":"2021-08-24"},{"lineNumber":157,"author":{"gitId":"eugenecsa"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":158,"author":{"gitId":"eugenecsa"},"content":"            System.out.println(\"Failed to rewrite file\\n\" + e.getMessage());","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"eugenecsa"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":160,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":161}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":" * Represents a task. Contains the description and state of the task.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":" * Allows for changing of the state of the class.","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"    private String description;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"     * Takes in the description of the task,","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"     * and sets the task as not done.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the class.","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"     * Change the status of the Task to true","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"     * Returns the string representation of the Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"     * @return String containing description and status indicator for Task","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"     * Returns the string representation of the task\u0027s state","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"     * @return \"X\" if task is done, \" \" otherwise","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"eugenecsa"},"content":"     * Returns a string formatted for writing into file.","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of the task for file writing","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"eugenecsa"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"eugenecsa"},"content":"        return this.isDone + \",\" + this.description;","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":56}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":" * A type of Task. Inherits from Task, does not have any date/time attached to it.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for ToDo.","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"     * Takes in the description of the ToDo.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"eugenecsa"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"eugenecsa"},"content":"        super(description);","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"eugenecsa"},"content":"     * Constructor for ToDo.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"eugenecsa"},"content":"     * Takes in the description and the status of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"eugenecsa"},"content":"     * @param description The description of the task","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"eugenecsa"},"content":"     * @param isDone Indicates if the task is done","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"eugenecsa"},"content":"    public ToDo(String description, Boolean isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"eugenecsa"},"content":"        super(description);","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"eugenecsa"},"content":"        super.setDone(isDone);","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"eugenecsa"},"content":"     * Returns the string representation of the class.","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of the class","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"eugenecsa"},"content":"    public String toString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"eugenecsa"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"eugenecsa"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"eugenecsa"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"eugenecsa"},"content":"     * Returns a string formatted for writing into file.","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"eugenecsa"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"eugenecsa"},"content":"     * @return String representation of the task for file writing","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"eugenecsa"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"eugenecsa"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"eugenecsa"},"content":"    public String saveString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"eugenecsa"},"content":"        return \"T,\" + super.saveString();","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"eugenecsa"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"eugenecsa"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":46}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eugenecsa"},"content":"todo visit library","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"eugenecsa"},"content":"todo borrow books","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"eugenecsa"},"content":"deadline return books /by Sunday","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"eugenecsa"},"content":"event team meeting /at 21 Jul 4-6PM","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"eugenecsa"},"content":"todo study for exams","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"eugenecsa"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"eugenecsa"},"content":"done 3","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"eugenecsa"},"content":"done 1","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"eugenecsa"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"eugenecsa"},"content":"bye","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"eugenecsa":10}}]
