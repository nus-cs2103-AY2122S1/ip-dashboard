[{"path":"src/main/java/virushade/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"import virushade.tasks.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"    private final File STORAGE_FILE;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"    public Storage(String filename) {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"        STORAGE_FILE \u003d new File(filename);","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"    public void load(ArrayList\u003cTask\u003e tasks) throws VirushadeException{","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"            // create a Scanner using the File as the source","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"            Scanner s \u003d new Scanner(STORAGE_FILE);","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"            if (s.hasNext()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"                // Do not parse the line \"Here are the tasks in your list: \"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"                s.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"                Task scannedTask \u003d Task.parse(s.nextLine());","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"                tasks.add(scannedTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"            Ui.showCreatingFiles();","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"            createFilePath(STORAGE_FILE);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"    private void createFilePath(File f) throws VirushadeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"            if (f.getParentFile().mkdirs()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"                Ui.showCreatingDirectory();","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"            if (f.createNewFile()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"                Ui.showCreatingFiles();","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"Unable to create file.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"    public void update(String text) throws VirushadeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"GWphua"},"content":"        if (!STORAGE_FILE.exists()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"            createFilePath(STORAGE_FILE);","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"GWphua"},"content":"            FileWriter fw \u003d new FileWriter(STORAGE_FILE);","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"GWphua"},"content":"            fw.write(text);","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"            fw.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"GWphua"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"Unable to write to file.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"GWphua":66}},{"path":"src/main/java/virushade/StringManipulator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"public class StringManipulator {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"     * Partitions the string into 2, seperated by the first \u0027/\u0027.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"     * @param str The input string","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"     * @return The pair of strings.","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"    public static String[] slashPartition(String str) {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"        int index \u003d str.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"        String[] pair \u003d new String[2];","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"        if (index \u003e -1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"            // Gets rid of a space in the end of the first partition.","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"            pair[0] \u003d str.substring(0, index).trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"            pair[1] \u003d str.substring(index + 1).trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"            // If there exists no \u0027/\u0027 in the string, set the tail of the pair as an empty string.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"            pair[0] \u003d str;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"            pair[1] \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"        return pair;","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"    public static String everythingAfterDot(String str) {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"        int index \u003d str.indexOf(\u0027.\u0027);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"        if (index \u003e -1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"            return str.substring(index + 1).trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"            return str;","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"     * Converts the input string from 24-hour time to 12-hour time representation.","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"     * @param timeString The input string","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"     * @return The converted string.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"    private static String convertTime(String timeString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"            int timeIn24hRepresentation \u003d Integer.parseInt(timeString);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"            if (timeIn24hRepresentation \u003c 0 || timeIn24hRepresentation \u003e 2359","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"                    || Integer.parseInt(timeString.substring(2,3)) \u003e 5) {","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"                return timeString;","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"                int hours \u003d timeIn24hRepresentation/100;","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"GWphua"},"content":"                int minutes \u003d timeIn24hRepresentation%100;","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"                if (hours \u003e 11) {","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"                    if (hours !\u003d 12) {","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"GWphua"},"content":"                        hours -\u003d 12;","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"GWphua"},"content":"                    }","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"                    if (hours \u003c 10 \u0026\u0026 minutes \u003c 10) {","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"GWphua"},"content":"                        return \"0\" + hours + \":0\" + minutes + \"PM\";","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"GWphua"},"content":"                    } else if (hours \u003c 10) {","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"GWphua"},"content":"                        return \"0\" + hours + \":\" + minutes + \"PM\";","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"GWphua"},"content":"                    } else if (minutes \u003c 10) {","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"GWphua"},"content":"                        return hours + \":0\" + minutes + \"PM\";","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"GWphua"},"content":"                    } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"GWphua"},"content":"                        return hours + \":\" + minutes + \"PM\";","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"GWphua"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"GWphua"},"content":"                } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"GWphua"},"content":"                    if (hours \u003d\u003d 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"GWphua"},"content":"                        hours +\u003d 12;","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"                    }","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"GWphua"},"content":"                    if (hours \u003c 10 \u0026\u0026 minutes \u003c 10) {","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"GWphua"},"content":"                        return \"0\" + hours + \":0\" + minutes + \"AM\";","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"GWphua"},"content":"                    } else if (hours \u003c 10) {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"GWphua"},"content":"                        return \"0\" + hours + \":\" + minutes + \"AM\";","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"GWphua"},"content":"                    } else if (minutes \u003c 10) {","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"GWphua"},"content":"                        return hours + \":0\" + minutes + \"AM\";","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"GWphua"},"content":"                    } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"GWphua"},"content":"                        return hours + \":\" + minutes + \"AM\";","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"GWphua"},"content":"                    }","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"GWphua"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"GWphua"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"GWphua"},"content":"            return timeString;","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"GWphua"},"content":"     * Converts the inputString into DD MMM YYYY format, or 12-hour time representation if applicable.","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"GWphua"},"content":"     * @param inputString The input string.","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"GWphua"},"content":"     * @return A string in DD MMM YYYY TIME format if inputString is in \"YYYY-MM-DD TIME\" format.","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"GWphua"},"content":"    public static String convertDateAndTime(String inputString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"GWphua"},"content":"        if (inputString.length() \u003c 10) {","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"GWphua"},"content":"            return convertTime(inputString);","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"GWphua"},"content":"        String dateString \u003d inputString.trim().substring(0, 10).trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"GWphua"},"content":"        String timeString \u003d inputString.trim().substring(10).trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"GWphua"},"content":"            String date \u003d LocalDate.parse(dateString).format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"GWphua"},"content":"            if (timeString.length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"GWphua"},"content":"                return date + \" \" + convertTime(timeString);","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"GWphua"},"content":"            return date + timeString;","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"GWphua"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"GWphua"},"content":"            return inputString;","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"GWphua":115}},{"path":"src/main/java/virushade/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import virushade.tasks.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"public class Ui {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"     * Prints a line break. Used after every interaction with Virushade.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"    private static void lineBreak() {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"        System.out.println(\"_____________________________________________________\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"     * Prints the greeting.","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"    private static void greet() {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"        System.out.println( \"Hello from\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"                + \"__      __ ( )                ____\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"                + \"\\\\ \\\\    / /  _   ____  _   _  / __/\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"                + \" \\\\ \\\\  / /  | | | ,__|| | | | \\\\ \\\\\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"                + \"  \\\\ \\\\/ /   | | | |   | |_| | _) \\\\\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"                + \"   \\\\__/    |_| |_|    \\\\__,_||___/\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"                + \"What can \u003c\u003cVirushade\u003e\u003e do for you?\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"        lineBreak();","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"     * The echo function that Virushade uses. Echoes whatever words that Virushade is given.","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"     * @param wordToEcho The word provided by the user for Virushade to echo.","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"    public static void echo(String wordToEcho) {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"        System.out.println(wordToEcho);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"     * Virushade first says goodbye before exiting.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"    private static void exit() {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"        lineBreak();","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"        System.exit(0);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"     * Handles unexpected inputs to Virushade.","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"    private static void handleUnexpectedInputs(String str) throws VirushadeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"        if (str.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"OOPS!!! The description of a todo task cannot be empty.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"        } else if (str.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"OOPS!!! The description of a deadline task cannot be empty.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"GWphua"},"content":"        } else if (str.startsWith(\"event\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"OOPS!!! The description of an event task cannot be empty.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"        } else if (str.startsWith(\"done\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"OOPS!!! Please enter an integer after \u0027done\u0027.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"GWphua"},"content":"        } else if (str.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"OOPS!!! Please enter an integer after \u0027delete\u0027.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"GWphua"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"GWphua"},"content":"     * Determines what Virushade should do with given string str.","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"GWphua"},"content":"     * Note: str is assumed to not be \"bye\".","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"GWphua"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"GWphua"},"content":"     * @param str The input instructional string.","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"GWphua"},"content":"    private static void assignTask(String str) {","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"            if (str.equals(\"list\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"GWphua"},"content":"                TaskList.list();","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"GWphua"},"content":"            } else if (str.startsWith(\"done \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"GWphua"},"content":"                TaskList.completeTask(str.substring(5));","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"GWphua"},"content":"            } else if (str.startsWith(\"todo \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"GWphua"},"content":"                TaskList.add(str.substring(5), \"TODO\");","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"GWphua"},"content":"            } else if (str.startsWith(\"deadline \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"GWphua"},"content":"                TaskList.add(str.substring(9), \"DEADLINE\");","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"GWphua"},"content":"            } else if (str.startsWith(\"event \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"GWphua"},"content":"                TaskList.add(str.substring(6), \"EVENT\");","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"GWphua"},"content":"            } else if (str.startsWith(\"delete \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"GWphua"},"content":"                TaskList.delete(str.substring(7));","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"GWphua"},"content":"                handleUnexpectedInputs(str);","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"GWphua"},"content":"        } catch (VirushadeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"GWphua"},"content":"            handleVirushadeException(e);","lastModifiedDate":"2021-08-26"},{"lineNumber":90,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":92,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"GWphua"},"content":"    private static void scanInput() {","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"GWphua"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"GWphua"},"content":"        while(sc.hasNextLine()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"GWphua"},"content":"            String str \u003d sc.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"GWphua"},"content":"            if (str.equals(\"bye\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"GWphua"},"content":"                break;","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"GWphua"},"content":"                assignTask(str);","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"GWphua"},"content":"            lineBreak();","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":107,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"GWphua"},"content":"    public static void interact() {","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"GWphua"},"content":"        greet();","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"GWphua"},"content":"        scanInput();","lastModifiedDate":"2021-08-26"},{"lineNumber":112,"author":{"gitId":"GWphua"},"content":"        exit();","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"GWphua"},"content":"    public static void showCreatingFiles() {","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"GWphua"},"content":"        System.out.println(\"Creating data files...\");","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"GWphua"},"content":"    public static void showCreatingDirectory() {","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"GWphua"},"content":"        System.out.println(\"Creating data directory...\");","lastModifiedDate":"2021-08-26"},{"lineNumber":121,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"GWphua"},"content":"    public static void handleVirushadeException(VirushadeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"GWphua"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"GWphua":126}},{"path":"src/main/java/virushade/Virushade.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import virushade.tasks.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"public class Virushade {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"    private Storage storageFile;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"    public Virushade(String fileName) {","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"        storageFile \u003d new Storage(fileName);","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"            TaskList tasks \u003d new TaskList(storageFile);","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"        } catch (VirushadeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"            Ui.handleVirushadeException(e);","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"     * The running sequence for Virushade.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"    public void run() {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"        Ui.interact();","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"        new Virushade(\"data/Virushade.txt\").run();","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"GWphua":28}},{"path":"src/main/java/virushade/VirushadeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"public class VirushadeException extends Exception {","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"    public VirushadeException(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"        super(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"GWphua":9}},{"path":"src/main/java/virushade/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade.tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import virushade.StringManipulator;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"    private final String deadline;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"     * The constructor for a Deadlines Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"     * @param taskDescription The name of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"    public Deadline(String taskDescription, String deadline, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"        super(taskDescription, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"        this.deadline \u003d StringManipulator.convertDateAndTime(deadline);","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"     * @return String representation of Deadlines task.","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"        return \"[D]\" + super.toString() + \" /by: \" + deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"GWphua":26}},{"path":"src/main/java/virushade/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade.tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import virushade.StringManipulator;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"    private final String time;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"     * The constructor for an Events Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"     * @param taskDescription The name of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"     * @param time The time of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"    public Event(String taskDescription, String time, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"        super(taskDescription, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"        this.time \u003d StringManipulator.convertDateAndTime(time);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"     * @return String representation of Events task.","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"        return \"[E]\" + super.toString() + \" /at \" + time;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"GWphua":25}},{"path":"src/main/java/virushade/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade.tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import virushade.StringManipulator;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"import virushade.VirushadeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"    private final String taskDescription;","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"     * Constructor for a task.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"     * @param taskDescription The name of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"    public Task(String taskDescription, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"    public static Task parse(String inputString) throws VirushadeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"        // Remove the numbering at the start of each line.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"        String text \u003d StringManipulator.everythingAfterDot(inputString);","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"        if (text.length() \u003c 6) {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"Error: File cannot be parsed.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"        String taskCategory \u003d text.substring(0,3);","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"        String taskCompletionStatus \u003d text.substring(3,6);","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"        String taskDescription \u003d text.substring(6).trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"        String[] strings \u003d StringManipulator.slashPartition(taskDescription);","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"        switch(taskCategory) {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"        case \"[T]\":","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"            if (taskCompletionStatus.equals(\"[x]\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"                return new ToDo(taskDescription, true);","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"            } else if (taskCompletionStatus.equals(\"[ ]\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"                return new ToDo(taskDescription, false);","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"                throw new VirushadeException(\"Error: File cannot be parsed.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"        case \"[E]\":","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"            if (taskCompletionStatus.equals(\"[x]\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"                return new Event(strings[0], strings[1].substring(3), true);","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"            } else if (taskCompletionStatus.equals(\"[ ]\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"                return new Event(strings[0], strings[1].substring(3), false);","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"                throw new VirushadeException(\"Error: File cannot be parsed.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"        case \"[D]\":","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"GWphua"},"content":"            if (taskCompletionStatus.equals(\"[x]\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"                return new Deadline(strings[0], strings[1].substring(3), true);","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"            } else if (taskCompletionStatus.equals(\"[ ]\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"                return new Deadline(strings[0], strings[1].substring(3), false);","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"GWphua"},"content":"                throw new VirushadeException(\"Error: File cannot be parsed.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"GWphua"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"Error: File cannot be parsed.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"GWphua"},"content":"     * Updates the task status of completion as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"GWphua"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"GWphua"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"GWphua"},"content":"        System.out.println(\"Nice! I have marked this task as done: \\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"                + this);","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"GWphua"},"content":"     * The output message when the task is deleted.","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"GWphua"},"content":"    public void deleteMessage() {","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"GWphua"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"GWphua"},"content":"                + this);","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"GWphua"},"content":"     * Gets the task name.","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"GWphua"},"content":"     * @return Task name.","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"GWphua"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"GWphua"},"content":"        return taskDescription;","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"GWphua"},"content":"     * @return The string representation for the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"GWphua"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"GWphua"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"GWphua"},"content":"        return \"[\" + (isDone ? \"x\" : \" \") + \"] \" + taskDescription;","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"GWphua":101}},{"path":"src/main/java/virushade/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade.tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import virushade.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"import virushade.StringManipulator;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"import virushade.VirushadeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"import virushade.tasks.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"import virushade.tasks.Deadline;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"import virushade.tasks.Event;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"import virushade.tasks.ToDo;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"public class TaskList {","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"     * This is the array that Virushade keeps the tasks in.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"     * This is the file name of our file that stores data on TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"    private static Storage TASK_LIST_STORAGE;","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"     * This variable keeps track of the size of the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"    private static int listCount \u003d 0;","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"    public TaskList(Storage storage) throws VirushadeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"        TASK_LIST_STORAGE \u003d storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"        storage.load(tasks);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"        listCount \u003d tasks.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"     * A function that writes an input string to TASK_LIST_STORAGE.","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"     * @param text The input string to write into the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"    private static void updateFile(String text) throws VirushadeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"        TASK_LIST_STORAGE.update(text);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"     * Adds a Task to taskList.","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"     * @param addedTaskDescription Name of the added Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"    public static void add(String addedTaskDescription, String taskType) throws VirushadeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"        if (listCount \u003c 100) {","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"            Task addedTask;","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"            String[] strings \u003d StringManipulator.slashPartition(addedTaskDescription);","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"            // Checking if the Task Name is empty (Or filled with Spacebars):","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"GWphua"},"content":"            if (strings[0].replace(\" \", \"\").equals(\"\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"                throw new VirushadeException(\"OOPS!!! Please enter the task description!!!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"GWphua"},"content":"            switch (taskType) {","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"GWphua"},"content":"            case \"TODO\":","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"GWphua"},"content":"                addedTask \u003d new ToDo(addedTaskDescription, false);","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"GWphua"},"content":"            case \"DEADLINE\":","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"GWphua"},"content":"                if (strings[1].startsWith(\"by \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"GWphua"},"content":"                    addedTask \u003d new Deadline(strings[0], strings[1].substring(3), false);","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"GWphua"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"GWphua"},"content":"                    System.out.println(\"Please include a deadline after your task name. \" +","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"GWphua"},"content":"                            \"(e.g. /by Sunday)\");","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"GWphua"},"content":"                    return;","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"GWphua"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"GWphua"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"            case \"EVENT\":","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"GWphua"},"content":"                if (strings[1].startsWith(\"at \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"GWphua"},"content":"                    addedTask \u003d new Event(strings[0], strings[1].substring(3), false);","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"GWphua"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"GWphua"},"content":"                    System.out.println(\"Please include a time after your task name. \" +","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"GWphua"},"content":"                            \"(e.g. /at 12 noon)\");","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"GWphua"},"content":"                    return;","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"GWphua"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"GWphua"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"GWphua"},"content":"            // The add function would not reach this line at all.","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"GWphua"},"content":"            default:","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"GWphua"},"content":"                addedTask \u003d new Task(addedTaskDescription, false);","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"GWphua"},"content":"            tasks.add(addedTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"GWphua"},"content":"            listCount++;","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"GWphua"},"content":"            System.out.println(\"Added: \" + addedTask.getTaskDescription());","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"GWphua"},"content":"            System.out.printf(\"Now you have %d tasks in the list.\\n\", listCount);","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"GWphua"},"content":"            updateFile(generateList());","lastModifiedDate":"2021-08-26"},{"lineNumber":93,"author":{"gitId":"GWphua"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"Sorry, Virushade cannot keep track of more than 100 tasks!!!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"GWphua"},"content":"     * Deletes the specified task.","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"GWphua"},"content":"     * @param str Input string, determines which task to delete.","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"GWphua"},"content":"    public static void delete(String str) throws VirushadeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"GWphua"},"content":"            // If what comes after \"delete \" is not an integer, this will throw a NumberFormatException.","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"GWphua"},"content":"            int index \u003d Integer.parseInt(str);","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"GWphua"},"content":"            if (index \u003c\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"GWphua"},"content":"                throw new VirushadeException(\"Please enter an integer greater than 0.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"GWphua"},"content":"            } else if (index \u003c\u003d listCount) {","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"GWphua"},"content":"                Task deletedTask \u003d tasks.get(index - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"GWphua"},"content":"                deletedTask.deleteMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"GWphua"},"content":"                listCount--;","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"GWphua"},"content":"                System.out.printf(\"You have %d tasks in the list.\\n\", listCount);","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"GWphua"},"content":"                updateFile(generateList());","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"GWphua"},"content":"                throw new VirushadeException(\"Please check that you have entered the correct number!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"GWphua"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"GWphua"},"content":"            // Tells the user that he did not enter a number.","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"Please enter an integer after \u0027done \u0027 instead.\\n\" + e);","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":125,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"GWphua"},"content":"     * Marks a task as complete.","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"GWphua"},"content":"     * @param str Input string, determines which task to mark as complete.","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"GWphua"},"content":"    public static void completeTask(String str) throws VirushadeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":132,"author":{"gitId":"GWphua"},"content":"            // If what comes after \"done \" is not an integer, this will throw a NumberFormatException.","lastModifiedDate":"2021-08-19"},{"lineNumber":133,"author":{"gitId":"GWphua"},"content":"            int index \u003d Integer.parseInt(str);","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":135,"author":{"gitId":"GWphua"},"content":"            if (index \u003c\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"GWphua"},"content":"                System.out.println(\"Please enter an integer greater than 0.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"GWphua"},"content":"            } else if (index \u003c\u003d listCount) {","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"GWphua"},"content":"                Task doneTask \u003d tasks.get(index - 1);","lastModifiedDate":"2021-08-26"},{"lineNumber":139,"author":{"gitId":"GWphua"},"content":"                doneTask.completeTask();","lastModifiedDate":"2021-08-19"},{"lineNumber":140,"author":{"gitId":"GWphua"},"content":"                updateFile(generateList());","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"GWphua"},"content":"                System.out.println(\"Please check that you have entered the correct number!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":143,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":144,"author":{"gitId":"GWphua"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":145,"author":{"gitId":"GWphua"},"content":"            // Tells the user that he did not enter a number.","lastModifiedDate":"2021-08-19"},{"lineNumber":146,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"Please enter an integer after \u0027done \u0027 instead.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":150,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"GWphua"},"content":"     * Display the stored values in taskList for the user.","lastModifiedDate":"2021-08-19"},{"lineNumber":152,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":153,"author":{"gitId":"GWphua"},"content":"    public static void list() {","lastModifiedDate":"2021-08-19"},{"lineNumber":154,"author":{"gitId":"GWphua"},"content":"        System.out.println(generateList());","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":156,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"GWphua"},"content":"     * @return String representation of the tasks within TASK_ARRAY_LIST.","lastModifiedDate":"2021-08-25"},{"lineNumber":159,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"GWphua"},"content":"    private static String generateList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":161,"author":{"gitId":"GWphua"},"content":"        if (listCount \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":162,"author":{"gitId":"GWphua"},"content":"            return \"Nothing in the list as of now.\";","lastModifiedDate":"2021-08-25"},{"lineNumber":163,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":164,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":165,"author":{"gitId":"GWphua"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":166,"author":{"gitId":"GWphua"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":167,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":168,"author":{"gitId":"GWphua"},"content":"        while (index \u003c listCount) {","lastModifiedDate":"2021-08-19"},{"lineNumber":169,"author":{"gitId":"GWphua"},"content":"            String taskName \u003d (index + 1) + \".\" + tasks.get(index).toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":170,"author":{"gitId":"GWphua"},"content":"            sb.append(System.lineSeparator()).append(taskName);","lastModifiedDate":"2021-08-25"},{"lineNumber":171,"author":{"gitId":"GWphua"},"content":"            index++;","lastModifiedDate":"2021-08-19"},{"lineNumber":172,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":173,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":174,"author":{"gitId":"GWphua"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":176,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"GWphua":176}},{"path":"src/main/java/virushade/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade.tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"     * The constructor for a Todos Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"     * @param taskDescription The name of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"    public ToDo(String taskDescription, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"        super(taskDescription, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"     * @return String representation of ToDos task.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"GWphua":19}},{"path":"src/test/java/virushade/StringManipulatorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"public class StringManipulatorTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"    public void slashPartitionTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"        assertEquals(\"Before\",StringManipulator.slashPartition(\"Before/After\")[0]);","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"        assertEquals(\"After\", StringManipulator.slashPartition(\"Before/After\")[1]);","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"    public void singleDotTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"        assertEquals(\"Hello\", StringManipulator.everythingAfterDot(\"1.Hello\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"    public void doubleDotTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"        assertEquals(\". Hello\", StringManipulator.everythingAfterDot(\"1.. Hello\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"GWphua":22}},{"path":"src/test/java/virushade/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade.tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"        assertEquals(\"[D][ ] DeadlineTask /by: 20 Aug 2021 12:01PM\",","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"                new Deadline(\"DeadlineTask\", \"2021-08-20 1201\", false).toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"GWphua":12}},{"path":"src/test/java/virushade/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade.tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"public class EventTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"        assertEquals(\"[E][x] EventTask /at 12:05AM\",","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"                new Event(\"EventTask\", \"0005\", true).toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"GWphua":11}},{"path":"src/test/java/virushade/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade.tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"        assertEquals(\"[T][ ] To do CS2103T\", new ToDo(\"To do CS2103T\", false).toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"GWphua":12}},{"path":"text-ui-test/data/Virushade.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"Nothing in the list as of now.","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"GWphua":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"Test Check if none of keywords added.","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"event","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"todo Test add todo task","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"deadline Test add deadline task /by 2012-12-11 2359","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"event Test add event task /at 2021-25-08","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"deadline Test slashPartition without space/by now","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"done 0.5","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"done LOL THIS AIN\u0027T NO INTEGER","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"done 10","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"done -1","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"delete","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"delete LOL THIS AIN\u0027T NO INTEGER","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"delete 1.5","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"delete -10","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"delete 10","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"delete 1","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"delete 1","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"bye","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"Check if already Exit.","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"GWphua":29}}]
