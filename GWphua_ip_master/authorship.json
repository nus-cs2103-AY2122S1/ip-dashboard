[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"    mainClassName \u003d \"virushade.Launcher\"","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"    archiveBaseName \u003d \"Virushade\"","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"GWphua":18,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"### Interactive Graphic User Interface (GUI)","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"Displays the Virushade application with a graphic user interface. ","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"This display makes it easy to see user input history, and the interactions with Virushade.","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"The interface is set to be interactive, every input by the user is being met with a reply.","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"eg. Virushade greets the user with a special message everytime the application is being launched,","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"and replies with a sinister closing message when the user chooses to close the application.","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":" ```","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"### Task manager","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"Virushade works as an interactive task list. ","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"There are 3 types of tasks that the user can enter:","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"1. Todo","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"    `These represent tasks that are not that urgent, or do not have any stipulated deadline.`","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"2. Deadline","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"    `These represent tasks that have a due date.`","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"3. Event","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"    `These represent tasks that are to be done or conducted in a certain specified time-frame.`","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"Users can conveniently perform functions such as find and sort on top of other must-have ","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"functions typical of a task list. ","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"### Loading of files","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"This ensures that all tasks that the user have inputted are saved. Upon future opening, ","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"Virushade will load the data from these files and hence preserve all tasks that were ","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"entered on the last use.","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"### `list` - Lists down all input tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"Lists down all input tasks currently in the task list.","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"`list`","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"1. [T][ ] Manifest in a Virology Lab","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"GWphua"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"GWphua"},"content":"### `todo` - Adds a todo task.","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"GWphua"},"content":"Adds a task of type \u0027todo\u0027 to Virushade.","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"GWphua"},"content":"`todo Infiltrate Computer Systems.`","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"GWphua"},"content":"A message acknowledging the adding of the task into Virushade.","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"Added: Infiltrate Computer Systems","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"GWphua"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"GWphua"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"GWphua"},"content":"### `deadline` - Adds a deadline task.","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"GWphua"},"content":"Adds a task of type \u0027deadline\u0027 to Virushade.","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"GWphua"},"content":"Examples of usage: ","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"GWphua"},"content":"`deadline Infect Before Defense Update /by Sunday`","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"GWphua"},"content":"Expected outcome: ","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"GWphua"},"content":"A message acknowledging the adding of task into Virushade.","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"GWphua"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"GWphua"},"content":"Added: deadline Infect Before Defense Update","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"GWphua"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"GWphua"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"GWphua"},"content":"### `event` - Adds an event task.","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"GWphua"},"content":"Adds a task of type \u0027event\u0027 to Virushade.","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"GWphua"},"content":"Examples of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"GWphua"},"content":"`event Target and Destroy Systems /at 0000`","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"GWphua"},"content":"A message acknowledging the adding of task into Virushade.","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":107,"author":{"gitId":"GWphua"},"content":"Added: Target and Destroy Systems","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"GWphua"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"GWphua"},"content":"### `sort`","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"GWphua"},"content":"Sorts the task list in Virushade according to the sorting specifications.","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"GWphua"},"content":"Examples of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"GWphua"},"content":"`sort type`","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"GWphua"},"content":"`sort name`","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"GWphua"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"GWphua"},"content":"A message acknowledging the sorting.","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"GWphua"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"GWphua"},"content":"Tasks sorted by type successfully.","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"GWphua"},"content":"Tasks sorted by name successfully.","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"GWphua"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"GWphua"},"content":"### `find` - Finds the task within Virushade.","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":130,"author":{"gitId":"GWphua"},"content":"Finds the task in Virushade according to the words after \u0027find\u0027.","lastModifiedDate":"2021-09-15"},{"lineNumber":131,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":132,"author":{"gitId":"GWphua"},"content":"Examples of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"GWphua"},"content":"`find Com`","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"GWphua"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":136,"author":{"gitId":"GWphua"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":137,"author":{"gitId":"GWphua"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-15"},{"lineNumber":138,"author":{"gitId":"GWphua"},"content":"1. [T][ ] Infiltrate Computer Systems","lastModifiedDate":"2021-09-15"},{"lineNumber":139,"author":{"gitId":"GWphua"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":141,"author":{"gitId":"GWphua"},"content":"### `done` - Marks a selected task as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":142,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":143,"author":{"gitId":"GWphua"},"content":"Marks the task as done according to the input index.","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":145,"author":{"gitId":"GWphua"},"content":"Examples of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":146,"author":{"gitId":"GWphua"},"content":"`done 3`","lastModifiedDate":"2021-09-15"},{"lineNumber":147,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":148,"author":{"gitId":"GWphua"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":149,"author":{"gitId":"GWphua"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":150,"author":{"gitId":"GWphua"},"content":"Nice! I have marked this task as done:","lastModifiedDate":"2021-09-15"},{"lineNumber":151,"author":{"gitId":"GWphua"},"content":"[E][x] Target and Destroy Systems /at 12:00AM","lastModifiedDate":"2021-09-15"},{"lineNumber":152,"author":{"gitId":"GWphua"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":153,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":154,"author":{"gitId":"GWphua"},"content":"### `delete` - Deletes a selected task.","lastModifiedDate":"2021-09-15"},{"lineNumber":155,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":156,"author":{"gitId":"GWphua"},"content":"Removes the task from the list according to the input index.","lastModifiedDate":"2021-09-15"},{"lineNumber":157,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":158,"author":{"gitId":"GWphua"},"content":"Examples of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":159,"author":{"gitId":"GWphua"},"content":"`delete 2`","lastModifiedDate":"2021-09-15"},{"lineNumber":160,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":161,"author":{"gitId":"GWphua"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":162,"author":{"gitId":"GWphua"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":163,"author":{"gitId":"GWphua"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-15"},{"lineNumber":164,"author":{"gitId":"GWphua"},"content":"[T][ ] Infiltrate Computer Systems","lastModifiedDate":"2021-09-15"},{"lineNumber":165,"author":{"gitId":"GWphua"},"content":"You have 2 tasks in the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":166,"author":{"gitId":"GWphua"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":167,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":168,"author":{"gitId":"GWphua"},"content":"### `bye` - Closes Virushade and orders a shutdown.","lastModifiedDate":"2021-09-15"},{"lineNumber":169,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":170,"author":{"gitId":"GWphua"},"content":"Examples of usage:","lastModifiedDate":"2021-09-15"},{"lineNumber":171,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":172,"author":{"gitId":"GWphua"},"content":"`bye`","lastModifiedDate":"2021-09-15"},{"lineNumber":173,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":174,"author":{"gitId":"GWphua"},"content":"Expected outcome:","lastModifiedDate":"2021-09-15"},{"lineNumber":175,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":176,"author":{"gitId":"GWphua"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":177,"author":{"gitId":"GWphua"},"content":"You may run, you may hide, but you will never escape my infections!","lastModifiedDate":"2021-09-15"},{"lineNumber":178,"author":{"gitId":"GWphua"},"content":"```","lastModifiedDate":"2021-09-15"},{"lineNumber":179,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":180,"author":{"gitId":"GWphua"},"content":"## Command Summary","lastModifiedDate":"2021-09-15"},{"lineNumber":181,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":182,"author":{"gitId":"GWphua"},"content":"| action | Format | Examples|","lastModifiedDate":"2021-09-15"},{"lineNumber":183,"author":{"gitId":"GWphua"},"content":"| -------| -------|---------|","lastModifiedDate":"2021-09-15"},{"lineNumber":184,"author":{"gitId":"GWphua"},"content":"| list | list | --- |","lastModifiedDate":"2021-09-15"},{"lineNumber":185,"author":{"gitId":"GWphua"},"content":"| todo | todo {description} | todo Say hello|","lastModifiedDate":"2021-09-15"},{"lineNumber":186,"author":{"gitId":"GWphua"},"content":"| deadline | deadline {description} /by {day} | deadline homework /by Sunday |","lastModifiedDate":"2021-09-15"},{"lineNumber":187,"author":{"gitId":"GWphua"},"content":"| event | event {description} /at {time} | event eat /at 1700 |","lastModifiedDate":"2021-09-15"},{"lineNumber":188,"author":{"gitId":"GWphua"},"content":"| sort | sort {mode of sorting} | sort type |","lastModifiedDate":"2021-09-15"},{"lineNumber":189,"author":{"gitId":"GWphua"},"content":"| find | find {string} | find you |","lastModifiedDate":"2021-09-15"},{"lineNumber":190,"author":{"gitId":"GWphua"},"content":"| done | done {index} | done 1 |","lastModifiedDate":"2021-09-15"},{"lineNumber":191,"author":{"gitId":"GWphua"},"content":"| delete | delete {index} | delete 1 |","lastModifiedDate":"2021-09-15"},{"lineNumber":192,"author":{"gitId":"GWphua"},"content":"| bye | bye | --- |","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"GWphua":163,"-":29}},{"path":"src/main/java/virushade/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"    private Label text;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"     * The JavaFX dialog box.","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"     * @param l The input label","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"     * @param iv The images.","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2021-09-03"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"        text \u003d l;","lastModifiedDate":"2021-09-03"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"        text.setWrapText(true);","lastModifiedDate":"2021-09-03"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-03"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"    private void flip() {","lastModifiedDate":"2021-09-03"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-03"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-03"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2021-09-03"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2021-09-03"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2021-09-03"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2021-09-03"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"    public static DialogBox getVirushadeDialog(Label l, ImageView iv) {","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2021-09-03"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"        db.flip();","lastModifiedDate":"2021-09-03"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"        return db;","lastModifiedDate":"2021-09-03"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"GWphua":52}},{"path":"src/main/java/virushade/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade;","lastModifiedDate":"2021-09-03"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"/**","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":" */","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"public class Launcher {","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"     * Runs the program.","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"     * @param args Not used.","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"        Virushade virushade \u003d new Virushade(\"./data/Virushade.txt\");","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"        Platform.startup(() -\u003e {","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"            Stage stage \u003d new Stage();","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"            virushade.start(stage);","lastModifiedDate":"2021-09-03"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"        });","lastModifiedDate":"2021-09-03"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"GWphua":21}},{"path":"src/main/java/virushade/ResponseProcessor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import virushade.tasks.TaskList;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":" * A utility class that deals with interactions with the user.","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"public class ResponseProcessor {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"     * Prints the greeting.","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"    public static String greet() {","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"        return \"Hello from\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"                + \"__      __ ( )                ____\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"                + \"\\\\ \\\\    / /  _   _____  _  / __/\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"                + \" \\\\ \\\\  / /  | | | ,__|| | | | \\\\ \\\\\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"                + \"  \\\\ \\\\/ /   | | | |   | |_| | _) \\\\\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"                + \"   \\\\__/    |_| |_|   \\\\__,_||___/\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"                + \"Who do you want \u003c\u003cVirushade\u003e\u003e to infect today?\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"     * Virushade first says goodbye before exiting.","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"     * @return The exit message.","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"    private static String exitMessage() {","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"        return \"You may run, you may hide, but you will never escape my infections!\";","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"     * Handles unexpected inputs to Virushade","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"     * @param str The input.","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"     * @throws VirushadeException The response error message for the user.","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"    private static String handleSingleWordInput(String str) throws VirushadeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"        switch(str) {","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"            return exitMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"        case \"list\":","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"            return TaskList.generateList();","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"The description of a todo task cannot be empty.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"The description of a deadline task cannot be empty.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"        case \"event\":","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"The description of an event task cannot be empty.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"        case \"done\":","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"Let me know what task needs to be marked done.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"        case \"find\":","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"Give me something to find, human.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"GWphua"},"content":"        case \"sort\":","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"If you want me to do work, give me the right parameters first!\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"                    + \"Let me know which sorting method you want to use, human.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"GWphua"},"content":"        default:","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"I have yet to evolve to a level where I can understand this.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"GWphua"},"content":"     * Determines what Virushade should do with given string str.","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"GWphua"},"content":"     * @param str The input instructional string.","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"GWphua"},"content":"    private static String assignTask(String str) throws VirushadeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"        String keyword \u003d StringManipulator.wordSeparator(str)[0];","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"GWphua"},"content":"        String instruction \u003d StringManipulator.wordSeparator(str)[1];","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"GWphua"},"content":"        if (!instruction.equals(\"\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"GWphua"},"content":"            switch (keyword) {","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"GWphua"},"content":"            case \"find\":","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"GWphua"},"content":"                return TaskList.findFromList(instruction);","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"GWphua"},"content":"            case \"done\":","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"GWphua"},"content":"                return TaskList.completeTask(instruction);","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"GWphua"},"content":"            case \"todo\":","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"GWphua"},"content":"                return TaskList.add(instruction, \"TODO\");","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"GWphua"},"content":"            case \"deadline\":","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"GWphua"},"content":"                return TaskList.add(instruction, \"DEADLINE\");","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"GWphua"},"content":"            case \"event\":","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"GWphua"},"content":"                return TaskList.add(instruction, \"EVENT\");","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"GWphua"},"content":"            case \"delete\":","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"GWphua"},"content":"                return TaskList.delete(instruction);","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"GWphua"},"content":"            case \"sort\":","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"GWphua"},"content":"                return TaskList.sort(instruction);","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":100,"author":{"gitId":"GWphua"},"content":"            default:","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"GWphua"},"content":"                throw new VirushadeException(\"I have yet to evolve to a level where I can understand this.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"GWphua"},"content":"        return handleSingleWordInput(keyword);","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"GWphua"},"content":"     * Returns a string according to the input string str.","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"GWphua"},"content":"     * @param str The input string.","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"GWphua"},"content":"     * @return The resultant string message.","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"GWphua"},"content":"    public static String handleMessage(String str) {","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"GWphua"},"content":"        String resultantString;","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"GWphua"},"content":"            resultantString \u003d assignTask(str);","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"GWphua"},"content":"        } catch (VirushadeException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":118,"author":{"gitId":"GWphua"},"content":"            resultantString \u003d handleVirushadeException(e);","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":120,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"GWphua"},"content":"        return resultantString;","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":123,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"GWphua"},"content":"     * Handles mostly incorrect inputs by the user.","lastModifiedDate":"2021-09-04"},{"lineNumber":126,"author":{"gitId":"GWphua"},"content":"     * @param e The error message.","lastModifiedDate":"2021-09-04"},{"lineNumber":127,"author":{"gitId":"GWphua"},"content":"     * @return The error message in e.","lastModifiedDate":"2021-09-04"},{"lineNumber":128,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":129,"author":{"gitId":"GWphua"},"content":"    public static String handleVirushadeException(VirushadeException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":130,"author":{"gitId":"GWphua"},"content":"        return e.getMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":131,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":132,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"GWphua":132}},{"path":"src/main/java/virushade/Sorter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"import virushade.tasks.Task;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"public class Sorter {","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"     * Sorts the given Task Array by task name.","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"     * @param tasks ArrayList to sort the task by.","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"    public static void sortByName(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"            return;","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"        ArrayList\u003cTask\u003e sortedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"        int numberOfTasks \u003d tasks.size();","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"        assert numberOfTasks !\u003d 0;","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"        // Load in the first task before starting the sort.","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"        sortedTasks.add(tasks.get(0));","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"        for (int pointer \u003d 1; pointer \u003c numberOfTasks; pointer++) {","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"            insertTaskIntoPosition(tasks, sortedTasks, pointer);","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"        // Replace the array with the sorted array.","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"        tasks.clear();","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"        tasks.addAll(sortedTasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"    private static void insertTaskIntoPosition(ArrayList\u003cTask\u003e tasks, ArrayList\u003cTask\u003e sortedTasks, int pointer) {","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"        // Note that pointer can be both the pointer to the index of the task to be inserted into sortedTask,","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"        // and the size of sortedTask before addition of the task to be inserted.","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"        Task taskToBeInserted \u003d tasks.get(pointer);","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"        // Put task to be inserted into sortedTasks. This inserted task has index pointer.","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"        sortedTasks.add(taskToBeInserted);","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"        String insertedName \u003d convertTaskToName(taskToBeInserted);","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"        for (int i \u003d pointer - 1; i \u003e -1; i--) {","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"            Task comparedTask \u003d sortedTasks.get(i);","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"            String comparedName \u003d convertTaskToName(comparedTask);","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"            int compareResult \u003d StringManipulator.compareString(insertedName, comparedName);","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"            // If the insertedName is larger than compared Name, no need to bubble swap anymore.","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"            if (compareResult \u003c 1) {","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"                break;","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"                swapTask(sortedTasks, i, i + 1);","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"     * Sorts the given Task Array by task type.","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"     * @param tasks ArrayList to sort the task by.","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"GWphua"},"content":"    public static void sortByType(ArrayList\u003cTask\u003e tasks) throws VirushadeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"GWphua"},"content":"        ArrayList\u003cTask\u003e deadlineTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"        ArrayList\u003cTask\u003e todoTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"GWphua"},"content":"        ArrayList\u003cTask\u003e eventTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"GWphua"},"content":"        ArrayList\u003cTask\u003e resultTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"GWphua"},"content":"        sortTasksByType(tasks, deadlineTasks, todoTasks, eventTasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"GWphua"},"content":"        sortByName(deadlineTasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"GWphua"},"content":"        sortByName(todoTasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"GWphua"},"content":"        sortByName(eventTasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"GWphua"},"content":"        resultTasks.addAll(todoTasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"GWphua"},"content":"        resultTasks.addAll(deadlineTasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"GWphua"},"content":"        resultTasks.addAll(eventTasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"GWphua"},"content":"        tasks.clear();","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"GWphua"},"content":"        tasks.addAll(resultTasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"GWphua"},"content":"    private static void sortTasksByType(ArrayList\u003cTask\u003e tasks, ArrayList\u003cTask\u003e deadlineTasks,","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"GWphua"},"content":"            ArrayList\u003cTask\u003e todoTasks, ArrayList\u003cTask\u003e eventTasks) throws VirushadeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"GWphua"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"GWphua"},"content":"            Task taskToBeInserted \u003d tasks.get(i);","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"GWphua"},"content":"            char insertedType \u003d convertTaskToType(taskToBeInserted);","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"GWphua"},"content":"            assert insertedType \u003d\u003d \u0027D\u0027 || insertedType \u003d\u003d \u0027E\u0027 || insertedType \u003d\u003d \u0027T\u0027;","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"GWphua"},"content":"            switch (insertedType) {","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"GWphua"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"GWphua"},"content":"                todoTasks.add(taskToBeInserted);","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"GWphua"},"content":"                break;","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"GWphua"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"GWphua"},"content":"                deadlineTasks.add(taskToBeInserted);","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"GWphua"},"content":"                break;","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"GWphua"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"GWphua"},"content":"                eventTasks.add(taskToBeInserted);","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"GWphua"},"content":"                break;","lastModifiedDate":"2021-09-12"},{"lineNumber":97,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"GWphua"},"content":"            default:","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"GWphua"},"content":"                throw new VirushadeException(\"Some problem occurred when sorting!\");","lastModifiedDate":"2021-09-12"},{"lineNumber":100,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":101,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":102,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":103,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":104,"author":{"gitId":"GWphua"},"content":"    private static String convertTaskToName(Task task) {","lastModifiedDate":"2021-09-12"},{"lineNumber":105,"author":{"gitId":"GWphua"},"content":"        return task.toString().substring(7);","lastModifiedDate":"2021-09-12"},{"lineNumber":106,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"GWphua"},"content":"    private static char convertTaskToType(Task task) {","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"GWphua"},"content":"        return task.toString().charAt(1);","lastModifiedDate":"2021-09-12"},{"lineNumber":110,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":111,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":112,"author":{"gitId":"GWphua"},"content":"    private static void swapTask(ArrayList\u003cTask\u003e tasks, int firstIndex, int secondIndex) {","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"GWphua"},"content":"        Task temporaryPlaceholder \u003d tasks.get(firstIndex);","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"GWphua"},"content":"        tasks.set(firstIndex, tasks.get(secondIndex));","lastModifiedDate":"2021-09-12"},{"lineNumber":115,"author":{"gitId":"GWphua"},"content":"        tasks.set(secondIndex, temporaryPlaceholder);","lastModifiedDate":"2021-09-12"},{"lineNumber":116,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":117,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"GWphua":117}},{"path":"src/main/java/virushade/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import java.io.File;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"import virushade.tasks.Task;","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":" * Our storage class deals with writing data to the text file passed into Virushade.","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"public class Storage {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"    private final File STORAGE_FILE;","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"     * The constructor for our Storage class.","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"     * @param filename The file path to be written to.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"    public Storage(String filename) {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"        STORAGE_FILE \u003d new File(filename);","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"     * Reads from STORAGE_FILE and updates the given ArrayList input according to the lines in STORAGE_FILE.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"     * @param tasks The ArrayList input to update information from STORAGE_FILE to.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"     * @throws VirushadeException Thrown when STORAGE_FILE file is not parsed correctly.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"    public void load(ArrayList\u003cTask\u003e tasks) throws VirushadeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"            // create a Scanner using the File as the source","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"            Scanner s \u003d new Scanner(STORAGE_FILE);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"            if (s.hasNext()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"                // Do not parse the line \"Here are the tasks in your list: \"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"                s.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"                Task scannedTask \u003d Task.parse(s.nextLine());","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"                tasks.add(scannedTask);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"            createFilePath(STORAGE_FILE);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"     * Creates a file path according to the input file path.","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"     * @param f The input file path","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"GWphua"},"content":"     * @throws VirushadeException Thrown when unable to create file.","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"    private void createFilePath(File f) throws VirushadeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"GWphua"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"GWphua"},"content":"            f.createNewFile();","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"GWphua"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"Unable to create file.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"GWphua"},"content":"     * Updates STORAGE_FILE according to the input text.","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"GWphua"},"content":"     * @param text The input string to update STORAGE_FILE.","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"GWphua"},"content":"     * @throws VirushadeException Thrown when unable to create/ write to STORAGE_FILE.","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"GWphua"},"content":"    public void update(String text) throws VirushadeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"GWphua"},"content":"        if (!STORAGE_FILE.exists()) {","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"GWphua"},"content":"            createFilePath(STORAGE_FILE);","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"GWphua"},"content":"            FileWriter fw \u003d new FileWriter(STORAGE_FILE);","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"GWphua"},"content":"            fw.write(text);","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"GWphua"},"content":"            fw.close();","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"GWphua"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"Unable to write to file.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"GWphua":83}},{"path":"src/main/java/virushade/StringManipulator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":" * A utility class that helps with string manipulation.","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"public class StringManipulator {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"     * Separates the string by the first instance of the given character.","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"     * @param str The input string.","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"     * @param character The character to partition the string by.","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"     * @return The pair of string, separated by the partition character.","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"    private static String[] partition(String str, char character) {","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"        int index \u003d str.indexOf(character);","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"        String[] pair \u003d new String[2];","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"        if (index \u003e -1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"            // Gets rid of a space in the end of the first partition.","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"            pair[0] \u003d str.substring(0, index).trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"            pair[1] \u003d str.substring(index + 1).trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"            // If there exists no \u0027/\u0027 in the string, set the tail of the pair as an empty string.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"            pair[0] \u003d str;","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"            pair[1] \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"        return pair;","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"     * Partitions the string into 2, seperated by the first \u0027/\u0027.","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"     * @param str The input string","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"     * @return The pair of strings.","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"    public static String[] slashPartition(String str) {","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"        return partition(str, \u0027/\u0027);","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"     * Returns the first word and everything after the first \u0027 \u0027 of the String.","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"     * @param input The input word.","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"     * @return The pair of strings","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"    public static String[] wordSeparator(String input) {","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"        return partition(input, \u0027 \u0027);","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"     * Returns everything after the first instance of a period.","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"GWphua"},"content":"     * @param str The input string.","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"     * @return The string after the first period.","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"    public static String everythingAfterDot(String str) {","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"GWphua"},"content":"        int index \u003d str.indexOf(\u0027.\u0027);","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"GWphua"},"content":"        if (index \u003e -1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"            return str.substring(index + 1).trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"GWphua"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"GWphua"},"content":"            return str;","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"GWphua"},"content":"     * Converts the input string from 24-hour time to 12-hour time representation.","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"GWphua"},"content":"     * @param timeString The input string","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"GWphua"},"content":"     * @return The converted string.","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"GWphua"},"content":"    private static String convertTime(String timeString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"GWphua"},"content":"            int timeIn24hRepresentation \u003d Integer.parseInt(timeString);","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"GWphua"},"content":"            int hours \u003d timeIn24hRepresentation / 100;","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"GWphua"},"content":"            int minutes \u003d timeIn24hRepresentation % 100;","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"GWphua"},"content":"            boolean isOutOfBounds \u003d hours \u003c 0 || hours \u003e 24 || minutes \u003c 0 || minutes \u003e 60;","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"GWphua"},"content":"            boolean cannotConvertToTime \u003d timeString.length() !\u003d 4;","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"GWphua"},"content":"            if (isOutOfBounds || cannotConvertToTime) {","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"GWphua"},"content":"                return timeString;","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"GWphua"},"content":"                return convertTimeToStringRepresentation(hours, minutes);","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"GWphua"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"GWphua"},"content":"            return timeString;","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"GWphua"},"content":"    private static String convertTimeToStringRepresentation(int hours, int minutes) {","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"GWphua"},"content":"        assert hours \u003e -1;","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"GWphua"},"content":"        assert hours \u003c 24;","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"GWphua"},"content":"        assert minutes \u003e -1;","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"GWphua"},"content":"        assert minutes \u003c 60;","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"GWphua"},"content":"        if (hours \u003e 11) {","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"GWphua"},"content":"            if (hours !\u003d 12) {","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"GWphua"},"content":"                hours -\u003d 12;","lastModifiedDate":"2021-08-26"},{"lineNumber":99,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"GWphua"},"content":"            if (hours \u003c 10 \u0026\u0026 minutes \u003c 10) {","lastModifiedDate":"2021-08-26"},{"lineNumber":102,"author":{"gitId":"GWphua"},"content":"                return \"0\" + hours + \":0\" + minutes + \"PM\";","lastModifiedDate":"2021-08-26"},{"lineNumber":103,"author":{"gitId":"GWphua"},"content":"            } else if (hours \u003c 10) {","lastModifiedDate":"2021-08-26"},{"lineNumber":104,"author":{"gitId":"GWphua"},"content":"                return \"0\" + hours + \":\" + minutes + \"PM\";","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"GWphua"},"content":"            } else if (minutes \u003c 10) {","lastModifiedDate":"2021-08-26"},{"lineNumber":106,"author":{"gitId":"GWphua"},"content":"                return hours + \":0\" + minutes + \"PM\";","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":108,"author":{"gitId":"GWphua"},"content":"                return hours + \":\" + minutes + \"PM\";","lastModifiedDate":"2021-08-26"},{"lineNumber":109,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":110,"author":{"gitId":"GWphua"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"GWphua"},"content":"            if (hours \u003d\u003d 0) {","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"GWphua"},"content":"                hours +\u003d 12;","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"GWphua"},"content":"            if (hours \u003c 10 \u0026\u0026 minutes \u003c 10) {","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"GWphua"},"content":"                return \"0\" + hours + \":0\" + minutes + \"AM\";","lastModifiedDate":"2021-08-26"},{"lineNumber":117,"author":{"gitId":"GWphua"},"content":"            } else if (hours \u003c 10) {","lastModifiedDate":"2021-08-26"},{"lineNumber":118,"author":{"gitId":"GWphua"},"content":"                return \"0\" + hours + \":\" + minutes + \"AM\";","lastModifiedDate":"2021-08-26"},{"lineNumber":119,"author":{"gitId":"GWphua"},"content":"            } else if (minutes \u003c 10) {","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"GWphua"},"content":"                return hours + \":0\" + minutes + \"AM\";","lastModifiedDate":"2021-08-27"},{"lineNumber":121,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":122,"author":{"gitId":"GWphua"},"content":"                return hours + \":\" + minutes + \"AM\";","lastModifiedDate":"2021-08-26"},{"lineNumber":123,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":124,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":126,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":127,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":128,"author":{"gitId":"GWphua"},"content":"     * Converts the inputString into DD MMM YYYY format, or 12-hour time representation if applicable.","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"GWphua"},"content":"     * @param inputString The input string.","lastModifiedDate":"2021-08-26"},{"lineNumber":130,"author":{"gitId":"GWphua"},"content":"     * @return A string in DD MMM YYYY TIME format if inputString is in \"YYYY-MM-DD TIME\" format.","lastModifiedDate":"2021-08-26"},{"lineNumber":131,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"GWphua"},"content":"    public static String convertDateAndTime(String inputString) {","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"GWphua"},"content":"        String trimmedInputString \u003d inputString.trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":135,"author":{"gitId":"GWphua"},"content":"        if (trimmedInputString.length() \u003c 10) {","lastModifiedDate":"2021-09-15"},{"lineNumber":136,"author":{"gitId":"GWphua"},"content":"            return convertTime(inputString);","lastModifiedDate":"2021-09-15"},{"lineNumber":137,"author":{"gitId":"GWphua"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":138,"author":{"gitId":"GWphua"},"content":"            String dateString \u003d trimmedInputString.substring(0, 10).trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":139,"author":{"gitId":"GWphua"},"content":"            String timeString \u003d trimmedInputString.substring(10).trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"GWphua"},"content":"            try {","lastModifiedDate":"2021-08-26"},{"lineNumber":141,"author":{"gitId":"GWphua"},"content":"                String date \u003d LocalDate.parse(dateString).format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"GWphua"},"content":"                if (timeString.length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"GWphua"},"content":"                    return date + \" \" + convertTime(timeString);","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"GWphua"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"GWphua"},"content":"                return date + timeString;","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"GWphua"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"GWphua"},"content":"                return inputString;","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":153,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":154,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":155,"author":{"gitId":"GWphua"},"content":"     * Compares two string by their ASCII values, and returns either 0, -1, or 1.","lastModifiedDate":"2021-09-12"},{"lineNumber":156,"author":{"gitId":"GWphua"},"content":"     * @param firstString The first string.","lastModifiedDate":"2021-09-12"},{"lineNumber":157,"author":{"gitId":"GWphua"},"content":"     * @param secondString The second string.","lastModifiedDate":"2021-09-12"},{"lineNumber":158,"author":{"gitId":"GWphua"},"content":"     * @return 0 if both strings are of the same value.","lastModifiedDate":"2021-09-12"},{"lineNumber":159,"author":{"gitId":"GWphua"},"content":"     *         1 if the second string is considered larger than the first.","lastModifiedDate":"2021-09-12"},{"lineNumber":160,"author":{"gitId":"GWphua"},"content":"     *         -1 if the second string is considered smaller than the first.","lastModifiedDate":"2021-09-12"},{"lineNumber":161,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":162,"author":{"gitId":"GWphua"},"content":"    public static int compareString(String firstString, String secondString) {","lastModifiedDate":"2021-09-12"},{"lineNumber":163,"author":{"gitId":"GWphua"},"content":"        if (isEmptyString(firstString) || isEmptyString(secondString)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":164,"author":{"gitId":"GWphua"},"content":"            if (isEmptyString(firstString) \u0026\u0026 isEmptyString(secondString)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":165,"author":{"gitId":"GWphua"},"content":"                return 0;","lastModifiedDate":"2021-09-12"},{"lineNumber":166,"author":{"gitId":"GWphua"},"content":"            } else if (isEmptyString(firstString)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":167,"author":{"gitId":"GWphua"},"content":"                return 1;","lastModifiedDate":"2021-09-12"},{"lineNumber":168,"author":{"gitId":"GWphua"},"content":"            } else if (isEmptyString(secondString)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":169,"author":{"gitId":"GWphua"},"content":"                return -1;","lastModifiedDate":"2021-09-12"},{"lineNumber":170,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":171,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":172,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":173,"author":{"gitId":"GWphua"},"content":"        char charOfFirst \u003d firstString.charAt(0);","lastModifiedDate":"2021-09-12"},{"lineNumber":174,"author":{"gitId":"GWphua"},"content":"        char charOfSecond \u003d secondString.charAt(0);","lastModifiedDate":"2021-09-12"},{"lineNumber":175,"author":{"gitId":"GWphua"},"content":"        int result \u003d compareChar(charOfFirst, charOfSecond);","lastModifiedDate":"2021-09-12"},{"lineNumber":176,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":177,"author":{"gitId":"GWphua"},"content":"        if (result \u003d\u003d 0) {","lastModifiedDate":"2021-09-12"},{"lineNumber":178,"author":{"gitId":"GWphua"},"content":"            return compareString(firstString.substring(1), secondString.substring(1));","lastModifiedDate":"2021-09-12"},{"lineNumber":179,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":180,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":181,"author":{"gitId":"GWphua"},"content":"        return result;","lastModifiedDate":"2021-09-12"},{"lineNumber":182,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":183,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":184,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":185,"author":{"gitId":"GWphua"},"content":"     * Compares two characters by their ASCII values, and returns either 0, -1 or 1.","lastModifiedDate":"2021-09-12"},{"lineNumber":186,"author":{"gitId":"GWphua"},"content":"     * @param firstChar The first character","lastModifiedDate":"2021-09-12"},{"lineNumber":187,"author":{"gitId":"GWphua"},"content":"     * @param secondChar The second character","lastModifiedDate":"2021-09-12"},{"lineNumber":188,"author":{"gitId":"GWphua"},"content":"     * @return 0 if both characters have the same value.","lastModifiedDate":"2021-09-12"},{"lineNumber":189,"author":{"gitId":"GWphua"},"content":"     *         1 if the second character has a larger value.","lastModifiedDate":"2021-09-12"},{"lineNumber":190,"author":{"gitId":"GWphua"},"content":"     *         -1 if the second character has a smaller value.","lastModifiedDate":"2021-09-12"},{"lineNumber":191,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":192,"author":{"gitId":"GWphua"},"content":"    public static int compareChar(char firstChar, char secondChar) {","lastModifiedDate":"2021-09-12"},{"lineNumber":193,"author":{"gitId":"GWphua"},"content":"        return Character.compare(secondChar, firstChar);","lastModifiedDate":"2021-09-12"},{"lineNumber":194,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":195,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":196,"author":{"gitId":"GWphua"},"content":"    private static boolean isEmptyString(String string) {","lastModifiedDate":"2021-09-12"},{"lineNumber":197,"author":{"gitId":"GWphua"},"content":"        return string.equals(\"\");","lastModifiedDate":"2021-09-12"},{"lineNumber":198,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":199,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"GWphua":199}},{"path":"src/main/java/virushade/Virushade.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import java.util.Timer;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"import java.util.TimerTask;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-03"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-03"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-03"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-03"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-03"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-03"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-03"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"import virushade.tasks.TaskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":" * The Main class of the application.","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"public class Virushade extends Application {","lastModifiedDate":"2021-09-03"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"    private Storage storageFile;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"    private ResponseProcessor responseProcessor;","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-03"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-03"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-03"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-03"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"    private Scene scene;","lastModifiedDate":"2021-09-03"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"    private AnchorPane mainLayout;","lastModifiedDate":"2021-09-03"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"    private final Image USER \u003d new Image(this.getClass().getResourceAsStream(\"/images/Telescope.png\"));","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"    private final Image VIRUSHADE \u003d new Image(this.getClass().getResourceAsStream(\"/images/Virushade.png\"));","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"     * The constructor for Virushade.","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"     * @param fileName The file path of the file where data is written to.","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"    public Virushade(String fileName) {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"        storageFile \u003d new Storage(fileName);","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"            TaskList taskList \u003d new TaskList(storageFile);","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"        } catch (VirushadeException e) {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"            ResponseProcessor.handleVirushadeException(e);","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"     * Starts the Virushade application.","lastModifiedDate":"2021-09-03"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"     * @param stage The stage.","lastModifiedDate":"2021-09-03"},{"lineNumber":54,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"    @Override","lastModifiedDate":"2021-09-03"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-03"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"        initializeGuiFields();","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"GWphua"},"content":"        setTheStage(stage);","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"GWphua"},"content":"        tweakGuiDisplay();","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"GWphua"},"content":"        sayHello();","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"        listenForUserInput();","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":64,"author":{"gitId":"GWphua"},"content":"    private void initializeGuiFields() {","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"GWphua"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2021-09-03"},{"lineNumber":66,"author":{"gitId":"GWphua"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2021-09-03"},{"lineNumber":67,"author":{"gitId":"GWphua"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2021-09-03"},{"lineNumber":68,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":69,"author":{"gitId":"GWphua"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2021-09-03"},{"lineNumber":70,"author":{"gitId":"GWphua"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2021-09-03"},{"lineNumber":71,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":72,"author":{"gitId":"GWphua"},"content":"        mainLayout \u003d new AnchorPane();","lastModifiedDate":"2021-09-03"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2021-09-03"},{"lineNumber":74,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":75,"author":{"gitId":"GWphua"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2021-09-03"},{"lineNumber":76,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":78,"author":{"gitId":"GWphua"},"content":"    private void setTheStage(Stage stage) {","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"GWphua"},"content":"        stage.setScene(scene);","lastModifiedDate":"2021-09-03"},{"lineNumber":80,"author":{"gitId":"GWphua"},"content":"        stage.show();","lastModifiedDate":"2021-09-03"},{"lineNumber":81,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":82,"author":{"gitId":"GWphua"},"content":"        stage.setTitle(\"Virushade\");","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"GWphua"},"content":"        stage.setResizable(false);","lastModifiedDate":"2021-09-03"},{"lineNumber":84,"author":{"gitId":"GWphua"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":85,"author":{"gitId":"GWphua"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":86,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":88,"author":{"gitId":"GWphua"},"content":"    private void tweakGuiDisplay() {","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"GWphua"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":90,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":91,"author":{"gitId":"GWphua"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2021-09-03"},{"lineNumber":92,"author":{"gitId":"GWphua"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2021-09-03"},{"lineNumber":93,"author":{"gitId":"GWphua"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2021-09-03"},{"lineNumber":94,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":95,"author":{"gitId":"GWphua"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":96,"author":{"gitId":"GWphua"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2021-09-03"},{"lineNumber":97,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":98,"author":{"gitId":"GWphua"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2021-09-03"},{"lineNumber":99,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":100,"author":{"gitId":"GWphua"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":101,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":102,"author":{"gitId":"GWphua"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":103,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":104,"author":{"gitId":"GWphua"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":105,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":106,"author":{"gitId":"GWphua"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":107,"author":{"gitId":"GWphua"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":108,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":109,"author":{"gitId":"GWphua"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":110,"author":{"gitId":"GWphua"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2021-09-03"},{"lineNumber":111,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":112,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":113,"author":{"gitId":"GWphua"},"content":"    private void listenForUserInput() {","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"GWphua"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2021-09-03"},{"lineNumber":115,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":116,"author":{"gitId":"GWphua"},"content":"        //Functionality to handle user input.","lastModifiedDate":"2021-09-03"},{"lineNumber":117,"author":{"gitId":"GWphua"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2021-09-03"},{"lineNumber":118,"author":{"gitId":"GWphua"},"content":"            handleUserInput();","lastModifiedDate":"2021-09-03"},{"lineNumber":119,"author":{"gitId":"GWphua"},"content":"        });","lastModifiedDate":"2021-09-03"},{"lineNumber":120,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":121,"author":{"gitId":"GWphua"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2021-09-03"},{"lineNumber":122,"author":{"gitId":"GWphua"},"content":"            handleUserInput();","lastModifiedDate":"2021-09-03"},{"lineNumber":123,"author":{"gitId":"GWphua"},"content":"        });","lastModifiedDate":"2021-09-03"},{"lineNumber":124,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":125,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":126,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":127,"author":{"gitId":"GWphua"},"content":"     * Gets Virushade to greet the user. Always ran when Virushade is launched.","lastModifiedDate":"2021-09-12"},{"lineNumber":128,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":129,"author":{"gitId":"GWphua"},"content":"    private void sayHello() {","lastModifiedDate":"2021-09-04"},{"lineNumber":130,"author":{"gitId":"GWphua"},"content":"        Label virushadeText \u003d new Label(ResponseProcessor.greet());","lastModifiedDate":"2021-09-04"},{"lineNumber":131,"author":{"gitId":"GWphua"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getVirushadeDialog(virushadeText, new ImageView(VIRUSHADE)));","lastModifiedDate":"2021-09-12"},{"lineNumber":132,"author":{"gitId":"GWphua"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-04"},{"lineNumber":133,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":134,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":135,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":136,"author":{"gitId":"GWphua"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Virushade\u0027s reply and then","lastModifiedDate":"2021-09-04"},{"lineNumber":137,"author":{"gitId":"GWphua"},"content":"     * appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-04"},{"lineNumber":138,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":139,"author":{"gitId":"GWphua"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-03"},{"lineNumber":140,"author":{"gitId":"GWphua"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-04"},{"lineNumber":141,"author":{"gitId":"GWphua"},"content":"        String output \u003d getResponse(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":142,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":143,"author":{"gitId":"GWphua"},"content":"        reply(input, output);","lastModifiedDate":"2021-09-12"},{"lineNumber":144,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":145,"author":{"gitId":"GWphua"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":146,"author":{"gitId":"GWphua"},"content":"            shutdownVirushade();","lastModifiedDate":"2021-09-12"},{"lineNumber":147,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":148,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":149,"author":{"gitId":"GWphua"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-12"},{"lineNumber":150,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":151,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":152,"author":{"gitId":"GWphua"},"content":"    private void reply(String input, String output) {","lastModifiedDate":"2021-09-12"},{"lineNumber":153,"author":{"gitId":"GWphua"},"content":"        Label userText \u003d new Label(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":154,"author":{"gitId":"GWphua"},"content":"        Label virushadeText \u003d new Label(output);","lastModifiedDate":"2021-09-04"},{"lineNumber":155,"author":{"gitId":"GWphua"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2021-09-03"},{"lineNumber":156,"author":{"gitId":"GWphua"},"content":"                DialogBox.getUserDialog(userText, new ImageView(USER)),","lastModifiedDate":"2021-09-12"},{"lineNumber":157,"author":{"gitId":"GWphua"},"content":"                DialogBox.getVirushadeDialog(virushadeText, new ImageView(VIRUSHADE))","lastModifiedDate":"2021-09-12"},{"lineNumber":158,"author":{"gitId":"GWphua"},"content":"        );","lastModifiedDate":"2021-09-03"},{"lineNumber":159,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":160,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":161,"author":{"gitId":"GWphua"},"content":"    private void shutdownVirushade() {","lastModifiedDate":"2021-09-12"},{"lineNumber":162,"author":{"gitId":"GWphua"},"content":"        // Disable all mode of input","lastModifiedDate":"2021-09-04"},{"lineNumber":163,"author":{"gitId":"GWphua"},"content":"        userInput.setDisable(true);","lastModifiedDate":"2021-09-04"},{"lineNumber":164,"author":{"gitId":"GWphua"},"content":"        sendButton.setDisable(true);","lastModifiedDate":"2021-09-04"},{"lineNumber":165,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":166,"author":{"gitId":"GWphua"},"content":"        // Exit after 1s for the user to view the exit message.","lastModifiedDate":"2021-09-12"},{"lineNumber":167,"author":{"gitId":"GWphua"},"content":"        new Timer().schedule(new TimerTask() {","lastModifiedDate":"2021-09-04"},{"lineNumber":168,"author":{"gitId":"GWphua"},"content":"            @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":169,"author":{"gitId":"GWphua"},"content":"            public void run() {","lastModifiedDate":"2021-09-04"},{"lineNumber":170,"author":{"gitId":"GWphua"},"content":"                System.exit(0);","lastModifiedDate":"2021-09-04"},{"lineNumber":171,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":172,"author":{"gitId":"GWphua"},"content":"        }, 1000);","lastModifiedDate":"2021-09-04"},{"lineNumber":173,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":174,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":175,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-09-03"},{"lineNumber":176,"author":{"gitId":"GWphua"},"content":"     * The function that gives a response to the user actions.","lastModifiedDate":"2021-09-12"},{"lineNumber":177,"author":{"gitId":"GWphua"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-12"},{"lineNumber":178,"author":{"gitId":"GWphua"},"content":"     * @return A string that represents the response by Virushade.","lastModifiedDate":"2021-09-12"},{"lineNumber":179,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-09-03"},{"lineNumber":180,"author":{"gitId":"GWphua"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2021-09-03"},{"lineNumber":181,"author":{"gitId":"GWphua"},"content":"        return ResponseProcessor.handleMessage(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":182,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":183,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"GWphua":183}},{"path":"src/main/java/virushade/VirushadeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":" * Our custom Exception to handle all unexpected user inputs.","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"public class VirushadeException extends Exception {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"    public VirushadeException(String message) {","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"        super(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"GWphua":10}},{"path":"src/main/java/virushade/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade.tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import virushade.StringManipulator;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"    private final String deadline;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"     * The constructor for a Deadlines Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"     * @param taskDescription The name of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"    public Deadline(String taskDescription, String deadline, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"        super(taskDescription, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"        this.deadline \u003d StringManipulator.convertDateAndTime(deadline);","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"     * @return String representation of Deadlines task.","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"        return \"[D]\" + super.toString() + \" /by: \" + deadline;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"GWphua":26}},{"path":"src/main/java/virushade/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade.tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import virushade.StringManipulator;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"    private final String time;","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"     * The constructor for an Events Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"     * @param taskDescription The name of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"     * @param time The time of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"    public Event(String taskDescription, String time, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"        super(taskDescription, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"        this.time \u003d StringManipulator.convertDateAndTime(time);","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"     * @return String representation of Events task.","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"        return \"[E]\" + super.toString() + \" /at \" + time;","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"GWphua":25}},{"path":"src/main/java/virushade/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade.tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import virushade.StringManipulator;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"import virushade.VirushadeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"/**","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":" * The Task class represents the tasks created by Virushade.","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":" */","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"    private final String taskDescription;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"     * Constructor for a task.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"     * @param taskDescription The name of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"    public Task(String taskDescription, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"     * Parses the input string to create Tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"     * Tasks are to be written in the following format:","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"     * Index. [Task Type][is done] Task name /extra commands (/by for Deadline, /at for Events).","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"     * @param inputString The input string.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"     * @return The tasks that are created from the input string.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"     * @throws VirushadeException Thrown when the input string is not of acceptable format.","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"    public static Task parse(String inputString) throws VirushadeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"        // Remove the numbering at the start of each line.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"        String text \u003d StringManipulator.everythingAfterDot(inputString);","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"        if (text.length() \u003c 6) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"Error: File cannot be parsed.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"        // Sieve out important information for task creation.","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"        String taskCategory \u003d text.substring(0, 3);","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"        String taskCompletionStatus \u003d text.substring(3, 6);","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"        String taskDescription \u003d text.substring(6).trim();","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"        String[] strings \u003d StringManipulator.slashPartition(taskDescription);","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"        switch(taskCategory) {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"        case \"[T]\":","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"            return createToDoTask(taskCompletionStatus, taskDescription);","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"        case \"[E]\":","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"            return createEventTask(taskCompletionStatus, strings);","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"        case \"[D]\":","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"GWphua"},"content":"            return createDeadlineTask(taskCompletionStatus, strings);","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"        default:","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"Error: File cannot be parsed.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"    private static ToDo createToDoTask(String taskCompletionStatus, String taskDescription) throws VirushadeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"GWphua"},"content":"        if (taskCompletionStatus.equals(\"[x]\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"GWphua"},"content":"            return new ToDo(taskDescription, true);","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"GWphua"},"content":"        } else if (taskCompletionStatus.equals(\"[ ]\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"GWphua"},"content":"            return new ToDo(taskDescription, false);","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"GWphua"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"Error: File cannot be parsed.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"GWphua"},"content":"    private static Event createEventTask(String taskCompletionStatus, String[] strings) throws VirushadeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"GWphua"},"content":"        if (taskCompletionStatus.equals(\"[x]\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"            return new Event(strings[0], strings[1].substring(3), true);","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"GWphua"},"content":"        } else if (taskCompletionStatus.equals(\"[ ]\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"GWphua"},"content":"            return new Event(strings[0], strings[1].substring(3), false);","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"GWphua"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"Error: File cannot be parsed.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"GWphua"},"content":"    private static Deadline createDeadlineTask(String taskCompletionStatus, String[] strings) throws VirushadeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"GWphua"},"content":"        if (taskCompletionStatus.equals(\"[x]\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":83,"author":{"gitId":"GWphua"},"content":"            return new Deadline(strings[0], strings[1].substring(3), true);","lastModifiedDate":"2021-08-26"},{"lineNumber":84,"author":{"gitId":"GWphua"},"content":"        } else if (taskCompletionStatus.equals(\"[ ]\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"GWphua"},"content":"            return new Deadline(strings[0], strings[1].substring(3), false);","lastModifiedDate":"2021-08-26"},{"lineNumber":86,"author":{"gitId":"GWphua"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"Error: File cannot be parsed.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":88,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"GWphua"},"content":"     * @return Updates the task status of completion as done.","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"GWphua"},"content":"    public String completeTask() {","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"GWphua"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"GWphua"},"content":"        return \"Nice! I have marked this task as done: \\n\" + this;","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"GWphua"},"content":"     * @return The output message when the task is deleted.","lastModifiedDate":"2021-09-12"},{"lineNumber":101,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"GWphua"},"content":"    public String deleteMessage() {","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"GWphua"},"content":"        return \"Noted. I\u0027ve removed this task: \\n\" + this;","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"GWphua"},"content":"     * @return Task name.","lastModifiedDate":"2021-08-19"},{"lineNumber":108,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"GWphua"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"GWphua"},"content":"        return taskDescription;","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"GWphua"},"content":"     * @return The string representation for the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"GWphua"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"GWphua"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"GWphua"},"content":"        return \"[\" + (isDone ? \"x\" : \" \") + \"] \" + taskDescription;","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"GWphua":120}},{"path":"src/main/java/virushade/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade.tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"import virushade.Sorter;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"import virushade.Storage;","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"import virushade.StringManipulator;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"import virushade.VirushadeException;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"public class TaskList {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"     * This is the array that Virushade keeps the tasks in.","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"    private static final ArrayList\u003cTask\u003e TASKS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"     * This is the file name of our file that stores data on TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"    private static Storage taskListStorage;","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"     * This variable keeps track of the size of the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"    private static int listCount \u003d 0;","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"     * Constructor for the TaskList class.","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"     * @param storage The storage for classList to load data from.","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"     * @throws VirushadeException Thrown when there is trouble parsing the data file in storage.","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"    public TaskList(Storage storage) throws VirushadeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"        taskListStorage \u003d storage;","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"        storage.load(TASKS);","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"        listCount \u003d TASKS.size();","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"     * A function that writes an input string to TASK_LIST_STORAGE.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"     * @param text The input string to write into the file.","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"    private static void updateFile(String text) throws VirushadeException {","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"        taskListStorage.update(text);","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"     * Adds a Task to taskList.","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"     * @param addedTaskDescription Name of the added Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"     * @param taskType The type of task to be added.","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"     * @return A string to represent the addition.","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"     * @throws VirushadeException Thrown when there is trouble adding the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"    public static String add(String addedTaskDescription, String taskType) throws VirushadeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"        if (listCount \u003c 100) {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"GWphua"},"content":"            Task addedTask;","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"            String[] strings \u003d StringManipulator.slashPartition(addedTaskDescription);","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"            // Checking if the Task Name is empty (Or filled with Spacebars):","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"GWphua"},"content":"            if (strings[0].replace(\" \", \"\").equals(\"\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"GWphua"},"content":"                throw new VirushadeException(\"OOPS!!! Please enter the task description!!!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"GWphua"},"content":"            // Checks that taskType can only be one of the selected types.","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"GWphua"},"content":"            assert (taskType.equals(\"TODO\") || taskType.equals(\"DEADLINE\") || taskType.equals(\"EVENT\"));","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"GWphua"},"content":"            switch (taskType) {","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"GWphua"},"content":"            case \"TODO\":","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"GWphua"},"content":"                addedTask \u003d new ToDo(addedTaskDescription, false);","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"GWphua"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"GWphua"},"content":"            case \"DEADLINE\":","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"GWphua"},"content":"                if (strings[1].startsWith(\"by \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"GWphua"},"content":"                    addedTask \u003d new Deadline(strings[0], strings[1].substring(3), false);","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"GWphua"},"content":"                    throw new VirushadeException(\"Please include a deadline after your task name. \"","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"GWphua"},"content":"                            + \"(e.g. /by Sunday)\");","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"GWphua"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"GWphua"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"GWphua"},"content":"            case \"EVENT\":","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"GWphua"},"content":"                if (strings[1].startsWith(\"at \")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"GWphua"},"content":"                    addedTask \u003d new Event(strings[0], strings[1].substring(3), false);","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"GWphua"},"content":"                } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"GWphua"},"content":"                    throw new VirushadeException(\"Please include a time after your task name. \"","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"GWphua"},"content":"                            + \"(e.g. /at 12 noon)\");","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"GWphua"},"content":"                }","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"GWphua"},"content":"                break;","lastModifiedDate":"2021-08-19"},{"lineNumber":87,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"GWphua"},"content":"            // The add function would not reach this line at all.","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"GWphua"},"content":"            default:","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"GWphua"},"content":"                throw new VirushadeException(\"ERROR!!! Something happened when adding task!!!\");","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"GWphua"},"content":"            TASKS.add(addedTask);","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"GWphua"},"content":"            listCount++;","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"GWphua"},"content":"            updateFile(generateList());","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"GWphua"},"content":"            return (\"Added: \" + addedTask.getTaskDescription()","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"GWphua"},"content":"                    + \"\\nNow you have \" + listCount + \" tasks in the list.\\n\");","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"GWphua"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"Sorry, Virushade cannot keep track of more than 100 tasks!!!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":100,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"GWphua"},"content":"     * Deletes the specified task.","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"GWphua"},"content":"     * @param str Input string, determines which task to delete.","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"GWphua"},"content":"     * @return The string message of deletion.","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"GWphua"},"content":"     * @throws VirushadeException Thrown when there is trouble deleting the task.","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"GWphua"},"content":"    public static String delete(String str) throws VirushadeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"GWphua"},"content":"            // If what comes after \"delete \" is not an integer, this will throw a NumberFormatException.","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"GWphua"},"content":"            int index \u003d Integer.parseInt(str);","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"GWphua"},"content":"            if (index \u003c\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"GWphua"},"content":"                throw new VirushadeException(\"Please enter an integer greater than 0.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":116,"author":{"gitId":"GWphua"},"content":"            } else if (index \u003c\u003d listCount) {","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"GWphua"},"content":"                return deleteTaskAndReturnString(index);","lastModifiedDate":"2021-09-12"},{"lineNumber":118,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"GWphua"},"content":"                throw new VirushadeException(\"Please check that you have entered the correct number!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":120,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"GWphua"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"GWphua"},"content":"            // Tells the user that he did not enter a number.","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"Please enter an integer after \u0027done \u0027 instead.\\n\" + e);","lastModifiedDate":"2021-08-26"},{"lineNumber":125,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"GWphua"},"content":"    private static String deleteTaskAndReturnString(int index) throws VirushadeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":129,"author":{"gitId":"GWphua"},"content":"        Task deletedTask \u003d TASKS.get(index - 1);","lastModifiedDate":"2021-09-12"},{"lineNumber":130,"author":{"gitId":"GWphua"},"content":"        TASKS.remove(index - 1);","lastModifiedDate":"2021-09-12"},{"lineNumber":131,"author":{"gitId":"GWphua"},"content":"        StringBuilder sb \u003d new StringBuilder(deletedTask.deleteMessage());","lastModifiedDate":"2021-09-12"},{"lineNumber":132,"author":{"gitId":"GWphua"},"content":"        listCount--;","lastModifiedDate":"2021-09-12"},{"lineNumber":133,"author":{"gitId":"GWphua"},"content":"        updateFile(generateList());","lastModifiedDate":"2021-09-12"},{"lineNumber":134,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":135,"author":{"gitId":"GWphua"},"content":"        String taskCountRepresentation \u003d \"You have \" + listCount + \" tasks in the list.\\n\";","lastModifiedDate":"2021-09-12"},{"lineNumber":136,"author":{"gitId":"GWphua"},"content":"        sb.append(System.lineSeparator()).append(taskCountRepresentation);","lastModifiedDate":"2021-09-12"},{"lineNumber":137,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":138,"author":{"gitId":"GWphua"},"content":"        return sb.toString();","lastModifiedDate":"2021-09-12"},{"lineNumber":139,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":140,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":141,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"GWphua"},"content":"     * Marks a task as complete.","lastModifiedDate":"2021-08-19"},{"lineNumber":143,"author":{"gitId":"GWphua"},"content":"     * @param str Input string, determines which task to mark as complete.","lastModifiedDate":"2021-08-19"},{"lineNumber":144,"author":{"gitId":"GWphua"},"content":"     * @return The string to notify of successful completion.","lastModifiedDate":"2021-09-04"},{"lineNumber":145,"author":{"gitId":"GWphua"},"content":"     * @throws VirushadeException Thrown when there is something wrong with the user input.","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":147,"author":{"gitId":"GWphua"},"content":"    public static String completeTask(String str) throws VirushadeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":148,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":150,"author":{"gitId":"GWphua"},"content":"            // If what comes after \"done \" is not an integer, this will throw a NumberFormatException.","lastModifiedDate":"2021-08-19"},{"lineNumber":151,"author":{"gitId":"GWphua"},"content":"            int index \u003d Integer.parseInt(str);","lastModifiedDate":"2021-08-19"},{"lineNumber":152,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":153,"author":{"gitId":"GWphua"},"content":"            if (index \u003c\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":154,"author":{"gitId":"GWphua"},"content":"                throw new VirushadeException(\"Please enter an integer greater than 0.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":155,"author":{"gitId":"GWphua"},"content":"            } else if (index \u003c\u003d listCount) {","lastModifiedDate":"2021-08-19"},{"lineNumber":156,"author":{"gitId":"GWphua"},"content":"                Task doneTask \u003d TASKS.get(index - 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":157,"author":{"gitId":"GWphua"},"content":"                String returnString \u003d doneTask.completeTask();","lastModifiedDate":"2021-09-04"},{"lineNumber":158,"author":{"gitId":"GWphua"},"content":"                updateFile(generateList());","lastModifiedDate":"2021-08-26"},{"lineNumber":159,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":160,"author":{"gitId":"GWphua"},"content":"                return returnString;","lastModifiedDate":"2021-09-04"},{"lineNumber":161,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":162,"author":{"gitId":"GWphua"},"content":"                throw new VirushadeException(\"Please check that you have entered the correct number!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":163,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":164,"author":{"gitId":"GWphua"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":165,"author":{"gitId":"GWphua"},"content":"            // Tells the user that he did not enter a number.","lastModifiedDate":"2021-08-19"},{"lineNumber":166,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"Please enter an integer after \u0027done \u0027 instead.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":167,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":168,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":169,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":170,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":171,"author":{"gitId":"GWphua"},"content":"     * Sorts the tasks according to the keyword provided.","lastModifiedDate":"2021-09-12"},{"lineNumber":172,"author":{"gitId":"GWphua"},"content":"     * @param sortType The keyword which determines how the sorting is to be done.","lastModifiedDate":"2021-09-12"},{"lineNumber":173,"author":{"gitId":"GWphua"},"content":"     * @return A string notification on successful sorting.","lastModifiedDate":"2021-09-12"},{"lineNumber":174,"author":{"gitId":"GWphua"},"content":"     * @throws VirushadeException If there are problems with the input string.","lastModifiedDate":"2021-09-12"},{"lineNumber":175,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":176,"author":{"gitId":"GWphua"},"content":"    public static String sort(String sortType) throws VirushadeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":177,"author":{"gitId":"GWphua"},"content":"        if (sortType.equals(\"type\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":178,"author":{"gitId":"GWphua"},"content":"            Sorter.sortByType(TASKS);","lastModifiedDate":"2021-09-15"},{"lineNumber":179,"author":{"gitId":"GWphua"},"content":"            return \"Tasks sorted by each category successfully.\";","lastModifiedDate":"2021-09-12"},{"lineNumber":180,"author":{"gitId":"GWphua"},"content":"        } else if (sortType.equals(\"name\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":181,"author":{"gitId":"GWphua"},"content":"            Sorter.sortByName(TASKS);","lastModifiedDate":"2021-09-12"},{"lineNumber":182,"author":{"gitId":"GWphua"},"content":"            return \"Tasks sorted by name successfully.\";","lastModifiedDate":"2021-09-12"},{"lineNumber":183,"author":{"gitId":"GWphua"},"content":"        } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":184,"author":{"gitId":"GWphua"},"content":"            throw new VirushadeException(\"Please specify what you want to sort by. (e.g. \u0027type\u0027 or \u0027name\u0027)\");","lastModifiedDate":"2021-09-15"},{"lineNumber":185,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":186,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":187,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":188,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":189,"author":{"gitId":"GWphua"},"content":"     * @return String representation of the tasks within TASK_ARRAY_LIST.","lastModifiedDate":"2021-08-25"},{"lineNumber":190,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":191,"author":{"gitId":"GWphua"},"content":"    public static String generateList() {","lastModifiedDate":"2021-09-04"},{"lineNumber":192,"author":{"gitId":"GWphua"},"content":"        if (listCount \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":193,"author":{"gitId":"GWphua"},"content":"            return \"Nothing in the list as of now.\";","lastModifiedDate":"2021-08-25"},{"lineNumber":194,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":195,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":196,"author":{"gitId":"GWphua"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":197,"author":{"gitId":"GWphua"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":198,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":199,"author":{"gitId":"GWphua"},"content":"        while (index \u003c listCount) {","lastModifiedDate":"2021-08-19"},{"lineNumber":200,"author":{"gitId":"GWphua"},"content":"            String taskName \u003d (index + 1) + \".\" + TASKS.get(index).toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":201,"author":{"gitId":"GWphua"},"content":"            sb.append(System.lineSeparator()).append(taskName);","lastModifiedDate":"2021-08-25"},{"lineNumber":202,"author":{"gitId":"GWphua"},"content":"            index++;","lastModifiedDate":"2021-08-19"},{"lineNumber":203,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":204,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":205,"author":{"gitId":"GWphua"},"content":"        return sb.toString();","lastModifiedDate":"2021-08-25"},{"lineNumber":206,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":207,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":208,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":209,"author":{"gitId":"GWphua"},"content":"     * Returns a string representation of all the tasks that have input text as a substring.","lastModifiedDate":"2021-09-04"},{"lineNumber":210,"author":{"gitId":"GWphua"},"content":"     * @param text The input search text","lastModifiedDate":"2021-09-04"},{"lineNumber":211,"author":{"gitId":"GWphua"},"content":"     * @return All results matching the input.","lastModifiedDate":"2021-09-04"},{"lineNumber":212,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":213,"author":{"gitId":"GWphua"},"content":"    public static String findFromList(String text) {","lastModifiedDate":"2021-09-04"},{"lineNumber":214,"author":{"gitId":"GWphua"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-27"},{"lineNumber":215,"author":{"gitId":"GWphua"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-08-27"},{"lineNumber":216,"author":{"gitId":"GWphua"},"content":"        for (int i \u003d 0; i \u003c listCount; i++) {","lastModifiedDate":"2021-08-27"},{"lineNumber":217,"author":{"gitId":"GWphua"},"content":"            String taskName \u003d TASKS.get(i).toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":218,"author":{"gitId":"GWphua"},"content":"            if (taskName.contains(text)) {","lastModifiedDate":"2021-08-27"},{"lineNumber":219,"author":{"gitId":"GWphua"},"content":"                String foundTaskName \u003d counter + \".\" + taskName;","lastModifiedDate":"2021-08-27"},{"lineNumber":220,"author":{"gitId":"GWphua"},"content":"                counter++;","lastModifiedDate":"2021-08-27"},{"lineNumber":221,"author":{"gitId":"GWphua"},"content":"                sb.append(System.lineSeparator()).append(foundTaskName);","lastModifiedDate":"2021-08-27"},{"lineNumber":222,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":223,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":224,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":225,"author":{"gitId":"GWphua"},"content":"        if (counter \u003d\u003d 1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":226,"author":{"gitId":"GWphua"},"content":"            // Found nothing.","lastModifiedDate":"2021-08-27"},{"lineNumber":227,"author":{"gitId":"GWphua"},"content":"            return \"There are no matching results\";","lastModifiedDate":"2021-08-27"},{"lineNumber":228,"author":{"gitId":"GWphua"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":229,"author":{"gitId":"GWphua"},"content":"            return sb.toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":230,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":231,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":232,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"GWphua":232}},{"path":"src/main/java/virushade/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade.tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"     * The constructor for a Todos Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"     * @param taskDescription The name of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"    public ToDo(String taskDescription, boolean isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"        super(taskDescription, isDone);","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"     * @return String representation of ToDos task.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"GWphua":19}},{"path":"src/test/java/virushade/StringManipulatorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"public class StringManipulatorTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"    public void slashPartitionTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"        assertEquals(\"Before\",StringManipulator.slashPartition(\"Before/After\")[0]);","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"        assertEquals(\"After\", StringManipulator.slashPartition(\"Before/After\")[1]);","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"    public void singleDotTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"        assertEquals(\"Hello\", StringManipulator.everythingAfterDot(\"1.Hello\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"    public void doubleDotTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"        assertEquals(\". Hello\", StringManipulator.everythingAfterDot(\"1.. Hello\"));","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"GWphua":22}},{"path":"src/test/java/virushade/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade.tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"        assertEquals(\"[D][ ] DeadlineTask /by: 20 Aug 2021 12:01PM\",","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"                new Deadline(\"DeadlineTask\", \"2021-08-20 1201\", false).toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"GWphua":12}},{"path":"src/test/java/virushade/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade.tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"public class EventTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"        assertEquals(\"[E][x] EventTask /at 12:05AM\",","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"                new Event(\"EventTask\", \"0005\", true).toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"GWphua":11}},{"path":"src/test/java/virushade/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"package virushade.tasks;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"public class ToDoTest {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"    @Test","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"        assertEquals(\"[T][ ] To do CS2103T\", new ToDo(\"To do CS2103T\", false).toString());","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"GWphua":12}},{"path":"text-ui-test/data/Virushade.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"Nothing in the list as of now.","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"GWphua":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"Test Check if none of keywords added.","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"event","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"todo Test add todo task","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"deadline Test add deadline task /by 2012-12-11 2359","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"event Test add event task /at 2021-25-08","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"deadline Test slashPartition without space/by now","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"done 0.5","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"done LOL THIS AIN\u0027T NO INTEGER","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"done 10","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"done -1","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"delete","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"delete LOL THIS AIN\u0027T NO INTEGER","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"delete 1.5","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"delete -10","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"delete 10","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"delete 1","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"delete 1","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"bye","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"Check if already Exit.","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"GWphua":29}}]
