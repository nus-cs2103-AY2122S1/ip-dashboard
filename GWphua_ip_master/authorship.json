[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"    private final String deadline;","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"     * The constructor for a Deadlines Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"     * @param taskDescription The name of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"     * @param deadline The deadline of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"    public Deadline(String taskDescription, String deadline) {","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"        super(taskDescription);","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"        this.deadline \u003d convert(deadline);","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"     * @return String representation of Deadlines task.","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"GWphua":22}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"    private final String time;","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"     * The constructor for an Events Task.","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"     * @param taskDescription The name of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"     * @param time The time of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"    public Event(String taskDescription, String time) {","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"        super(taskDescription);","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"        this.time \u003d convert(time);","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"     * @return String representation of Events task.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"GWphua":21}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"public class Task {","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"    private final String taskDescription;","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"     * Constructor for a task.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"     * @param taskDescription The name of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"     * Updates the task status of completion as done.","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"        System.out.println(\"Nice! I have marked this task as done: \\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"                + this);","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"     * The output message when the task is deleted.","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"    public void deleteMessage() {","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \\n\"","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"                + this);","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"     * Gets the task name.","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"     * @return Task name.","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"        return taskDescription;","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"     * Converts the input string from 24-hour time to 12-hour time representation.","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"     * @param timeString The input string","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"     * @return The converted string.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"    private String convertTime(String timeString) {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"            int timeIn24hRepresentation \u003d Integer.parseInt(timeString);","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"            if (timeIn24hRepresentation \u003c 0 || timeIn24hRepresentation \u003e 2359","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"GWphua"},"content":"                    || Integer.parseInt(timeString.substring(2,3)) \u003e 5) {","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"                return timeString;","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"                int hours \u003d timeIn24hRepresentation/100;","lastModifiedDate":"2021-08-25"},{"lineNumber":58,"author":{"gitId":"GWphua"},"content":"                int minutes \u003d timeIn24hRepresentation%100;","lastModifiedDate":"2021-08-25"},{"lineNumber":59,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"GWphua"},"content":"                if (hours \u003e 12) {","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"                    hours -\u003d 12;","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"GWphua"},"content":"                    return hours + \":\" + minutes + \"PM\";","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"GWphua"},"content":"                } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"GWphua"},"content":"                    return hours + \":\" + minutes + \"AM\";","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"GWphua"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"GWphua"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"GWphua"},"content":"            return timeString;","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"     * Converts the inputString into DD MMM YYYY format, or 12-hour time representation if applicable.","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"GWphua"},"content":"     * @param inputString The input string.","lastModifiedDate":"2021-08-25"},{"lineNumber":75,"author":{"gitId":"GWphua"},"content":"     * @return A string in DD MMM YYYY TIME format if inputString is in \"YYYY-MM-DD TIME\" format.","lastModifiedDate":"2021-08-25"},{"lineNumber":76,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"GWphua"},"content":"    public String convert(String inputString) {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"GWphua"},"content":"        if (inputString.length() \u003c 10) {","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"GWphua"},"content":"            return convertTime(inputString);","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"GWphua"},"content":"        String dateString \u003d inputString.trim().substring(0, 10);","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"GWphua"},"content":"        String timeString \u003d inputString.trim().substring(10).trim();","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"GWphua"},"content":"            String date \u003d LocalDate.parse(dateString).format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));","lastModifiedDate":"2021-08-25"},{"lineNumber":86,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"GWphua"},"content":"            if (timeString.length() \u003d\u003d 4) {","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"GWphua"},"content":"                return date + \" \" + convertTime(timeString);","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":90,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":91,"author":{"gitId":"GWphua"},"content":"            return date + timeString;","lastModifiedDate":"2021-08-25"},{"lineNumber":92,"author":{"gitId":"GWphua"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-25"},{"lineNumber":93,"author":{"gitId":"GWphua"},"content":"            return inputString;","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":95,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":96,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"GWphua"},"content":"     * @return The string representation for the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"GWphua"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"GWphua"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"GWphua"},"content":"        return \"[\" + (isDone ? \"x\" : \" \") + \"] \" + taskDescription;","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"GWphua":104}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"public class TaskList {","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"     * This is the array that Virushade keeps the tasks in.","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"    private static final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"     * listCount keeps track of the size of the TaskList.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"    private static int listCount \u003d 0;","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"     * Partitions the string into 2, seperated by the first \u0027/\u0027.","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"     * @param str The input string","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"     * @return The pair of strings.","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"    private static String[] slashPartition(String str) {","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"        int index \u003d str.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"        String[] pair \u003d new String[2];","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"        if (index \u003e -1) {","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"            // Gets rid of a space in the end of the first partition (If there is one).","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"            if (str.charAt(index - 1) \u003d\u003d \u0027 \u0027) {","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"                pair[0] \u003d str.substring(0, index - 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"                pair[0] \u003d str.substring(0, index);","lastModifiedDate":"2021-08-19"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"            pair[1] \u003d str.substring(index + 1);","lastModifiedDate":"2021-08-19"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"            // If there exists no \u0027/\u0027 in the string, set the tail of the pair as an empty string.","lastModifiedDate":"2021-08-19"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"            pair[0] \u003d str;","lastModifiedDate":"2021-08-19"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"            pair[1] \u003d \"\";","lastModifiedDate":"2021-08-19"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"        return pair;","lastModifiedDate":"2021-08-19"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"     * Adds a Task to taskList.","lastModifiedDate":"2021-08-19"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"     * @param addedTaskDescription Name of the added Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"    public static void add(String addedTaskDescription, String taskType){","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"        if (listCount \u003c 100) {","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"            Task addedTask;","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"            String[] pair \u003d slashPartition(addedTaskDescription);","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"            // Checking if the Task Name is empty (Or filled with Spacebars):","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"            if (pair[0].replace(\" \", \"\").equals(\"\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"                System.out.println(\"OOPS!!! Please enter the task description!!!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"            switch (taskType) {","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"                case \"TODO\":","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"                    addedTask \u003d new ToDo(addedTaskDescription);","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"GWphua"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"GWphua"},"content":"                case \"DEADLINE\":","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"                    if (pair[1].startsWith(\"by \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"GWphua"},"content":"                        addedTask \u003d new Deadline(pair[0], pair[1].substring(3));","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"GWphua"},"content":"                    } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"GWphua"},"content":"                        System.out.println(\"Please include a deadline after your task name. \" +","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"GWphua"},"content":"                                \"(e.g. /by Sunday)\");","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"GWphua"},"content":"                        return;","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"GWphua"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"GWphua"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"GWphua"},"content":"                case \"EVENT\":","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"GWphua"},"content":"                    pair \u003d slashPartition(addedTaskDescription);","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"GWphua"},"content":"                    if (pair[1].startsWith(\"at \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"                        addedTask \u003d new Event(pair[0], pair[1].substring(3));","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"GWphua"},"content":"                    } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"GWphua"},"content":"                        System.out.println(\"Please include a time after your task name. \" +","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"GWphua"},"content":"                                \"(e.g. /at 12 noon)\");","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"GWphua"},"content":"                        return;","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"GWphua"},"content":"                    }","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"GWphua"},"content":"                    break;","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"GWphua"},"content":"                // The add function would not reach this line at all.","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"GWphua"},"content":"                default:","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"GWphua"},"content":"                    addedTask \u003d new Task(addedTaskDescription);","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"GWphua"},"content":"            taskList.add(addedTask);","lastModifiedDate":"2021-08-25"},{"lineNumber":87,"author":{"gitId":"GWphua"},"content":"            listCount++;","lastModifiedDate":"2021-08-19"},{"lineNumber":88,"author":{"gitId":"GWphua"},"content":"            System.out.println(\"Added: \" + addedTask.getTaskDescription());","lastModifiedDate":"2021-08-19"},{"lineNumber":89,"author":{"gitId":"GWphua"},"content":"            System.out.printf(\"Now you have %d tasks in the list.\\n\", listCount);","lastModifiedDate":"2021-08-19"},{"lineNumber":90,"author":{"gitId":"GWphua"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":91,"author":{"gitId":"GWphua"},"content":"            System.out.println(\"Sorry, Virushade cannot keep track of more than 100 tasks!!!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":92,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":93,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":94,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":95,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":96,"author":{"gitId":"GWphua"},"content":"     * Deletes the specified task.","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"GWphua"},"content":"     * @param str Input string, determines which task to delete.","lastModifiedDate":"2021-08-19"},{"lineNumber":98,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":99,"author":{"gitId":"GWphua"},"content":"    public static void delete(String str) {","lastModifiedDate":"2021-08-19"},{"lineNumber":100,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"GWphua"},"content":"            // If what comes after \"delete \" is not an integer, this will throw a NumberFormatException.","lastModifiedDate":"2021-08-19"},{"lineNumber":102,"author":{"gitId":"GWphua"},"content":"            int index \u003d Integer.parseInt(str);","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"GWphua"},"content":"            if (index \u003c\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":105,"author":{"gitId":"GWphua"},"content":"                System.out.println(\"Please enter an integer greater than 0.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":106,"author":{"gitId":"GWphua"},"content":"            } else if (index \u003c\u003d listCount) {","lastModifiedDate":"2021-08-19"},{"lineNumber":107,"author":{"gitId":"GWphua"},"content":"                Task deletedTask \u003d taskList.get(index - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":108,"author":{"gitId":"GWphua"},"content":"                deletedTask.deleteMessage();","lastModifiedDate":"2021-08-19"},{"lineNumber":109,"author":{"gitId":"GWphua"},"content":"                listCount--;","lastModifiedDate":"2021-08-19"},{"lineNumber":110,"author":{"gitId":"GWphua"},"content":"                System.out.printf(\"You have %d tasks in the list.\\n\", listCount);","lastModifiedDate":"2021-08-19"},{"lineNumber":111,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":112,"author":{"gitId":"GWphua"},"content":"                System.out.println(\"Please check that you have entered the correct number!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":113,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":114,"author":{"gitId":"GWphua"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":115,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":116,"author":{"gitId":"GWphua"},"content":"            // Tells the user that he did not enter a number.","lastModifiedDate":"2021-08-19"},{"lineNumber":117,"author":{"gitId":"GWphua"},"content":"            System.out.println(\"Please enter an integer after \u0027done \u0027 instead.\\n\" + e);","lastModifiedDate":"2021-08-19"},{"lineNumber":118,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":119,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":120,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":121,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":122,"author":{"gitId":"GWphua"},"content":"     * Marks a task as complete.","lastModifiedDate":"2021-08-19"},{"lineNumber":123,"author":{"gitId":"GWphua"},"content":"     * @param str Input string, determines which task to mark as complete.","lastModifiedDate":"2021-08-19"},{"lineNumber":124,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":125,"author":{"gitId":"GWphua"},"content":"    public static void completeTask(String str) {","lastModifiedDate":"2021-08-19"},{"lineNumber":126,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":127,"author":{"gitId":"GWphua"},"content":"        try {","lastModifiedDate":"2021-08-19"},{"lineNumber":128,"author":{"gitId":"GWphua"},"content":"            // If what comes after \"done \" is not an integer, this will throw a NumberFormatException.","lastModifiedDate":"2021-08-19"},{"lineNumber":129,"author":{"gitId":"GWphua"},"content":"            int index \u003d Integer.parseInt(str);","lastModifiedDate":"2021-08-19"},{"lineNumber":130,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":131,"author":{"gitId":"GWphua"},"content":"            if (index \u003c\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":132,"author":{"gitId":"GWphua"},"content":"                System.out.println(\"Please enter an integer greater than 0.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":133,"author":{"gitId":"GWphua"},"content":"            } else if (index \u003c\u003d listCount) {","lastModifiedDate":"2021-08-19"},{"lineNumber":134,"author":{"gitId":"GWphua"},"content":"                Task doneTask \u003d taskList.get(index - 1);","lastModifiedDate":"2021-08-25"},{"lineNumber":135,"author":{"gitId":"GWphua"},"content":"                doneTask.completeTask();","lastModifiedDate":"2021-08-19"},{"lineNumber":136,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":137,"author":{"gitId":"GWphua"},"content":"                System.out.println(\"Please check that you have entered the correct number!\");","lastModifiedDate":"2021-08-19"},{"lineNumber":138,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-19"},{"lineNumber":139,"author":{"gitId":"GWphua"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-19"},{"lineNumber":140,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":141,"author":{"gitId":"GWphua"},"content":"            // Tells the user that he did not enter a number.","lastModifiedDate":"2021-08-19"},{"lineNumber":142,"author":{"gitId":"GWphua"},"content":"            System.out.println(\"Please enter an integer after \u0027done \u0027 instead.\\n\" + e);","lastModifiedDate":"2021-08-19"},{"lineNumber":143,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":144,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":145,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":146,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":147,"author":{"gitId":"GWphua"},"content":"     * Display the stored values in taskList for the user.","lastModifiedDate":"2021-08-19"},{"lineNumber":148,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":149,"author":{"gitId":"GWphua"},"content":"    public static void list() {","lastModifiedDate":"2021-08-19"},{"lineNumber":150,"author":{"gitId":"GWphua"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":151,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":152,"author":{"gitId":"GWphua"},"content":"        if (listCount \u003d\u003d 0) {","lastModifiedDate":"2021-08-19"},{"lineNumber":153,"author":{"gitId":"GWphua"},"content":"            System.out.println(\"Nothing in the list as of now.\");","lastModifiedDate":"2021-08-25"},{"lineNumber":154,"author":{"gitId":"GWphua"},"content":"            return;","lastModifiedDate":"2021-08-25"},{"lineNumber":155,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":156,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":157,"author":{"gitId":"GWphua"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":158,"author":{"gitId":"GWphua"},"content":"        while (index \u003c listCount) {","lastModifiedDate":"2021-08-19"},{"lineNumber":159,"author":{"gitId":"GWphua"},"content":"            System.out.println((index + 1) + \".\" + taskList.get(index).toString());","lastModifiedDate":"2021-08-25"},{"lineNumber":160,"author":{"gitId":"GWphua"},"content":"            index++;","lastModifiedDate":"2021-08-19"},{"lineNumber":161,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":162,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":163,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"GWphua":163}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"     * The constructor for a Todos Task.","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"     * @param taskDescription The name of the task.","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"    public ToDo(String taskDescription) {","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"        super(taskDescription);","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"     * @return String representation of ToDos task.","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"    @Override","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"    public String toString() {","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"GWphua":17}},{"path":"src/main/java/Virushade.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"public class Virushade {","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"     * Prints a line break. Used after every interaction with Virushade.","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"    private static void lineBreak() {","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"        System.out.println(\"_____________________________________________________\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"     * Prints the greeting.","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"    private static void greet() {","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"        System.out.println( \"Hello from\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"                + \"__      __ ( )                ____\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"                + \"\\\\ \\\\    / /  _   ____  _   _  / __/\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"                + \" \\\\ \\\\  / /  | | | ,__|| | | | \\\\ \\\\\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"                + \"  \\\\ \\\\/ /   | | | |   | |_| | _) \\\\\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"                + \"   \\\\__/    |_| |_|    \\\\__,_||___/\\n\"","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"                + \"What can \u003c\u003cVirushade\u003e\u003e do for you?\\n\");","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"        lineBreak();","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"     * The echo function that Virushade uses. Echoes whatever words that Virushade is given.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"GWphua"},"content":"     * @param wordToEcho The word provided by the user for Virushade to echo.","lastModifiedDate":"2021-08-19"},{"lineNumber":29,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"GWphua"},"content":"    private static void echo(String wordToEcho) {","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"GWphua"},"content":"        System.out.println(wordToEcho);","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"GWphua"},"content":"     * Virushade first says goodbye before exiting.","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"GWphua"},"content":"    private static void exit() {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"GWphua"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"GWphua"},"content":"        lineBreak();","lastModifiedDate":"2021-08-19"},{"lineNumber":40,"author":{"gitId":"GWphua"},"content":"        System.exit(0);","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":44,"author":{"gitId":"GWphua"},"content":"     * Handles unexpected inputs to Virushade.","lastModifiedDate":"2021-08-19"},{"lineNumber":45,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":46,"author":{"gitId":"GWphua"},"content":"    private static void handle(String str) {","lastModifiedDate":"2021-08-19"},{"lineNumber":47,"author":{"gitId":"GWphua"},"content":"        if (str.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":48,"author":{"gitId":"GWphua"},"content":"            System.out.println(\"OOPS!!! The description of a todo task cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":49,"author":{"gitId":"GWphua"},"content":"        } else if (str.startsWith(\"deadline\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":50,"author":{"gitId":"GWphua"},"content":"            System.out.println(\"OOPS!!! The description of a deadline task cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":51,"author":{"gitId":"GWphua"},"content":"        } else if (str.startsWith(\"event\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":52,"author":{"gitId":"GWphua"},"content":"            System.out.println(\"OOPS!!! The description of an event task cannot be empty.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":53,"author":{"gitId":"GWphua"},"content":"        } else if (str.startsWith(\"done\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"GWphua"},"content":"            System.out.println(\"OOPS!!! Please enter an integer after \u0027done\u0027.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"GWphua"},"content":"        } else if (str.startsWith(\"delete\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"GWphua"},"content":"            System.out.println(\"OOPS!!! Please enter an integer after \u0027delete\u0027.\");","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"GWphua"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"GWphua"},"content":"            System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-08-19"},{"lineNumber":59,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":60,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":62,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"GWphua"},"content":"     * Determines what Virushade should do with given string str.","lastModifiedDate":"2021-08-19"},{"lineNumber":64,"author":{"gitId":"GWphua"},"content":"     * Note: str is assumed to not be \"bye\".","lastModifiedDate":"2021-08-19"},{"lineNumber":65,"author":{"gitId":"GWphua"},"content":"     *","lastModifiedDate":"2021-08-19"},{"lineNumber":66,"author":{"gitId":"GWphua"},"content":"     * @param str The input instructional string.","lastModifiedDate":"2021-08-19"},{"lineNumber":67,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":68,"author":{"gitId":"GWphua"},"content":"    private static void assignTask(String str) {","lastModifiedDate":"2021-08-19"},{"lineNumber":69,"author":{"gitId":"GWphua"},"content":"        if (str.equals(\"list\")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":70,"author":{"gitId":"GWphua"},"content":"            TaskList.list();","lastModifiedDate":"2021-08-19"},{"lineNumber":71,"author":{"gitId":"GWphua"},"content":"        } else if (str.startsWith(\"done \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":72,"author":{"gitId":"GWphua"},"content":"            TaskList.completeTask(str.substring(5));","lastModifiedDate":"2021-08-19"},{"lineNumber":73,"author":{"gitId":"GWphua"},"content":"        } else if (str.startsWith(\"todo \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":74,"author":{"gitId":"GWphua"},"content":"            TaskList.add(str.substring(5), \"TODO\");","lastModifiedDate":"2021-08-19"},{"lineNumber":75,"author":{"gitId":"GWphua"},"content":"        } else if (str.startsWith(\"deadline \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":76,"author":{"gitId":"GWphua"},"content":"            TaskList.add(str.substring(9), \"DEADLINE\");","lastModifiedDate":"2021-08-19"},{"lineNumber":77,"author":{"gitId":"GWphua"},"content":"        } else if (str.startsWith(\"event \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":78,"author":{"gitId":"GWphua"},"content":"            TaskList.add(str.substring(6), \"EVENT\");","lastModifiedDate":"2021-08-19"},{"lineNumber":79,"author":{"gitId":"GWphua"},"content":"        } else if (str.startsWith(\"delete \")) {","lastModifiedDate":"2021-08-19"},{"lineNumber":80,"author":{"gitId":"GWphua"},"content":"            TaskList.delete(str.substring(7));","lastModifiedDate":"2021-08-19"},{"lineNumber":81,"author":{"gitId":"GWphua"},"content":"        } else {","lastModifiedDate":"2021-08-19"},{"lineNumber":82,"author":{"gitId":"GWphua"},"content":"            handle(str);","lastModifiedDate":"2021-08-19"},{"lineNumber":83,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-19"},{"lineNumber":84,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-19"},{"lineNumber":85,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":86,"author":{"gitId":"GWphua"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"GWphua"},"content":"     * The running sequence for Virushade.","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"GWphua"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":89,"author":{"gitId":"GWphua"},"content":"    public static void run() {","lastModifiedDate":"2021-08-18"},{"lineNumber":90,"author":{"gitId":"GWphua"},"content":"        greet();","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"GWphua"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":93,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"GWphua"},"content":"        while(sc.hasNextLine()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"GWphua"},"content":"            String str \u003d sc.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":97,"author":{"gitId":"GWphua"},"content":"            if (str.equals(\"bye\")) {","lastModifiedDate":"2021-08-18"},{"lineNumber":98,"author":{"gitId":"GWphua"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":99,"author":{"gitId":"GWphua"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":100,"author":{"gitId":"GWphua"},"content":"                assignTask(str);","lastModifiedDate":"2021-08-19"},{"lineNumber":101,"author":{"gitId":"GWphua"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":103,"author":{"gitId":"GWphua"},"content":"            lineBreak();","lastModifiedDate":"2021-08-19"},{"lineNumber":104,"author":{"gitId":"GWphua"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":105,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"GWphua"},"content":"        sc.close();","lastModifiedDate":"2021-08-18"},{"lineNumber":107,"author":{"gitId":"GWphua"},"content":"        exit();","lastModifiedDate":"2021-08-18"},{"lineNumber":108,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":109,"author":{"gitId":"GWphua"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"GWphua"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"GWphua"},"content":"        run();","lastModifiedDate":"2021-08-18"},{"lineNumber":112,"author":{"gitId":"GWphua"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":113,"author":{"gitId":"GWphua"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"GWphua":113}},{"path":"text-ui-test/data/Virushade.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"1.[T][ ] Test add todo task","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"2.[D][x] Test add deadline task (by: 11 Dec 2012 11:59PM)","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"GWphua":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GWphua"},"content":"Test Check if none of keywords added.","lastModifiedDate":"2021-08-19"},{"lineNumber":2,"author":{"gitId":"GWphua"},"content":"todo","lastModifiedDate":"2021-08-19"},{"lineNumber":3,"author":{"gitId":"GWphua"},"content":"event","lastModifiedDate":"2021-08-19"},{"lineNumber":4,"author":{"gitId":"GWphua"},"content":"deadline","lastModifiedDate":"2021-08-19"},{"lineNumber":5,"author":{"gitId":"GWphua"},"content":"todo Test add todo task","lastModifiedDate":"2021-08-19"},{"lineNumber":6,"author":{"gitId":"GWphua"},"content":"deadline Test add deadline task /by 2012-12-11 2359","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"GWphua"},"content":"event Test add event task /at 2021-25-08","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"GWphua"},"content":"deadline Test slashPartition without space/by now","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"GWphua"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":10,"author":{"gitId":"GWphua"},"content":"done","lastModifiedDate":"2021-08-19"},{"lineNumber":11,"author":{"gitId":"GWphua"},"content":"done 0.5","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"GWphua"},"content":"done LOL THIS AIN\u0027T NO INTEGER","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"GWphua"},"content":"done 2","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"GWphua"},"content":"done 3","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"GWphua"},"content":"done 4","lastModifiedDate":"2021-08-19"},{"lineNumber":16,"author":{"gitId":"GWphua"},"content":"done 10","lastModifiedDate":"2021-08-19"},{"lineNumber":17,"author":{"gitId":"GWphua"},"content":"done -1","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"delete","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"GWphua"},"content":"delete LOL THIS AIN\u0027T NO INTEGER","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"GWphua"},"content":"delete 1.5","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"GWphua"},"content":"delete -10","lastModifiedDate":"2021-08-19"},{"lineNumber":22,"author":{"gitId":"GWphua"},"content":"delete 2","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"GWphua"},"content":"delete 4","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"GWphua"},"content":"delete 3","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"GWphua"},"content":"list","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"GWphua"},"content":"bye","lastModifiedDate":"2021-08-19"},{"lineNumber":27,"author":{"gitId":"GWphua"},"content":"Check if already Exit.","lastModifiedDate":"2021-08-19"}],"authorContributionMap":{"GWphua":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"GWphua"},"content":"java -classpath ..\\bin Virushade \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"GWphua":1,"-":20}}]
