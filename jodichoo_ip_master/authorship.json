[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jodichoo":1,"-":45}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":" * The Deadline class representing a task with a deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"    private LocalDate by;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"     * Constructor for a Deadline object.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"     * @param desc The description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If the deadline is not in yyyy-mm-dd format.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"    public Deadline(String desc, String by) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"        super(desc, \"D\");","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"duke.Deadline should be in the form yyyy-mm-dd\"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"                    + \"\\ni.e. deadline read book /by 2021-06-18\");","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"     * A method that converts the task data into a suitable format to be saved in a save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"     * @return The formatted data as a string.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"    public String toData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"        return super.toData() + \"~S~\" + by;","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"        String byFormatted \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byFormatted + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jodichoo":44}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":" * The Duke class that runs the Duke program.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"    private static TaskList list;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"    private static FileManager fm;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"    private Ui ui;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"     * Constructor for Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    public Duke() {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"        fm \u003d new FileManager();","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"            list \u003d fm.getListFromFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"            ui.showError(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"            list \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"    private static void addTask(String[] args) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"        switch (args[0]) {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"            list.add(new Todo(args[1]));","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"            list.add(new Deadline(args[1], args[2]));","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"        case \"event\":","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"            list.add(new Event(args[1], args[2]));","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"        default:","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"     * A method that runs the program.","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"    public void run() {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"jodichoo"},"content":"        ui.greet();","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"jodichoo"},"content":"        while (true) {","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"            String input \u003d ui.getInput();","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jodichoo"},"content":"            Parser parser \u003d new Parser(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jodichoo"},"content":"            try {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"jodichoo"},"content":"                String[] args \u003d parser.parse();","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"jodichoo"},"content":"                String cmd \u003d args[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"jodichoo"},"content":"                if (cmd.equals(\"bye\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jodichoo"},"content":"                    fm.writeToFile(list);","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"jodichoo"},"content":"                    ui.stopInput();","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"jodichoo"},"content":"                    break;","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"jodichoo"},"content":"                } else if (cmd.equals(\"list\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"jodichoo"},"content":"                    ui.displayList(list);","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"jodichoo"},"content":"                } else if (cmd.equals(\"done\") || cmd.equals(\"delete\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"jodichoo"},"content":"                    list.editTask(args);","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"jodichoo"},"content":"                } else if (cmd.equals(\"find\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"jodichoo"},"content":"                    TaskList matches \u003d list.find(args[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"jodichoo"},"content":"                    ui.displayMatching(matches);","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"jodichoo"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"jodichoo"},"content":"                    addTask(args);","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"jodichoo"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"jodichoo"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"jodichoo"},"content":"                ui.showError(e);","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"jodichoo"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"jodichoo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"jodichoo"},"content":"        new Duke().run();","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jodichoo":72,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":" * Class that represents exceptions specific to Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"     * Constructor for a DukeException.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"     * @param msg Error message to be displayed to the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"     * A method which displays the error message to the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"    public void print() {","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"        System.out.println(super.getMessage());","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jodichoo":22}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":" * The Event class that represents a task with a starting time.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"    private String at;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"     * Constructor for an Event object.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"     * @param desc The description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"     * @param at Statement that indicates when the task starts.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"    public Event(String desc, String at) {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"        super(desc, \"E\");","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"     * A method that converts the task data into a suitable format to be saved in a save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"     * @return The formatted data as a string.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"    public String toData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"        return super.toData() + \"~S~\" + at;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jodichoo":33}},{"path":"src/main/java/duke/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":" * The FileManager class that deals with loading tasks from a file and saving tasks to a file.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"public class FileManager {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    private static final String FILENAME \u003d \"tasks.txt\";","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"    private static final File DATA_FILE \u003d new File(FILENAME);","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"     * Constructor for a FileManager object.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"    public FileManager() {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"            if (DATA_FILE.createNewFile()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"                System.out.println(\"A new save file has been created!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"                System.out.println(\"Using an existing save file...\");","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"     * A method that reads a save file and returns the list of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"     * @return The list of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If a save file is not found.","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"    public TaskList getListFromFile() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"            Scanner sc \u003d new Scanner(DATA_FILE);","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"                Task newTask \u003d null;","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"                String[] curr \u003d sc.nextLine().split(\"~S~\");","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"jodichoo"},"content":"                String taskIcon \u003d curr[0];","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"jodichoo"},"content":"                boolean isDone \u003d curr[1].equals(\"1\");","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"                switch (taskIcon) {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"jodichoo"},"content":"                case \"T\":","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"jodichoo"},"content":"                    newTask \u003d new Todo(curr[2]);","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"jodichoo"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"jodichoo"},"content":"                case \"D\":","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"jodichoo"},"content":"                    newTask \u003d new Deadline(curr[2], curr[3]);","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"jodichoo"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"jodichoo"},"content":"                case \"E\":","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"jodichoo"},"content":"                    newTask \u003d new Event(curr[2], curr[3]);","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"jodichoo"},"content":"                    break;","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"jodichoo"},"content":"                default:","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"jodichoo"},"content":"                    break;","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"jodichoo"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"jodichoo"},"content":"                if (isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":61,"author":{"gitId":"jodichoo"},"content":"                    newTask.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":62,"author":{"gitId":"jodichoo"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"jodichoo"},"content":"                newList.add(newTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"jodichoo"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"jodichoo"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"Save file is not found\");","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"jodichoo"},"content":"        return new TaskList(newList);","lastModifiedDate":"2021-08-22"},{"lineNumber":69,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":70,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":71,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"jodichoo"},"content":"     * A method that saves the list of tasks to a file.","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"jodichoo"},"content":"     * @param list The list of tasks to be saved.","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"jodichoo"},"content":"    public void writeToFile(TaskList list) {","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"jodichoo"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"jodichoo"},"content":"            FileWriter writer \u003d new FileWriter(FILENAME);","lastModifiedDate":"2021-08-22"},{"lineNumber":79,"author":{"gitId":"jodichoo"},"content":"            writer.write(list.convertToData());","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"jodichoo"},"content":"            writer.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"jodichoo"},"content":"            System.out.println(\"Your task list has been saved\");","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"jodichoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"jodichoo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":85,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":86,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jodichoo":86}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":" * The Parser class that makes sense of the user input.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"    private String input;","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"    private String[] inputArr;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"    private String command;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"     * Constructor for a Parser object.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"     * @param input The user input to be parsed.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"    public Parser(String input) {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"        this.inputArr \u003d input.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"        this.command \u003d inputArr[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"    private boolean isEditingTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"        return command.equals(\"done\") || command.equals(\"delete\");","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"    private boolean isFindingTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"        return command.equals(\"find\");","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"    private boolean isAddingNewTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"        return command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\");","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"    private String[] getAddTaskArgs() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"        int inputLen \u003d inputArr.length;","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"        if (inputLen \u003d\u003d 1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"OOPS!! The description of a \" + command","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"                    + \" cannot be empty :(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"        if (command.equals(\"todo\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"            String desc \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"            for (int i \u003d 1; i \u003c inputLen; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"                desc \u003d desc + inputArr[i] + \" \";","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"jodichoo"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"jodichoo"},"content":"            return new String[] {command, desc.strip()};","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jodichoo"},"content":"            boolean hasByAt \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jodichoo"},"content":"            String desc \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jodichoo"},"content":"            String time \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"jodichoo"},"content":"            for (int i \u003d 1; i \u003c inputLen; i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"jodichoo"},"content":"                String curr \u003d inputArr[i];","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jodichoo"},"content":"                if (curr.equals(\"/by\") || curr.equals(\"/at\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"jodichoo"},"content":"                    hasByAt \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"jodichoo"},"content":"                    continue;","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"jodichoo"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"jodichoo"},"content":"                if (hasByAt) {","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"jodichoo"},"content":"                    time +\u003d curr + \" \";","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"jodichoo"},"content":"                } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"jodichoo"},"content":"                    desc +\u003d curr + \" \";","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"jodichoo"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"jodichoo"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"jodichoo"},"content":"            if (desc.length() \u003d\u003d 0 || time.length() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"jodichoo"},"content":"                throw new DukeException(\"Something is missing...\"","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"jodichoo"},"content":"                        + \"\\nPlease specify the task in the correct format\"","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"jodichoo"},"content":"                        + \"\\ni.e. deadline finish homework /by 2021-03-21\");","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"jodichoo"},"content":"            } else if (!hasByAt) {","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"jodichoo"},"content":"                throw new DukeException(\"Make sure to specify the time after a \u0027/by\u0027 or \u0027/at\u0027\");","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"jodichoo"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"jodichoo"},"content":"                return new String[] {command, desc.strip(), time.strip()};","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"jodichoo"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"jodichoo"},"content":"     * Method that parses the user input and returns the relevant commands and arguments as","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"jodichoo"},"content":"     * strings in an array.","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"jodichoo"},"content":"     * @return An array of Strings with valid commands and arguments.","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If an invalid command or argument is given as user input.","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"jodichoo"},"content":"    public String[] parse() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"jodichoo"},"content":"        int inputLen \u003d inputArr.length;","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"jodichoo"},"content":"        if (input.equals(\"bye\") || input.equals(\"list\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"jodichoo"},"content":"            return new String[] {command};","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"jodichoo"},"content":"        } else if (isFindingTask()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"jodichoo"},"content":"            if (inputLen \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"jodichoo"},"content":"                throw new DukeException(\"Please specify the search keyword\"","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"jodichoo"},"content":"                        + \"\\n i.e. find book\");","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"jodichoo"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"jodichoo"},"content":"                return new String[] {command, inputArr[1]};","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"jodichoo"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"jodichoo"},"content":"        } else if (isEditingTask()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"jodichoo"},"content":"            if (inputLen \u003c 2) {","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"jodichoo"},"content":"                throw new DukeException(\"Please specify the index of the task to be edited\"","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"jodichoo"},"content":"                        + \"\\n i.e. done 3\");","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"jodichoo"},"content":"            } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"jodichoo"},"content":"                try {","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"jodichoo"},"content":"                    int index \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"jodichoo"},"content":"                    return new String[] {command, inputArr[1]};","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"jodichoo"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":102,"author":{"gitId":"jodichoo"},"content":"                    throw new DukeException(\"duke.Task index should be a valid integer\");","lastModifiedDate":"2021-08-23"},{"lineNumber":103,"author":{"gitId":"jodichoo"},"content":"                }","lastModifiedDate":"2021-08-23"},{"lineNumber":104,"author":{"gitId":"jodichoo"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":105,"author":{"gitId":"jodichoo"},"content":"        } else if (isAddingNewTask()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":106,"author":{"gitId":"jodichoo"},"content":"            return getAddTaskArgs();","lastModifiedDate":"2021-08-23"},{"lineNumber":107,"author":{"gitId":"jodichoo"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":108,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":110,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":111,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jodichoo":111}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":" * The abstract Task class representing a task.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"    private String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"    private String icon;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"     * @param icon Marker that indicates the type of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"    public Task(String description, String icon) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"        this.icon \u003d icon;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"     * A method that gets a marker that indicates if task is complete.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"     * @return A marker that indicates if task is complete.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"     * A method that marks the task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"    /** A method that indicates whether the task description contains a keyword.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"     * @param keyword The keyword to be searched for in the description.","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"     * @return Boolean indicating whether the keyword is found in the description.","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"jodichoo"},"content":"        return description.toLowerCase().indexOf(keyword.toLowerCase()) !\u003d -1;","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jodichoo"},"content":"     * A method that converts the task data into a suitable format to be saved in a save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"jodichoo"},"content":"     * @return The formatted data as a string.","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jodichoo"},"content":"    public String toData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"jodichoo"},"content":"        String isDoneNum \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"jodichoo"},"content":"        return String.format(\"%s~S~%s~S~%s\", icon, isDoneNum, description);","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"jodichoo"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"jodichoo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"jodichoo"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), description);","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jodichoo":62}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":" * The TaskList class that represents a list of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"public class TaskList {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"     * Constructor for a TaskList object.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"     * Constructor for a TaskList object.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"     * @param taskList List of tasks as an ArrayList.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"     * A method to add a new task to the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"     * @param newTask The new task to be added.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    public void add(Task newTask) {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"        taskList.add(newTask);","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"        System.out.println(\"Just added:\\n\" + newTask.toString());","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"        System.out.println(\"You currently have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"     * A method to delete a task or mark a task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"     * @param input Array containing the command and the index of the task to be edited.","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If an invalid index is given as input.","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"    public void editTask(String[] input) throws DukeException {","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"jodichoo"},"content":"        String num \u003d input[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"jodichoo"},"content":"        int index \u003d Integer.parseInt(num) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"        if (index \u003e\u003d taskList.size() || index \u003d\u003d -1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"There is no such task in your list D:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"jodichoo"},"content":"        String command \u003d input[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"jodichoo"},"content":"        switch (command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"jodichoo"},"content":"        case \"done\":","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"jodichoo"},"content":"            Task toMark \u003d taskList.get(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"jodichoo"},"content":"            toMark.markAsDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"jodichoo"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"jodichoo"},"content":"                    + toMark.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"jodichoo"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"jodichoo"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"jodichoo"},"content":"            System.out.println(\"Poof!\\n\" + taskList.get(index).toString() + \"\\nis gone\");","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"jodichoo"},"content":"            taskList.remove(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"jodichoo"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list\");","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"jodichoo"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"jodichoo"},"content":"        default:","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"jodichoo"},"content":"            System.out.println(\"Didn\u0027t understand that :(\");","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"jodichoo"},"content":"            break;","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"jodichoo"},"content":"    /** A method that finds tasks that contain the specified keyword.","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"jodichoo"},"content":"     * @param keyword Keyword to be searched for.","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"jodichoo"},"content":"     * @return A TaskList of the matching tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If there are no matching tasks found.","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"jodichoo"},"content":"    public TaskList find(String keyword) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"jodichoo"},"content":"        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"jodichoo"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"jodichoo"},"content":"            Task currTask \u003d taskList.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"jodichoo"},"content":"            if (currTask.contains(keyword)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"jodichoo"},"content":"                newList.add(currTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"jodichoo"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"jodichoo"},"content":"        if (newList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"There are no matching tasks :(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"jodichoo"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"jodichoo"},"content":"            return new TaskList(newList);","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"jodichoo"},"content":"     * A method that converts the task list to a suitable format to be saved in a save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"jodichoo"},"content":"     * @return The formatted data as a string.","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"jodichoo"},"content":"    public String convertToData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"jodichoo"},"content":"        StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"jodichoo"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":98,"author":{"gitId":"jodichoo"},"content":"            data.append(task.toData() + \"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":99,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"jodichoo"},"content":"        return data.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"jodichoo"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"jodichoo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"jodichoo"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":106,"author":{"gitId":"jodichoo"},"content":"            return \"Your list is empty :(\";","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"jodichoo"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":109,"author":{"gitId":"jodichoo"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":110,"author":{"gitId":"jodichoo"},"content":"            String curr \u003d taskList.get(i).toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":111,"author":{"gitId":"jodichoo"},"content":"            result +\u003d String.format(\" %s. %s\\n\", i + 1, curr);","lastModifiedDate":"2021-08-23"},{"lineNumber":112,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"jodichoo"},"content":"        return result;","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jodichoo":115}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":" * The Todo class that represents a task to be done.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"     * Constructor for a Todo object.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"     * @param desc The description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"    public Todo(String desc) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"        super(desc, \"T\");","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jodichoo":20}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":" * The Ui class that deals with interactions with the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"public class Ui {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"    private static final String LOGO \u003d \" ____        _\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"            + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    private Scanner sc;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"     * Constructor for a Ui object.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"    public Ui() {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"     * A method that displays the greeting when the user starts the program.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"    public void greet() {","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"     * A method that displays the relevant error message to the user when exceptions are thrown.","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"     * @param e The exception thrown by the program.","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"    public void showError(DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"        e.print();","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"     * A method that displays the list of tasks to the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"     * @param list The task list to be displayed.","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"jodichoo"},"content":"    public void displayList(TaskList list) {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"jodichoo"},"content":"        System.out.println(\"Here\u0027s your list!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"        System.out.println(list.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"jodichoo"},"content":"     * A method that displays matching tasks with the correct statement after the user searches","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"jodichoo"},"content":"     * for them.","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"jodichoo"},"content":"     * @param list The list of matching tasks to be displayed.","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"jodichoo"},"content":"    public void displayMatching(TaskList list) {","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"jodichoo"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"jodichoo"},"content":"        System.out.println(list.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"jodichoo"},"content":"     * A method to get input from the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"jodichoo"},"content":"     * @return The input entered by the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":66,"author":{"gitId":"jodichoo"},"content":"    public String getInput() {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"jodichoo"},"content":"        return sc.nextLine().strip();","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"jodichoo"},"content":"     * A method to stop user input.","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"jodichoo"},"content":"    public void stopInput() {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"jodichoo"},"content":"        System.out.println(\"Byebye\");","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"jodichoo"},"content":"        sc.close();","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jodichoo":77}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"    public void testToString1() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"        Deadline deadline \u003d new Deadline(\"finish ip\", \"2021-03-21\");","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"[D][ ] finish ip (by: Mar 21 2021)\", deadline.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"    public void testToString2() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"        Deadline deadline \u003d new Deadline(\"return library book\", \"2021-10-27\");","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"[D][ ] return library book (by: Oct 27 2021)\", deadline.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"    public void testInvalidInput1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e new Deadline(\"return library book\", \"Sunday\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"    public void testInvalidInput2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e new Deadline(\"return library book\", \"2021-93-10\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    public void testToData1() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"        Deadline deadline \u003d new Deadline(\"finish ip\", \"2021-03-21\");","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"D~S~0~S~finish ip~S~2021-03-21\", deadline.toData());","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"    public void testToData2() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"        Deadline deadline \u003d new Deadline(\"return library book\", \"2021-10-27\");","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"D~S~0~S~return library book~S~2021-10-27\", deadline.toData());","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jodichoo":42}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"public class EventTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"    public void testToString1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"        Event event \u003d new Event(\"project meeting\", \"4pm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"[E][ ] project meeting (at: 4pm)\", event.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"    public void testToString2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"        Event event \u003d new Event(\"supper date\", \"11pm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"[E][ ] supper date (at: 11pm)\", event.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"    public void testToData1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"        Event event \u003d new Event(\"project meeting\", \"4pm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"E~S~0~S~project meeting~S~4pm\", event.toData());","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"    public void testToData2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"        Event event \u003d new Event(\"supper date\", \"11pm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"E~S~0~S~supper date~S~11pm\", event.toData());","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jodichoo":31}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"    public void testParse1() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"todo eat sleep eat sleep\";","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"        String[] output \u003d {\"todo\", \"eat sleep eat sleep\"};","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"        assertEquals(Arrays.toString(output), Arrays.toString(parser.parse()));","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"    public void testParse2() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"deadline return book /by 2021-03-21\";","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"        String[] output \u003d {\"deadline\", \"return book\", \"2021-03-21\"};","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"        assertEquals(Arrays.toString(output), Arrays.toString(parser.parse()));","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"    public void testParse3() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"event project meeting /at 4pm\";","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"        String[] output \u003d {\"event\", \"project meeting\", \"4pm\"};","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"        assertEquals(Arrays.toString(output), Arrays.toString(parser.parse()));","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"    public void testInvalidInput1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"done\";","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e parser.parse());","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"    public void testInvalidInput2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"done b\";","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"jodichoo"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e parser.parse());","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jodichoo"},"content":"    public void testInvalidInput3() {","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"blahblahblah\";","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"jodichoo"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e parser.parse());","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jodichoo":55}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"    public void testToString1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"[T][ ] read a book\", new Todo(\"read a book\").toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    public void testToString2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"[T][ ] cook dinner\", new Todo(\"cook dinner\").toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"    public void testToData1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"T~S~0~S~read a book\", new Todo(\"read a book\").toData());","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"    public void testToData2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"T~S~0~S~cook dinner\", new Todo(\"cook dinner\").toData());","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jodichoo":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"todo","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"deadline","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"event","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"todo eat","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"todo sleep","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"blah","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"done 3","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"delete 2","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"list","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"bye","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jodichoo":14}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jodichoo":1,"-":37}}]
