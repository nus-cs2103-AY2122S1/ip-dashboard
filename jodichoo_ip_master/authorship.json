[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"    mainClassName \u003d \"Launcher\"","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"jodichoo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jodichoo":17,"-":45}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"import javafx.geometry.Rectangle2D;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"import javafx.scene.text.Font;","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"import javafx.scene.text.FontWeight;","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":" * containing text from the speaker.","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"    private static final Background ERROR_BACKGROUND \u003d new Background(","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"            new BackgroundFill(Color.LIGHTPINK, CornerRadii.EMPTY, Insets.EMPTY));","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    private static final Background USER_BACKGROUND \u003d new Background(","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"            new BackgroundFill(Color.GAINSBORO, CornerRadii.EMPTY, Insets.EMPTY));","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"    private static final Font USER_FONT \u003d Font.font(\"Arial\", FontWeight.BOLD, 14);","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"    private static final Font DUKE_FONT \u003d new Font(\"Arial\", 14);","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"    @FXML","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"    private Text dialog;","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"    @FXML","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"jodichoo"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"jodichoo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"                    MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"jodichoo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"jodichoo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"jodichoo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"jodichoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"jodichoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"jodichoo"},"content":"        dialog.setText(text);","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"jodichoo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"jodichoo"},"content":"        cropDisplayPicture(img);","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"jodichoo"},"content":"    private void cropDisplayPicture(Image img) {","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"jodichoo"},"content":"        boolean hasSmallerWidth \u003d img.getWidth() \u003c img.getHeight();","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"jodichoo"},"content":"        double newMeasure \u003d hasSmallerWidth ? img.getWidth() : img.getHeight();","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"jodichoo"},"content":"        double x \u003d (img.getWidth() - newMeasure) / 2;","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"jodichoo"},"content":"        double y \u003d (img.getHeight() - newMeasure) / 2;","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"jodichoo"},"content":"        Rectangle2D rect \u003d new Rectangle2D(x, y, newMeasure, newMeasure);","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"jodichoo"},"content":"        displayPicture.setViewport(rect);","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"jodichoo"},"content":"        displayPicture.setSmooth(true);","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"jodichoo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"jodichoo"},"content":"    private void flip() {","lastModifiedDate":"2021-09-01"},{"lineNumber":75,"author":{"gitId":"jodichoo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"jodichoo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":77,"author":{"gitId":"jodichoo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"jodichoo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2021-09-01"},{"lineNumber":79,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":80,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"jodichoo"},"content":"     * A method to set styles for user\u0027s dialog box.","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"jodichoo"},"content":"    private void setUserStyle() {","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"jodichoo"},"content":"        setBackground(USER_BACKGROUND);","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"jodichoo"},"content":"        dialog.setFont(USER_FONT);","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"jodichoo"},"content":"     * A method to set styles for duke\u0027s dialog box.","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"jodichoo"},"content":"     * @param isError Boolean indicating whether dialog displays an error.","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"jodichoo"},"content":"    private void setDukeStyle(boolean isError) {","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"jodichoo"},"content":"        if (isError) {","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"jodichoo"},"content":"            setBackground(ERROR_BACKGROUND);","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"jodichoo"},"content":"        dialog.setFont(DUKE_FONT);","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":100,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":101,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"jodichoo"},"content":"     * Formats the user input into a dialog box.","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"jodichoo"},"content":"     * @param text The user input.","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"jodichoo"},"content":"     * @param img The user profile image.","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"jodichoo"},"content":"     * @return DialogBox containing the user input.","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"jodichoo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"jodichoo"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"jodichoo"},"content":"        db.setUserStyle();","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"jodichoo"},"content":"        return db;","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":113,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"jodichoo"},"content":"     * Formats the response to user input into a dialog box.","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"jodichoo"},"content":"     * @param text The response.","lastModifiedDate":"2021-09-04"},{"lineNumber":118,"author":{"gitId":"jodichoo"},"content":"     * @param img The profile image for Duke.","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"jodichoo"},"content":"     * @param isError Boolean indicating whether error dialog should be shown.","lastModifiedDate":"2021-09-12"},{"lineNumber":120,"author":{"gitId":"jodichoo"},"content":"     * @return DialogBox containing the response from Duke.","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"jodichoo"},"content":"    public static DialogBox getDukeDialog(String text, Image img, boolean isError) {","lastModifiedDate":"2021-09-11"},{"lineNumber":123,"author":{"gitId":"jodichoo"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2021-09-01"},{"lineNumber":124,"author":{"gitId":"jodichoo"},"content":"        db.setDukeStyle(isError);","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"jodichoo"},"content":"        db.flip();","lastModifiedDate":"2021-09-01"},{"lineNumber":126,"author":{"gitId":"jodichoo"},"content":"        return db;","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"jodichoo":128}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":" * The application launcher.","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"public class Launcher {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"     * Entry point to the application.","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"     * @param args String arguments.","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"jodichoo":15}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"public class Main extends Application {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"     * Sets up the GUI.","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"     * @param stage Stage that contains the GUI.","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"            scene.getRoot().setStyle(\"-fx-font-family: \u0027Arial\u0027\"); // Fixes font issues","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"            stage.show();","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"jodichoo":36}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"    private TextField userInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"    private Button sendButton;","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"    private Duke duke;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpeg\"));","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpeg\"));","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"     * Initialises the main window.","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"      */","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    public void initialize() {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"     * Initialises Duke.","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"     * @param d Instance of Duke to be used for the application.","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"        duke \u003d d;","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"jodichoo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"jodichoo"},"content":"    @FXML","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"jodichoo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"jodichoo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"jodichoo"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"jodichoo"},"content":"        boolean isError \u003d duke.hasError();","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"jodichoo"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(input, userImage);","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"jodichoo"},"content":"        DialogBox dukeDialog \u003d DialogBox.getDukeDialog(response, dukeImage, isError);","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"jodichoo"},"content":"        dialogContainer.getChildren().addAll(userDialog, dukeDialog);","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"jodichoo"},"content":"        userInput.clear();","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"jodichoo":59}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":" * The Deadline class representing a task with a deadline.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"    private LocalDate by;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"     * Constructor for a Deadline object.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"     * @param desc The description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If the deadline is not in yyyy-mm-dd format.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"    public Deadline(String desc, String by) throws DukeException {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"        super(desc, \u0027D\u0027);","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"Deadline should be in the form yyyy-mm-dd\"","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"                    + \"\\ni.e. deadline read book /by 2021-06-18\");","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"     * A method that converts the task data into a suitable format to be saved in a save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"     * @return The formatted data as a string.","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"    public String toData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"        return super.toData() + \"~S~\" + by;","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"     * Converts task data into string form to be displayed in the GUI.","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"     * @return String format of data to be displayed in GUI.","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"jodichoo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"jodichoo"},"content":"        String byFormatted \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byFormatted + \")\";","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jodichoo":49}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":" * The Duke class that runs the Duke program.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"    private static TaskList list;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"    private static FileManager fm;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"    private static boolean hasError \u003d false;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"     * Constructor for Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"    public Duke() {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"        fm \u003d new FileManager();","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"        try {","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"            list \u003d fm.getListFromFile();","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"            list \u003d new TaskList();","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"     * A method that indicates whether duke has responded with an error message.","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"     * @return Boolean indicating whether response is an error message.","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"    public boolean hasError() {","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"        return hasError;","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"     * A method that gets the response from Duke to be displayed in the GUI.","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"     * @param input User input to be responded to.","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"     * @return Response to be displayed.","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"        try {","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"            Parser parser \u003d new Parser(input);","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"            assert list instanceof TaskList : \"Task list cannot be found\";","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"            Command command \u003d parser.parse();","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"jodichoo"},"content":"            String response \u003d command.execute(list);","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"jodichoo"},"content":"            fm.writeToFile(list);","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"            hasError \u003d false;","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"jodichoo"},"content":"            return response;","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"jodichoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"jodichoo"},"content":"            hasError \u003d true;","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"jodichoo"},"content":"            return e.getMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jodichoo":52,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":" * Class that represents exceptions specific to Duke.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"     * Constructor for a DukeException.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"     * @param msg Error message to be displayed to the user.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"        super(msg);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"jodichoo":15}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":" * The Event class that represents a task with a starting time.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"    private String at;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"     * Constructor for an Event object.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"     * @param desc The description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"     * @param at Statement that indicates when the task starts.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"    public Event(String desc, String at) {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"        super(desc, \u0027E\u0027);","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"     * A method that converts the task data into a suitable format to be saved in a save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"     * @return The formatted data as a string.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"    public String toData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"        return super.toData() + \"~S~\" + at;","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"     * Converts task data into string form to be displayed in the GUI.","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"     * @return String format of data to be displayed in GUI.","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jodichoo":38}},{"path":"src/main/java/duke/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import java.io.File;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":" * The FileManager class that deals with loading tasks from a file and saving tasks to a file.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"public class FileManager {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    private static final String FILENAME \u003d \"tasks.txt\";","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"    private static final File DATA_FILE \u003d new File(FILENAME);","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"     * Constructor for a FileManager object.","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"    public FileManager() {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"            if (DATA_FILE.createNewFile()) {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"                System.out.println(\"A new save file has been created!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"            } else {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"                System.out.println(\"Using an existing save file...\");","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"     * A method that returns a task given the task details.","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"     * @param taskArgs Array of task details.","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"     * @return The task corresponding to the task details.","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If unable to create a todo, deadline or event.","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"    public Task getTask(String[] taskArgs) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"        String taskIcon \u003d taskArgs[0];","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"        boolean isDone \u003d taskArgs[1].equals(\"1\");","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"        switch (taskIcon) {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"        case \"T\":","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"jodichoo"},"content":"            newTask \u003d new Todo(taskArgs[2]);","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"jodichoo"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"        case \"D\":","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"jodichoo"},"content":"            newTask \u003d new Deadline(taskArgs[2], taskArgs[3]);","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"jodichoo"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"jodichoo"},"content":"        case \"E\":","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"jodichoo"},"content":"            newTask \u003d new Event(taskArgs[2], taskArgs[3]);","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"jodichoo"},"content":"            break;","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"jodichoo"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"jodichoo"},"content":"            assert false;","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":56,"author":{"gitId":"jodichoo"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"jodichoo"},"content":"            newTask.markAsDone();","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"jodichoo"},"content":"        return newTask;","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"jodichoo"},"content":"     * A method that reads a save file and returns the list of tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"jodichoo"},"content":"     * @return The list of tasks.","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If a save file is not found.","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"jodichoo"},"content":"    public TaskList getListFromFile() throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"jodichoo"},"content":"        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"jodichoo"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"jodichoo"},"content":"            Scanner sc \u003d new Scanner(DATA_FILE);","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"jodichoo"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"jodichoo"},"content":"                String[] curr \u003d sc.nextLine().split(\"~S~\");","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"jodichoo"},"content":"                Task newTask \u003d getTask(curr);","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"jodichoo"},"content":"                newList.add(newTask);","lastModifiedDate":"2021-08-22"},{"lineNumber":76,"author":{"gitId":"jodichoo"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":77,"author":{"gitId":"jodichoo"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":78,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"Save file is not found\");","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":80,"author":{"gitId":"jodichoo"},"content":"        return new TaskList(newList);","lastModifiedDate":"2021-08-22"},{"lineNumber":81,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":82,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"jodichoo"},"content":"     * A method that saves the list of tasks to a file.","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"jodichoo"},"content":"     * @param list The list of tasks to be saved.","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"jodichoo"},"content":"    public void writeToFile(TaskList list) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"jodichoo"},"content":"        try {","lastModifiedDate":"2021-08-22"},{"lineNumber":90,"author":{"gitId":"jodichoo"},"content":"            FileWriter writer \u003d new FileWriter(FILENAME);","lastModifiedDate":"2021-08-22"},{"lineNumber":91,"author":{"gitId":"jodichoo"},"content":"            writer.write(list.convertToData());","lastModifiedDate":"2021-08-22"},{"lineNumber":92,"author":{"gitId":"jodichoo"},"content":"            writer.close();","lastModifiedDate":"2021-08-22"},{"lineNumber":93,"author":{"gitId":"jodichoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-22"},{"lineNumber":94,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"An error occurred while writing to the save file :(\");","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":96,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jodichoo":97}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"import duke.commands.EditCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"import duke.commands.SortCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":" * The Parser class that makes sense of the user input.","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"public class Parser {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"    private String input;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"    private String[] inputArr;","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"    private String command;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"     * Constructor for a Parser object.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"     * @param input The user input to be parsed.","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"    public Parser(String input) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"        this.input \u003d input.strip();","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"        checkForEmptyInput();","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"        this.inputArr \u003d input.split(\" \");","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"        this.command \u003d inputArr[0];","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"    private void checkForEmptyInput() throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"        boolean isEmptyInput \u003d input.length() \u003d\u003d 0;","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"        if (isEmptyInput) {","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"Enter a valid command to start!\");","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"    private boolean isEditingTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"        return command.equals(\"done\") || command.equals(\"delete\");","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"jodichoo"},"content":"    private boolean isFindingTask() {","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"jodichoo"},"content":"        return command.equals(\"find\");","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jodichoo"},"content":"     * Method that parses the user input and returns the relevant Command.","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"jodichoo"},"content":"     * @return The Command to be executed.","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If the user input is in an invalid format.","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"jodichoo"},"content":"    public Command parse() throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"jodichoo"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"jodichoo"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"jodichoo"},"content":"        } else if (input.equals(\"sort\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"jodichoo"},"content":"            return new SortCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"jodichoo"},"content":"        } else if (isFindingTask()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"jodichoo"},"content":"            return new FindCommand(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"jodichoo"},"content":"        } else if (isEditingTask()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"jodichoo"},"content":"            return new EditCommand(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"jodichoo"},"content":"        } else if (input.startsWith(\"todo\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"jodichoo"},"content":"            return new TodoCommand(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"jodichoo"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"jodichoo"},"content":"            return new DeadlineCommand(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"jodichoo"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"jodichoo"},"content":"            return new EventCommand(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"jodichoo"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jodichoo":74}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":" * The abstract Task class representing a task.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"    private String description;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"    private char icon;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"     * Constructor for a Task object.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"     * @param description The description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"     * @param icon Marker that indicates the type of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"    public Task(String description, char icon) {","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"        this.icon \u003d icon;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"     * A method that gets a marker that indicates if task is complete.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"     * @return A marker that indicates if task is complete.","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"     * A method that returns the icon for the respective task.","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"     * @return The task icon.","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"    public char getTaskIcon() {","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"        return icon;","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"     * A method that marks the task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"jodichoo"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"jodichoo"},"content":"    /** A method that indicates whether the task description contains a keyword.","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"jodichoo"},"content":"     * @param keyword The keyword to be searched for in the description.","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"jodichoo"},"content":"     * @return Boolean indicating whether the keyword is found in the description.","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jodichoo"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"jodichoo"},"content":"        return description.toLowerCase().indexOf(keyword.toLowerCase()) !\u003d -1;","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"jodichoo"},"content":"     * A method that converts the task data into a suitable format to be saved in a save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"jodichoo"},"content":"     * @return The formatted data as a string.","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"jodichoo"},"content":"    public String toData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"jodichoo"},"content":"        String isDoneNum \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"jodichoo"},"content":"        return String.format(\"%s~S~%s~S~%s\", icon, isDoneNum, description);","lastModifiedDate":"2021-08-22"},{"lineNumber":65,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":66,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":67,"author":{"gitId":"jodichoo"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"jodichoo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"jodichoo"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), description);","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jodichoo":71}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":" * The TaskList class that represents a list of tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"public class TaskList {","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"     * Constructor for a TaskList object.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"     * Constructor for a TaskList object.","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"     * @param taskList List of tasks as an ArrayList.","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"     * A method to add a new task to the task list.","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"     * @param newTask The new task to be added.","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    public void add(Task newTask) {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"        taskList.add(newTask);","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"     * A method to get the number of tasks in the list.","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"    public int getLength() {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"        return taskList.size();","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"jodichoo"},"content":"     * A method to delete a task or mark a task as done.","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"jodichoo"},"content":"     * @param input Array containing the command and the index of the task to be edited.","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jodichoo"},"content":"     * @return The response to be displayed in the GUI.","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If an invalid index is given as input.","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"jodichoo"},"content":"    public String editTask(String[] input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"jodichoo"},"content":"        String num \u003d input[1];","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"jodichoo"},"content":"        int index \u003d Integer.parseInt(num) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"jodichoo"},"content":"        if (index \u003e\u003d taskList.size() || index \u003d\u003d -1) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"jodichoo"},"content":"            assert index \u003c 0 || index \u003e\u003d getLength() : \"task index should be out of range\";","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"There is no such task in your list D:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"jodichoo"},"content":"        String command \u003d input[0];","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"jodichoo"},"content":"        switch (command) {","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"jodichoo"},"content":"        case \"done\":","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"jodichoo"},"content":"            Task toMark \u003d taskList.get(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"jodichoo"},"content":"            toMark.markAsDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"jodichoo"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\" + toMark.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"jodichoo"},"content":"        case \"delete\":","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"jodichoo"},"content":"            String deletedTask \u003d taskList.get(index).toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"jodichoo"},"content":"            taskList.remove(index);","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"jodichoo"},"content":"            return \"Poof!\\n\" + deletedTask + \"\\nis gone\"","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"jodichoo"},"content":"                    + \"\\nNow you have \" + taskList.size() + \" tasks in the list\";","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"jodichoo"},"content":"        default:","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"jodichoo"},"content":"            assert false : command;","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"jodichoo"},"content":"            return \"Didn\u0027t understand that :(\";","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"jodichoo"},"content":"    /** A method that finds tasks that contain the specified keyword.","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"jodichoo"},"content":"     * @param keyword Keyword to be searched for.","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"jodichoo"},"content":"     * @return A TaskList of the matching tasks.","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If there are no matching tasks found.","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"jodichoo"},"content":"    public TaskList find(String keyword) throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":83,"author":{"gitId":"jodichoo"},"content":"        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"jodichoo"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"jodichoo"},"content":"            Task currTask \u003d taskList.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"jodichoo"},"content":"            if (currTask.contains(keyword)) {","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"jodichoo"},"content":"                newList.add(currTask);","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"jodichoo"},"content":"            }","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"jodichoo"},"content":"        if (newList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-08-23"},{"lineNumber":91,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"There are no matching tasks :(\");","lastModifiedDate":"2021-08-23"},{"lineNumber":92,"author":{"gitId":"jodichoo"},"content":"        } else {","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"jodichoo"},"content":"            return new TaskList(newList);","lastModifiedDate":"2021-08-23"},{"lineNumber":94,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":95,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":96,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":97,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"jodichoo"},"content":"     * A method that sorts the task list by task.","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"jodichoo"},"content":"     * @return The response to be displayed in the GUI.","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"jodichoo"},"content":"    public String sortByTask() {","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"jodichoo"},"content":"        ArrayList\u003cTask\u003e sortedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"jodichoo"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"jodichoo"},"content":"            sortedList.add(task);","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"jodichoo"},"content":"        sortedList.sort((o1, o2) -\u003e Character.compare(o1.getTaskIcon(), o2.getTaskIcon()));","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"jodichoo"},"content":"        this.taskList \u003d sortedList;","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"jodichoo"},"content":"        return \"I\u0027ve sorted your list by task:\\n\" + toString();","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":113,"author":{"gitId":"jodichoo"},"content":"     * A method that converts the task list to a suitable format to be saved in a save file.","lastModifiedDate":"2021-08-23"},{"lineNumber":114,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":115,"author":{"gitId":"jodichoo"},"content":"     * @return The formatted data as a string.","lastModifiedDate":"2021-08-23"},{"lineNumber":116,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":117,"author":{"gitId":"jodichoo"},"content":"    public String convertToData() {","lastModifiedDate":"2021-08-22"},{"lineNumber":118,"author":{"gitId":"jodichoo"},"content":"        StringBuilder data \u003d new StringBuilder();","lastModifiedDate":"2021-08-22"},{"lineNumber":119,"author":{"gitId":"jodichoo"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-08-22"},{"lineNumber":120,"author":{"gitId":"jodichoo"},"content":"            data.append(task.toData() + \"\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":121,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":122,"author":{"gitId":"jodichoo"},"content":"        return data.toString();","lastModifiedDate":"2021-08-22"},{"lineNumber":123,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":124,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":125,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":126,"author":{"gitId":"jodichoo"},"content":"     * A method that returns the list as a string to be displayed in the GUI.","lastModifiedDate":"2021-09-04"},{"lineNumber":127,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":128,"author":{"gitId":"jodichoo"},"content":"     * @return String representation of the list.","lastModifiedDate":"2021-09-04"},{"lineNumber":129,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":130,"author":{"gitId":"jodichoo"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":131,"author":{"gitId":"jodichoo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"jodichoo"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-08-23"},{"lineNumber":133,"author":{"gitId":"jodichoo"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":134,"author":{"gitId":"jodichoo"},"content":"            String curr \u003d taskList.get(i).toString();","lastModifiedDate":"2021-08-18"},{"lineNumber":135,"author":{"gitId":"jodichoo"},"content":"            result +\u003d String.format(\" %s. %s\\n\", i + 1, curr);","lastModifiedDate":"2021-08-23"},{"lineNumber":136,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"jodichoo"},"content":"        return result;","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jodichoo":139}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":" * The Todo class that represents a task to be done.","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"     * Constructor for a Todo object.","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"     * @param desc The description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"    public Todo(String desc) {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"        super(desc, \u0027T\u0027);","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"     * Converts task data into string form to be displayed in the GUI.","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"     * @return String format of data to be displayed in GUI.","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"jodichoo":25}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke.commands;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":" * The abstract class representing a command.","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"     * @param taskList The list of tasks that the command should be executed on.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"     * @return The response to be displayed in the GUI.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If the action is unable to be completed.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"    public abstract String execute(TaskList taskList) throws DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"jodichoo":18}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke.commands;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import duke.Deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":" * Class that represents the command to add a deadline task.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"    private String description;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"    private String deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"    private Deadline newTask;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"     * Constructor for a DeadlineCommand.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If user input is in an invalid format.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"    public DeadlineCommand(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"        checkInput(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"        description \u003d getDescription(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"        deadline \u003d getDeadline(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"        newTask \u003d new Deadline(description, deadline);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"    private void checkInput(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"        if (splitInput.length \u003c 2) {","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"OOPS!! The description of a deadline\"","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"                    + \" cannot be empty :(\");","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"        } else if (!input.contains(\"/by\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"Something is missing...\\n\" + \"Did you specify a deadline?\");","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"    private String getDescription(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"        String[] splitInput \u003d input.split(\"/by\");","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"        String descInput \u003d splitInput[0].substring(9).strip();","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"        if (descInput.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"Please specify a task description \u003e\u003c\");","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"            assert descInput.length() \u003e 0 : \"Improper input length for deadline description\";","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"jodichoo"},"content":"            return descInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"jodichoo"},"content":"    private String getDeadline(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"jodichoo"},"content":"        String[] splitInput \u003d input.split(\"/by\");","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"jodichoo"},"content":"        if (splitInput.length \u003c 2) {","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"Please specify a deadline for this task\");","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"jodichoo"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"jodichoo"},"content":"            String deadlineInput \u003d splitInput[1].strip();","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"jodichoo"},"content":"            assert deadlineInput.length() \u003e 0 : \"Improper input length for deadline\";","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"jodichoo"},"content":"            return deadlineInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"jodichoo"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"jodichoo"},"content":"     * @param taskList The list of tasks to add a deadline task to.","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"jodichoo"},"content":"     * @return Response to be displayed in the GUI.","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"jodichoo"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"jodichoo"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"jodichoo"},"content":"        taskList.add(newTask);","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"jodichoo"},"content":"        int listLen \u003d taskList.getLength();","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"jodichoo"},"content":"        assert listLen \u003e 0 : \"There should be \u003e 0 tasks in the list after adding\";","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"jodichoo"},"content":"        return \"Just added:\\n\" + newTask.toString()","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"jodichoo"},"content":"                + \"\\nYou currently have \" + listLen + \" tasks in the list.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"jodichoo":74}},{"path":"src/main/java/duke/commands/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke.commands;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":" * Class that represents \u0027done\u0027 or \u0027delete\u0027 commands.","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"    private String editAction;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"    private String index;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"     * The constructor for an EditCommand.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If user input is in an invalid format.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"    public EditCommand(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"        checkInput(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"        this.editAction \u003d getEditAction(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"        this.index \u003d getIndex(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"    private String getEditAction(String input) {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"        return splitInput[0];","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"    private String getIndex(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"            String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"            int index \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"            return splitInput[1];","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"Task index should be a valid integer\");","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"    private void checkInput(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"        if (splitInput.length \u003c 2) {","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"Please specify the index of the task to be edited\"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"                    + \"\\n i.e. done 3\");","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"jodichoo"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"jodichoo"},"content":"     * @param taskList The list of tasks which will be edited.","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"jodichoo"},"content":"     * @return Response to be displayed in the GUI.","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If the specified task in the task list is unable to be edited.","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"jodichoo"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"jodichoo"},"content":"    public String execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"jodichoo"},"content":"        assert editAction.equals(\"done\") || editAction.equals(\"delete\");","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"jodichoo"},"content":"        String[] args \u003d new String[] {editAction, index};","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"jodichoo"},"content":"        String response \u003d taskList.editTask(args);","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"jodichoo"},"content":"        return response;","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"jodichoo":62}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke.commands;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"import duke.Event;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":" * Class that represents the command to add an event task.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"    private String description;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"    private String time;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"    private Event newTask;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"     * Constructor for EventCommand.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If the user input is in an invalid format.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"    public EventCommand(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"        checkInput(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"        description \u003d getDescription(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"        time \u003d getTime(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"        newTask \u003d new Event(description, time);","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"    private void checkInput(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"        if (splitInput.length \u003c 2) {","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"OOPS!! The description of an event\"","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"                    + \" cannot be empty :(\");","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"        } else if (!input.contains(\"/at\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"Something is missing...\\n\" + \"Did you specify a time?\");","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"    private String getDescription(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"        String[] splitInput \u003d input.split(\"/at\");","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"        String descInput \u003d splitInput[0].substring(6).strip();","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"        if (descInput.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"Please specify a task description \u003e\u003c\");","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"            assert descInput.length() \u003e 0 : \"Improper input length for event description\";","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"jodichoo"},"content":"            return descInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"jodichoo"},"content":"    private String getTime(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"jodichoo"},"content":"        String[] splitInput \u003d input.split(\"/at\");","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"jodichoo"},"content":"        if (splitInput.length \u003c 2) {","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"Please specify a time for this task\");","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"jodichoo"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"jodichoo"},"content":"            String timeInput \u003d splitInput[1].strip();","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"jodichoo"},"content":"            assert timeInput.length() \u003e 0 : \"Improper input length for event time\";","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"jodichoo"},"content":"            return timeInput;","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"jodichoo"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"jodichoo"},"content":"     * @param taskList The list of tasks to add an event task to.","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"jodichoo"},"content":"     * @return Response to be displayed in the GUI.","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"jodichoo"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"jodichoo"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"jodichoo"},"content":"        taskList.add(newTask);","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"jodichoo"},"content":"        int listLen \u003d taskList.getLength();","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"jodichoo"},"content":"        assert listLen \u003e 0 : \"There should be \u003e 0 tasks in the list after adding\";","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"jodichoo"},"content":"        return \"Just added:\\n\" + newTask.toString()","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"jodichoo"},"content":"                + \"\\nYou currently have \" + listLen + \" tasks in the list.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"jodichoo":74}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke.commands;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":" * Class that represents the command to find tasks containing the keyword.","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"    private String keyword;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"     * Constructor for FindCommand.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If user input is in an invalid format.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"    public FindCommand(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"        keyword \u003d getKeyword(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"    private String getKeyword(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"        if (splitInput.length \u003c 2) {","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"Please specify a search keyword\");","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"            assert splitInput.length \u003e\u003d 2 : \"Improper input length for find command\";","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"            return splitInput[1].strip();","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"     * @param taskList The list of tasks to search from.","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"     * @return Response to be displayed in the GUI.","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If no tasks are found in the list.","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"    public String execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"        TaskList matches \u003d taskList.find(keyword);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"        return \"Here are the matching tasks in your list:\\n\" + matches.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"jodichoo":44}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke.commands;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":" * Class that represents the command to display the task list.","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"     * @param taskList The list of tasks to be displayed.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"     * @return Response to be displayed in the GUI.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If there are no tasks to be displayed.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"    public String execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"        if (taskList.getLength() \u003d\u003d 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"Your task list is empty :(\");","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"            assert taskList.getLength() \u003e 0 : \"Task list has an invalid length\";","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"            return \"Here\u0027s your list!:\\n\" + taskList.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"jodichoo":25}},{"path":"src/main/java/duke/commands/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke.commands;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"     * @param taskList The list of tasks to be sorted and displayed.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"     * @return Response to be displayed in the GUI.","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If there are no tasks to be displayed.","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    public String execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"        if (taskList.getLength() \u003d\u003d 0) {","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"There\u0027s nothing to sort :(\");","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"            assert taskList.getLength() \u003e 0 : \"Task list has an invalid length\";","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"            return taskList.sortByTask();","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"jodichoo":22}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke.commands;","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"import duke.Todo;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":" * Class that represents the command to add a todo task.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"    private String description;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"    private Todo newTask;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"     * Constructor for TodoCommand.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"     * @param input The user input.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"     * @throws DukeException If the user input is in an invalid format.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"    public TodoCommand(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"        description \u003d getDescription(input);","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"        newTask \u003d new Todo(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"    private String getDescription(String input) throws DukeException {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"        String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"        if (splitInput.length \u003c 2) {","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"            throw new DukeException(\"OOPS!! The description of a todo\"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"                    + \" cannot be empty :(\");","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"            return input.substring(5).strip();","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"     * @param taskList The list of tasks to add the todo task to.","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"     * @return Response to be displayed in the GUI.","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"        taskList.add(newTask);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"        int listLen \u003d taskList.getLength();","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"        assert listLen \u003e 0 : \"There should be \u003e 0 tasks in the list after adding\";","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"        return \"Just added:\\n\" + newTask.toString()","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"jodichoo"},"content":"                + \"\\nYou currently have \" + listLen + \" tasks in the list.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"jodichoo":47}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"\u003cfx:root","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"        spacing\u003d\"10\"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"        alignment\u003d\"CENTER_RIGHT\"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"        maxHeight\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"        maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"        prefWidth\u003d\"400.0\"","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"        type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"        xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"        xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"        \u003cText fx:id\u003d\"dialog\" wrappingWidth\u003d\"250.0\" text\u003d\"this should be the input/response\" lineSpacing\u003d\"8\" /\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"75.0\" fitWidth\u003d\"75.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"jodichoo":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"jodichoo":19}},{"path":"src/test/java/duke/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"    public void testNoArgsInput() {","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"deadline   \";","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e new DeadlineCommand(input));","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"    public void testNoDeadlineCmdInput() {","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"deadline blah blah\";","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e new DeadlineCommand(input));","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"    public void testMissingDescInput() {","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"deadline /by 2021-02-21\";","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e new DeadlineCommand(input));","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"    public void testMissingDeadlineInput() {","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"deadline blah /by\";","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e new DeadlineCommand(input));","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"jodichoo":33}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"    public void testToString1() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"        Deadline deadline \u003d new Deadline(\"finish ip\", \"2021-03-21\");","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"[D][ ] finish ip (by: Mar 21 2021)\", deadline.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"    public void testToString2() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"        Deadline deadline \u003d new Deadline(\"return library book\", \"2021-10-27\");","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"[D][ ] return library book (by: Oct 27 2021)\", deadline.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"    public void testInvalidInput1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e new Deadline(\"return library book\", \"Sunday\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"    public void testInvalidInput2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e new Deadline(\"return library book\", \"2021-93-10\"));","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    public void testToData1() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"        Deadline deadline \u003d new Deadline(\"finish ip\", \"2021-03-21\");","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"D~S~0~S~finish ip~S~2021-03-21\", deadline.toData());","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"    public void testToData2() throws DukeException {","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"        Deadline deadline \u003d new Deadline(\"return library book\", \"2021-10-27\");","lastModifiedDate":"2021-08-23"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"D~S~0~S~return library book~S~2021-10-27\", deadline.toData());","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jodichoo":42}},{"path":"src/test/java/duke/EditCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"import duke.commands.EditCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"public class EditCommandTest {","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"    public void testInvalidEditInput1() {","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"done\";","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e new EditCommand(input));","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"    public void testInvalidEditInput2() {","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"done b\";","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e new EditCommand(input));","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"    public void testInvalidEditInput3() {","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"  delete    \";","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e new EditCommand(input));","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"    public void testInvalidEditInput4() {","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"      done     \";","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e new EditCommand(input));","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"jodichoo":33}},{"path":"src/test/java/duke/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"public class EventCommandTest {","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"    public void testNoArgsInput() {","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"event   \";","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e new EventCommand(input));","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"    public void testNoDeadlineCmdInput() {","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"event blah blah\";","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e new EventCommand(input));","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"    public void testMissingDescInput() {","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"event /at 6pm\";","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e new EventCommand(input));","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"    public void testMissingDeadlineInput() {","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"event blah /at\";","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e new EventCommand(input));","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"jodichoo":33}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"public class EventTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"    public void testToString1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"        Event event \u003d new Event(\"project meeting\", \"4pm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"[E][ ] project meeting (at: 4pm)\", event.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"    public void testToString2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"        Event event \u003d new Event(\"supper date\", \"11pm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"[E][ ] supper date (at: 11pm)\", event.toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"    public void testToData1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"        Event event \u003d new Event(\"project meeting\", \"4pm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"E~S~0~S~project meeting~S~4pm\", event.toData());","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"    public void testToData2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"        Event event \u003d new Event(\"supper date\", \"11pm\");","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"E~S~0~S~supper date~S~11pm\", event.toData());","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jodichoo":31}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"import duke.commands.EditCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"import duke.commands.SortCommand;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"public class ParserTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"    public void testParseList() throws DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"list\";","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"        assertTrue(parser.parse() instanceof ListCommand);","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"    public void testParseTodo() throws DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"todo eat sleep eat sleep\";","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"jodichoo"},"content":"        assertTrue(parser.parse() instanceof TodoCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":31,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":32,"author":{"gitId":"jodichoo"},"content":"    public void testParseDeadline() throws DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"deadline return book /by 2021-03-21\";","lastModifiedDate":"2021-08-23"},{"lineNumber":34,"author":{"gitId":"jodichoo"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"jodichoo"},"content":"        assertTrue(parser.parse() instanceof DeadlineCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"jodichoo"},"content":"    public void testParseEvent() throws DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"event project meeting /at 4pm\";","lastModifiedDate":"2021-08-23"},{"lineNumber":41,"author":{"gitId":"jodichoo"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"jodichoo"},"content":"        assertTrue(parser.parse() instanceof EventCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"jodichoo"},"content":"    public void testParseDone() throws DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"done 3\";","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"jodichoo"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"jodichoo"},"content":"        assertTrue(parser.parse() instanceof EditCommand);","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"jodichoo"},"content":"    public void testParseDelete() throws DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"delete 1\";","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"jodichoo"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"jodichoo"},"content":"        assertTrue(parser.parse() instanceof EditCommand);","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"jodichoo"},"content":"    public void testParseSort() throws DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"sort\";","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"jodichoo"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"jodichoo"},"content":"        assertTrue(parser.parse() instanceof SortCommand);","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"jodichoo"},"content":"    public void testParseFind() throws DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"find sleep\";","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"jodichoo"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"jodichoo"},"content":"        assertTrue(parser.parse() instanceof FindCommand);","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"jodichoo"},"content":"    public void testInvalidInput1() throws DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"blahblahblah\";","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"jodichoo"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e parser.parse());","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"jodichoo"},"content":"    public void testInvalidInput2() {","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"     \";","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e new Parser(input));","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"jodichoo"},"content":"    public void testInvalidInput3() throws DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"jodichoo"},"content":"        String input \u003d \"listsdfdlsk\";","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"jodichoo"},"content":"        Parser parser \u003d new Parser(input);","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"jodichoo"},"content":"        assertThrows(DukeException.class, () -\u003e parser.parse());","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jodichoo":92}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jodichoo"},"content":"package duke;","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"jodichoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"jodichoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jodichoo"},"content":"public class TodoTest {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"jodichoo"},"content":"    public void testToString1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"[T][ ] read a book\", new Todo(\"read a book\").toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"jodichoo"},"content":"    public void testToString2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"[T][ ] cook dinner\", new Todo(\"cook dinner\").toString());","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"jodichoo"},"content":"    public void testToData1() {","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"T~S~0~S~read a book\", new Todo(\"read a book\").toData());","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"jodichoo"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"jodichoo"},"content":"    @Test","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"jodichoo"},"content":"    public void testToData2() {","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"jodichoo"},"content":"        assertEquals(\"T~S~0~S~cook dinner\", new Todo(\"cook dinner\").toData());","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"jodichoo"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"jodichoo"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"jodichoo":27}}]
